resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /rest#tag/Subscription
- name: discounts
  endpoint:
    path: /rest#tag/Discount
- name: payment_methods
  endpoint:
    path: /rest#tag/Payment-Methods
- name: manage_shipping_zones
  endpoint:
    path: /user-guides/shipping-integration/rest-api/manage-shipping-zones
    method: GET
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: bundles
  endpoint:
    path: /channel/v1/bundles
    method: GET
    data_selector: bundles
- name: bundle_status
  endpoint:
    path: /channel/v1/bundles/{bundleId}/status
    method: GET
    data_selector: status
- name: company
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
- name: create_company
  endpoint:
    path: /api/channel/v1/companies
    method: POST
    data_selector: company
    params: {}
- name: list_companies
  endpoint:
    path: /api/channel/v1/companies
    method: GET
    data_selector: companies
    params: {}
- name: company_details
  endpoint:
    path: /api/channel/v1/companies/{companyId}
    method: GET
    data_selector: company
    params: {}
- name: create_user
  endpoint:
    path: /api/channel/v1/users
    method: POST
    data_selector: user
    params: {}
- name: company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: delete_company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: enable_disable_company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: create_company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_company_memberships
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: update_company_membership_roles
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: read_user_checklist
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: currency_exchange_rates
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    params:
      baseCurrency: USD
      counterCurrency: EUR
      page: 0
      size: 20
      sortField: VALID_FROM
      sortOrder: DESC
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: create_product_catalog
  endpoint:
    path: /create_product_catalog
    method: POST
    data_selector: file
    params:
      entityType: CATALOG_CONSOLIDATED
- name: update_product_catalog
  endpoint:
    path: /update_product_catalog
    method: POST
    data_selector: file
    params:
      entityType: PRODUCT_BASIC
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: vendorSharePercentage
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: discount
  endpoint:
    path: /discounts
    method: PUT
    data_selector: discount
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: vendorSharePercentage
  endpoint:
    path: /vendorSharePercentage
    method: GET
- name: user_groups
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: webhooks
    params: {}
- name: user_group
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: list_all_invoices_for_user
  endpoint:
    path: /invoices
    method: GET
    params:
      count: 250
      sortField: INVOICE_ID
      sortOrder: ASC
      start: 0
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: invoices
  endpoint:
    path: /channel/v1/invoices
    method: GET
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: invoice_payments
  endpoint:
    path: /channel/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /channel/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /channel/v1/invoices/{invoiceNumber}
    method: PATCH
- name: list_leads
  endpoint:
    path: /api/channel/v1/leads
    method: GET
    data_selector: leads
    params:
      context: RESELLER
      companyId: string
      status: string
      searchText: string
      fromDate: number
      toDate: number
      sortField: DATE
      sortOrder: DESC
      page: 0
      size: 50
- name: create_lead
  endpoint:
    path: /api/channel/v1/leads
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: string
      userId: string
- name: leads
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: list_opportunities
  endpoint:
    path: /channel/v1/opportunities
    method: GET
    data_selector: opportunities
    params: {}
- name: create_opportunity
  endpoint:
    path: /channel/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}
    method: GET
    data_selector: none
    params: {}
- name: update_opportunity
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: none
    params: {}
- name: add_items
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: none
    params: {}
- name: list_items
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: none
    params: {}
- name: remove_item
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: none
    params: {}
- name: edit_item
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: none
    params: {}
- name: opportunity
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: resourceActions
    params:
      opportunityId: string
      enforce: boolean
- name: clone_opportunity
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: resource
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/shipping-address
    method: GET
    data_selector: resource
    params: {}
- name: create_replace_shipping_address
  endpoint:
    path: /api/channel/v1/opportunities/{opportunityId}/shipping-address
    method: PUT
    data_selector: resource
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: resourceActions
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: response
    params: {}
- name: payment_methods
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: response
    params: {}
- name: payment_plans
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: response
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: webhook
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: transfer_platform_configurations
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: product_answers
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: product_context_current_user
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
- name: product_context_user_company
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
- name: create_review
  endpoint:
    path: /api/channel/v1/reviews
    method: POST
    data_selector: review
    params:
      applicationId: required
- name: list_reviews
  endpoint:
    path: /api/channel/v1/reviews
    method: GET
    data_selector: reviews
    params:
      applicationId: required
- name: retrieve_review
  endpoint:
    path: /api/channel/v1/reviews/{reviewId}
    method: GET
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: products
  endpoint:
    path: /channel/v1/products
    method: GET
    data_selector: products
    params: {}
- name: purchase_orders
  endpoint:
    path: /channel/v1/purchaseOrders/{companyId}
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: purchase_order_payments
  endpoint:
    path: /channel/v1/purchaseOrders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: purchase_orders
  endpoint:
    path: /channel/v1/purchaseOrders
    method: GET
    data_selector: orders
    params:
      context: RESELLER
      size: 50
      sort: +DATE
- name: purchase_order_invoices
  endpoint:
    path: /channel/v1/purchaseOrders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: quote_version
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: ledger_lines
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfers
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: reports
  endpoint:
    path: /api/channel/v1/reports
    method: GET
    data_selector: reports
    params:
      number: 1
      size: 50
- name: segment_folders
  endpoint:
    path: /api/channel/v1/segment_folders
    method: GET
    data_selector: segment_folders
    params:
      number: 0
      size: 50
      sort: +name
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: response
    params: {}
- name: list_shopping_carts
  endpoint:
    path: /api/channel/v1/shoppingCarts
    method: GET
    params: {}
- name: create_shopping_cart
  endpoint:
    path: /api/channel/v1/shoppingCarts
    method: POST
    data_selector: ShoppingCartWS
    params: {}
- name: retrieve_shopping_cart
  endpoint:
    path: /api/channel/v1/shoppingCarts/{shoppingCartId}
    method: GET
    params: {}
- name: shopping_cart
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: retrieve_cart_items
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: add_item_to_cart
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: pricing_summary
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: RemoveCartDiscounts
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: DeleteShoppingCartFees
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: CreateCartFees
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: SetAccreditedAgents
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: RemoveAccreditedAgents
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: SendLockedCartNotifications
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: subscriptions
  endpoint:
    path: /api/channel/v1/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /api/channel/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: invoices
  endpoint:
    path: /api/channel/v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: subscriptions
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
- name: developer_account
  endpoint:
    path: /api/channel/v1/developer_accounts
    method: POST
    data_selector: records
- name: users
  endpoint:
    path: /api/channel/v1/users
    method: GET
    data_selector: records
    params: {}
- name: user_activation
  endpoint:
    path: /api/channel/v1/users/activate/{activationToken}
    method: POST
    data_selector: activation_info
    params: {}
- name: read_user
  endpoint:
    path: /api/channel/v1/users/{userUuid}
    method: GET
    data_selector: user_info
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: resource
    params: {}
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: visualizationDataset
  endpoint:
    path: /visualizationDataset
    method: GET
- name: visualizationMetric
  endpoint:
    path: /visualizationMetric
    method: GET
- name: visualizationMetricData
  endpoint:
    path: /visualizationMetricData
    method: GET
- name: activeCart
  endpoint:
    path: /queries/activeCart
    method: GET
- name: activeCartOfUser
  endpoint:
    path: /queries/activeCartOfUser
    method: GET
- name: cartFields
  endpoint:
    path: /queries/cartFields
    method: GET
- name: cartValidation
  endpoint:
    path: /queries/cartValidation
    method: GET
- name: checkoutSettings
  endpoint:
    path: /queries/checkoutSettings
    method: GET
- name: productRecommendations
  endpoint:
    path: /queries/productRecommendations
    method: GET
- name: selfServeSubscriptionUpdateCapabilities
  endpoint:
    path: /queries/selfServeSubscriptionUpdateCapabilities
    method: GET
- name: addItemsToCart
  endpoint:
    path: /mutations/addItemsToCart
    method: POST
- name: applyDiscountToCart
  endpoint:
    path: /mutations/applyDiscountToCart
    method: POST
- name: finalizeCart
  endpoint:
    path: /mutations/finalizeCart
    method: POST
- name: removeDiscountFromCart
  endpoint:
    path: /mutations/removeDiscountFromCart
    method: POST
- name: removeItemsFromCart
  endpoint:
    path: /mutations/removeItemsFromCart
    method: POST
- name: updateCartCustomAttributes
  endpoint:
    path: /mutations/updateCartCustomAttributes
    method: POST
- name: updateCartItems
  endpoint:
    path: /mutations/updateCartItems
    method: POST
- name: validateCart
  endpoint:
    path: /mutations/validateCart
    method: POST
- name: commissionCycleExecutions
  endpoint:
    path: /commissionCycleExecutions
    method: GET
    data_selector: records
    params: {}
- name: commissionCyclesByYear
  endpoint:
    path: /commissionCyclesByYear
    method: GET
    data_selector: records
    params: {}
- name: commissionEvent
  endpoint:
    path: /commissionEvent
    method: GET
    data_selector: records
    params: {}
- name: commissionEventReport
  endpoint:
    path: /commissionEventReport
    method: GET
    data_selector: records
    params: {}
- name: errorSummaryByCycle
  endpoint:
    path: /errorSummaryByCycle
    method: GET
    data_selector: records
    params: {}
- name: eventsMissingByCycle
  endpoint:
    path: /eventsMissingByCycle
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /rest#tag/Subscription
- name: discounts
  endpoint:
    path: /rest#tag/Discount
- name: payment_methods
  endpoint:
    path: /rest#tag/Payment-Methods
- name: create_companies_accounts
  endpoint:
    path: /user-guides/user-companies/rest/createcompanies
    method: POST
- name: update_companies_accounts
  endpoint:
    path: /user-guides/user-companies/rest/updatecompanies
    method: PUT
- name: read_companies_accounts
  endpoint:
    path: /user-guides/user-companies/rest/readcompaniesaccounts
    method: GET
- name: create_users
  endpoint:
    path: /user-guides/user-companies/rest/createusers
    method: POST
- name: update_users
  endpoint:
    path: /user-guides/user-companies/rest/updateusers
    method: PUT
- name: read_user_details
  endpoint:
    path: /user-guides/user-companies/rest/readuserdetails
    method: GET
- name: delete_users
  endpoint:
    path: /user-guides/user-companies/rest/deleteusers
    method: DELETE
- name: create_company_account_memberships
  endpoint:
    path: /user-guides/user-companies/rest/createcompanyaccountmemberships
    method: POST
- name: read_company_account_memberships
  endpoint:
    path: /user-guides/user-companies/rest/readcompaniesaccounts
    method: GET
- name: delete_company_account_memberships
  endpoint:
    path: /user-guides/user-companies/rest/deletecompanyaccountmemberships/
    method: DELETE
- name: manage_company_invitations
  endpoint:
    path: /user-guides/user-companies/rest/managecompanyinvitations
    method: POST
- name: visualizationDataset
  endpoint:
    path: /visualizationDataset
    method: GET
- name: visualizationMetric
  endpoint:
    path: /visualizationMetric
    method: GET
- name: visualizationMetricData
  endpoint:
    path: /visualizationMetricData
    method: GET
- name: createVisualizationDataset
  endpoint:
    path: /createVisualizationDataset
    method: POST
- name: createVisualizationMetric
  endpoint:
    path: /createVisualizationMetric
    method: POST
- name: deleteVisualizationMetric
  endpoint:
    path: /deleteVisualizationMetric
    method: DELETE
- name: pushToVisualizationDataset
  endpoint:
    path: /pushToVisualizationDataset
    method: POST
- name: updateVisualizationDataset
  endpoint:
    path: /updateVisualizationDataset
    method: PUT
- name: updateVisualizationMetric
  endpoint:
    path: /updateVisualizationMetric
    method: PUT
- name: activeCart
  endpoint:
    path: /activeCart
    method: GET
    data_selector: cart
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: cart
    params: {}
- name: commissionCycleExecutions
  endpoint:
    path: /commissionCycleExecutions
    method: GET
- name: commissionCyclesByYear
  endpoint:
    path: /commissionCyclesByYear
    method: GET
- name: commissionEvent
  endpoint:
    path: /commissionEvent
    method: GET
- name: commissionEventReport
  endpoint:
    path: /commissionEventReport
    method: GET
- name: errorSummaryByCycle
  endpoint:
    path: /errorSummaryByCycle
    method: GET
- name: eventsMissingByCycle
  endpoint:
    path: /eventsMissingByCycle
    method: GET
- name: usageFileUploads
  endpoint:
    path: /usage/file/uploads
    method: GET
    data_selector: records
    params: {}
- name: usageReader
  endpoint:
    path: /usage/reader
    method: GET
    data_selector: records
    params: {}
- name: price_definition
  endpoint:
    path: /services/pricing/v1/priceDefinition
    method: GET
    data_selector: records
- name: pricing_event
  endpoint:
    path: /services/pricing/v1/pricingEvent
    method: GET
    data_selector: records
- name: ProductIntegrationSingleSignOnConfiguration
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductIntegrationSingleSignOnConfiguration
    method: GET
- name: distributorAccount
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.distributorAccount
    params: {}
- name: distributorProductImports
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.distributorProductImports
    params: {}
- name: product_types
  endpoint:
    path: /productTypes
    method: GET
    data_selector: productTypes
    params: {}
- name: createcompanies
  endpoint:
    path: /user-guides/user-companies/rest/createcompanies.md
    method: POST
- name: createcompanyaccountmemberships
  endpoint:
    path: /user-guides/user-companies/rest/createcompanyaccountmemberships.md
    method: POST
- name: createusers
  endpoint:
    path: /user-guides/user-companies/rest/createusers.md
    method: POST
- name: deletecompanyaccountmemberships
  endpoint:
    path: /user-guides/user-companies/rest/deletecompanyaccountmemberships.md
    method: DELETE
- name: deleteusers
  endpoint:
    path: /user-guides/user-companies/rest/deleteusers.md
    method: DELETE
- name: managecompanyinvitations
  endpoint:
    path: /user-guides/user-companies/rest/managecompanyinvitations.md
    method: PUT
- name: readcompaniesaccounts
  endpoint:
    path: /user-guides/user-companies/rest/readcompaniesaccounts.md
    method: GET
- name: readuserdetails
  endpoint:
    path: /user-guides/user-companies/rest/readuserdetails.md
    method: GET
- name: updatecompanies
  endpoint:
    path: /user-guides/user-companies/rest/updatecompanies.md
    method: PATCH
- name: updatecompanyaccountmemberships
  endpoint:
    path: /user-guides/user-companies/rest/updatecompanyaccountmemberships.md
    method: PATCH
- name: updateusers
  endpoint:
    path: /user-guides/user-companies/rest/updateusers.md
    method: PATCH
- name: company_synchronization
  endpoint:
    path: /user-guides/product-integration/rest-api/company-synchronization
    method: GET
- name: metered_usage_v1
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v1
    method: GET
- name: metered_usage_v2
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2
    method: GET
- name: user_synchronization
  endpoint:
    path: /user-guides/product-integration/rest-api/user-synchronization
    method: GET
- name: createAI
  endpoint:
    path: /channel/v1/webhooks
    method: POST
- name: getAIDetails
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
- name: approveAI
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: PUT
- name: getAIChats
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
- name: createAIChat
  endpoint:
    path: /channel/v1/webhooks
    method: POST
    params:
      aiId: string
- name: listAIDataSources
  endpoint:
    path: /channel/v1/data-sources
    method: GET
    params:
      aiId: string
- name: addDataSourceToAI
  endpoint:
    path: /channel/v1/data-sources
    method: POST
    params:
      aiId: string
      dataSourceId: string
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    params:
      aiId: string
      name: string
      data: object
- name: revokeAIApproval
  endpoint:
    path: /channel/v1/approval
    method: DELETE
    params:
      aiId: string
- name: getChat
  endpoint:
    path: /channel/v1/chats/{chatId}
    method: GET
    params:
      chatId: string
- name: postChatSession
  endpoint:
    path: /channel/v1/chats/{chatId}
    method: POST
    params:
      chatId: string
      date: string
      prompt: string
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: data_source
  endpoint:
    path: /dataSources
    method: GET
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
    data_selector: records
- name: get_chats
  endpoint:
    path: /api/v1/chats
    method: GET
    data_selector: records
- name: get_user_groups
  endpoint:
    path: /api/v1/user/groups
    method: GET
    data_selector: records
- name: get_org_usage
  endpoint:
    path: /api/v1/org/usage
    method: GET
    data_selector: records
- name: create_chat_completion
  endpoint:
    path: /api/v1/chat/completion
    method: POST
    data_selector: records
- name: company_activities
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: activities
    params:
      companyUuid: string
      displayType: ONLY_ME
      page: 0
      size: 12
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: companies
  endpoint:
    path: /channel/v1/companies
    method: GET
- name: company
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: company_details
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_companies
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_details
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: create_user
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: list_users
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: remove_company_association
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_company_associations
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
- name: company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_checklist
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: company_assignable_roles
  endpoint:
    path: /api/channel/v1/company/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: string
      userUuid: string
- name: groups_for_company_membership
  endpoint:
    path: /api/channel/v1/company/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: string
      userUuid: string
      ldap: boolean
      page: integer
      searchText: string
      size: integer
      sortField: string
      sortOrder: string
- name: currency_exchange_rate
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: notification_template
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: sms_template
  endpoint:
    path: /notification/sms/template
    method: GET
- name: notification_template
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: sms_template
  endpoint:
    path: /channel/v1/webhooks
    method: POST
    data_selector: smsTemplate
    params: {}
- name: notification_template
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: create_catalog
  endpoint:
    path: /webhooks/createCatalog
    method: POST
- name: update_catalog
  endpoint:
    path: /webhooks/updateCatalog
    method: POST
- name: getDefaultCommonEmailTemplate
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: records
- name: default_email_template
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: get_default_email_template
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    params:
      typerequired: stringEmail template type
- name: discounts
  endpoint:
    path: /webhooks
    method: DELETE
    data_selector: ''
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: DiscountType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: PricingUnit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: discount
  endpoint:
    path: /discounts
    method: PUT
    data_selector: discount
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: vendorSharePercentage
  endpoint:
    path: /vendorSharePercentage
    method: GET
    data_selector: vendorSharePercentage
- name: company_domains
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: events
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_group
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_user_group_members
  endpoint:
    path: /api/channel/v1/groups/{groupUuid}/members
    method: GET
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: invitation
  endpoint:
    path: /api/channel/v1/invitations
    method: DELETE
- name: invite_users
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: user_invoices
  endpoint:
    path: /channel/v1/invoices/user
    method: GET
    params:
      companyId: required
      userId: required
- name: company_invoices
  endpoint:
    path: /channel/v1/invoices/company
    method: GET
    params:
      companyId: required
- name: invoice_payments
  endpoint:
    path: /channel/v1/invoices/payments
    method: GET
    params:
      invoiceNumber: required
- name: pay_invoice
  endpoint:
    path: /channel/v1/invoices/pay
    method: POST
    params:
      invoiceNumber: required
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: invoices
  endpoint:
    path: /channel/v1/invoices
    method: GET
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: leads
  endpoint:
    path: /leads
    method: GET
    data_selector: leads
    params:
      size: 50
      page: 0
      sortField: DATE
      sortOrder: DESC
- name: leads
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: uuid
    params: {}
- name: lead
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params:
      leadIdrequired: string
      contextrequired: string
      companyIdrequired: string
- name: activities
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: billing_usage
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params:
      async: 'false'
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: applications
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: opportunities
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params:
      opportunityIdrequired: Array of strings
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: tokenize_payment_method
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: deletePaymentMethod
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params:
      paymentMethodIdrequired: string
- name: listPaymentMethods
  endpoint:
    path: /paymentMethods
    method: GET
    data_selector: null
    params:
      ownerIdrequired: string
      companyIdrequired: string
- name: createPaymentMethod
  endpoint:
    path: /paymentMethods
    method: POST
    data_selector: null
    params:
      ownerIdrequired: string
      companyIdrequired: string
      token: string
      paymentMethodType: string
      properties: object
      billingAddress: object
- name: create_payment_method
  endpoint:
    path: /api/channel/v1/paymentMethod
    method: POST
    data_selector: properties
    params:
      ownerId: string
      companyId: string
      paymentMethodType: string
      billingAddress: object
- name: list_default_payment_methods
  endpoint:
    path: /api/channel/v1/paymentMethods/default
    method: GET
    data_selector: defaultPaymentMethods
    params:
      ownerId: string
      companyId: string
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: payment_plan
  endpoint:
    path: /api/channel/v1/paymentPlans
    method: GET
- name: user_payments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: company_payments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: payment_invoices
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: payments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_platform_configuration
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_platform_configuration
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: answers
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: comment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: webhook
    params:
      applicationId: numberApplication id
      reviewId: numberReview id
- name: comments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: delete_image
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: upload_image
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: upload_pdf
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: delete_file
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: retrieve_question
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: update_question
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: product_reviews
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: product_questions
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: product_status
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: vendor_products
  endpoint:
    path: /products/vendor/{vendorUuid}
    method: GET
- name: all_products
  endpoint:
    path: /products
    method: GET
    params:
      page: '0'
      size: '20'
      sortField: NAME
      sortOrder: ASC
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: purchase_orders
  endpoint:
    path: /purchaseOrders
    method: GET
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_purchase_orders
  endpoint:
    path: /channel/v1/purchaseOrders
    method: GET
    params:
      companyId: required
      userId: required
- name: order_payments
  endpoint:
    path: /channel/v1/orderPayments
    method: GET
    params:
      orderId: required
- name: purchase_orders
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: purchase_order
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_ledger_lines
  endpoint:
    path: /api/channel/v1/transfer/{transferId}/ledger_lines
    method: GET
    params:
      number: 1
      size: 5
- name: transfers
  endpoint:
    path: /api/channel/v1/transfers
    method: GET
    params:
      number: 1
      size: 10
- name: list_reports
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: search
  endpoint:
    path: /api/channel/v1/search
    method: GET
    params:
      size: 50
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: deleteCompanyGroup
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: removeSegment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: getCompanyGroupSegments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: createSegment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
- name: updateSegment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: dynamic_segment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: listShoppingCarts
  endpoint:
    path: /api/channel/v1/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: cart_associations
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /v1/webhooks/{webhookUuid}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params:
      shoppingCartId: required
- name: retrieve_cart_item
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    params:
      shoppingCartId: required
      itemId: required
- name: remove_cart_item
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params:
      shoppingCartId: required
      itemId: required
- name: update_cart_item
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    params:
      shoppingCartId: required
      itemId: required
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params:
      subscriptionAssignmentId: stringSubscription Assignment ID.
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_subscriptions
  endpoint:
    path: /channel/v1/subscriptions
    method: GET
    params:
      companyId: string
      userId: string
      fromDate: string
      toDate: string
      discountId: number
      status: string
      editionId: number
      paymentPlanId: number
      lastModified: number
      applicationIds: number
      bundleApplicationId: number
      expand: string
      orderReferenceCode: string
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: company_subscriptions
  endpoint:
    path: /channel/v1/company/subscriptions
    method: GET
    params:
      companyId: string
      fromDate: string
      toDate: string
      discountId: number
      status: string
      editionId: number
      paymentPlanId: number
      lastModified: number
      applicationIds: number
      bundleApplicationId: number
      expand: string
      orderReferenceCode: string
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: create_subscription
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: subscription
    params:
      companyId: string
      userId: string
      sendNotification: 'true'
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
    params:
      subscriptionId: string
- name: subscription_payments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: uuid
    params:
      subscriptionId: string
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
- name: create_addon_instance
  endpoint:
    path: /channel/v1/addonInstances
    method: POST
- name: list_invoices
  endpoint:
    path: /channel/v1/invoices
    method: GET
- name: preview_change_addon_instance
  endpoint:
    path: /channel/v1/addonInstances/{addonInstanceUuid}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: webhookUuid
    params: {}
- name: user_assignment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: users
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_memberships
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_profile
  endpoint:
    path: /api/channel/v1/users/{userUuid}
    method: GET
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: delete_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: fetch_usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status.md
    method: GET
    data_selector: records
    params: {}
- name: historic_usage_and_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments.md
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: updateMembershipRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: data
    params: {}
- name: readUserChecklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: data
    params: {}
- name: inviteManagedUser
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: data
    params: {}
- name: requestApplicationPurchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: data
    params: {}
- name: listApplicationAssignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: data
    params: {}
- name: readAssignableRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: data
    params: {}
- name: readCompanyAssignableRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: data
    params: {}
- name: listGroupsForCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: data
    params: {}
- name: publishContentEvents
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: data
    params: {}
- name: readCurrencyExchangeRates
  endpoint:
    path: /currencyExchangeRate
    method: GET
    data_selector: data
    params: {}
- name: exchangeRates
  endpoint:
    path: /api/channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invitations_create
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations_csv
  endpoint:
    path: /companies/{companyUuid}/invitations/csv
    method: POST
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    data_selector: leads
    params: {}
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: read_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: application/json
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: application/json
    params:
      opportunityId: required
- name: list_opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: application/json
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: application/json
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: application/json
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: string
      ownerId: string
      ownerCompanyId: string
      currency: string
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      ownerId: string
      ownerCompanyId: string
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: string
      companyId: string
      salesAgentUserId: string
      salesAgentCompanyId: string
      productId: string
      editionId: string
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      discountCode: string
      itemIds:
      - string
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: created
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: updated
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: deleted
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: '250'
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      startDateFrom: SOME_NUMBER_VALUE
      startDateTo: SOME_NUMBER_VALUE
      status: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
      type: SOME_STRING_VALUE
      frequency: SOME_STRING_VALUE
      orderReferenceCode: SOME_STRING_VALUE
      applicationIds: SOME_NUMBER_VALUE
      fromCreationDate: SOME_NUMBER_VALUE
      toCreationDate: SOME_NUMBER_VALUE
      page: SOME_INTEGER_VALUE
      referenceCode: SOME_STRING_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: edition_details
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: ''
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: get_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: get_shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: no_content
    params: {}
- name: delete_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: no_content
    params: {}
- name: create_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: no_content
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: success
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: reactivateSubscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: assignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: listProductAssignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: Read SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: List all subscriptions for a user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: Create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: Preview changed subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: Preview create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account_create
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: developer_account_expire
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: payment_methods
  endpoint:
    path: /payment_methods
    method: GET
    data_selector: records
- name: tokens
  endpoint:
    path: /tokens
    method: POST
    data_selector: token
- name: AI
  endpoint:
    path: /ai
    method: post
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: get
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: put
    data_selector: data
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: get
    data_selector: data
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: post
    data_selector: data
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: get
    data_selector: data
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: post
    data_selector: data
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: get
    data_selector: data
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: post
    data_selector: data
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: delete
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: id
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: companyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_memberships_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: email_template
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: createOrUpdateDefaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
- name: OVERAGE_FEES
  endpoint:
    path: /OVERAGE_FEES
    method: GET
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /OVERAGE_FEE_TRANSACTION
    method: GET
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /OVERAGE_FEES_DOCUMENT
    method: GET
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /OVERAGE_FEES_ITEM
    method: GET
- name: EVENT
  endpoint:
    path: /EVENT
    method: GET
- name: BUSINESS_EVENT
  endpoint:
    path: /BUSINESS_EVENT
    method: GET
- name: LEGAL_TENDER
  endpoint:
    path: /LEGAL_TENDER
    method: GET
- name: ANNUAL_REVENUE
  endpoint:
    path: /ANNUAL_REVENUE
    method: GET
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    data_selector: invoices
- name: lead
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    data_selector: leads
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: ''
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: Billing Usage V1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: Status verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: Billing Usage V2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: Fetch usage processing status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: List applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: Update MyApps order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: Read application with completed assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: Read application with pending assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: success
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: success
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: success
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: removeItem
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: editItem
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params: {}
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params: {}
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params: {}
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      discountCode: required
      itemIds: required
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: list_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
- name: removePaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: listAllPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: number
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: number
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: number
      reviewId: number
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: number
      reviewId: number
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: number
      reviewId: number
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params:
      page: string
      size: string
      sortField: string
      sortOrder: string
      searchText: string
      categoryId: Array of numbers
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: number
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: string
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params:
      applicationId: number
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: content
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: content
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: content
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
- name: purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
      start: '0'
- name: user_purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
      start: '0'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
      start: '0'
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_v1
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: DELETE
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: retrieve_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
    data_selector: records
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
    data_selector: records
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
    data_selector: records
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
    data_selector: records
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
    data_selector: records
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
- name: pricing_summary_by_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: get_shopping_cart_validation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: delete_discount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: blockingErrors
    params:
      itemId: SOME_ARRAY_VALUE
- name: delete_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: blockingErrors
    params: {}
- name: create_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: update_accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: blockingErrors
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: string
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    params:
      subscriptionUuid: string
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: string
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: string
      userId: string
      subscriptionId: string
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: string
      userId: string
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    params:
      companyId: string
      userId: string
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: read_addon_instances
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
- name: create_addon_instance
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: POST
- name: preview_create_addon_instance
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons/preview
    method: POST
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: 'null'
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: 'null'
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: 'null'
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: 'null'
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: 'null'
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhook_list
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: uuid
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: uuid
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: uuid
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
    params: {}
- name: Order webhook payload
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/sobjects/Usage
    method: POST
    data_selector: records
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: listDataSources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: deleteDataSource
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refreshDataSource
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: createGroup
  endpoint:
    path: /api/v1/groups
    method: POST
- name: updateGroup
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: deleteGroup
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leaveGroup
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: listAIs
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: getChats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: getUserGroups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: getOrgUsageByAI
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: getOrgUsage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: createChatCompletion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Activity data
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: ''
    params: {}
- name: list_user
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: ''
    params: {}
- name: company_associations
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params: {}
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      entityType: PRODUCT
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: success
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: results
    params: {}
- name: discount
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invite_users_csv
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/csv
    method: POST
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    params:
      count: 250
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    params:
      count: 250
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params:
      count: 250
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: 250
      sortOrder: ASC
- name: lead_list
  endpoint:
    path: /prm/v1/leads
    method: GET
    params:
      size: 50
      sortOrder: DESC
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: leads
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usageData
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usageData
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: statusData
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: created
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: details
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: deleted
    params: {}
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: string
- name: opportunity_item
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: string
- name: read_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: string
- name: delete_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: string
      itemId: string
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: string
      itemId: string
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getOpportunityPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: sameAsBillingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      excludeFree: 'false'
      fromDate: ''
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: ''
      toDate: ''
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: configuration
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: method
    params:
      transferMethodId: required
- name: answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: records
- name: comments
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: records
- name: questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: records
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params:
      count: '500'
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params:
      size: '20'
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: results
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: results
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: results
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      page: 0
      size: 50
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: remove_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
    params: {}
- name: preview_non_persisted_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
- name: reactivateSubscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: samlMetadata
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: subscription
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: subscription
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params:
      subscriptionId: required
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: activate_user
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: read_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: records
- name: patch_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PATCH
    data_selector: records
- name: update_user_picture
  endpoint:
    path: /account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: records
- name: read_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
- name: checkout
  endpoint:
    path: /user-guides/checkout
    method: GET
    data_selector: records
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: Get all chats for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: Create chat session for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: List data sources for AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: ''
    params: {}
- name: Create new API data source for AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: ''
    params: {}
- name: Add existing data source to AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: ''
    params: {}
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: ai
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: companyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: notification_template
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publishCatalog
  endpoint:
    path: /publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: defaultNotificationTemplate
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /services/data/vXX.X/sobjects/DiscountType
    method: GET
    data_selector: records
    params: {}
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: DiscountType
  endpoint:
    params: {}
- name: PricingUnit
  endpoint:
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
    params: {}
- name: verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: editions
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: events
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitations_registration
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: all_invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_details
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
- name: patch_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    data_selector: leads
- name: create_lead
  endpoint:
    path: /api/prm/v1/leads
    method: POST
    data_selector: lead
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: bill_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: ''
    params: {}
- name: domain_verification_status
  endpoint:
    path: /integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
    data_selector: ''
    params: {}
- name: bill_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: ''
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: ''
    params: {}
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: ''
    params: {}
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: ''
    params: {}
- name: read_application_with_completed_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
    data_selector: ''
    params: {}
- name: read_application_with_pending_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      discountCode: required
      itemIds: required
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: deletePaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
- name: listPaymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
- name: listPaymentsForUser
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: listAllPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payments
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
- name: product_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: DELETE
- name: product_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
- name: product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: segments
  endpoint:
    path: /channel/v1/segments/{companySegmentId}
    method: DELETE
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: items
    params: {}
- name: cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_pre_auth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: validationResults
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params:
      itemId: []
- name: deleteShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_cancel
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
- name: storefront_theme
  endpoint:
    path: /storefront/theming
    method: GET
- name: components_library
  endpoint:
    path: /storefront/components
    method: GET
- name: checkout
  endpoint:
    path: /storefront/checkout
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    components:
      ProductDescription:orderable:d7254b33-ac88-4945-a248-edf6a87a2b16:
        isAddonsVisible:
          value: true
          type: TOGGLE
        isPricesVisible:orderable:83a7e00c-b3d5-4d64-8919-a9cb3fa2d5b3:
          value: true
          type: TOGGLE
        layout:
          value: horizontal-thumbnails
          type: DROPDOWN
      ProductReviews:orderable:7c059217-1dbc-4b75-a6ee-a7ca740facd6:
        isAvatarVisible:
          value: true
          type: TOGGLE
        position:
          value: right
          type: DROPDOWN
      ProductTopFeatures:orderable:59db9f73-9caa-48b2-9df9-da98413e7de8:
        numberOfColumns:
          value: two
          type: DROPDOWN
        withImages:
          value: false
          type: TOGGLE
      ProductBanner:
        bannerBackgroundColor:
          value: '#ffffff'
          type: COLORPICKER
        descTextSize:
          value: medium
          type: DROPDOWN
    orderableComponents:
    - name: ProductDescription
      id: ProductDescription:orderable:d7254b33-ac88-4945-a248-edf6a87a2b16
    - name: ProductReviews
      id: ProductReviews:orderable:7c059217-1dbc-4b75-a6ee-a7ca740facd6
    - name: ProductTopFeatures
      id: ProductTopFeatures:orderable:59db9f73-9caa-48b2-9df9-da98413e7de8
- name: global
  endpoint:
    components:
      Header:
        components:
          AnnoucementBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75685:
            announcementBarMessage:
              value: Announcement Bar
              type: TEXTAREA
            announcementBarHeight:
              value: 10
              type: SLIDER
          AuxiliaryBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75686:
            auxBarHeight:
              value: 30
              type: SLIDER
            displayLanguageSwitcher:
              value: true
              type: TOGGLE
          MainBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75687:
            logoHeight:
              value: 30
              type: SLIDER
            displayCart:
              value: true
              type: TOGGLE
          PrimaryNavBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75688:
            navBarPadding:
              value: 5
              type: SLIDER
            navBarBackgroundColor:
              value: '#EAEAEA'
              type: COLORPICKER
        orderableComponents:
        - name: AnnoucementBar
          id: AnnoucementBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75685
        - name: AuxiliaryBar
          id: AuxiliaryBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75686
        - name: MainBar
          id: MainBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75687
        - name: PrimaryNavBar
          id: PrimaryNavBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75688
- name: assign_users
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/assign-users
    method: GET
- name: cancel_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/cancel-subscriptions
    method: GET
- name: change_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/change-subscriptions
    method: GET
- name: create_payment_instruments
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-payment-instruments
    method: GET
- name: create_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-subscriptions
    method: GET
- name: manage_discounts
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/manage-discounts
    method: GET
- name: metered_usage_v1
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/metered-usage-v1
    method: GET
- name: metered_usage
  endpoint:
    path: /services/data/v2/meteredUsage
    method: POST
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: companyMemberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: records
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: records
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: records
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: records
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: sms_template
  endpoint:
    path: /v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: null
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: null
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: null
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: null
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: null
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: success
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: results
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
    params: {}
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: group_membership_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: memberships
    params: {}
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: memberships
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: invitation_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
    params: {}
- name: invitation_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
    data_selector: invitations
    params: {}
- name: invitations
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /api/prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: leads
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
- name: leads
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: id
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: id
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: createOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: deleteOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: getOpportunityDetails
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: updateOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: remove_item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params: {}
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params: {}
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params: {}
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplication
    params:
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: deliveryAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
- name: default_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: '[]'
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: '{}'
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: '{}'
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: '{}'
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: ''
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: ''
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: ''
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: ''
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: ''
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: ''
    params:
      transferMethodId: required
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: create_product_review
  endpoint:
    path: /post/marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /put/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /delete/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /get/channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_vendor_products
  endpoint:
    path: /get/marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    params:
      count: '250'
      start: '0'
      sortOrder: ASC
      sortField: PAYMENT_ID
- name: orders
  endpoint:
    path: /
    method: GET
    data_selector: content
    params:
      startDateFrom: SOME_NUMBER_VALUE
      startDateTo: SOME_NUMBER_VALUE
      status: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
      type: SOME_STRING_VALUE
      frequency: SOME_STRING_VALUE
      orderReferenceCode: SOME_STRING_VALUE
      applicationIds: SOME_NUMBER_VALUE
      fromCreationDate: SOME_NUMBER_VALUE
      toCreationDate: SOME_NUMBER_VALUE
      page: SOME_INTEGER_VALUE
      referenceCode: SOME_STRING_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: appReseller_catalog_sellableProducts
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: POST
    data_selector: ''
    params: {}
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments/{dynamicSegmentId}
    method: GET
    data_selector: ''
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
      sortField: createdOn
      sortOrder: ASC
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: id
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: response
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/{subscriptionId}
    method: DELETE
- name: createDeveloperAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expireDeveloperAccount
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assignUser
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassignUser
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: getUserAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: createUserConnection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnectUserAccount
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: listAllUsers
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: update_user_picture
  endpoint:
    path: /api/account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params:
      userUuid: string
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params:
      userUuid: string
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: string
      size: string
      sortField: string
      sortOrder: string
- name: theme
  endpoint:
    path: /sfb-toolkit/themes
    method: GET
    data_selector: themes
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
- name: Order webhook payload
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: Product list
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
    params: {}
- name: custom_lists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: productLists.custom_lists
    params: {}
- name: faqs
  endpoint:
    path: /api/faq
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: usage_event
  endpoint:
    path: /services/data/vXX.X/sobjects/UsageEvent
    method: POST
    data_selector: records
    params: {}
- name: adjustment_event
  endpoint:
    path: /services/data/vXX.X/sobjects/AdjustmentEvent
    method: POST
    data_selector: records
    params: {}
- name: Create New AI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: Get AI Details
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: Approve an AI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: Get all chats for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: Create a new chat session for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: List data sources for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: Add an existing data source to the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: Create a new API data source for the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: Delete a chat session
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_templates
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_templates
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /api/master_records
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: CUSTOMER
  endpoint:
    path: /services/data/vXX.X/sobjects/Customer
    method: GET
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    params: {}
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: content
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usageData
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usageData
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: usageStatus
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: orderUpdate
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: id
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: id
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: {}
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: success
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: success
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: '[]'
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: '{}'
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: '{}'
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: '{}'
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: 'false'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: 'false'
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_a_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_a_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    params:
      count: 250
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
    params: {}
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: items
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: removeDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    params:
      AD-ShoppingCart-Partner: SOME_STRING_VALUE
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: response
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: userConnections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: Success
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: Success
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: Success
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: Success
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: Success
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: custom_resources
  endpoint:
    path: /themeName/assets/images
    method: GET
    data_selector: images
    params: {}
- name: callToAction
  endpoint:
    path: /cta
    method: GET
    data_selector: items
    params: {}
- name: billing-and-subscription
  endpoint:
    path: /user-guides/billing-and-subscription
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/payment-js-library/choose-authorization-method.md/method-2/list-payment-methods.md
    method: GET
- name: checkout_settings
  endpoint:
    path: /user-guides/checkout/graphql/fetchcheckoutsettings.md
    method: GET
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: ''
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: ''
- name: chat_completions
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: ''
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read.
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully.
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: managed_user_invite
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: application_purchase_request
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_application_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: notification_templates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: email_template
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: defaultCommonEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: typerequired
- name: unit
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: typerequired
- name: unit
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: content
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
- name: group_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: customer
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: data
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: data
    params: {}
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
    data_selector: data
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: data
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: body
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: body
    params:
      opportunityId: required
- name: add_opportunity_item
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: body
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: body
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: body
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: string
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: SOME_STRING_VALUE
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
- name: changeOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      ownerId: d781ac09-b4fe-4d57-8ba2-4640fc5b7c49
      ownerCompanyId: 6a62244e-aa2f-461b-8c7a-3a0e091be9d3
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: SOME_BOOLEAN_VALUE
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params: {}
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      discountCode: 10%OFF
      itemIds:
      - 166e0ce6-4309-4a16-ac9b-61bea7ce1cbc
      - fa776d2e-cda5-4256-9a27-125a0fe3f448
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: paymentMethod
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: number
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: number
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: number
      reviewId: number
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: number
      reviewId: number
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: number
      reviewId: number
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: number
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: string
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params:
      applicationId: number
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
    params: {}
- name: get_ledger_lines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: list_transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: retrieve_transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer
    params: {}
- name: list_transfer_ledger_lines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ledgerLines
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: name
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: name
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: createShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
- name: getShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
- name: deleteDiscount
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
- name: deleteShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
- name: createShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
- name: notifyLockedCarts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: ''
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
- name: userProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: ''
    params: {}
- name: set_temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: create_webhook
  endpoint:
    path: /channel/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: components
  endpoint:
    path: /components
    method: POST
    data_selector: data
- name: components-add
  endpoint:
    path: /components-add
    method: POST
    data_selector: data
- name: components-copy
  endpoint:
    path: /components-copy
    method: POST
    data_selector: data
- name: components-delete
  endpoint:
    path: /components-delete
    method: DELETE
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
    params: {}
- name: faqs
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: static_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/custom_resources
    method: GET
    data_selector: resources
    params: {}
- name: buy_button
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
    data_selector: items
    params: {}
- name: header_footer
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
    data_selector: components
    params: {}
- name: create_ai
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: ai
    params: {}
- name: get_ai_details
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: ai
    params: {}
- name: approve_ai
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: null
    params: {}
- name: get_all_chats_for_ai
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: chats
    params: {}
- name: create_chat_session
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: chat
    params: {}
- name: list_ai_data_sources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: create_api_data_source
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: dataSource
    params: {}
- name: data_sources
  endpoint:
    path: /data-sources
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: ai
  endpoint:
    path: /me/ai
    method: GET
- name: chats
  endpoint:
    path: /me/chats
    method: GET
- name: org_usage
  endpoint:
    path: /usage/org
    method: GET
- name: org_usage_by_ai
  endpoint:
    path: /usage/ai
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: createCompany
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: companyDetails
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: updateCompany
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: patchCompany
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: updatePicture
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: string
      customerCompanyId: string
- name: company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /exchangeRates
    method: GET
- name: currencyExchangeRate
  endpoint:
    path: /exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /exchangeRates
    method: POST
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: CONTACTS_100
  endpoint:
    path: /CONTACTS_100
    method: GET
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: applicationId
    params:
      discountId: required
- name: application
  endpoint:
    path: /application
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invitations
  endpoint:
    path: /invitations/{invitationToken}/registration
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: Billing Usage V1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usage data information
    params: {}
- name: Billing Usage V2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: metered usage request body
    params: {}
- name: Fetch usage processing status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: usage event processing status
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: createOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
- name: deleteOpportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
- name: getOpportunityDetails
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_item
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params: {}
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params: {}
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params: {}
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: ''
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: ''
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: ''
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: ''
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: ''
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: ''
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodType
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: id
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: listAllPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: create_product_review_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: comment
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: ''
- name: retrieve_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: review
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: products
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params: {}
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params:
      count: '500'
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params:
      size: '20'
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: purchase_order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: purchase_order
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroup
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: name
    params: {}
- name: segment
  endpoint:
    path: /channel/v1/segments
    method: POST
    data_selector: name
    params: {}
- name: dynamicSegment
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: id
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: '[]'
- name: preAuth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: '{}'
- name: items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: '[]'
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricingSummary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: readShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: setAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: samlMetadata
    params: {}
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: preview_cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}/previewCancel
    method: GET
    data_selector: content
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: userActivationInfo
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: userProfile
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: userMemberships
    params: {}
- name: userProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: userProfileData
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params:
      userUuid: string
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params:
      userUuid: string
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: llms
  endpoint:
    path: /llms.txt
    method: GET
    data_selector: records
- name: graphql
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
- name: theme
  endpoint:
    path: /sfb-toolkit/create
    method: POST
    data_selector: theme
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: items
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: translations
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: elements
- name: localization_files
  endpoint:
    path: /localization/files
    method: GET
    data_selector: files
- name: theme_customizations
  endpoint:
    path: /theme/customizations
    method: GET
    data_selector: customizations
- name: urlCreator
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
- name: OrderWebhookPayload
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: companyMemberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: inviteUser
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
    data_selector: '[]'
- name: smsTemplates
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
    data_selector: '{}'
- name: emailTemplates
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
    data_selector: '{}'
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: PricingUnit
  endpoint:
    path: /pricing-units
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: PRODUCTS
  endpoint:
    path: /services/data/vXX.X/sobjects/Products
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discounts
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
    params: {}
- name: verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: events
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: lead_list
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: id
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: id
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      fromDate: SOME_NUMBER_VALUE
      toDate: SOME_NUMBER_VALUE
      creationDateOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_status_v2
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: product_tags
  endpoint:
    path: /marketplace/v1/navigator
    method: GET
    data_selector: productTags
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items_to_opportunity
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params:
      opportunityId: string
- name: opportunities_pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: id
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_review_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: comment
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
      start: '0'
      sortOrder: ASC
      sortField: PAYMENT_ID
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: null
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: null
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: null
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: null
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: retrieve_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
    data_selector: items
    params:
      shoppingCartId: string
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
    data_selector: ''
    params:
      shoppingCartId: string
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
    data_selector: ''
    params:
      shoppingCartId: string
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params:
      shoppingCartId: string
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
    data_selector: ''
    params: {}
- name: associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: preAuth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricingSummary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: '200'
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: '200'
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: '200'
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: '200'
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: '201'
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: '200'
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: '200'
- name: preview_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: list_purchase_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: list_subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: list_subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: retrieve_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: userProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: profile
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: theme
  endpoint:
    path: /sfb-toolkit/themes
    method: GET
    data_selector: themes
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
- name: theme_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
    data_selector: pages
    params: {}
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: /height
    method: GET
    data_selector: records
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /toggle_check
    method: GET
    data_selector: label
    params:
      defaultValue: true
      type: TOGGLE_CHECK
      marginSize: 10
      indentSize: 0
- name: backgroundColor
  endpoint:
    path: /colorpicker
    method: GET
    data_selector: title
    params:
      defaultValue: '#474747'
      type: COLORPICKER
- name: size
  endpoint:
    title: Size
    required: true
    defaultValue: xsmall
    type: RADIO
- name: borderRadius
  endpoint:
    data_selector: borderRadius
    params: {}
- name: order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: productsList
  endpoint:
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: /en-US/apps/163915/talech
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawer_list
  endpoint:
    path: /drawer_list
    method: GET
    data_selector: items
    params: {}
- name: footerLogo
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: configuration_data
  endpoint:
    path: /configuration
    method: GET
    data_selector: configuration
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: meta
- name: common_data
  endpoint:
    path: /common
    method: GET
    data_selector: common
- name: navigation_data
  endpoint:
    path: /navigation
    method: GET
    data_selector: nav
- name: internationalization_data
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
- name: home_page
  endpoint:
    path: /themes/themeName/content/pages/home/home.html
    method: GET
- name: listing_page
  endpoint:
    path: /themes/themeName/content/pages/listing/listing.html
    method: GET
- name: profile_page
  endpoint:
    path: /themes/themeName/content/pages/profile/profile.html
    method: GET
- name: theme_index_css
  endpoint:
    path: /themes/themeName/assets/css/theme/theme-index.css
    method: GET
- name: global_index_css
  endpoint:
    path: /themes/themeName/assets/css/platform-global/global-index.css
    method: GET
- name: header_index_css
  endpoint:
    path: /themes/themeName/header-footer/css/header-index.css
    method: GET
- name: design_properties_json
  endpoint:
    path: /themes/themeName/design-properties.json
    method: GET
- name: fetch_usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status
    method: GET
    data_selector: status
    params: {}
- name: historic_usage_and_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments
    method: GET
    data_selector: usage_records
    params: {}
- name: Create New AI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: string
- name: Get AI Details
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: string
- name: Approve an AI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: string
- name: Get all chats for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: string
- name: Create a new chat session for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: string
- name: List data sources for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: string
- name: Add an existing data source to the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: string
- name: Create a new API data source for the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: string
- name: Adds a file upload data source for the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/file
    method: POST
    data_selector: string
- name: Revoke AI approval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: string
- name: Get a chat session
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: string
- name: Message a chat session
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: string
- name: Delete a chat session
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: string
- name: Duplicate a chat session
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: string
- name: Reset a chat session
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: string
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRateById
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: content
    params:
      baseCurrency: USD
      counterCurrency: CAD
      rate: '0.5'
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: content
    params:
      active: false
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /api/notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: unit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: PRODUCTS
  endpoint:
    path: /services/data/vXX.X/sobjects/Products
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: PricingUnit
  endpoint:
    path: /DiscountType/PricingUnit
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: PRODUCTS
  endpoint:
    path: /services/data/vXX.X/sobjects/PRODUCTS
    method: GET
    data_selector: records
- name: PATIENT_CARE_DAY
  endpoint:
    path: /services/data/vXX.X/sobjects/PATIENT_CARE_DAY
    method: GET
    data_selector: records
- name: SUPPLIERS
  endpoint:
    path: /services/data/vXX.X/sobjects/SUPPLIERS
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: pay_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: all_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_with_completed_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_with_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: shippingAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: opportunityId
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: configuration
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: method
    params:
      transferMethodId: required
- name: Product Questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: Retrieve a question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: Update a question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: Delete a question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: response
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ledgerLines
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: segment
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segment
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: segments
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: shopping_cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_item_to_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: shoppingCart
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: shoppingCart
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: string
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: null
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: null
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params: {}
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: userProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: theme
  endpoint:
    path: /sfb-toolkit
    method: GET
    data_selector: themes
    params: {}
- name: components
  endpoint:
    path: /storefront/components
    method: POST
- name: custom_components
  endpoint:
    path: /storefront/custom-components
    method: POST
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
    params: {}
- name: external_weather
  endpoint:
    path: /external/weather
    method: GET
    data_selector: external_weather
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
    params: {}
- name: header
  endpoint:
    path: /themes/themeName/header-footer/logged-out.html
    method: GET
    data_selector: header
- name: footer
  endpoint:
    path: /themes/themeName/header-footer/footer.html
    method: GET
    data_selector: footer
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: sliderTitle
    params:
      required: true
      validation.pattern: /^[a-zA-Z0-9 ]+$/gm
      validation.message: This field is invalid
- name: description
  endpoint:
    data_selector: description
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
- name: isDisplayCarets
  endpoint:
    data_selector: label
    params:
      defaultValue: true
      type: TOGGLE_CHECK
      marginSize: 10
      indentSize: 0
- name: backgroundColor
  endpoint:
    data_selector: title
    params:
      defaultValue: '#474747'
      type: COLORPICKER
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: records
    params:
      title: uieditor.sfbComponent.sliderComponent.borderRadius.title
      type: SLIDER
      defaultValue: 8
      options:
        min: 0
        max: 35
        step: 1
- name: sliderSettings
  endpoint:
    path: /sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: spacer
  endpoint:
    path: /spacer
    method: GET
    data_selector: type
    params: {}
- name: slides
  endpoint:
    path: /slides
    method: GET
    data_selector: required
    params: {}
- name: products_list
  endpoint:
    path: /products_list
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - overview
    - features
    - reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue:
      items:
      - label: Facebook
        icon: facebook
      - label: Twitter
        icon: twitter
      contextMenuOptions:
      - SHOW_HIDE
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: configuration
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: metadata
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: commonData
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: navigationData
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: internationalizationData
- name: bundle
  endpoint:
    path: /bundle
    method: GET
    data_selector: bundleData
- name: comparableProducts
  endpoint:
    path: /comparableProducts
    method: GET
    data_selector: comparableProducts
- name: faq
  endpoint:
    path: /faq
    method: GET
    data_selector: faqData
- name: listing
  endpoint:
    path: /listing
    method: GET
    data_selector: listingProducts
- name: productProfile
  endpoint:
    path: /apps/*productId*
    method: GET
    data_selector: application
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: data
    params: {}
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: id
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: create_or_update_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesOrder
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: ''
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: ''
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: ''
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: ''
    params: {}
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_membership_read
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: ''
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: read_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: id
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: '{}'
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
- name: delete_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
- name: edit_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: responses
    params: {}
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: responses
    params: {}
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: responses
    params: {}
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: responses
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discount
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFields
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: deliveryAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: opportunityId
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: response
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: response
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: response
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: response
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: response
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
- name: removePaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
- name: paymentPlans
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
- name: paymentsForCompany
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
- name: paymentsForUser
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: listAllPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      excludeFree: 'false'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
    data_selector: productContext
- name: product_image
  endpoint:
    path: /products/v1/resources/image/delete
    method: POST
    data_selector: imageDeletion
- name: product_pdf
  endpoint:
    path: /products/v1/resources/file/uploadAndLink
    method: POST
    data_selector: pdfUpload
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/company/{companyId}/purchaseOrders
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    params:
      count: 250
      start: 0
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: null
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params:
      number: '0'
      size: '50'
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: deleteShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: updateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalizeShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: createAndFinalizeShoppingCart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_pre_authorization
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params:
      level: PRE_FINALIZE
- name: createShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSAMLMetadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: subscription_addons
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
- name: create_addon_instance
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: POST
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: userProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: userProfile
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporaryPassword
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: custom_components
  endpoint:
    path: /storefront/reference/custom-components
    method: GET
    data_selector: components
    params: {}
- name: ui_library_components
  endpoint:
    path: /storefront/reference/ui-library-components
    method: GET
    data_selector: components
    params: {}
- name: marketplace_data
  endpoint:
    path: /storefront/reference/marketplace-data
    method: GET
    data_selector: data
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: description
  endpoint:
    data_selector: description
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: showRatings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: borderRadius
  endpoint:
    path: /uieditor/sfbComponent/sliderComponent/borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: fetch_usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status.md
    method: GET
- name: historic_usage_and_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments.md
    method: GET
- name: metered_usage_api_http_status_codes
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/metered-usage-api-status-codes.md
    method: GET
- name: preconfigured_and_custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/pre-configured-and-custom.md
    method: GET
- name: send_custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-custom-metered-usage.md
    method: GET
- name: send_preconfigured_and_custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-preconfig-custom-metered-usage.md
    method: GET
- name: send_preconfigured_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-preconfigured-usage.md
    method: GET
- name: supported_metered_usage_units
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/supported-metered-usage-units.md
    method: GET
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: data
    params: {}
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: ''
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: userUuid
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_templates
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_templates
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: channel_discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /path/to/master_records
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: accept_invitation
  endpoint:
    path: /account/v2/companies/invitations/{invitationToken}
    method: POST
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_NUMBER_VALUE
      toDate: SOME_NUMBER_VALUE
      sortField: DATE
      sortOrder: DESC
      page: 0
      size: 50
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: read_my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: response
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: response
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: response
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: Finalize Opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: Request Opportunity Review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: Get Opportunity Summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: Get Opportunity Pricing Plan Costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountResult
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: deliveryAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: opportunityId
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: tokenize_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethodTokens
    method: POST
    data_selector: paymentMethodToken
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
    params: {}
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
- name: orders
  endpoint:
    path: billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params:
      context: RESELLER_MANAGER
      page: 1
      size: 50
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: content
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: segments
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: id
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: OK
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: OK
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: OK
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params:
      itemId: []
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
    params: {}
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
    params: {}
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: Read SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      fromDate: optional
      toDate: optional
      discountId: optional
      status: optional
      editionId: optional
      paymentPlanId: optional
      lastModified: optional
      applicationIds: optional
      bundleApplicationId: optional
      expand: optional
      orderReferenceCode: optional
      count: 'default: 250'
      sortField: 'default: DATE'
      sortOrder: 'default: ASC'
      start: 'default: 0'
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      userId: required
      subscriptionId: required
      sendNotification: 'default: true'
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_addons
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons/{addonInstanceUuid}
    method: PUT
    data_selector: addons
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: userConnections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
- name: readUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: response
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands
    method: GET
    data_selector: components
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: theme_translations
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
    data_selector: pages
    params: {}
- name: theme_package
  endpoint:
    path: /theme-zips
    method: POST
    data_selector: zip
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: SubscriptionCancellationIdInvalidError
  endpoint:
    path: /services/data/v1.0/SubscriptionCancellationIdInvalidError
    method: GET
- name: SubscriptionCancellationRequestDateRequiredError
  endpoint:
    path: /services/data/v1.0/SubscriptionCancellationRequestDateRequiredError
    method: GET
- name: SubscriptionCancellationReasonIdValidationError
  endpoint:
    path: /services/data/v1.0/SubscriptionCancellationReasonIdValidationError
    method: GET
- name: SubscriptionCancellationReasonDoesNotExist
  endpoint:
    path: /services/data/v1.0/SubscriptionCancellationReasonDoesNotExist
    method: GET
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: POST
    data_selector: null
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: {}
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      <companyId>: <companyId>
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      <companyId>: <companyId>
      <userId>: <userId>
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params:
      <subscriptionId>: <subscriptionId>
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params:
      <companyId>: <companyId>
      <userId>: <userId>
      <subscriptionId>: <subscriptionId>
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params:
      <subscriptionId>: <subscriptionId>
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: discount
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/users
    method: GET
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
    params: {}
- name: remove_items_from_cart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params:
      cartId: cartId
      itemIds: itemIds
- name: update_cart_items
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems.cart
    params:
      cartId: cartId
      items: items
- name: update_cart_custom_attributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
    params:
      input: input
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: applicant
  endpoint:
    path: /applicant
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notificationTemplatesByType
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: updateNotificationTemplate
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: id
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: id
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
- name: messageChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
    params: {}
- name: chat_completions
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: choices
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: createdCompany
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: updatedCompany
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: patchedCompany
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: updatedPicture
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company_association
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: Array
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: records
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: records
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: records
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: records
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: createOrUpdateDefaultCommonEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: getDefaultCommonEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/common/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: createOrUpdateDefaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: getDefaultNotificationEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: MBPS
  endpoint:
    path: /services/data/vXX.X/sobjects/MBPS
    method: GET
    data_selector: records
- name: MONITORED_USER
  endpoint:
    path: /services/data/vXX.X/sobjects/MONITORED_USER
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: company_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: event
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_update
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: group_memberships_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invite_users_csv
  endpoint:
    path: /companies/{companyUuid}/invitations/csv
    method: POST
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: success
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: success
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: success
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params: {}
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params: {}
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params: {}
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountResult
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: paymentMethod
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: product_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: answers
- name: product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
    data_selector: userProductContext
- name: product_image
  endpoint:
    path: /products/v1/resources/image/delete
    method: POST
    data_selector: imageDeletionResponse
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
    params:
      applicationId: required
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
    params:
      applicationId: required
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
    params:
      applicationId: required
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: products
    params:
      vendorUuid: required
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: quote_versions
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: name
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preauth
    params: {}
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: string
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_subscription_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: Read SAML metadata for subscription
  endpoint:
    path: /get/account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    params:
      subscriptionUuid: required
- name: List all subscriptions for a company
  endpoint:
    path: /get/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: required
- name: Change subscription details
  endpoint:
    path: /put/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: List all subscriptions for a user
  endpoint:
    path: /get/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: required
      userId: required
- name: Create a subscription
  endpoint:
    path: /post/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    params:
      companyId: required
      userId: required
- name: Preview changed subscription details
  endpoint:
    path: /put/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: Preview create a subscription
  endpoint:
    path: /post/billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: addon_instances
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
    data_selector: addons
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: create_addon_instance
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: POST
    data_selector: addonInstance
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: sync_tasks
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignments
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: userProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/how-tos/components
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: custom_apps
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_apps
- name: custom_lists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_lists
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: theme_overrides
  endpoint:
    path: /themes/themeName/i18n/overrides
    method: POST
    data_selector: overrides
    params: {}
- name: checkout
  endpoint:
    path: /cta
    method: GET
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: title
    params:
      required: true
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /height
    method: GET
- name: showRatings
  endpoint:
    path: /uieditor/sfbComponent/productBanner/showRatings
    method: GET
    data_selector: defaultValue
    params: {}
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: records
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: records
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: properties
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: /properties/sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: /properties/SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: /properties/SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: /properties/PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: /products/list
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - overview
    - features
    - reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue:
      items:
      - label: Facebook
        icon: facebook
      - label: Twitter
        icon: twitter
      form:
        accountLink:
          type: INPUT
          required: false
        uploadIcon:
          type: IMAGE_UPLOADER
          required: false
      contextMenuOptions:
      - SHOW_HIDE
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: metered_usage
  endpoint:
    path: /v2/metered_usage
    method: POST
    data_selector: usageEvents
    params: {}
- name: user_sync
  endpoint:
    path: /v2/user_sync
    method: POST
    data_selector: userSyncEvents
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
- name: exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      file: required
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_email_templates
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: template
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/SALES_ORDER
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: links
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: links
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: links
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: links
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: links
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: deliveryAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: null
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
- name: resellerPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: listPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: purchase_order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_v1
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: report_download_v2
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: shoppingCart
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: shoppingCart
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
- name: removeDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: result
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: result
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: result
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: result
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: notificationResult
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params:
      sendNotification: true
- name: update_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: activationTokenrequired
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: users
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: profile
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params:
      removeUnspecifiedCustomAttributes: false
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
- name: faqs
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: ui.faqs
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: ui.navigator
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: static_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    method: GET
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: image_upload
    method: POST
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: tabs_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawer_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
    data_selector: items
- name: comparableProducts
  endpoint:
    path: /comparison
    method: GET
    data_selector: items
- name: productProfile
  endpoint:
    path: /apps/productId
    method: GET
    data_selector: application
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: InvoiceLine
  endpoint:
    path: /invoiceLines
    method: GET
    data_selector: records
- name: payment_methods
  endpoint:
    path: /services/data/vXX.X/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: tokens
  endpoint:
    path: /services/data/vXX.X/tokens
    method: POST
    data_selector: records
    params: {}
- name: metered_usage_events
  endpoint:
    path: /services/data/vXX.X/sobjects/MeteredUsageEvent
    method: POST
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: null
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: null
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: null
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: null
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: null
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: null
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_ai
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequests
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: list_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: read_company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: list_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params:
      companyUuid: required
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: readCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: default_email_templates
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: records
  endpoint:
    path: /api/records
    method: GET
    data_selector: data
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invitations_registration
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: all_invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    data_selector: invoices
- name: retrieve_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
- name: patch_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    data_selector: leads
- name: create_lead
  endpoint:
    path: /api/prm/v1/leads
    method: POST
    data_selector: lead
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: content
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params: {}
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: updatedOpportunity
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: createPaymentInstrumentResponse
- name: update_payment_instrument
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: updatePaymentInstrumentResponse
- name: retrieve_default_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /api/appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
- name: create_payment_method
  endpoint:
    path: /api/appMarket/v2/paymentMethods
    method: POST
    data_selector: createPaymentMethodResponse
- name: delete_payment_method
  endpoint:
    path: /api/appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: configuration
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: configuration
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
    data_selector: configuration
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: transferMethod
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: transferMethods
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: transferMethod
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: list_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: answers
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
    data_selector: answer
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: answer
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: answer
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: list_all_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_all_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: edition_details
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params:
      targetUserId: SOME_STRING_VALUE
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params:
      q: SOME_STRING_VALUE
      number: SOME_NUMBER_VALUE
      size: SOME_NUMBER_VALUE
      sort: SOME_STRING_VALUE
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params:
      name: Fortune 500 Companies
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: null
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: null
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: null
    params: {}
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channelSettings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shoppingCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: remove_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: application/json
- name: preview_non_persisted_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: application/json
- name: preview_shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: application/json
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: null
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: GraphQL API
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: REST API
  endpoint:
    path: /rest
    method: GET
    data_selector: data
    params: {}
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
- name: toolkit-commands
  endpoint:
    path: /storefront/reference/toolkit-commands.md
    method: GET
- name: custom-components-risks
  endpoint:
    path: /storefront/reference/custom-components/custom-components-risks.md
    method: GET
- name: components-add
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
- name: components-copy
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-customize-ui-library.md
    method: GET
- name: components-delete
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall.md
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: products
    params: {}
- name: faq
  endpoint:
    path: /faq
    method: GET
    data_selector: faqs
    params: {}
- name: navigator
  endpoint:
    path: /navigator
    method: GET
    data_selector: categories
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: header
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: footer
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    path: /path/to/description
    method: GET
    data_selector: description
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: pageTabs
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: drawerList
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: comparableProducts
  endpoint:
    path: /comparableProducts
    method: GET
- name: productProfile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /api/account/v1/companies
    method: POST
    data_selector: uuid
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products
    method: POST
    data_selector: data.product.id
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/<companyId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /subscriptions/<subscriptionId>
    method: GET
    params:
      <subscriptionId>: The unique identifier assigned to the subscription by the
        channel
- name: change_subscription
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
      <subscriptionId>: the ID assigned by the channel to identify each subscription
- name: usage_event
  endpoint:
    path: /services/data/vXX.X/sobjects/UsageEvent
    method: POST
    data_selector: records
    params: {}
- name: usage_status
  endpoint:
    path: /services/data/vXX.X/sobjects/UsageStatus
    method: GET
    data_selector: records
    params: {}
- name: create_ai
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: get_ai_details
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approve_ai
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: get_all_chats_for_ai
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: create_chat_session
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: list_data_sources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: create_api_data_source
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: delete_chat_session
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_AIs
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_AI
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: string
      customerCompanyId: string
- name: companyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: MASTER_RECORDS
  endpoint:
    path: /api/v1/master_records
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: records
- name: SALES_ORDER
  endpoint:
    path: /api/v1/sales_orders
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /api/master_records
    method: GET
- name: ORDER
  endpoint:
    path: /api/order
    method: GET
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: pay_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: invoices_list
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads_list
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: ''
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: myapps_read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: myapps_read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: success
    params:
      opportunityId: required
- name: opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: success
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: applyDiscount
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: answers
    params: {}
- name: comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read
    params: {}
- name: retrieve_a_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read
    params: {}
- name: update_a_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated
    params: {}
- name: delete_a_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_a_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      start: 0
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      start: 0
- name: payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: purchase_order
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: content
- name: invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: report_list
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_retrieve
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: report_delete
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: report_list_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: report_download
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: segment
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: get_shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: delete_shopping_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: update_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: assignments
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: assignment
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: assignment
- name: Read SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: '200'
    params:
      subscriptionUuid: required
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: '200'
    params:
      companyId: required
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: '200'
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: List all subscriptions for a user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: '200'
    params:
      companyId: required
      userId: required
- name: Create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: '201'
    params:
      companyId: required
      userId: required
- name: Preview changed subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: '200'
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: Preview create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: '200'
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: ''
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: ''
    params:
      count: 250
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: data
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: null
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: AI APIs
  endpoint:
    path: /ai-rest
    method: GET
    data_selector: data
    params: {}
- name: GraphQL API
  endpoint:
    path: /graphql-docs/docs
    method: GET
    data_selector: data
    params: {}
- name: REST API
  endpoint:
    path: /rest
    method: GET
    data_selector: data
    params: {}
- name: theme
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /components
    method: POST
    data_selector: components
    params: {}
- name: Carousel
  endpoint:
    path: /components/Carousel
    method: GET
    data_selector: components
    params: {}
- name: Slider
  endpoint:
    path: /components/Slider
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: FOOTER_MENU
  endpoint:
    path: /settings.json
    method: GET
    data_selector: menus
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: custom_resources
  endpoint:
    path: /themeName/assets/images
    method: GET
    data_selector: custom_images
    params: {}
- name: configurator
  endpoint:
    path: /application/configurator
    method: GET
    data_selector: selected_editions_and_addons
    params: {}
- name: cta
  endpoint:
    path: /application/callToAction
    method: GET
    data_selector: urlCreator
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: dropdown
  endpoint:
    path: /properties
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params:
      defaultValue: true
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: label
    params:
      defaultValue: true
      type: TOGGLE_CHECK
      marginSize: 10
      indentSize: 0
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: title
    params:
      defaultValue: '#474747'
      type: COLORPICKER
- name: borderRadius
  endpoint:
    path: /form/schema/borderRadius
    method: GET
    data_selector: title
    params:
      defaultValue: 8
      min: 0
      max: 35
      step: 1
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: config
  endpoint:
    path: /v1/config
    method: GET
    data_selector: config
    params: {}
- name: meta
  endpoint:
    path: /v1/meta
    method: GET
    data_selector: meta
    params: {}
- name: common
  endpoint:
    path: /v1/common
    method: GET
    data_selector: common
    params: {}
- name: nav
  endpoint:
    path: /v1/nav
    method: GET
    data_selector: nav
    params: {}
- name: i18n
  endpoint:
    path: /v1/i18n
    method: GET
    data_selector: i18n
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /commission/events
    method: POST
    data_selector: data
    params: {}
- name: CommissionCycle
  endpoint:
    path: /commission/cycles
    method: GET
    data_selector: data
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: company_partial_update
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: company_retrieve
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discount
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: discount
- name: Update company
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
    data_selector: null
    params: {}
- name: List company subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: Read subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: null
    params: {}
- name: Cancel subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: null
    params: {}
- name: Read product list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: null
    params: {}
- name: Read product profile
  endpoint:
    path: /api/marketplace/v1/products/<productId>
    method: GET
    data_selector: null
    params: {}
- name: List discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscriptionData
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: id
- name: update_discounts
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
- name: metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: account
- name: delete_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: recurring_subscription
  endpoint:
    path: /creating/recurring_subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /companies/{company_id}/users/{user_id}/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: partial_update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: get_company_by_external_id
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: company
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
- name: payment_method
  endpoint:
    path: /payment_methods
    method: GET
    data_selector: records
- name: token
  endpoint:
    path: /tokens
    method: POST
    data_selector: token
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: events
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: response
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: response
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: response
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: response
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: response
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: response
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: response
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: response
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: response
    params: {}
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: response
    params: {}
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: response
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: response
    params: {}
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: response
    params: {}
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: response
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: createdCompany
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: updatedCompany
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: patchedCompany
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: updatedPicture
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: companyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_memberships_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: read_user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: read_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: read_company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: list_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      file: required
      entityType: required
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: create_or_update_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /api/vendorSharePercentage
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: null
    params: {}
- name: lead_details
  endpoint:
    path: /prm/v1/leads/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: update_lead
  endpoint:
    path: /prm/v1/leads/{uuid}
    method: PATCH
    data_selector: null
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: 'null'
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: opportunity
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: '202'
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: '200'
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountSummary
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      count: '250'
      start: '0'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/company/{companyId}/purchaseOrders
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      start: 0
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: '50'
      page: '0'
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_detail
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: report_delete
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: report_download
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: company_groups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      companyGroupId: required
      number: '0'
      size: '50'
      sort: +name
      searchText: ''
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: '204'
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: dynamicSegments
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: cartAssociations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: preAuth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: cartItems
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: createCartItem
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieveCartItem
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: updateCartItem
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_subscription_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: status
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: userActivationInfo
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: userDetails
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: create_webhook
  endpoint:
    path: /channel/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
    params: {}
- name: global
  endpoint:
    path: /global
    method: GET
    data_selector: components
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: callToAction
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
- name: sliderTitle
  endpoint:
    path: /form/sliderTitle
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: height
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params:
      defaultValue: true
      type: TOGGLE
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: title
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: type
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: type
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /product/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /product/profile
    method: GET
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: SubscriptionCancellationIdInvalidError
  endpoint:
    path: /services/data/v1/SubscriptionCancellationIdInvalidError
    method: GET
- name: SubscriptionCancellationServerError
  endpoint:
    path: /services/data/v1/SubscriptionCancellationServerError
    method: GET
- name: SubscriptionCancellationReasonIdValidationError
  endpoint:
    path: /services/data/v1/SubscriptionCancellationReasonIdValidationError
    method: GET
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/78/editions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/discount
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems.cart
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params:
      input:
        cartId: 6512b7ff875fe104e5fde6da
        level: PRE_FINALIZE
        itemIds:
        - cf39a936-efe1-434b-a7d4-79b61b6b97ca
        locale: en-US
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params:
      input:
        cartId: 6512b7ff875fe104e5fde6da
        level: PRE_FINALIZE
        itemIds:
        - cf39a936-efe1-434b-a7d4-79b61b6b97ca
        locale: en-US
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /crm/v3/objects/companies
    method: POST
    data_selector: id
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.userErrors
    params: {}
- name: companySync
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: response
    params: {}
- name: meteredUsage
  endpoint:
    path: /api/metered-usage/v1
    method: POST
    data_selector: usageReport
    params: {}
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: metered_usage
  endpoint:
    path: /v2/metered-usage
    method: POST
    data_selector: usageRecords
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: ''
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: ''
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: ''
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: ''
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: ''
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: ''
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: companyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      file: required
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: channel_discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      code: SOME_STRING_VALUE
      count: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_INTEGER_VALUE
- name: records
  endpoint:
    path: /path/to/records
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: ''
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesOrder
    method: GET
- name: STUDENT
  endpoint:
    path: /services/data/vXX.X/sobjects/Student
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /services/data/vXX.X/sobjects/Suppliers
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_membership_update
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: group_membership_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: revoke_invitation
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: id
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: records
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: null
    params: {}
- name: read_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: null
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: null
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
      products:
      - productId: required
        editionId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: product
  endpoint:
    path: /products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: resource
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
- name: list_all_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: response
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: response
    params: {}
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/purchaseOrders
    method: GET
    data_selector: response
    params:
      companyId: required
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    params:
      count: '250'
      start: '0'
      sortOrder: ASC
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params:
      targetUserId: SOME_STRING_VALUE
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params:
      q: SOME_STRING_VALUE
      number: SOME_NUMBER_VALUE
      size: SOME_NUMBER_VALUE
      sort: SOME_STRING_VALUE
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params:
      name: Fortune 500 Companies
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: null
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: null
    params: {}
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: null
    params: {}
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channel_settings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shopping_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: null
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: null
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: null
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: null
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: response
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: response
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: response
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: response
    params: {}
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: addon_instances
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
    data_selector: addons
    params: {}
- name: subscription_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: 250
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
    data_selector: previewCancel
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: connection
    params: {}
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params:
      userUuid: string
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params:
      userUuid: string
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
- name: menus
  endpoint:
    path: /menus.json
    method: GET
    data_selector: menus
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
- name: faq
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: faqs
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: navigator
- name: theme_translations
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: translations
    params: {}
- name: Buy button
  endpoint:
    path: /cta
    method: GET
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params:
      required: 'true'
      defaultValue: xsmall
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params:
      title: Background Image
      caption: Supports JPG and PNG formats up to 2MB.
      placeholder: Choose File
      defaultValue: {}
      type: IMAGE_UPLOADER
      required: false
- name: pageTabs
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params:
      type: TABS_LIST
      defaultValue:
      - label: ''
        defaultLabel: uieditor.tabs.overview
        href: /en-US/apps/163915/talech/overview
        value: overview
        selected: true
        isEditMode: false
        isVisible: true
      - label: ''
        defaultLabel: uieditor.tabs.features
        href: /en-US/apps/163915/talech/features
        value: features
        selected: false
        isEditMode: false
        isVisible: true
      - label: ''
        defaultLabel: uieditor.tabs.review
        href: /en-US/apps/163915/talech/reviews
        value: reviews
        selected: false
        isEditMode: false
        isVisible: true
- name: drawerList
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params:
      type: DRAWER_LIST
      defaultValue:
        items:
        - label: Facebook
          icon: facebook
          values:
            accountLink:
              value: https://www.facebook.com
        - label: Twitter
          icon: twitter
          values:
            accountLink:
              value: https://www.twitter.com
        form:
          accountLink:
            title: account link
            placeholder: placeholder
            defaultValue: ''
            type: INPUT
            required: false
            validation:
              pattern: /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/g
              message: Invalid field
          uploadIcon:
            title: upload icon
            caption: caption
            placeholder: placeholder
            buttonText: buttonText
            defaultValue: ''
            type: IMAGE_UPLOADER
            required: false
        contextMenuOptions:
        - SHOW_HIDE
- name: footerLogo
  endpoint:
    path: /logo
    method: GET
    data_selector: logo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /settings/displayCarets
    method: GET
    data_selector: displayCarets
    params: {}
- name: billing_and_subscription
  endpoint:
    path: /billing-and-subscription
    method: GET
    data_selector: records
- name: product_information
  endpoint:
    path: /product-information
    method: GET
    data_selector: records
- name: user_companies
  endpoint:
    path: /user-companies
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SubscriptionDefinition
  endpoint:
    path: /services/data/vXX.X/sobjects/SubscriptionDefinition
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestEligibility
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestEligibility
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestIneligibilityReason
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestIneligibilityReason
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: ''
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: ''
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: ''
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: ''
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: ''
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: '[*]'
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: id
- name: payment_methods
  endpoint:
    path: /api/account/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
- name: fetch_fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
- name: shopping_cart
  endpoint:
    path: /checkout/shopping_cart
    method: GET
    data_selector: records
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.finalizeCart
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: setResellerCompanyPrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setResellerCompanyPrice
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/usageProcessingStatus
    method: GET
    data_selector: records
    params: {}
- name: historic_usage_adjustments
  endpoint:
    path: /services/data/vXX.X/historicUsageAdjustments
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: ''
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: ''
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: records
    params: {}
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: records
    params: {}
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: records
    params: {}
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: records
    params: {}
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
      active: SOME_STRING_VALUE
      enabled: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
      partner: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      active: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      createdOn: SOME_STRING_VALUE
      sort: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: company_associations
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
    data_selector: No Content
    params: {}
- name: read_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
    data_selector: Success
    params:
      includeCompanies: true
      includeUserCustomAttributes: true
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: Success
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: Success
    params: {}
- name: list_company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: Success
    params:
      active: true
      enabled: true
- name: company_memberships_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: payload
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: payload
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: payload
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: sms_template
  endpoint:
    path: /v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: PATIENT_CARE_DAY
  endpoint:
    path: /services/data/vXX.X/sobjects/PATIENT_CARE_DAY
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/REVENUE
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discounts
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: business_event
  endpoint:
    path: /services/data/vXX.X/sobjects/BusinessEvent
    method: GET
    data_selector: records
- name: revenue
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discounts
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: events
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_update
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: group_memberships_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations_list
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invitations_create
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations_delete
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: lead
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params: {}
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params: {}
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
      productId: required
      editionId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplication
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: paymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: retrievePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: createPaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: deletePaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: listDefaultPaymentMethods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: defaultPaymentMethods
    params: {}
- name: setDefaultPaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: 'null'
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: createPaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: removePaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: content
    params: {}
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: listAllPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: ''
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: ''
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_orders
  endpoint:
    path: /v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
- name: appReseller_orders
  endpoint:
    path: /appReseller/v1/orders
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: POST
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: list_reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: retrieve_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: null
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: list_sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: get_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: null
    params:
      targetUserId: SOME_STRING_VALUE
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params:
      q: SOME_STRING_VALUE
      number: SOME_NUMBER_VALUE
      size: SOME_NUMBER_VALUE
      sort: SOME_STRING_VALUE
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: delete_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: delete_segment
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}/segments/{companySegmentId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: get_company_group_segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: '200'
    params: {}
- name: create_segment
  endpoint:
    path: /api/channel/v1/segments
    method: POST
    data_selector: '200'
    params: {}
- name: update_segment
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}
    method: PUT
    data_selector: '204'
    params: {}
- name: create_or_remove_segment_company_associations
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/associationsBatchUpdate
    method: POST
    data_selector: '204'
    params: {}
- name: get_available_and_associated_companies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: '200'
    params: {}
- name: update_dynamic_segment
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments/{dynamicSegmentId}
    method: PUT
    data_selector: '204'
    params: {}
- name: read_dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: '200'
    params: {}
- name: test_dynamic_segment
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments/matchUser/{userEmail}
    method: POST
    data_selector: '200'
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preauth
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ''
    params: {}
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: ''
    params: {}
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: ''
    params: {}
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: shoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: userId
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_reseller_subscription_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: send_subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: Read SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: '200'
    params:
      subscriptionUuid: required
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: '200'
    params:
      companyId: required
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: '200'
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: List all subscriptions for a user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: '200'
    params:
      companyId: required
      userId: required
- name: Create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: '201'
    params:
      companyId: required
      userId: required
- name: Preview changed subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: '200'
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: Preview create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: '200'
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: data
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: data
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: ''
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: ''
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands.md#install-custom-components-to-a-theme
    method: GET
    data_selector: components
    params: {}
- name: Carousel
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
    data_selector: components
    params: {}
- name: Slider
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: products
    params: {}
- name: faq
  endpoint:
    path: /api/marketplace/v1/faq
    method: GET
    data_selector: faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: categories
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: sliderTitle
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params:
      required: true
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: uieditor.sfbComponent.productBanner.showRatings
- name: Display carets
  endpoint:
    data_selector: defaultValue
- name: Backround color
  endpoint:
    data_selector: defaultValue
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: sliderSettings
  endpoint:
    path: /settings
    method: GET
    data_selector: title
    params: {}
- name: spacer
  endpoint:
    path: /spacer
    method: GET
    data_selector: type
    params: {}
- name: slides
  endpoint:
    path: /slides
    method: GET
    data_selector: required
    params: {}
- name: productsList
  endpoint:
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: image/upload
    method: POST
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: tabs/list
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawer/list
    method: GET
    data_selector: defaultValue
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: billing_and_subscription
  endpoint:
    path: /billing-and-subscription
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscription_id}/assignments
    method: GET
    data_selector: subscriptions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /commission-events
    method: POST
    data_selector: data
    params: {}
- name: CommissionCycle
  endpoint:
    path: /commission-cycles
    method: GET
    data_selector: cycles
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: The unique identifier for the company
      userId: The unique identifier for the user
      subscriptionId: The unique identifier for the subscription
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '568'
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: response
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: response
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: response
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: POST
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: POST
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: trigger_set_marketplace_prices_process
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: assign_users
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/assign-users
    method: GET
    data_selector: records
- name: cancel_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/cancel-subscriptions
    method: GET
    data_selector: records
- name: change_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/change-subscriptions
    method: GET
    data_selector: records
- name: create_payment_instruments
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-payment-instruments
    method: GET
    data_selector: records
- name: create_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-subscriptions
    method: GET
    data_selector: records
- name: manage_discounts
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/manage-discounts
    method: GET
    data_selector: records
- name: metered_usage_v1
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/metered-usage-v1
    method: GET
    data_selector: records
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/usageProcessingStatus
    method: GET
    data_selector: records
    params: {}
- name: historic_usage_adjustments
  endpoint:
    path: /services/data/vXX.X/historicUsageAdjustments
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: ''
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: ''
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: ''
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: ''
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: ''
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: ''
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: ''
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: string
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: string
      userUuid: string
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: string
      userUuid: string
      inviterUuid: string
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: string
      userUuid: string
      applicationId: integer
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: string
      userUuid: string
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
      userUuid: string
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: string
      userUuid: string
      ldap: boolean
      page: integer
      searchText: string
      size: integer
      sortField: string
      sortOrder: string
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency-exchange/v2/rates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: create_or_update_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params:
      count: 250
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /services/data/vXX.X/sobjects/VendorSharePercentage
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: applicationId
    params:
      discountId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: PricingUnit
  endpoint:
    path: /api/pricingunit
    method: GET
    data_selector: units
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /vendor/share/percentage
    method: GET
    data_selector: data
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: invitations
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
- name: lead
  endpoint:
    path: /api/prm/v1/leads
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: leads
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params: {}
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications
    params: {}
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: order
    params: {}
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: paymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params:
      count: '250'
- name: paymentsForUser
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params:
      count: '250'
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      startDateFrom: SOME_NUMBER_VALUE
      startDateTo: SOME_NUMBER_VALUE
      status: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
      type: SOME_STRING_VALUE
      frequency: SOME_STRING_VALUE
      orderReferenceCode: SOME_STRING_VALUE
      applicationIds: SOME_NUMBER_VALUE
      fromCreationDate: SOME_NUMBER_VALUE
      toCreationDate: SOME_NUMBER_VALUE
      page: SOME_INTEGER_VALUE
      referenceCode: SOME_STRING_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: name
    params:
      name: Fortune 500 Companies
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params: {}
- name: shopping_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: remove_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: read_saml_metadata
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: change_subscription_details
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: preview_change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: preview_create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_account
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: themes
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
    data_selector: pages
    params: {}
- name: sliderTitle
  endpoint:
    path: /properties/sliderTitle
    method: GET
    data_selector: title
    params:
      required: 'true'
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: /form/schema
    method: GET
    data_selector: showRatings
    params: {}
- name: isDisplayCarets
  endpoint:
    path: Display carets
    method: GET
    data_selector: label
    params:
      defaultValue: true
      type: TOGGLE_CHECK
      marginSize: 10
      indentSize: 0
- name: backgroundColor
  endpoint:
    path: Backround color
    method: GET
    data_selector: title
    params:
      defaultValue: '#474747'
      type: COLORPICKER
- name: size
  endpoint:
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: properties
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /api/config
    method: GET
    data_selector: data
- name: billing_and_subscriptions
  endpoint:
    path: /billing/subscriptions
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users_accounts_memberships
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: SubscriptionDefinition
  endpoint:
    path: /services/data/vXX.X/sobjects/SubscriptionDefinition
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestEligibility
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestEligibility
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestIneligibilityReason
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestIneligibilityReason
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
    params: {}
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
    params: {}
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
    params: {}
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
    params: {}
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /CommissionEvent
    method: POST
    data_selector: data
    params: {}
- name: CommissionCycle
  endpoint:
    path: /CommissionCycle
    method: POST
    data_selector: data
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription_change
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: The unique identifier for the company provided by the channel.
      userId: The unique identifier for the user provided by the channel.
      subscriptionId: The unique identifier for the subscription provided by the channel.
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/<productId>
    method: GET
    params:
      productId: The ID of the product to retrieve the profile for.
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/78/editions/486/paymentPlans/592
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: create_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: assign_users
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/assign-users
    method: GET
- name: cancel_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/cancel-subscriptions
    method: GET
- name: change_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/change-subscriptions
    method: GET
- name: create_payment_instruments
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-payment-instruments
    method: GET
- name: create_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-subscriptions
    method: GET
- name: manage_discounts
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/manage-discounts
    method: GET
- name: metered_usage_v1
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/metered-usage-v1
    method: GET
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: AIChats
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: chats
    params: {}
- name: CreateAI
  endpoint:
    path: /createAI
    method: POST
    data_selector: ai
    params: {}
- name: GetAIDetails
  endpoint:
    path: /getAIDetails
    method: GET
    data_selector: aiDetails
    params: {}
- name: ApproveAI
  endpoint:
    path: /approveAI
    method: PUT
    data_selector: aiApproval
    params: {}
- name: chat_session
  endpoint:
    path: /channel/v1/webhooks/{chatId}
    method: GET
    data_selector: uuid
    params: {}
- name: message_chat_session
  endpoint:
    path: /channel/v1/webhooks/{chatId}/message
    method: POST
    data_selector: uuid
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: duplicate_chat
  endpoint:
    path: /chat/{chatId}/duplicate
    method: POST
- name: reset_chat
  endpoint:
    path: /chat/{chatId}/reset
    method: POST
- name: list_data_sources
  endpoint:
    path: /dataSources
    method: GET
- name: delete_data_source
  endpoint:
    path: /dataSources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /dataSources/{dataSourceId}/refresh
    method: POST
- name: create_group
  endpoint:
    path: /groups
    method: POST
- name: update_group
  endpoint:
    path: /groups/{groupId}
    method: PUT
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params:
      cartId: 65117cd8ce3df31e68af9446
      locale: en-US
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params:
      cartId: 64c8c666e7977d2ffef9d97d
      itemIds:
      - 5f339a9a-ce68-4bab-931c-e6ee45035241
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params:
      cartId: 668be7d341fe9e7a04bbbb53
      items:
      - id: 33e7ac1a-fcaf-484c-9d17-eccb77153152
        units:
          quantity: '3'
          unit: USER
        pricingPlanId: ae2665ca-84fa-4dd4-ac61-0c36fe8a1fe1
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: getUserGroups
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: links
    params: {}
- name: getChats
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: links
    params: {}
- name: createChatCompletion
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: links
    params: {}
- name: bundles
  endpoint:
    path: /api/channel/v1/bundles
    method: GET
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: company_activities
  endpoint:
    path: /api/channel/v1/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: leads
  endpoint:
    path: /leads
    method: POST
    data_selector: lead
    params: {}
- name: company
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: company_details
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_companies
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: create_company
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_details
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: company_association
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
    params:
      companyAssociationId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: delete_company_membership
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params:
      companyUuid: string
      userUuid: string
- name: company_memberships
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_checklist
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: company_memberships
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: content_events
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
- name: read_currency_exchange_rate
  endpoint:
    path: /currencyExchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: payment_method
  endpoint:
    path: /services/data/vXX.X/sobjects/PaymentMethod
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: records
    params: {}
- name: sms_template
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: uuid
    params: {}
- name: NotificationTemplate
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: CommonEmailTemplate
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: create_product_catalog
  endpoint:
    path: /webhooks/createCatalog
    method: POST
- name: update_product_catalog
  endpoint:
    path: /webhooks/updateCatalog
    method: POST
- name: default_common_email_template
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: default_email_template
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: uuid
    params:
      typerequired: stringEmail template type
- name: discounts
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: uuid
    params: {}
- name: bundles
  endpoint:
    path: /api/marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
    params: {}
- name: company_activities
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount_data
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: DiscountType
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: data
    params: {}
- name: PricingUnit
  endpoint:
    path: /api/v1/pricing_units
    method: GET
    data_selector: data
    params: {}
- name: vendorSharePercentage
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: discount
  endpoint:
    path: /resource/Other/updateDiscount
    method: PUT
    data_selector: Discount data object
    params:
      discountId: required
- name: company_associations
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: DiscountType
  endpoint:
    path: /Discounts
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnits
    method: GET
- name: company_domains
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: read_company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: rates
    params: {}
- name: user_group
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: response
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_user_group_members
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: List company invitations
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: Revoke user invitation
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: Delete user from group
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: invite_users
  endpoint:
    path: /api/channel/v1/webhooks
    method: DELETE
    data_selector: null
- name: user_invoices
  endpoint:
    path: /invoices/user
    method: GET
    data_selector: invoices
    params:
      companyId: required
      userId: required
- name: company_invoices
  endpoint:
    path: /invoices/company
    method: GET
    data_selector: invoices
    params:
      companyId: required
- name: invoice_payments
  endpoint:
    path: /invoices/payments
    method: GET
    data_selector: payments
    params:
      invoiceNumber: required
- name: pay_invoice
  endpoint:
    path: /invoices/pay
    method: POST
    data_selector: payment
    params:
      invoiceNumber: required
- name: invoices
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: application
    params:
      discountId: required
- name: leads
  endpoint:
    path: /leads
    method: GET
    data_selector: records
    params:
      size: 50
      sortField: DATE
      sortOrder: DESC
- name: lead
  endpoint:
    path: /leads/{uuid}
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: links
    params:
      uuid: string
- name: create_lead
  endpoint:
    path: /api/channel/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: get_lead_details
  endpoint:
    path: /api/channel/v1/leads/{leadId}
    method: GET
    data_selector: lead
    params:
      context: RESELLER
- name: update_lead
  endpoint:
    path: /api/channel/v1/leads/{leadId}
    method: PATCH
    data_selector: lead
    params: {}
- name: discard_lead
  endpoint:
    path: /api/channel/v1/leads/{leadId}
    method: DELETE
    data_selector: lead
    params: {}
- name: activities
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: activities
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/{webhookUuid}
    method: DELETE
- name: billing_usage
  endpoint:
    path: /api/channel/v1/billingUsage
    method: POST
- name: product_settings
  endpoint:
    path: /api/channel/v1/productSettings
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: readAppByPendingId
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: '204'
- name: readAppByUserEntitlement
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: '204'
- name: updateAppsOrder
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: '204'
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: delete_opportunity
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: update_opportunity
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params:
      context: RESELLER
      companyId: ''
      status: ''
      searchText: ''
      fromDate: ''
      toDate: ''
      sortField: DATE
      sortOrder: DESC
      page: 0
      size: 50
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: tokenize_payment_method
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
- name: create_payment_method
  endpoint:
    path: /api/channel/v1/paymentMethods
    method: POST
    data_selector: properties
    params: {}
- name: list_default_payment_methods
  endpoint:
    path: /api/channel/v1/paymentMethods/default
    method: GET
    data_selector: paymentMethods
    params:
      ownerId: ''
      companyId: ''
- name: set_default_payment_method
  endpoint:
    path: /api/channel/v1/paymentMethods/default
    method: PUT
    data_selector: paymentMethod
    params:
      ownerId: ''
      companyId: ''
      paymentMethodId: ''
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: response
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: payment_plan
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: list_payment_plans
  endpoint:
    path: /paymentPlans
    method: GET
    params:
      applicationId: required
      editionId: required
- name: read_payment_plan
  endpoint:
    path: /paymentPlans/{paymentPlanId}
    method: GET
    params:
      applicationId: required
      editionId: required
      paymentPlanId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: user_payments
  endpoint:
    path: /channel/v1/payments/user
    method: GET
    data_selector: records
    params:
      companyId: stringCompany UUID
      userId: stringUser UUID
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: company_payments
  endpoint:
    path: /channel/v1/payments/company
    method: GET
    data_selector: records
    params:
      companyId: stringCompany UUID
      count: 250
      sortField: PAYMENT_ID
      sortOrder: DESC
      start: 0
- name: payment_invoices
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: payments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_platform_configuration
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: transfer_platform_configuration
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: applyDiscount
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: create_product_review_comment
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: comment
    params:
      applicationId: numberApplication id
      reviewId: numberReview id
- name: deleteDiscount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discount
    params: {}
- name: updateRequiredFieldsOnItems
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFields
    params: {}
- name: getShippingAddress
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: createOrUpdateShippingAddress
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: shippingAddress
    params: {}
- name: cloneOpportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: opportunityId
    params: {}
- name: listUserPaymentInstruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: comments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params:
      applicationId: required
      commentId: required
      reviewId: required
- name: delete_image
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params:
      productRefId: required
      uploadType: required
      locale: required
      pathToDelete: required
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: null
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
- name: uploadAndLinkImage
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: '204'
    params: {}
- name: uploadAndLinkPdfFile
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: '204'
    params: {}
- name: deleteFile
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: '204'
    params: {}
- name: retrieveQuestion
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: '204'
    params: {}
- name: updateQuestion
  endpoint:
    path: /channel/v1/webhooks
    method: DELETE
    data_selector: '204'
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodType
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: id
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listPaymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: listPaymentsForUser
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: Product Review
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: List all reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: reviews
    params:
      applicationId: required
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: none
- name: retrieve_product_status
  endpoint:
    path: /api/channel/v1/products/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: retrieve_buyable_products
  endpoint:
    path: /api/channel/v1/products
    method: GET
    data_selector: products
    params:
      page: '0'
      size: '20'
      sortField: NAME
      sortOrder: ASC
      searchText: ''
      categoryId: []
- name: list_all_products_by_vendor
  endpoint:
    path: /api/channel/v1/products/vendor
    method: GET
    data_selector: products
    params:
      vendorUuid: required
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: staging_catalog
  endpoint:
    path: /webhooks
    method: GET
- name: product_recommendations
  endpoint:
    path: /webhooks
    method: GET
- name: products
  endpoint:
    path: /webhooks
    method: GET
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: companyPurchaseOrders
  endpoint:
    path: /companyPurchaseOrders
    method: GET
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: user_purchase_orders
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    params:
      companyId: required
      userId: required
      startDateFrom: number
      startDateTo: number
      status: string
      currency: string
      type: string
      frequency: string
      orderReferenceCode: string
      applicationIds: number
      fromCreationDate: number
      toCreationDate: number
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: order_payments
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    params:
      orderId: required
      count: string
      fromDate: number
      method: string
      result: string
      sortField: string
      sortOrder: string
      start: string
      toDate: number
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /purchaseOrders
    method: GET
- name: purchase_orders
  endpoint:
    path: /api/channel/v1/purchaseOrders
    method: GET
    data_selector: records
    params: {}
- name: purchase_order
  endpoint:
    path: /api/channel/v1/purchaseOrders/{orderId}
    method: GET
    data_selector: records
    params:
      orderIdrequired: number
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: '50'
      page: '0'
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: ledger_lines
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params:
      transferId: string
- name: transfers
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    params: {}
- name: list_all_reports
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: sellable_products
  endpoint:
    path: /api/channel/v1/sellableProducts
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: quote_actions
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: quote_by_id
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params:
      context: RESELLER_MANAGER
      page: 1
      size: 50
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transfer_ledger_lines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: delete_segment_folder
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: '204'
- name: delete_segments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: '204'
- name: read_segments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: '204'
- name: create_manual_segment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: POST
    data_selector: '204'
- name: update_manual_segment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: '204'
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: webhooks
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: shopping_cart
  endpoint:
    path: /api/channel/v1/shoppingCarts
    method: POST
    data_selector: ShoppingCartWS
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: shoppingCart
  endpoint:
    path: /shoppingCarts
    method: POST
- name: shoppingCartAssociations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: deleteShoppingCartItems
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: getShoppingCartItem
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: updateShoppingCartItem
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
- name: deleteShoppingCartItem
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: pricing_summary
  endpoint:
    path: /webhooks/{webhookUuid}/pricingSummary
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{webhookUuid}
    method: DELETE
- name: shopping_cart_fee
  endpoint:
    path: /shoppingCart/fees
    method: POST
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: subscription_assignment
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignment_count
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription_assignments
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: unassign_product
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: result
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: result
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: result
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: notificationResult
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscription
  endpoint:
    path: /api/channel/v1/subscriptions/{subscriptionUuid}
    method: GET
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /channel/v1/subscriptions/user
    method: GET
    params:
      companyId: required
      userId: required
      count: 250
      sortField: DATE
      sortOrder: ASC
      fromDate: string
      toDate: string
      discountId: number
      status: string
      editionId: number
      paymentPlanId: number
      lastModified: number
      applicationIds: number
      bundleApplicationId: number
      expand: string
      orderReferenceCode: string
- name: list_company_subscriptions
  endpoint:
    path: /channel/v1/subscriptions/company
    method: GET
    params:
      companyId: required
      fromDate: string
      toDate: string
      discountId: number
      status: string
      editionId: number
      paymentPlanId: number
      lastModified: number
      applicationIds: number
      bundleApplicationId: number
      expand: string
      orderReferenceCode: string
- name: create_subscription
  endpoint:
    path: /api/channel/v1/webhooks/
    method: POST
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: samlMetadata
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params:
      companyId: required
      userId: required
- name: subscription
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_addon_instance
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: list_invoices
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: preview_create_addon_instance
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: preview_change_addon_instance
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
    params: {}
- name: developer_account
  endpoint:
    path: /api/channel/v1/developerAccounts
    method: POST
    data_selector: developerAccounts
    params:
      type: DEVELOPER_ACCOUNT
      operation: CREATE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: list_all_users
  endpoint:
    path: /webhooks
    method: DELETE
    data_selector: records
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: result
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: result
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: result
- name: update_user_picture
  endpoint:
    path: /account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: result
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: result
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: userProfile
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporaryPassword
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: user_memberships
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: user_profile
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: uuid
- name: user_profile
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: links
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/components/page-orderable-container
    method: GET
    data_selector: components
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params:
      page: '0'
      sortField: DATE
      sortOrder: DESC
- name: webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params:
      webhookUuid: required
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: payment_methods
  endpoint:
    path: /services/data/vXX.X/sobjects/PaymentMethod
    method: GET
    data_selector: records
    params: {}
- name: usage_processing_status
  endpoint:
    path: /v2/usage/status
    method: GET
    data_selector: records
- name: historic_usage_and_adjustments
  endpoint:
    path: /v2/usage/historic
    method: GET
    data_selector: records
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: ''
    params: {}
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
    data_selector: membership
    params: {}
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
    params: {}
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
    params: {}
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: true
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: configuration_data
  endpoint:
    path: /configuration
    method: GET
    data_selector: config
- name: metadata
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
- name: common_data
  endpoint:
    path: /common
    method: GET
    data_selector: common
- name: navigation_data
  endpoint:
    path: /nav
    method: GET
    data_selector: nav
- name: internationalization_data
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
- name: bundle_page
  endpoint:
    path: /bundle
    method: GET
    data_selector: bundle
- name: product_comparison
  endpoint:
    path: /compare
    method: GET
    data_selector: comparableProducts
- name: help_page
  endpoint:
    path: /help
    method: GET
    data_selector: faq
- name: home_page
  endpoint:
    path: /home
    method: GET
    data_selector: home
- name: listing_page
  endpoint:
    path: /listing
    method: GET
    data_selector: listingProducts
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
    data_selector: application
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: result
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      count: 250
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: ''
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /CommissionEvent
    method: GET
- name: CommissionCycle
  endpoint:
    path: /CommissionCycle
    method: GET
- name: CommissionEventsSummary
  endpoint:
    path: /CommissionEventsSummary
    method: GET
- name: CommissionCycleExecutionsConnection
  endpoint:
    path: /CommissionCycleExecutionsConnection
    method: GET
- name: CommissionEventErrorSummary
  endpoint:
    path: /CommissionEventErrorSummary
    method: GET
- name: BatchMissingEvents
  endpoint:
    path: /BatchMissingEvents
    method: GET
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: user_assignment
  endpoint:
    path: /api/billing/v1/subscriptionAssignments
    method: POST
    data_selector: assignment
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: leads
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: activities
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: assignment
    params: {}
- name: convert
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: conversion
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: payment_instruments
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: data
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: data
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: data
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: string
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- endpoint:
    params:
      paymentPlanId: '599'
- endpoint:
    params:
      paymentPlanId: '592'
- name: opportunity_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: records
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: records
    params:
      opportunityId: required
- name: validate_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: records
    params:
      opportunityId: required
      enforce: optional
- name: required_field_definitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: records
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: apply_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: records
    params:
      opportunityId: required
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: records
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: answers
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: ''
    params: {}
- name: comments
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: ''
    params: {}
- name: questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: payment_orders
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      start: 0
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: response
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: response
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: response
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: response
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledger_lines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: shippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: data.checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: data.activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: data.finalizeCart
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
- name: validate_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: readSAMLmetadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: samlMetadata
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
    params: {}
- name: update_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: update
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: userConnections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user_activation_info
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: user_info
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships_info
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: user_profile_update_info
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: payment_methods
  endpoint:
    path: /v1/payment_methods
    method: GET
    data_selector: data
- name: tokens
  endpoint:
    path: /v1/tokens
    method: POST
    data_selector: data
- name: Create New AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: Approve an AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: Add an existing data source to the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: Duplicate a chat session
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: Reset a chat session
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: usage_metrics_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: usage_metrics_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: choices
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: REQUIRED
      customerCompanyId: REQUIRED
- name: companyMemberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invitation
    params:
      companyUuid: required
      userUuid: required
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: application_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRate
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
    data_selector: '[]'
- name: smsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
    data_selector: '{}'
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: emailTemplate
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
    data_selector: '{}'
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params:
      typerequired: string
- name: common_elements
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: create_or_update_default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: get_default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: get_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: inventory
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.inventory
    params: {}
- name: inventoryByEditionCode
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.inventoryByEditionCode
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /vendor/share/percentage
    method: GET
    data_selector: records
- name: notificationTemplatesByType
  endpoint:
    path: /graphql/notificationTemplatesByType
    method: POST
    data_selector: data.notificationTemplates
- name: updateNotificationTemplate
  endpoint:
    path: /graphql/updateNotificationTemplate
    method: POST
    data_selector: data.updateNotificationTemplate
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql/deleteNotificationTemplate
    method: POST
    data_selector: data.deleteNotificationTemplate
- name: createCompany
  endpoint:
    path: /api/account/v2/companies
    method: POST
    data_selector: company
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: createProduct
  endpoint:
    path: /api/products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /api/products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: company_synchronization
  endpoint:
    path: /user-guides/product-integration/rest-api/company-synchronization
    method: GET
    data_selector: records
    params: {}
- name: metered_usage_v1
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v1
    method: GET
    data_selector: records
    params: {}
- name: metered_usage_v2
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
    params: {}
- name: Create New AI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: Approve an AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: ''
    params: {}
- name: Add an existing data source to the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: ''
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: ''
    params: {}
- name: Adds a file upload data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/file
    method: POST
    data_selector: ''
    params: {}
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: ''
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: ''
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: ''
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: Duplicate a chat session
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: ''
    params: {}
- name: Reset a chat session
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: organization_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: ''
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: ''
    params: {}
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: ''
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: ''
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: content
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: content
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: pay_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: all_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: company_membership_roles
  endpoint:
    path: /patch/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /post/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /post/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: leads
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: createExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: readExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivateExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: sms_template
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publishCatalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: createOrUpdateDefaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: ''
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: PricingUnit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /vendorSharePercentage
    method: GET
    data_selector: vendorSharePercentage
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: string
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: success
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: success
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: success
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: success
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: DiscountType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: PricingUnit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: vendorSharePercentage
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: companies_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: companies_verifiedDomains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: products_editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: string
      ownerId: string
      ownerCompanyId: string
      currency: string
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: application/json
    params:
      ownerId: string
      ownerCompanyId: string
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: application/json
    params:
      userId: string
      companyId: string
      salesAgentUserId: string
      salesAgentCompanyId: string
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: application/json
    params:
      discountCode: string
      itemIds: Array of strings
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_read
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
- name: group_memberships_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invitations_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discount
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFields
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: shippingAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: shippingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: cloneOpportunity
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: 'false'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: '50'
      sortField: DATE
      sortOrder: DESC
      page: '0'
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params:
      companyId: required
      userId: required
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params:
      companyId: required
      userId: required
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params:
      companyId: required
      userId: required
      paymentInstrumentId: required
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params:
      companyUuid: required
      userUuid: required
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params:
      paymentInstrumentId: required
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: 'null'
    params:
      paymentInstrumentId: required
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      excludeFree: 'false'
      start: '0'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: get_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: ''
    params: {}
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: ''
    params: {}
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: purchase_orders
  endpoint:
    path: /api/marketplace/v1/purchaseOrders
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: addItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: listItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: removeItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: response
    params:
      opportunityId: required
      itemId: required
- name: editItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: string
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: string
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
- name: quote_versions
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report_file
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: retrieve_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
    data_selector: ''
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: records
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      paymentMethodType: SOME_STRING_VALUE
- name: deletePaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: ''
    params: {}
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: ''
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      method: SOME_STRING_VALUE
      result: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: payment
  endpoint:
    path: /api/billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /api/billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: ''
    params: {}
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: ''
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: delete_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: ''
    params: {}
- name: list_comments
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: GET
    data_selector: ''
    params: {}
- name: update_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: DELETE
    data_selector: ''
    params: {}
- name: retrieve_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_user_company_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}/companies/{companyId}/users/{userId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_image
  endpoint:
    path: /products/v1/resources/image/delete
    method: POST
    data_selector: ''
    params: {}
- name: upload_and_link_image
  endpoint:
    path: /products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: ''
    params: {}
- name: upload_and_link_pdf
  endpoint:
    path: /products/v1/resources/file/uploadAndLink
    method: POST
    data_selector: ''
    params: {}
- name: delete_file
  endpoint:
    path: /products/v1/resources/file/delete
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: ''
    params: {}
- name: update_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: ''
    params: {}
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    params:
      count: 250
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: '200'
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: '200'
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: '200'
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: '200'
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: '201'
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: '200'
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: '200'
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: reconciliation_transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      companyGroupId: SOME_STRING_VALUE
      number: 0
      size: 50
      sort: +name
      searchText: SOME_STRING_VALUE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: update_users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: read_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: Order webhook payload
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: id
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: id
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: id
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: id
    params: {}
- name: checkout
  endpoint:
    path: /user-guides/checkout
    method: GET
- name: custom_pricing
  endpoint:
    path: /user-guides/custom-pricing
    method: GET
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: deleteShoppingCartItem
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: deleteShoppingCartItems
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: OK
- name: previewShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: OK
- name: previewShoppingCartById
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: OK
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAllChatsForAI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: aiUsages
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params: {}
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_shopping_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
    params: {}
- name: remove_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: assignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
    data_selector: records
    params:
      userId: required
      subscriptionId: required
- name: listSubscriptionAssignmentsReseller
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
    data_selector: records
    params: {}
- name: unassignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
    data_selector: records
    params:
      subscriptionAssignmentId: required
- name: requestSubscriptionReactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: subscription_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
    data_selector: null
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
    data_selector: null
    params: {}
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: null
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
- name: preview_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invitation
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: exchangeRates
  endpoint:
    path: /exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: createCurrencyExchangeRate
  endpoint:
    path: /exchangeRates
    method: POST
    data_selector: ''
    params:
      baseCurrency: USD
      counterCurrency: CAD
      rate: '0.5'
- name: readCurrencyExchangeRate
  endpoint:
    path: /exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: ''
    params: {}
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: ''
    params:
      active: false
- name: getSmsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
    data_selector: ''
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: listNotificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
    data_selector: ''
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: createOrUpdateEmailTemplate
  endpoint:
    path: /notification/v1/templates/common/email
    method: POST
    data_selector: ''
    params:
      content: string
      defaultCommonElement: true
      enabled: true
      id: 0
      locale: string
      partner: string
      type: UNSUBSCRIBE
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: updateUserProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: theme
  endpoint:
    path: /sfb-toolkit
    method: GET
    data_selector: themes
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: data
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
    params: {}
- name: components
  endpoint:
    path: /storefront/reference/custom-components
    method: GET
    data_selector: components
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: external_weather
  endpoint:
    path: /external/weather
    method: GET
    data_selector: temperature
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: custom_lists
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: BillingAndDistribution
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: faqs
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: theme_customizations
  endpoint:
    path: /themes/themeName/customizations
    method: GET
    data_selector: customizations
    params: {}
- name: urlCreator
  endpoint:
    path: /application/callToAction
    method: GET
- name: sliderTitle
  endpoint:
    data_selector: title
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params:
      type: DROPDOWN
      required: false
- name: showRatings
  endpoint:
    path: /showRatings
    method: GET
    data_selector: showRatings
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: defaultValue
    params: {}
- name: backgroundColor
  endpoint:
    path: /properties/backgroundColor
    method: GET
    data_selector: defaultValue
    params: {}
- name: size
  endpoint:
    data_selector: options
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: ORDERS
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: /properties/sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: /properties/SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: /properties/SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: /properties/PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: CLIENT
  endpoint:
    path: /CLIENT
    method: GET
- name: footerLogo
  endpoint:
    path: /properties/footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /properties/isDisplayCaretsOnHover
    method: GET
    data_selector: isDisplayCaretsOnHover
    params: {}
- name: billing_and_subscription
  endpoint:
    path: /billing-and-subscription
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users_accounts_memberships
  endpoint:
    path: /users-accounts-memberships
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: null
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: null
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: activities
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      fromDate: SOME_NUMBER_VALUE
      toDate: SOME_NUMBER_VALUE
      creationDateOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: fetch_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
    params: {}
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
    params: {}
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
    params: {}
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
    params: {}
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: read_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: data
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptionAssignments
  endpoint:
    path: /api/billing/v1/subscriptionAssignments
    method: POST
    data_selector: assignment
    params: {}
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: required
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: required
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: none
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: none
    params: {}
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: none
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: string
      ownerId: string
      ownerCompanyId: string
      currency: string
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: changeOpportunityOwner
    params:
      opportunityId: string
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: string
      enforce: boolean
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: string
      companyId: string
      salesAgentUserId: string
      salesAgentCompanyId: string
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: applyDiscount
    params:
      opportunityId: string
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: paymentsByCompany
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: paymentsByUser
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: configuration
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: ''
    params: {}
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: response
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
- name: subscription
  endpoint:
    path: /subscription
    method: POST
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/products/78/editions/493/paymentPlans/599
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '599'
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params:
      context: RESELLER_MANAGER
      size: 50
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: 749
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: get_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: productDetails
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: discountList
    params:
      start: 0
      count: 250
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: fetchShippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: deleteShoppingCartItem
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: deleteShoppingCartItems
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: application/json
    params: {}
- name: previewShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: application/json
- name: previewShoppingCartById
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: application/json
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
- name: removeDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
- name: createCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
- name: setAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: removeAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: leads
  endpoint:
    path: /leads
    method: POST
    data_selector: lead
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: user_assign
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: user_unassign
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: list_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: activationTokenrequired
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: updateUserProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: profile
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: null
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: null
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: null
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: null
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration
    params: {}
- name: addProductIntegrationOpenIdConnectConfiguration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.openIdConnectConfiguration
    params: {}
- name: generateProductIntegrationInboundClient
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productIntegrationInboundClient
    params: {}
- name: triggerProductIntegrationPingTest
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productIntegration
    params: {}
- name: publishProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productIntegration
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.product
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
- name: tokens
  endpoint:
    path: /tokens
    method: POST
- name: usage_events
  endpoint:
    path: /services/data/vXX.X/usageEvents
    method: POST
    data_selector: events
    params:
      incremental: created_at
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
    params: {}
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get all chats for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create a chat session for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: Duplicate a chat session
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
    params: {}
- name: Reset a chat session
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_ai
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: ''
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
    params: {}
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: ''
    params: {}
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: ''
    params: {}
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
    data_selector: ''
    params: {}
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: ''
    params: {}
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
    data_selector: data
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
- name: create_user
  endpoint:
    path: /users
    method: POST
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
- name: companyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: array
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: object
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: object
    params:
      companyUuid: required
      userUuid: required
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: object
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: array
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: object
- name: currency_exchange_rates
  endpoint:
    path: /api/currencyExchangeRates
    method: GET
    data_selector: array
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: ''
    params: {}
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: ''
    params: {}
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: exchangeRates
  endpoint:
    path: /api/channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: templates
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: id
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: ''
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: ''
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: ''
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: results
    params:
      count: 250
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: string
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
- name: DiscountType
  endpoint:
    path: /discount/types
    method: GET
    data_selector: types
    params: {}
- name: PricingUnit
  endpoint:
    path: /pricing/units
    method: GET
    data_selector: units
    params: {}
- name: resource_name
  endpoint:
    path: /services/data/vXX.X/sobjects/Resource
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: '*'
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: '*'
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: '202'
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: '200'
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: '200'
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: '200'
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: deleteDiscount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: updateRequiredFields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: getShippingAddress
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: createOrUpdateShippingAddress
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: cloneOpportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: listPaymentInstruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: listPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
    params: {}
- name: list_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: delete_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: response
    params: {}
- name: update_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: updated_question
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: '[]'
- name: createPaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: '{}'
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: '{}'
- name: removePaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: '{}'
- name: listPaymentPlans
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: '{}'
- name: listAllPaymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: '{}'
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
    params: {}
- name: delete_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: DELETE
- name: create_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
- name: list_comments
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
- name: retrieve_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: GET
- name: update_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: PUT
- name: delete_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: DELETE
- name: retrieve_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
- name: retrieve_user_company_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}/companies/{companyId}/users/{userId}
    method: GET
- name: delete_image
  endpoint:
    path: /products/v1/resources/image/delete
    method: POST
- name: upload_and_link_image
  endpoint:
    path: /products/v1/resources/image/uploadAndLink
    method: POST
- name: upload_and_link_pdf
  endpoint:
    path: /products/v1/resources/file/uploadAndLink
    method: POST
- name: delete_file
  endpoint:
    path: /products/v1/resources/file/delete
    method: DELETE
- name: retrieve_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: update_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: delete_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: list_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: 50
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: segment_folder
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segment
  endpoint:
    path: /channel/v1/segments
    method: POST
- name: dynamic_segment
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channelSettings
  endpoint:
    path: /settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: company_group
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segment
  endpoint:
    path: /channel/v1/segments
    method: POST
- name: dynamic_segment
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: removeDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_subscription_assignments_reseller
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: createShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: createDeveloperAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: assignUser
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassignUser
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: getUserAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: createUserConnection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnectUserAccount
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: listAllUsers
  endpoint:
    path: /account/v2/users
    method: GET
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: records
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
- name: user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
- name: read_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: connection
    params: {}
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: connection
    params: {}
- name: list_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: users
    params: {}
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: 'null'
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: 'null'
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: 'null'
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: 'null'
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
- name: checkout
  endpoint:
    path: /cta
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
- name: borderRadius
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: profile
  endpoint:
    components:
      ProductDescription:orderable:d7254b33-ac88-4945-a248-edf6a87a2b16:
        isAddonsVisible:
          value: true
          type: TOGGLE
        isPricesVisible:orderable:83a7e00c-b3d5-4d64-8919-a9cb3fa2d5b3:
          value: true
          type: TOGGLE
        layout:
          value: horizontal-thumbnails
          type: DROPDOWN
      ProductReviews:orderable:7c059217-1dbc-4b75-a6ee-a7ca740facd6:
        isAvatarVisible:
          value: true
          type: TOGGLE
        position:
          value: right
          type: DROPDOWN
      ProductTopFeatures:orderable:59db9f73-9caa-48b2-9df9-da98413e7de8:
        numberOfColumns:
          value: two
          type: DROPDOWN
        withImages:
          value: false
          type: TOGGLE
      ProductBanner:
        bannerBackgroundColor:
          value: '#ffffff'
          type: COLORPICKER
        descTextSize:
          value: medium
          type: DROPDOWN
    orderableComponents:
    - name: ProductDescription
      id: ProductDescription:orderable:d7254b33-ac88-4945-a248-edf6a87a2b16
    - name: ProductReviews
      id: ProductReviews:orderable:7c059217-1dbc-4b75-a6ee-a7ca740facd6
    - name: ProductTopFeatures
      id: ProductTopFeatures:orderable:59db9f73-9caa-48b2-9df9-da98413e7de8
- name: global
  endpoint:
    components:
      Header:
        components:
          AnnoucementBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75685:
            announcementBarMessage:
              value: Announcement Bar
              type: TEXTAREA
            announcementBarHeight:
              value: 10
              type: SLIDER
          AuxiliaryBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75686:
            auxBarHeight:
              value: 30
              type: SLIDER
            displayLanguageSwitcher:
              value: true
              type: TOGGLE
          MainBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75687:
            logoHeight:
              value: 30
              type: SLIDER
            displayCart:
              value: true
              type: TOGGLE
          PrimaryNavBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75688:
            navBarPadding:
              value: 5
              type: SLIDER
            navBarBackgroundColor:
              value: '#EAEAEA'
              type: COLORPICKER
        orderableComponents:
        - name: AnnoucementBar
          id: AnnoucementBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75685
        - name: AuxiliaryBar
          id: AuxiliaryBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75686
        - name: MainBar
          id: MainBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75687
        - name: PrimaryNavBar
          id: PrimaryNavBar:orderable:a34bf07d-1553-4e7d-86aa-c9ed2df75688
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: POST
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: footerLogo
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: null
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: null
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: null
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: null
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: null
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: null
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: null
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: null
    params: {}
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: null
    params: {}
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: null
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: null
    params: {}
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: null
    params: {}
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: records
    params: {}
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: records
    params: {}
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: records
    params: {}
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: records
    params: {}
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      contextrequired: RESELLER, RESELLER_MANAGER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      contextrequired: RESELLER, RESELLER_MANAGER
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
    params: {}
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
    params: {}
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
    params: {}
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
    params: {}
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: id
    params: {}
- name: product_catalog_update
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: product_catalog_create
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: subscription_details
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: sales_order
  endpoint:
    path: /api/sales_order
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /api/customer
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: applicationId
    params:
      discountId: required
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: product
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '592'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    params: {}
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    params: {}
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: ''
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: lead_assignment
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: records
- name: lead_conversion
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: records
- name: lead_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: retrieve_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
    data_selector: productInformation
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discounts
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discounts
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: requestStatus
    params: {}
- name: myapps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: createdOpportunity
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunityDetails
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: updatedOpportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: deletedOpportunity
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: shippingQuoteId
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: validationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
- name: requiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params: {}
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: cart_fields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params:
      cartId: 65117cd8ce3df31e68af9446
      locale: en-US
- name: remove_items_from_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params:
      cartId: 64c8c666e7977d2ffef9d97d
      itemIds:
      - 5f339a9a-ce68-4bab-931c-e6ee45035241
- name: update_cart_items
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params:
      cartId: 668be7d341fe9e7a04bbbb53
      items:
      - id: 33e7ac1a-fcaf-484c-9d17-eccb77153152
        units:
          quantity: '3'
          unit: USER
        pricingPlanId: ae2665ca-84fa-4dd4-ac61-0c36fe8a1fe1
- name: update_cart_custom_attributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params:
      input:
        cartId: 6512b7ff875fe104e5fde6da
        level: PRE_FINALIZE
        itemIds:
        - cf39a936-efe1-434b-a7d4-79b61b6b97ca
        locale: en-US
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params:
      input:
        cartId: 6512b7ff875fe104e5fde6da
        level: PRE_FINALIZE
        itemIds:
        - cf39a936-efe1-434b-a7d4-79b61b6b97ca
        locale: en-US
- name: paymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: deletedPaymentInstrument
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: createPaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: deletePaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: deletedPaymentMethod
    params: {}
- name: getDefaultPaymentMethods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: defaultPaymentMethods
    params: {}
- name: setDefaultPaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: setDefaultPaymentMethod
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listUserPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: listPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: payments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
      start: '0'
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: companyGroup
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: content
- name: segment
  endpoint:
    path: /channel/v1/segments
    method: POST
    data_selector: content
- name: dynamicSegment
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: records
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: get_pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: get_pricing_summary_by_shopping_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: AI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: id
- name: Get AI Details
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: id
- name: Approve AI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: id
- name: Get all chats for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: Create a new chat session for the AI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: id
- name: Create a new API data source for the specified AI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: dataSourceId
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
    params: {}
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
    params: {}
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: choices
    params: {}
- name: createShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscountByShoppingCartId
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: Create subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: List subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: Subscription details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: Update subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: records
    params: {}
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: records
    params: {}
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: records
    params: {}
- name: user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: records
    params: {}
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: response
- name: user_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: string
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: string
      userUuid: string
- name: invite_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: string
      userUuid: string
      inviterUuid: string
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: integer
      companyUuid: string
      userUuid: string
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: string
      userUuid: string
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
      userUuid: string
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: string
      userUuid: string
      ldap: boolean
      page: integer
      searchText: string
      size: integer
      sortField: string
      sortOrder: string
- name: publish_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: userProfile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporaryPassword
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /templates/sms
    method: POST
    data_selector: content
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /sfb-toolkit/components
    method: POST
    data_selector: components
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email/{type}
    method: GET
    data_selector: template
    params: {}
- name: order_webhook
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: applications
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: productLists.custom_lists.custom_lists_mobility
    params: {}
- name: faq
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: cart_preview
  endpoint:
    path: /cart/preview
    method: GET
    data_selector: cart
    params: {}
- name: add_to_cart
  endpoint:
    path: /cart/add
    method: POST
    data_selector: confirmation
    params: {}
- name: product_configurator
  endpoint:
    path: /product/configurator
    method: GET
    data_selector: configurator
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_interface_elements
  endpoint:
    path: /themes/themeName/content/layout
    method: GET
    data_selector: elements
    params: {}
- name: data_elements
  endpoint:
    path: /themes/themeName/content/pages
    method: GET
    data_selector: data_elements
    params: {}
- name: CUSTOM_REPORT_BUILDING_TRAINING
  endpoint:
    path: /services/data/vXX.X/sobjects/CUSTOM_REPORT_BUILDING_TRAINING
    method: GET
- name: ADDITIONAL_COMPANY
  endpoint:
    path: /services/data/vXX.X/sobjects/ADDITIONAL_COMPANY
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: response
    params: {}
- name: payment_methods
  endpoint:
    path: /services/data/vXX.X/payment_methods
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: usage_events
  endpoint:
    path: /v2/usage/events
    method: POST
    data_selector: events
    params: {}
- name: usage_status
  endpoint:
    path: /v2/usage/status
    method: GET
    data_selector: status
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: INVOICES
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoices
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: companies_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: ''
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: ''
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: create_group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: add_user_to_group
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: read_user_from_group
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
- name: delete_user_from_group
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: revoke_invitation
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: list_company_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invite_users_to_company
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invite_users_to_company_csv
  endpoint:
    path: /companies/{companyUuid}/invitations/csv
    method: POST
- name: accept_invitation
  endpoint:
    path: /invitations/{invitationToken}
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: Success
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: lead_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      fromDate: SOME_NUMBER_VALUE
      toDate: SOME_NUMBER_VALUE
      creationDateOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: lead_conversion
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PATCH
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: conversionRequest
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: productSettings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: companyAssignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: opportunity
    params: {}
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: response
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: response
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: response
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: response
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: response
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: Success
    params: {}
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: Success
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: remove_item
    params:
      opportunityId: required
      itemId: required
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: required
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: records
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: requestBody
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: records
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requestBody
    params: {}
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: requestBody
    params:
      opportunityId: required
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /services/data/vXX.X/sobjects/Suppliers
    method: GET
- name: TICKETS
  endpoint:
    path: /services/data/vXX.X/sobjects/Tickets
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: group_memberships_batch
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: ''
    params: {}
- name: add_user_to_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: read_user_from_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: delete_user_from_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_company_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: ''
    params: {}
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
    data_selector: ''
    params: {}
- name: invite_users_csv
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/csv
    method: POST
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: leads_list
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: id
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: createPaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: removePaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: content
    params: {}
- name: listCompanyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: listUserPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: listAllPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: responses
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: responses
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: responses
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: responses
- name: questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: createdQuestion
- name: update_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: updatedQuestion
- name: delete_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: opportunity
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: removeItem
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: editItem
    params:
      opportunityId: required
      itemId: required
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: stagingCatalog
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: opportunities_pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: records
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: records
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: records
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: records
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: apply_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: records
    params:
      opportunityId: required
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: id
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: id
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: id
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: id
    params: {}
- name: associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: preAuth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: 'null'
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: 'null'
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: 'null'
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: 'null'
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: 'null'
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: 'null'
    params:
      transferMethodId: required
- name: question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: answers
- name: comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
    params:
      applicationId: required
- name: list_product_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
    params:
      applicationId: required
- name: retrieve_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
    params:
      applicationId: required
      reviewId: required
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: null
    params:
      applicationId: required
      reviewId: required
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
    params:
      applicationId: required
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: products
    params:
      vendorUuid: required
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteShoppingCartDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: '250'
      start: '0'
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivationRequest
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: Content type
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: Content type
    params:
      companyId: required
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: Content type
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: Content type
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: Content type
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /api/appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /api/appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /api/appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /api/appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: 'null'
    params: {}
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
    data_selector: 'null'
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
    data_selector: 'null'
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
    data_selector: 'null'
    params: {}
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: 'null'
    params: {}
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: 'null'
    params: {}
- name: disconnect_user_account
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
    data_selector: 'null'
    params: {}
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: 'null'
    params: {}
- name: shoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: deleteShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: updateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalizeShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: createAndFinalizeShoppingCart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: records
    params: {}
- name: cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: records
    params: {}
- name: cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: records
    params: {}
- name: add_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: records
    params: {}
- name: get_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: records
    params: {}
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: urlCreator
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: get_shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
- name: remove_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
- name: delete_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: null
- name: remove_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: title
    params: {}
- name: description
  endpoint:
    path: /properties
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    params:
      required: false
      defaultValue: 555
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: slider
  endpoint:
    path: /properties/slider
    method: GET
    data_selector: properties
- name: group_header
  endpoint:
    path: /properties/group_header
    method: GET
    data_selector: properties
- name: Read SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params: {}
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params: {}
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params: {}
- name: List all subscriptions for a user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params: {}
- name: Create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params: {}
- name: Preview changed subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: response
    params: {}
- name: Preview create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      title: Products
      defaultValue:
        items: []
        contentType: DYNAMICALLY_CURATED_CONTENT_TYPE
      type: PRODUCTS_LIST
      required: true
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: data
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: data
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /product/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: home_page
  endpoint:
    path: /themes/themeName/content/pages/home/home.html
    method: GET
- name: listing_page
  endpoint:
    path: /themes/themeName/content/pages/listing/listing.html
    method: GET
- name: profile_page
  endpoint:
    path: /themes/themeName/content/pages/profile/profile.html
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: connection
    params: {}
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
    data_selector: developerAccounts
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
    data_selector: userAssignments
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
    data_selector: userAssignments
    params: {}
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: connection
    params: {}
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
    data_selector: connection
    params: {}
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: users
    params: {}
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: update_user_picture
  endpoint:
    path: /api/account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: ''
    params: {}
- name: read_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: components
  endpoint:
    path: /components
    method: POST
- name: components-add
  endpoint:
    path: /components-add
    method: POST
- name: components-copy
  endpoint:
    path: /components-copy
    method: POST
- name: components-delete
  endpoint:
    path: /components-delete
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: configuration
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: external_weather
  endpoint:
    path: /external/weather
    method: GET
    data_selector: temperature
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: custom_apps
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: BillingAndDistribution
    params: {}
- name: localization_file
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: discounts
  endpoint:
    path: /api/billing/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: order_webhook_payload
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: records
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkoutDetails
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
- name: metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
- name: subscription_change
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product ID
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: ai_list
  endpoint:
    path: /api/v1/me/ai
    method: GET
    data_selector: data
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      name: SOME_STRING_VALUE
      includeCustomAttributes: SOME_BOOLEAN_VALUE
      includePurchaseLimitData: SOME_BOOLEAN_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      custom.customAttributeName: SOME_STRING_VALUE
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
- name: request_application_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: readCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: ''
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
      start: 0
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: discounts
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: records
- name: typerequired
- name: unit
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: typerequired
- name: unit
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: shippingQuoteId
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: company_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_memberships_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: memberships
- name: group_memberships_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: leads
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
- name: applicants
  endpoint:
    path: /v1/applicants
    method: GET
    data_selector: applicants
    params: {}
- name: conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_assigned_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_pending_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: product_tags
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: productTags
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: string
- name: addItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: string
- name: listItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: string
- name: removeItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: status
    params:
      opportunityId: string
      itemId: string
- name: editItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: string
      itemId: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplied
    params:
      opportunityId: required
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updateStatus
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deleteStatus
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: paymentInstruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: createPaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: getDefaultPaymentInstrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: pricing_plan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan
    params: {}
- name: product
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct
    params: {}
- name: product_publication
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess
    params: {}
- name: product_publication_status
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: payment_method_types
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: company_payments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: user_payments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: all_payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params: {}
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params: {}
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: records
    params: {}
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: records
    params: {}
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
    data_selector: records
    params: {}
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: records
    params: {}
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
    params: {}
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: records
    params: {}
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: number
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: number
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: number
      reviewId: number
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: number
      reviewId: number
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: number
      reviewId: number
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: number
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: string
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: products status
    params:
      applicationId: number
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
      sortField: DATE
      sortOrder: ASC
      start: '0'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
      sortField: DATE
      sortOrder: ASC
      start: '0'
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: '0'
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: POST
    data_selector: content
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: user_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invitation
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: create_company_group
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: template
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: status
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: defaultNotificationTemplates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: defaultCommonEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: data
    params: {}
- name: defaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: CREATED_ON
      sortOrder: ASC
      start: '0'
- name: shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: shopping_cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params:
      level: PRE_FINALIZE
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
    params: {}
- name: USER
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: createShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
- name: subscription_read
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
- name: subscription_cancel
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
- name: subscription_update
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: update
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: revoke_invitation
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: cancel_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: response
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: response
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: response
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: response
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: response
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: response
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
- name: create_webhook
  endpoint:
    path: /channel/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params:
      productId: integer
- name: retrieve_product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params:
      productId: integer
- name: update_product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: PUT
    data_selector: productInformation
    params:
      productId: integer
- name: billing_usage_v1
  endpoint:
    path: /billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: status_verification
  endpoint:
    path: /customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
    data_selector: verified
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: {}
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: {}
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: {}
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: data
    params: {}
- name: faq
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: navigator
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: data
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: data
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: data
    params:
      opportunityId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: cart_preview
  endpoint:
    path: /cart/preview
    method: GET
    data_selector: cart
    params: {}
- name: add_to_cart
  endpoint:
    path: /cart/add
    method: POST
    data_selector: result
    params: {}
- name: product_configurator
  endpoint:
    path: /product/configurator
    method: GET
    data_selector: configurator
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: meta_tags
  endpoint:
    path: /themes/themeName/content/layout/base.html
    method: GET
    data_selector: meta
- name: open_graph_tags
  endpoint:
    path: /themes/themeName/content/layout/base.html
    method: GET
    data_selector: open_graph
- name: twitter_cards
  endpoint:
    path: /themes/themeName/content/layout/base.html
    method: GET
    data_selector: twitter
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: updatedOpportunitySummary
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFieldsUpdated
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: shippingAddress
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: shippingAddressCreatedOrReplaced
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: newOpportunityId
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
    data_selector: data
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: choices
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      paymentNumber: required
      count: '250'
      start: '0'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
    params: {}
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: create_product_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: comment
    params: {}
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: delete_status
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: response
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
- name: companyMembershipRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: userChecklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: inviteManagedUser
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchaseApplication
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: userAssignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignableRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: companyAssignableRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: userGroups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: company_group
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segment
  endpoint:
    path: /api/channel/v1/segments
    method: POST
    data_selector: '204'
- name: dynamic_segment
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: '204'
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: results
    params:
      code: SOME_STRING_VALUE
      count: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_INTEGER_VALUE
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: items
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: items
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivate_subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
- name: OVERAGE_FEES
  endpoint:
    path: /OVERAGE_FEES
    method: GET
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /OVERAGE_FEE_TRANSACTION
    method: GET
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /OVERAGE_FEES_DOCUMENT
    method: GET
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /OVERAGE_FEES_ITEM
    method: GET
- name: EVENT
  endpoint:
    path: /EVENT
    method: GET
- name: BUSINESS_EVENT
  endpoint:
    path: /BUSINESS_EVENT
    method: GET
- name: LEGAL_TENDER
  endpoint:
    path: /LEGAL_TENDER
    method: GET
- name: ANNUAL_REVENUE
  endpoint:
    path: /ANNUAL_REVENUE
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/REVENUE
    method: GET
    data_selector: records
- name: TICKETS
  endpoint:
    path: /services/data/vXX.X/sobjects/TICKETS
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: records
    params:
      subscriptionId: required
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params:
      developerIdentifier: required
      accountIdentifier: required
      userIdentifier: required
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: userProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: response
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: '50'
      sortOrder: DESC
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: ''
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: ''
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /pages/profile
    method: GET
    data_selector: components
    params: {}
- name: footer_menu
  endpoint:
    path: /menus/FOOTER_MENU
    method: GET
    data_selector: menu
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: custom_apps
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_apps
- name: custom_lists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_lists
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: theme_overrides
  endpoint:
    path: /themes/themeName/i18n/overrides
    method: POST
    data_selector: overrides
    params: {}
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: null
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: null
    params:
      opportunityId: required
      itemId: required
- name: description
  endpoint:
    path: /services/data/vXX.X/sobjects/Description
    method: GET
    data_selector: records
    params: {}
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: showRatings
  endpoint:
    path: /form/schema
    method: GET
    data_selector: showRatings
    params: {}
- name: backgroundColor
  endpoint:
    data_selector: defaultValue
- name: size
  endpoint:
    path: size
    method: GET
    data_selector: options
    params:
      required: true
      defaultValue: xsmall
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: string
      ownerId: string
      ownerCompanyId: string
      currency: string
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: application/json
    params:
      ownerId: string
      ownerCompanyId: string
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: application/json
    params:
      userId: string
      companyId: string
      salesAgentUserId: string
      salesAgentCompanyId: string
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: application/json
    params:
      discountCode: string
      itemIds:
      - string
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
    params: {}
- name: form_schema_example_slider
  endpoint:
    path: /form-schema-example-slider
    method: GET
    data_selector: slider
    params: {}
- name: group_header
  endpoint:
    path: /group_header
    method: GET
    data_selector: group_header
    params: {}
- name: payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: productsList
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: image_upload
    method: POST
    data_selector: defaultValue
    params:
      required: 'false'
- name: pageTabs
  endpoint:
    path: tabs_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawer_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: tokenize_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethodTokens
    method: POST
    data_selector: records
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: records
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: records
    params: {}
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: type
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: defaultValue
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /isDisplayCaretsOnHover
    method: GET
    data_selector: defaultValue
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listPaymentPlans
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: paymentPlans
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      start: '0'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /api/channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /api/marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: CommissionEvent
  endpoint:
    path: /CommissionEvent
    method: GET
    data_selector: records
- name: CommissionCycle
  endpoint:
    path: /CommissionCycle
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    params:
      count: '250'
      start: '0'
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product identifier
- name: retrieve_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: shopping_cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: OK
    params: {}
- name: preview_non_persisted_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: OK
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: OK
    params: {}
- name: payment_instrument_create
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
- name: payment_instrument_list
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
- name: payment_instrument_read
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
- name: payment_instrument_update
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
- name: payment_instrument_delete
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: SOME_STRING_VALUE
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params:
      itemId: SOME_ARRAY_VALUE
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
- name: update_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: records
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: reactivate_subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscription
  endpoint:
    path: /billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account_create
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: developer_account_expire
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: user_assign
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: user_unassign
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: storefront_components
  endpoint:
    path: /storefront/components
    method: GET
    data_selector: components
- name: storefront_themes
  endpoint:
    path: /storefront/themes
    method: GET
    data_selector: themes
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: components
  endpoint:
    path: /components
    method: GET
- name: atoms
  endpoint:
    path: /atoms
    method: GET
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remove_items_from_cart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params: {}
- name: update_cart_items
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems.cart
    params: {}
- name: update_cart_custom_attributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: localization_file_requirements
  endpoint:
    path: /localization/file/requirements
    method: GET
    data_selector: requirements
- name: customize_storefront_themes_labels
  endpoint:
    path: /themes/customize/labels
    method: GET
    data_selector: customizations
- name: themes_and_static_assets
  endpoint:
    path: /themes/static/assets
    method: GET
    data_selector: assets
- name: integrate_checkout
  endpoint:
    path: /checkout/integration
    method: GET
    data_selector: checkout
- name: validate_cart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: cartValidation
    params: {}
- name: cart_validation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: priceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: condition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: priceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /setMarketplacePrice
    method: POST
    data_selector: marketplacePrice
    params: {}
- name: trigger_set_marketplace_prices_process
  endpoint:
    path: /triggerSetMarketplacePricesProcess
    method: POST
    data_selector: marketplacePricesProcess
    params: {}
- name: remove_marketplace_price
  endpoint:
    path: /removeMarketplacePrice
    method: POST
    data_selector: removedMarketplacePrice
    params: {}
- name: header
  endpoint:
    path: /themes/themeName/header-footer/logged-out.html
    method: GET
- name: footer
  endpoint:
    path: /themes/themeName/header-footer/footer.html
    method: GET
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: company
  endpoint:
    path: /crm/companies
    method: POST
    data_selector: properties
    params: {}
- name: usage_status
  endpoint:
    path: /usage/status
    method: GET
    data_selector: status
    params: {}
- name: send_metered_usage
  endpoint:
    path: /usage/send
    method: POST
    data_selector: usage_events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: product
  endpoint:
    path: /graphql-docs/docs
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: string
      customerCompanyId: string
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: user_details
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
      companyId: string
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: userErrors
    params:
      operation: CREATE
- name: tenants
  endpoint:
    path: /createTenant
    method: POST
    data_selector: tenants
    params: {}
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembershipRoles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: PATCH
    data_selector: roles
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: records
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/usageProcessingStatus
    method: GET
    data_selector: records
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: purchase_application_request
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: ai
  endpoint:
    path: /api/v1/me/ai
    method: GET
    data_selector: data
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: publish_catalog
  endpoint:
    path: /publishCatalog
    method: POST
    data_selector: message
    params:
      file: required
      entityType: required
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: success
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: success
    params:
      content: required
      defaultCommonElement: optional
      enabled: optional
      locale: required
      type: required
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
      active: SOME_STRING_VALUE
      enabled: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      createdOn: SOME_STRING_VALUE
      sort: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
      partner: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      active: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: list_company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: ''
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: ''
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: ''
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: ''
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: ''
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: ''
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: ''
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: ''
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: ''
- name: currency_exchange_rates
  endpoint:
    path: /api/currencyExchangeRates
    method: GET
    data_selector: ''
- name: exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: content
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: content
    params:
      typerequired: UNSUBSCRIBE
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: content
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: template
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: template
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: none
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: get_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: invoices_list
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_retrieve
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
- name: invoice_patch
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
- name: leads_list
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: lead_create
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
- name: master_records
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: mbps
  endpoint:
    path: /services/data/vXX.X/sobjects/Mbps
    method: GET
    data_selector: records
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: records
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: records
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: records
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: revoke_invitation
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: read_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params: {}
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
    params: {}
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: records
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: records
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: records
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: product_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: bill_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: bill_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: ''
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: ''
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: ''
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: ''
      pricingPlanId: ''
      currency: ''
- name: list_product_tags
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: Product tags information
    params:
      pl: SOME_ARRAY_VALUE
      locale: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: Opportunity created
    params: {}
- name: list_opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: Success
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: get_opportunity_details
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: Success
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: validationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: data
    params: {}
- name: request_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: data
    params: {}
- name: read_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: data
    params: {}
- name: read_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: data
    params: {}
- name: payment_method_types
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: create_payment_method
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: list_payment_methods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: remove_payment_method
  endpoint:
    path: /appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: content
- name: list_payment_plans
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: content
- name: list_company_payments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: list_user_payments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: opportunities_pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: opportunity
    params:
      opportunityId: required
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: list_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: get_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: number
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: number
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: number
      reviewId: number
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: number
      reviewId: number
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: number
      reviewId: number
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: number
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: string
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params:
      applicationId: number
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: createPaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: removePaymentMethod
  endpoint:
    path: /api/appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: content
- name: listPaymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: listPaymentsForUser
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: listAllPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: response
    params: {}
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
    data_selector: response
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
    params: {}
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: response
    params: {}
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: response
    params: {}
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
    data_selector: response
    params: {}
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: response
    params: {}
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
    data_selector: response
    params: {}
- name: retrieve_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: response
    params: {}
- name: update_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: report_list
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_retrieve
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: report_delete
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
    params: {}
- name: company_orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: getCompanyGroupSegments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      companyGroupId: required
      number: '0'
      size: '50'
      sort: +name
      searchText: ''
- name: createSegment
  endpoint:
    path: /channel/v1/segments
    method: POST
    data_selector: content
- name: updateSegment
  endpoint:
    path: /channel/v1/segments/{companySegmentId}
    method: PUT
    data_selector: content
- name: deleteSegment
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}/segments/{companySegmentId}
    method: DELETE
    data_selector: content
- name: getAvailableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      page: 0
      size: 50
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params:
      shoppingCartId: required
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params:
      shoppingCartId: required
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params:
      shoppingCartId: required
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params:
      shoppingCartId: required
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params:
      shoppingCartId: required
      itemId: required
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      shoppingCartId: required
      itemId: required
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: response
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
- name: deleteShoppingCartItem
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: deleteShoppingCartItems
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: previewShoppingCart
  endpoint:
    path: /shoppingCarts/preview
    method: POST
- name: previewShoppingCartById
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params:
      itemId: []
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_non_persisted_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_reseller_subscription_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    headers:
      AD-ShoppingCart-Partner: SOME_STRING_VALUE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivationRequest
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
- name: read_saml_metadata
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: response
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
    data_selector: response
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
    data_selector: response
    params: {}
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: response
    params: {}
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: response
    params: {}
- name: disconnect_user_account
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
    data_selector: response
    params: {}
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params:
      sendNotification: true
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: records
    params: {}
- name: updateCurrentCompany
  endpoint:
    path: /account/v2/users/{userUuid}/memberships/{companyUuid}/current
    method: PUT
    data_selector: records
    params: {}
- name: readUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
    params: {}
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: subscription_addons
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
- name: create_addon_instance
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: POST
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_user_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: sfb-toolkit commands
  endpoint:
    path: /sfb-toolkit/commands
    method: GET
    data_selector: commands
- name: components
  endpoint:
    path: /storefront/reference/toolkit-commands
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: activate_user
  endpoint:
    path: /account/v2/users
    method: PATCH
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: custom_apps
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: faqs
    params: {}
- name: navigator
  endpoint:
    path: /navigator
    method: GET
    data_selector: attributeGroups
    params: {}
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: content
    params: {}
- name: set_temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: content
    params: {}
- name: list_webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: content
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: content
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: content
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: content
    params: {}
- name: localization_file_requirements
  endpoint:
    path: /localization/requirements
    method: GET
    data_selector: files
    params: {}
- name: customize_storefront_theme_labels
  endpoint:
    path: /theme/labels/customization
    method: GET
    data_selector: labels
    params: {}
- name: themes_and_static_assets
  endpoint:
    path: /themes/static/assets
    method: GET
    data_selector: assets
    params: {}
- name: themes_and_custom_resources
  endpoint:
    path: /themes/custom/resources
    method: GET
    data_selector: custom_resources
    params: {}
- name: theme_css_grid
  endpoint:
    path: /theme/css/grid
    method: GET
    data_selector: grid
    params: {}
- name: global_platform_css
  endpoint:
    path: /global/css
    method: GET
    data_selector: global_css
    params: {}
- name: integrate_checkout
  endpoint:
    path: /checkout/integration
    method: GET
    data_selector: checkout_integration
    params: {}
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands.md
    method: GET
- name: buy_button
  endpoint:
    path: /cta
    method: GET
    data_selector: items
    params:
      productId: '577'
      type: BUY
- name: sliderTitle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: description
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: /backgroundImg
    method: GET
    data_selector: records
    params: {}
- name: localization
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets/images
    method: GET
    data_selector: custom_images
    params: {}
- name: pageTabs
  endpoint:
    path: /en-US/apps/163915/talech/tabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawer_list
  endpoint:
    path: /drawer_list
    method: GET
    data_selector: items
    params: {}
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: logos
    params: {}
- name: footerLogo
  endpoint:
    data_selector: type
    params:
      defaultValue: darkLogo
- name: config
  endpoint:
    path: /api/config
    method: GET
    data_selector: config
- name: meta
  endpoint:
    path: /api/meta
    method: GET
    data_selector: meta
- name: common
  endpoint:
    path: /api/common
    method: GET
    data_selector: common
- name: nav
  endpoint:
    path: /api/nav
    method: GET
    data_selector: nav
- name: i18n
  endpoint:
    path: /api/i18n
    method: GET
    data_selector: i18n
- name: home_page
  endpoint:
    path: /themes/themeName/content/pages/home/home.html
    method: GET
- name: listing_page
  endpoint:
    path: /themes/themeName/content/pages/listing/listing.html
    method: GET
- name: profile_page
  endpoint:
    path: /themes/themeName/content/pages/profile/profile.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: checkout
  endpoint:
    path: /user-guides/checkout
    method: GET
- name: payment_methods
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/payment-js-library/choose-authorization-method
    method: GET
- name: payment_details
  endpoint:
    path: /user-guides/checkout/graphql/addeditpaymentdetails
    method: POST
- name: cart
  endpoint:
    path: /user-guides/checkout/graphql/fetchdetailsactive
    method: GET
- name: showRatings
  endpoint:
    data_selector: labelOn
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status.md
    method: GET
    data_selector: records
- name: historic_usage_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments.md
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create New AI
  endpoint:
    path: /ai
    method: POST
    data_selector: string
    params: {}
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: string
    params: {}
- name: Approve an AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: string
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: string
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: string
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: string
    params: {}
- name: Add an existing data source to the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: string
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: string
    params: {}
- name: File upload data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/file
    method: POST
    data_selector: string
    params: {}
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: string
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: string
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: string
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: string
    params: {}
- name: Duplicate a chat session
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: string
    params: {}
- name: Reset a chat session
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: string
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: /en-US/apps/163915/talech/tabs
    method: GET
    data_selector: tabs
    params: {}
- name: data_sources
  endpoint:
    path: /data-sources
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: chats
  endpoint:
    path: /me/chats
    method: GET
- name: usage
  endpoint:
    path: /usage/org
    method: GET
- name: product_comparison
  endpoint:
    path: /api/v1/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /api/v1/products
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_notification_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
- name: defaultNotificationTemplate
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: defaultCommonEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
- name: defaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: discount
  endpoint:
    path: /discounts
    method: GET
- name: typerequired
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: unit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /path/to/MasterRecords
    method: GET
    data_selector: records
    params: {}
- name: MBPS
  endpoint:
    path: /path/to/MBPS
    method: GET
    data_selector: records
    params: {}
- name: MONITORED_USER
  endpoint:
    path: /path/to/MonitoredUser
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discount
    params:
      discountId: required
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change
  endpoint:
    path: /subscription
    method: PUT
    data_selector: id
    params:
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: group_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_batch
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: delete_group_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invite_users_csv
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/invitations/csv
    method: POST
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: pay_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: list_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: list_leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/{product_id}/editions/{edition_id}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /api/order
    method: POST
    data_selector: order
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: subscription
  endpoint:
    path: /users/{user_id}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: order
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params:
      <applicationId>: the unique product identifier provided by the channel
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1/usage
    method: POST
    data_selector: items
    params: {}
- name: payment_method
  endpoint:
    path: /api/payment/v1/methods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: ''
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: ''
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: ''
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: ''
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: ''
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: ''
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      count: '250'
      excludeFree: 'false'
      fromDate: ''
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: ''
      toDate: ''
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: response
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
    params:
      includeBalance: 'false'
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: response
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params:
      input.cartId: 6512b7ff875fe104e5fde6da
      input.level: PRE_FINALIZE
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params:
      input.cartId: 6512b7ff875fe104e5fde6da
      input.level: PRE_FINALIZE
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook.priceBook
    params:
      createPriceBookInput.name: Acme price book
      createPriceBookInput.description: This is the price book for Acme Corp.
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params:
      createPriceBookConditionInput.priceBookId: 6beab4df-d944-4e52-8694-8bcf5b514015
      createPriceBookConditionInput.name: Company ID condition
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params:
      createPriceBookEntryInput.priceBookId: 6beab4df-d944-4e52-8694-8bcf5b514015
      createPriceBookEntryInput.pricingPlanId: b4b981e8-2c39-48d8-bc7a-82f5e2b677ab
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: response
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: response
    params: {}
- name: purchase_orders
  endpoint:
    path: /purchaseOrder
    method: GET
    data_selector: response
    params:
      companyId: required
- name: purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_all_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_all_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: ''
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: notificationTemplatesByType
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: updateNotificationTemplate
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: Trigger Publication API
  endpoint:
    path: /graphql-docs/triggerproductpublicationprocess.doc.html
    method: POST
- name: Marketplace Settings API
  endpoint:
    path: /graphql-docs/marketplace-product-settings.doc.html
    method: POST
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcesses[0].id
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess.id
    params: {}
- name: marketplaceProductSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: create_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: CREATE
- name: expire_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: EXPIRE
- name: remove_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: POST
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/sobjects/MeteredUsage
    method: POST
    data_selector: records
- name: validateShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: ai
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: ai
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: chats
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: chat
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: dataSource
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: update_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: response
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: company_association
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: success
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: success
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: success
    params: {}
- name: read_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: success
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: success
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: purchase_request
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/currency_exchange_rates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: custom_components
  endpoint:
    path: /storefront/reference/custom-components
    method: GET
- name: installation
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall
    method: GET
- name: create_component
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add
    method: POST
- name: reuse_ui_library_components
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-customize-ui-library
    method: GET
- name: delete_ui_library_components
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-delete
    method: DELETE
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
- name: external
  endpoint:
    path: /external
    method: GET
    data_selector: external
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: buy_button_url
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
    data_selector: urlCreator
    params: {}
- name: publishCatalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplate
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: createOrUpdateDefaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params: {}
- name: sliderTitle
  endpoint:
    path: /properties/sliderTitle
    method: GET
    data_selector: properties
    params: {}
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: discount
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: records
- name: showRatings
  endpoint:
    path: showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: DiscountType
  endpoint:
    path: /discount-type
    method: GET
    data_selector: types
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: label
    params: {}
- name: backgroundColor
  endpoint:
    path: /properties/backgroundColor
    method: GET
    data_selector: title
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: size
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params:
      required: 'false'
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: company_verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: config
  endpoint:
    path: /api/config
    method: GET
    data_selector: config
- name: meta
  endpoint:
    path: /api/meta
    method: GET
    data_selector: meta
- name: common
  endpoint:
    path: /api/common
    method: GET
    data_selector: common
- name: nav
  endpoint:
    path: /api/nav
    method: GET
    data_selector: nav
- name: i18n
  endpoint:
    path: /api/i18n
    method: GET
    data_selector: i18n
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: user_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    params:
      count: 250
      start: 0
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    params:
      count: 250
      start: 0
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: 250
      start: 0
      sortOrder: ASC
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: response
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: response
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: response
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: response
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: response
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: response
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: response
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: response
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: response
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: response
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: response
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: response
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: response
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: response
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: marketplace_product_active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: marketplace_product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_association
  endpoint:
    path: /companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: company_memberships_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_request
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: data
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: data
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: data
    params:
      opportunityId: required
- name: delete_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: data
    params:
      opportunityId: required
      itemId: required
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: '202'
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: '200'
    params:
      opportunityId: string
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      count: 250
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: application/json
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: application/json
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: application/json
    params:
      opportunityId: required
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: PATIENT_CARE_DAY
  endpoint:
    path: /services/data/vXX.X/sobjects/PatientCareDay
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: Discount
    params:
      discountId: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: read_company_domain
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains/{domainName}
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: create_user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: POST
- name: update_user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}
    method: PUT
- name: read_user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}
    method: GET
- name: delete_user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}
    method: DELETE
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    params:
      count: 250
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    params:
      count: 250
      sortOrder: DESC
      start: 0
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices_list
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: 250
      start: 0
      sortOrder: ASC
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: comment
- name: list_product_review_comments
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: update_product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: PUT
    data_selector: comment
- name: delete_product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments/{commentId}
    method: DELETE
- name: retrieve_user_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
- name: retrieve_user_company_product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}/companies/{companyId}/users/{userId}
    method: GET
- name: delete_image
  endpoint:
    path: /products/v1/resources/image/delete
    method: POST
- name: upload_and_link_image
  endpoint:
    path: /products/v1/resources/image/uploadAndLink
    method: POST
- name: upload_and_link_pdf_file
  endpoint:
    path: /products/v1/resources/file/uploadAndLink
    method: POST
- name: delete_file
  endpoint:
    path: /products/v1/resources/file/delete
    method: DELETE
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: records
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: records
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: records
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: read_my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /api/billing/v1/orders
    method: GET
    data_selector: content
    params:
      page: 0
      size: 50
- name: order_invoices
  endpoint:
    path: /api/billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: app_reseller_orders
  endpoint:
    path: /api/appReseller/v1/orders
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: company_groups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFieldDefinitions
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplication
    params:
      opportunityId: required
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
    params: {}
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: records
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
    params:
      level: PRE_FINALIZE
- name: remove_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: remove_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: response
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: response
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: content
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: content
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: content
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: content
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: content
- name: reactivation_request
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: content
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: content
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: required
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: required
- name: retrieve_a_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: required
      reviewId: required
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: required
      reviewId: required
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: required
      reviewId: required
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_a_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: required
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: required
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params:
      applicationId: required
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: content
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: content
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: content
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: content
- name: company_purchase_orders
  endpoint:
    path: /purchaseOrder/v1/company/{companyId}/orders
    method: GET
    data_selector: content
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: '50'
      page: '0'
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: appReseller_orders
  endpoint:
    path: /appReseller/v1/orders
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: sync_tasks
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignments
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: name
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params:
      size: 50
      number: 0
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params:
      size: 50
      number: 0
- name: llms
  endpoint:
    path: /llms.txt
    method: GET
    data_selector: records
- name: graphql
  endpoint:
    path: /graphql-docs/docs
    method: GET
    data_selector: records
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: response
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: response
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: create_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: POST
    data_selector: response
    params: {}
- name: Carousel
  endpoint:
    path: /sfb-toolkit/components-add
    method: POST
- name: Slider
  endpoint:
    path: /sfb-toolkit/components-add
    method: POST
- name: retrieve_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
    params: {}
- name: associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: pre_auth_response
    params: {}
- name: items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: custom_apps
  endpoint:
    path: /products
    method: GET
    data_selector: custom_apps
- name: custom_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: custom_lists
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: theme_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: callToAction
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
- name: theme_package
  endpoint:
    path: /theme-zips
    method: POST
- name: Banner
  endpoint:
    path: /components/Banner
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: /slider/title
    method: GET
    data_selector: records
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: get_shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: delete_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: create_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: remove_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: description
  endpoint:
    path: /properties
    method: GET
    data_selector: description
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: listProductAssignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: showRatings
  endpoint:
    data_selector: labelOn
    params:
      defaultValue: true
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: properties
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: string
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: string
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: string
      userId: string
      subscriptionId: string
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: string
      userId: string
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: string
      userId: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: update_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
    params:
      sendNotification: true
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: /properties/backgroundImg
    method: GET
    data_selector: properties
    params: {}
- name: pageTabs
  endpoint:
    path: /properties/pageTabs
    method: GET
    data_selector: properties
    params: {}
- name: drawerList
  endpoint:
    path: /properties/drawerList
    method: GET
    data_selector: properties
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: products
  endpoint:
    path: /listing
    method: GET
- name: faq
  endpoint:
    path: /faq
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account_create
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: developer_account_expire
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: user_disconnect
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: billing_and_subscription
  endpoint:
    path: /billing-and-subscription
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: records
- name: update_user_picture
  endpoint:
    path: /api/account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: records
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user_profile
    params:
      userUuid: string
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary_password
    params:
      userUuid: string
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SubscriptionCancellationErrors
  endpoint:
    path: /errors/subscriptionCancellation
    method: GET
    data_selector: errors
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: transferUnitEligibleSubscriptions
  endpoint:
    path: /transferUnitEligibleSubscriptions
    method: GET
- name: transferUnitEligibleEditions
  endpoint:
    path: /transferUnitEligibleEditions
    method: GET
- name: external_weather
  endpoint:
    path: /external/weather
    method: GET
    data_selector: temperature
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: custom_lists
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: BillingAndDistribution
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: faqs
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: header-footer
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: custom-pages
  endpoint:
    path: /themes/themeName/content/pages
    method: GET
- name: CommissionEvent
  endpoint:
    path: /commission/event
    method: POST
    data_selector: data
- name: CommissionCycle
  endpoint:
    path: /commission/cycle
    method: GET
    data_selector: data
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: user_assignment
  endpoint:
    path: /api/billing/v1/assignments
    method: POST
    data_selector: assignment
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params:
      defaultValue: true
      type: TOGGLE
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: defaultValue
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: defaultValue
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscription
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: comparableProducts
  endpoint:
    path: /comparableProducts
    method: GET
- name: application
  endpoint:
    path: /apps/productId
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
- name: payment_methods
  endpoint:
    path: /api/payment_methods
    method: GET
    data_selector: records
- name: usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status
    method: GET
    data_selector: status
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: List of all companies
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/78/editions/468/paymentPlans/571
    method: POST
    data_selector: id
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: new_company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: updated_company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: patched_company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: updated_picture
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: subscriptions
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription_details
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: product_catalog_update
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: product_catalog_create
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      file: required
      entityType: required
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: template
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: template
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: DiscountType
  endpoint:
    path: /services/data/vXX.X/sobjects/DiscountType
    method: GET
    data_selector: records
    params: {}
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.finalizeCart
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params:
      cartId: 65117cd8ce3df31e68af9446
      locale: en-US
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params:
      cartId: 64c8c666e7977d2ffef9d97d
      itemIds:
      - 5f339a9a-ce68-4bab-931c-e6ee45035241
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params:
      cartId: 668be7d341fe9e7a04bbbb53
      items:
      - id: 33e7ac1a-fcaf-484c-9d17-eccb77153152
        units:
          quantity: '3'
          unit: USER
        pricingPlanId: ae2665ca-84fa-4dd4-ac61-0c36fe8a1fe1
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /path/to/master_records
    method: GET
- name: MBPS
  endpoint:
    path: /path/to/mbps
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /path/to/monitored_user
    method: GET
- name: MPLS
  endpoint:
    path: /path/to/mpls
    method: GET
- name: ORDER
  endpoint:
    path: /path/to/order
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /path/to/outpatient_days
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /path/to/page_view
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /path/to/patient_care_day
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /path/to/patient_treated
    method: GET
- name: PLANT
  endpoint:
    path: /path/to/plant
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /path/to/points_of_delivery
    method: GET
- name: PREMIUM
  endpoint:
    path: /path/to/premium
    method: GET
- name: PROCESS
  endpoint:
    path: /path/to/process
    method: GET
- name: PRODUCTS
  endpoint:
    path: /path/to/products
    method: GET
- name: RECORDS
  endpoint:
    path: /path/to/records
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /path/to/rental_unit
    method: GET
- name: RESOURCES
  endpoint:
    path: /path/to/resources
    method: GET
- name: REVENUE
  endpoint:
    path: /path/to/revenue
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /path/to/sales_order
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /path/to/sales_portfolios
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /path/to/service_orders
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /path/to/site_visits
    method: GET
- name: SPENDS
  endpoint:
    path: /path/to/spends
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /path/to/spend_volumes
    method: GET
- name: STREAM
  endpoint:
    path: /path/to/stream
    method: GET
- name: STUDENT
  endpoint:
    path: /path/to/student
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /path/to/subscriber
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /path/to/suppliers
    method: GET
- name: TICKETS
  endpoint:
    path: /path/to/tickets
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /path/to/total_annual_budget
    method: GET
- name: TUNNEL
  endpoint:
    path: /path/to/tunnel
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /path/to/virtual_users
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /path/to/sap_system
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /path/to/position_types
    method: GET
- name: OVERAGE_FEES
  endpoint:
    path: /path/to/overage_fees
    method: GET
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /path/to/overage_fee_transaction
    method: GET
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /path/to/overage_fees_document
    method: GET
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /path/to/overage_fees_item
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: DiscountType
  endpoint:
    path: /discount/type
    method: GET
- name: PricingUnit
  endpoint:
    path: /pricing/unit
    method: GET
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: leads
  endpoint:
    path: /leads
    method: POST
    data_selector: lead
    params: {}
- name: download_applicant_list
  endpoint:
    path: /applicants/download
    method: GET
    data_selector: file
    params: {}
- name: companies
  endpoint:
    path: /crm/v3/objects/companies
    method: POST
    data_selector: results
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: invoices_for_user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
- name: invoices_for_company
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
- name: single_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
    params: {}
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: '50'
      sortOrder: DESC
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: companyAssociation
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: myapps_read_assigned
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: myapps_read_pending
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: response
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: response
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: id
    params:
      opportunityIdrequired: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: id
    params:
      opportunityIdrequired: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: amountDueAfterTax
    params:
      opportunityIdrequired: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricingPlanId
    params:
      opportunityIdrequired: string
      pricingPlanIdrequired: string
      currencyrequired: string
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: sameAsBillingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: payment_method_types
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: payment_methods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payment_plans
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: paymentPlans
- name: company_payments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: user_payments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params: {}
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: answers
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: product_question_create
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: product_question_update
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: product_question_delete
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: content
    params: {}
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: content
    params: {}
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: content
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: company_purchase_orders
  endpoint:
    path: /purchaseOrder/v1/company/{companyId}
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
      number: '0'
      size: '50'
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_v1
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report_v1
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report_v2
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: id
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: id
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: id
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: id
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: product
  endpoint:
    path: /graphql-docs/docs
    method: GET
- name: cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauthorization
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: NO CONTENT
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: accountIdentifier
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: shoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: payment_method
  endpoint:
    path: /payment/methods
    method: GET
    data_selector: methods
    params: {}
- name: payment_token
  endpoint:
    path: /payment/tokens
    method: POST
    data_selector: token
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /usage/processing/status
    method: GET
    data_selector: status
    params: {}
- name: historic_usage_and_adjustments
  endpoint:
    path: /usage/historic/adjustments
    method: POST
    data_selector: adjustments
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: saml_metadata
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription_details
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription_creation
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: update
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
    params: {}
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: data
    params: {}
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
    data_selector: choices
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read.
- name: bundleStatus
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read.
- name: checkoutItems
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully.
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
    params: {}
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: companies
    params: {}
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: activationTokenrequired
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: '200'
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: '200'
    params: {}
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: '200'
    params: {}
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: '200'
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: theme
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/active
    method: POST
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
- name: footer_menu
  endpoint:
    path: /menus/FOOTER_MENU
    method: GET
    data_selector: menu
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_event
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: customization_examples
  endpoint:
    path: /themes/themeName/customizations
    method: GET
    data_selector: examples
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /api/notification/v1/templates/default
    method: GET
    data_selector: success
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: records
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: discounts
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: defaultValue
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: defaultValue
    params: {}
- name: size
  endpoint:
    path: size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: PATIENT_CARE_DAY
  endpoint:
    path: /services/data/vXX.X/sobjects/PatientCareDay
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: sliderSettings
  endpoint:
    path: /sliderSettings
    method: GET
    data_selector: settings
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: POST
    data_selector: defaultValue
    params:
      required: 'false'
- name: pageTabs
  endpoint:
    path: pageTabs
    method: POST
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: POST
    data_selector: defaultValue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /api/commission-event
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: company_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params:
      searchText: SOME_STRING_VALUE
      member: 'true'
      page: 0
      size: 50
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: lead_list
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: POST
    data_selector: Status
    params: {}
- name: unassign_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}/unassign
    method: DELETE
    data_selector: Status
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Status
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: read_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: opportunity
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product identifier
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params:
      paymentPlanId: '600'
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '592'
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params:
      companyId: required
      userId: required
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params:
      companyId: required
      userId: required
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params:
      companyId: required
      paymentInstrumentId: required
      userId: required
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params:
      companyUuid: required
      userUuid: required
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: null
    params:
      paymentInstrumentId: required
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: answers
    params:
      paymentNumber: integer
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: integer
      count: string
      excludeFree: boolean
      fromDate: number
      sortField: string
      sortOrder: string
      start: string
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: boolean
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription_details
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: ''
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
- name: create_product_review
  endpoint:
    path: /post/marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /put/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /delete/marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /get/channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /get/marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /get/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: trigger_set_marketplace_prices_process
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: remove_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: available_and_associated_companies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: id
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: id
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: '200'
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: '200'
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: '200'
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: result
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: result
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: result
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: notificationResult
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updateResult
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deleteResult
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: null
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: null
    params:
      companyId: required
      userId: required
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: CREATE
    data_selector: tenants
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: EXPIRE
    data_selector: tenants
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: ''
    params:
      account: ''
      accountIdentifier: ''
      quantity: ''
      price: ''
      description: ''
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: preview_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      status: ACTIVE
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: payment_methods
  endpoint:
    path: /payment/methods
    method: GET
    data_selector: records
- name: tokens
  endpoint:
    path: /payment/tokens
    method: POST
    data_selector: token
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile updates
    params:
      userUuid: required
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params:
      userUuid: required
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks list
- name: createAI
  endpoint:
    path: /ai
    method: POST
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAllChatsForAI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: ai_list
  endpoint:
    path: /api/v1/me/ai
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: theme_customization
  endpoint:
    path: /themes/themeName/customizations
    method: GET
    data_selector: customizations
    params: {}
- name: static_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: checkout_integration
  endpoint:
    path: /themes/themeName/checkout
    method: GET
    data_selector: checkout
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params:
      required: false
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      title: Size
      required: true
      defaultValue: xsmall
      type: RADIO
- name: company_associations
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: image_upload_field
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: tabs_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawer_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/v2/exchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: footerLogo
  endpoint:
    path: /footer/logo
    method: GET
    data_selector: footerLogo
- name: schemaSettings
  endpoint:
    path: /schema/settings
    method: GET
    data_selector: schemaSettings
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: updateCatalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
- name: createCatalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
- name: CommissionEvent
  endpoint:
    path: /commission/events
    method: GET
    data_selector: events
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: applicationId
    params:
      discountId: required
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: typerequired
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: unit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
- name: order
  endpoint:
    path: /v1/order
    method: POST
    data_selector: order
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
    data_selector: records
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
    data_selector: records
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
    data_selector: records
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
    data_selector: records
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
    data_selector: records
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
    data_selector: records
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
    data_selector: records
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
    data_selector: records
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
    data_selector: records
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
    data_selector: records
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
    data_selector: records
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
    data_selector: records
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
    data_selector: records
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
    data_selector: records
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
    data_selector: records
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
    data_selector: records
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
    data_selector: records
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
    data_selector: records
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
    data_selector: records
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
    data_selector: records
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
    data_selector: records
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
    data_selector: records
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
    data_selector: records
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
    data_selector: records
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
    data_selector: records
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
    data_selector: records
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
    data_selector: records
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
    data_selector: records
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
    data_selector: records
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
    data_selector: records
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
    data_selector: records
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
    data_selector: records
- name: OVERAGE_FEES
  endpoint:
    path: /OVERAGE_FEES
    method: GET
    data_selector: records
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /OVERAGE_FEE_TRANSACTION
    method: GET
    data_selector: records
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /OVERAGE_FEES_DOCUMENT
    method: GET
    data_selector: records
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /OVERAGE_FEES_ITEM
    method: GET
    data_selector: records
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product identifier
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: individual_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/companies/{company_id}/users/{user_id}/subscriptions
    method: POST
    data_selector: subscription
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_with_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      <subscriptionId>: The unique identifier assigned to the subscription by the
        channel
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
      <subscriptionId>: the ID assigned by the channel to identify each subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      <subscriptionId>: The unique identifier assigned to the subscription by the
        channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: response
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/discount
    method: POST
    data_selector: discount
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1
    method: POST
    data_selector: items
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFieldDefinitions
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplication
    params:
      opportunityId: required
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkout_settings
  endpoint:
    path: checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: active_cart_of_user
  endpoint:
    path: activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalize_cart
  endpoint:
    path: finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discount
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFields
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: shippingAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: shippingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: opportunity
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: cartFields
  endpoint:
    path: /cartFields
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params: {}
- name: updateCartItems
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems.cart
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: createPaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listPaymentPlans
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: content
- name: listCompanyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook.priceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: ''
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: ''
    params:
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: ''
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: ''
    params:
      includeBalance: 'false'
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      startDateFrom: SOME_NUMBER_VALUE
      startDateTo: SOME_NUMBER_VALUE
      status: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
      type: SOME_STRING_VALUE
      frequency: SOME_STRING_VALUE
      orderReferenceCode: SOME_STRING_VALUE
      applicationIds: SOME_NUMBER_VALUE
      fromCreationDate: SOME_NUMBER_VALUE
      toCreationDate: SOME_NUMBER_VALUE
      page: SOME_INTEGER_VALUE
      referenceCode: SOME_STRING_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: SOME_STRING_VALUE
      excludeFree: SOME_BOOLEAN_VALUE
      fromDate: SOME_NUMBER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      toDate: SOME_NUMBER_VALUE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
    data_selector: ''
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.notificationTemplatesByType
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateNotificationTemplate
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.deleteNotificationTemplate
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcesses[0].id
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess.id
    params: {}
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: Order
  endpoint:
    path: /api/billing/v1/orders/
    method: GET
    data_selector: content
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricingSummary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricingSummaryByShoppingCartId
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params:
      level: PRE_FINALIZE
- name: payment_methods
  endpoint:
    path: /services/data/vXX.X/sobjects/PaymentMethod
    method: GET
    data_selector: records
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: get_shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: delete_shopping_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status
    method: GET
    data_selector: records
- name: historic_usage_and_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments
    method: GET
    data_selector: records
- name: send_custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-custom-metered-usage
    method: POST
    data_selector: records
- name: send_preconfigured_and_custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-preconfigured-and-custom-metered-usage
    method: POST
    data_selector: records
- name: send_preconfigured_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-preconfigured-usage
    method: POST
    data_selector: records
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: ''
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: ''
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: ''
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: ''
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
- name: Read SAML metadata for subscription
  endpoint:
    path: /get/account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    params:
      subscriptionUuid: required
- name: List all subscriptions for a company
  endpoint:
    path: /get/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: required
      fromDate: optional
      toDate: optional
      discountId: optional
      status: optional
      editionId: optional
      paymentPlanId: optional
      lastModified: optional
      applicationIds: optional
      bundleApplicationId: optional
      expand: optional
      orderReferenceCode: optional
      count: optional
      sortField: optional
      sortOrder: optional
      start: optional
- name: Change subscription details
  endpoint:
    path: /put/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: required
      subscriptionId: required
      userId: required
      sendNotification: optional
- name: List all subscriptions for a user
  endpoint:
    path: /get/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: required
      userId: required
      fromDate: optional
      toDate: optional
      discountId: optional
      status: optional
      editionId: optional
      paymentPlanId: optional
      lastModified: optional
      applicationIds: optional
      bundleApplicationId: optional
      expand: optional
      orderReferenceCode: optional
      count: optional
      sortField: optional
      sortOrder: optional
      start: optional
- name: Create a subscription
  endpoint:
    path: /post/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    params:
      companyId: required
      userId: required
      sendNotification: optional
- name: Preview changed subscription details
  endpoint:
    path: /put/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: Preview create a subscription
  endpoint:
    path: /post/billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    params:
      companyId: required
      userId: required
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
      active: ''
      enabled: ''
      searchText: ''
      fromDate: ''
      toDate: ''
      sortField: ''
      sortOrder: ''
      page: ''
      size: ''
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
      partner: ''
      companyId: ''
      active: ''
      searchText: ''
      fromDate: ''
      toDate: ''
      sortField: ''
      sortOrder: ''
      page: ''
      size: ''
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: ''
      customerCompanyId: ''
      searchText: ''
      createdOn: ''
      sort: ''
      number: ''
      size: ''
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: company_association
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: 'null'
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: 'null'
    params: {}
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: 'null'
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: 'null'
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_application_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: companyAssignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: contentEvents
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params:
      userUuid: string
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params:
      userUuid: string
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
- name: exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: config
  endpoint:
    path: /data/config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: resources
    params: {}
- name: checkout
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: create_update_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: properties
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params:
      required: true
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: showRatings
    method: GET
    data_selector: uieditor.sfbComponent.productBanner.showRatings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discount
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params:
      required: 'false'
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: footerLogo
  endpoint:
    path: /properties/footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /properties/isDisplayCaretsOnHover
    method: GET
    data_selector: isDisplayCaretsOnHover
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /services/data/vXX.X/sobjects/PatientTreated
    method: GET
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: event
  endpoint:
    path: /api/channel/v1/events/{eventId}
    method: GET
- name: user_group
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: records
    params:
      searchText: SOME_STRING_VALUE
      member: true
      page: 0
      size: 50
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: records
    params:
      filter: SOME_STRING_VALUE
      inviterUuid: SOME_STRING_VALUE
- name: order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
    params: {}
- name: invitations
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /api/prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: retrieve_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending_assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: remove_item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: edit_item
    params:
      opportunityId: required
      itemId: required
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountSummary
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invitation
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: events
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: exchangeRates
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: content
    params: {}
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: content
    params: {}
- name: smsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
    data_selector: content
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
    data_selector: content
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: records
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: '250'
      sortField: CREATED_ON
      sortOrder: ASC
      start: '0'
- name: PricingUnit
  endpoint:
    path: /DiscountType
    method: GET
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
    params: {}
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
    params: {}
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
    params: {}
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: purchase order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params:
      context: RESELLER_MANAGER
      page: 1
      size: 50
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reporting_v2_reports
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: appReseller_catalog_sellableProducts
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: ''
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: REVENUE
  endpoint:
    path: /services/data/vXX.X/sobjects/Revenue
    method: GET
    data_selector: records
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: null
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: null
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: null
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: null
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: create_invoice_payment
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
    data_selector: payment
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    params: {}
- name: retrieve_pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: retrieve_pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: removeCartDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: Billing Usage V1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: Billing Usage V2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: Fetch usage processing status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: List applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: Update MyApps order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: Read application with completed assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: Read application with pending assignment
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
- name: reactivation_request
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_cancel
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId,ownerCompanyId
- name: retrieveValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode,itemIds
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: success
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: success
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: success
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhook
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: '[]'
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: '[]'
- name: theme
  endpoint:
    path: /sfb-toolkit/themes
    method: GET
    data_selector: themes
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: records
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: 'false'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: response
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    params: {}
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params: {}
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: description
  endpoint:
    path: /form/description
    method: GET
    data_selector: records
    params:
      required: true
- name: height
  endpoint:
    params:
      required: 'false'
      defaultValue: 555
      options:
      - value: 400
        label: Small 400px
      - value: 555
        label: Medium 555px
      - value: 660
        label: Large 660px
      validation:
        default: Select
- name: showRatings
  endpoint:
    data_selector: labelOn
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: label
    params:
      defaultValue: true
- name: backgroundColor
  endpoint:
    path: /backgroundColor
    method: GET
    data_selector: title
    params:
      defaultValue: '#474747'
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: quote_action
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: quote_by_id
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: size
  endpoint:
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: GET
    data_selector: content
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: response
    params: {}
- name: channel_settings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: response
    params: {}
- name: shopping_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: sliderSettings
  endpoint:
    path: /sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: /spacer
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: /slides
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: /products_list
    method: GET
    data_selector: options
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: retrieve_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
    data_selector: items
    params:
      shoppingCartId: required
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
    data_selector: 'null'
    params:
      shoppingCartId: required
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
    data_selector: 'null'
    params:
      shoppingCartId: required
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params:
      shoppingCartId: required
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
    data_selector: 'null'
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: subscriptions
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: validationSummary
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: deletedDiscount
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: deletedFee
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: createdFee
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: updatedAgents
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: deletedAgents
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: notifiedCarts
- name: SubscriptionDefinition
  endpoint:
    path: /services/data/vXX.X/sobjects/SubscriptionDefinition
    method: GET
    data_selector: records
- name: FreeTrialExtensionRequestEligibility
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestEligibility
    method: GET
    data_selector: records
- name: FreeTrialExtensionRequestIneligibilityReason
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestIneligibilityReason
    method: GET
    data_selector: records
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSAMLMetadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: samlMetadata
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscriptionDetails
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: newSubscription
    params:
      companyId: required
      userId: required
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
    data_selector: none
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: none
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: none
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_account
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: activationTokenrequired
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: userProfile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporaryPassword
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product identifier
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instruments
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: header
  endpoint:
    path: themes/themeName/header-footer
    method: GET
- name: footer
  endpoint:
    path: themes/themeName/header-footer
    method: GET
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: description
  endpoint:
    data_selector: title
    params:
      required: 'true'
- name: height
  endpoint:
    path: /height
    method: GET
    data_selector: options
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '568'
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: defaultValue
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params:
      required: true
      defaultValue: xsmall
      type: RADIO
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
- name: drawerList
  endpoint:
    type: DRAWER_LIST
- name: config
  endpoint:
    path: /configuration
    method: GET
    data_selector: config
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
    params: {}
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: common
    params: {}
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: nav
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: id
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1
    method: POST
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.commissionEvents
    params: {}
- name: validateCart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /setMarketplacePrice
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /triggerSetMarketplacePricesProcess
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /removeMarketplacePrice
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: payment_methods
  endpoint:
    path: /payment/methods
    method: GET
    data_selector: methods
- name: tokens
  endpoint:
    path: /payment/tokens
    method: POST
    data_selector: tokens
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: organization_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: company_associations
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_request
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: payload
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: payload
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencies/exchangeRates
    method: GET
    data_selector: payload
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: ''
    params: {}
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: ''
    params: {}
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      filerequired: string
      entityTyperequired: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
- name: default_common_email_templates
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: GET
    data_selector: template
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: result
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
      start: 0
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: ''
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: records
  endpoint:
    path: /services/data/vXX.X/sobjects/Records
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: delete_group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: no_content
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: single_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params: {}
- name: discard_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
    params: {}
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: records
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: records
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: records
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: ''
      leadId: ''
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: ''
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: ''
    params:
      async: false
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: ''
    params: {}
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: ''
    params: {}
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: ''
    params: {}
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: data
    params:
      opportunityId: string
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: validationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: applyDiscount
    params:
      opportunityId: required
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updatedTemplate
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deletedTemplate
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product.id
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition.id
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration.id
    params: {}
- name: generateProductIntegrationInboundClient
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productIntegrationInboundClient.clientId
    params: {}
- name: publishProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.publishProductIntegration.productIntegration.id
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.product.id
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing.id
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: data.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /productPublicationProcess
    method: GET
    data_selector: data.productPublicationProcess
    params: {}
- name: marketplaceProductSettings
  endpoint:
    path: /marketplaceProduct/productSettings/{productId}
    method: PUT
    data_selector: data.marketplaceProductSettings
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment details
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configuration details
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: creation response
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: transfer methods
    params:
      includeBalance: 'false'
- name: Order variant values
  endpoint:
    path: /graphql-docs/orderproductvariantoptionvalues.doc.html
    method: POST
    data_selector: product
    params: {}
- name: Enable variants
  endpoint:
    path: /graphql-docs/enableproductvariants.doc.html
    method: POST
    data_selector: variants
    params: {}
- name: Disable variant
  endpoint:
    path: /graphql-docs/disableproductvariants.doc.html
    method: POST
    data_selector: variants
    params: {}
- name: Query marketplace products
  endpoint:
    path: /graphql-docs/marketplaceproduct_query.doc.html
    method: POST
    data_selector: marketplaceProduct
    params: {}
- name: Query variant creation
  endpoint:
    path: /graphql-docs/productvariantscreationprocess_query.doc.html
    method: POST
    data_selector: productVariantsCreationProcess
    params: {}
- name: Product Question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: Retrieve Product Question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: Update Product Question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: Delete Product Question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: quote_versions
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: aiUsages
    params: {}
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: products
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_retrieve
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: report_delete
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: report_download
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: '[]'
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: '{}'
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: '[]'
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: '{}'
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: '{}'
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: '{}'
- name: remove_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: list_application_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: read_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: read_company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: list_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: read_currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: shoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params: {}
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: requestSubscriptionReactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: MASTER_RECORDS
  endpoint:
    path: /master_records
    method: GET
- name: ORDER
  endpoint:
    path: /order
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
- name: SALES_ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesOrder
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: records
    params:
      subscriptionId: string
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_update
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: group_memberships_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invitations_create
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations_csv
  endpoint:
    path: /companies/{companyUuid}/invitations/csv
    method: POST
- name: invitations_revoke
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
    data_selector: components
- name: orderableComponents
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall.md
    method: GET
    data_selector: orderableComponents
- name: invitations
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: user_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: 250
- name: company_invoices
  endpoint:
    path: /api/billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: 250
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: 50
      sortOrder: DESC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_NUMBER_VALUE
      toDate: SOME_NUMBER_VALUE
      sortField: DATE
      sortOrder: DESC
      page: 0
      size: 50
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: localization_file
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: customization
  endpoint:
    path: /themes/themeName/customizations
    method: PUT
    data_selector: overrides
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: GET
- name: header-footer
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: records
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    type: GROUP_HEADER
- name: SPACER
  endpoint:
    type: SPACER
- name: SLIDES
  endpoint:
    type: CHECKBOX
- name: PRODUCTS_LIST
  endpoint:
    type: PRODUCTS_LIST
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue: Specify an array of tab items.
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: Specify an array of drawer items, the expandable form object and
      allowed context menu options.
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params: {}
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params: {}
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params: {}
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /product/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: home_page
  endpoint:
    path: /themes/themeName/content/pages/home/home.html
    method: GET
- name: listing_page
  endpoint:
    path: /themes/themeName/content/pages/listing/listing.html
    method: GET
- name: profile_page
  endpoint:
    path: /themes/themeName/content/pages/profile/profile.html
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: retrieveValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: CommissionEvent
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: create_company
  endpoint:
    path: /api/account/v1/companies
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: configuration
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: 'false'
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: method
    params:
      transferMethodId: required
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: user
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: reviewComment
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /companies/<companyId>/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/usageProcessingStatus
    method: GET
    data_selector: records
- name: historic_usage_and_adjustments
  endpoint:
    path: /services/data/vXX.X/historicUsage
    method: GET
    data_selector: records
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: ''
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: usage_metrics
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: quotes
  endpoint:
    path: /v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: id
    params: {}
- name: getQuoteById
  endpoint:
    path: /v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: picture
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: items
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: items
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: read_user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: read_user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: read_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: read_company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: list_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: readCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: smsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: records
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: subscription_addons
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
    data_selector: addons
    params: {}
- name: subscription_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /master/records
    method: GET
- name: ORDER
  endpoint:
    path: /order
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: null
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: null
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params:
      removeUnspecifiedCustomAttributes: false
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: webhook
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
- name: GraphQL API
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: REST API
  endpoint:
    path: /rest
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: company_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_membership_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_membership_read
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: configuration
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: localization_files
    params: {}
- name: theme_labels
  endpoint:
    path: /themes/themeName/labels
    method: GET
    data_selector: theme_labels
    params: {}
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: sliderTitle
  endpoint:
    path: /form/schema/sliderTitle
    method: GET
    data_selector: input
    params:
      required: 'true'
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: title
    params:
      required: true
- name: height
  endpoint:
    path: /api/height
    method: GET
    data_selector: options
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: showRatings
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      labelOn: uieditor.sfbComponent.productBanner.showRatings.labelOn
      labelOff: uieditor.sfbComponent.productBanner.showRatings.labelOff
      defaultValue: true
      type: TOGGLE
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: myapps_read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: myapps_read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: image_upload
    method: POST
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: tabs_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawer_list
    method: GET
    data_selector: defaultValue
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: addItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: listItems
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: removeItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: editItem
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: '202'
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: '200'
    params:
      opportunityId: string
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: '200'
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
- name: get_opportunity_validation_results
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: required_fields_definitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: apply_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplied
    params:
      opportunityId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionEvent
    method: GET
    data_selector: records
    params: {}
- name: CommissionCycle
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionCycle
    method: GET
    data_selector: records
    params: {}
- name: paymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: createPaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: retrievePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: 'null'
- name: getPaymentMethods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
- name: createPaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: deletePaymentMethod
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: 'null'
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: userPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: allPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: DELETE
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: records
    params:
      applicationId: required
      questionId: required
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: records
- name: questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/purchaseOrders
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortOrder: ASC
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel
      userId: ID assigned by the channel
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/<productId>
    method: GET
    params:
      productId: product identifier
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledger_lines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /api/billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: dynamicSegments
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: delete_shopping_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_details
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: pricingSummary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricingSummaryByShoppingCartId
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: '[]'
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: no content
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: no content
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: no content
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: string
    params: {}
- name: payment_method
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: listProductAssignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params: {}
- name: checkout_settings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: active_cart_of_user
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalize_cart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: subscription_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: null
    params:
      subscriptionUuid: required
- name: company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: required
- name: user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: required
      userId: required
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: null
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setResellerCompanyPrice
  endpoint:
    path: /graphql-docs/setresellercompanyplaceprice.doc.html
    method: POST
- name: triggerSetResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/triggersetresellercompanypricesprocess.doc.html
    method: POST
- name: removeResellerCompanyPrice
  endpoint:
    path: /graphql-docs/removeresellercompanyprice.doc.html
    method: POST
- name: setResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/setresellercompanypricesprocess_query.doc.html
    method: GET
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: update_user_picture
  endpoint:
    path: /account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: ''
    params: {}
- name: read_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: /crm/companies
    method: POST
    data_selector: id
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands.md#install-custom-components-to-a-theme
    method: GET
    data_selector: components
    params: {}
- name: Carousel
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
    data_selector: components
    params: {}
- name: Slider
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
- name: global
  endpoint:
    path: /global
    method: GET
    data_selector: components
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: products
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: translations
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: sliderTitle
  endpoint:
    title: Slider Title
    placeholder: Slider title
    defaultValue: Slider title
    type: INPUT
    required: true
    validation:
      pattern: /^[a-zA-Z0-9 ]+$/gm
      message: This field is invalid
- name: description
  endpoint:
    data_selector: description
    params: {}
- name: dropdown
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: /sliderSettings
    method: GET
    data_selector: settings
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: imageUploader
    method: GET
    data_selector: defaultValue
    params:
      required: false
- name: pageTabs
  endpoint:
    path: TABS_LIST
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: DRAWER_LIST
    method: GET
    data_selector: defaultValue
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /product/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /commission/event
    method: GET
    data_selector: events
    params: {}
- name: CommissionCycle
  endpoint:
    path: /commission/cycle
    method: GET
    data_selector: cycles
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: companies
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: companies_partial_update
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: companies_by_external_id
  endpoint:
    path: /api/account/v2/companies/externalID:{external_ID}
    method: GET
    data_selector: company
    params: {}
- name: change_subscription
  endpoint:
    path: /api/account/v2/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: '[*]'
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: update_company
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: records
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: records
- name: send_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: records
- name: delete_payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: records
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: recurring_subscription
  endpoint:
    path: /api/recurring/subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: none
    params: {}
- name: companies_partial_update
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: none
    params: {}
- name: companies_by_external_id
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
    data_selector: none
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.linkProductIntegration
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses[0].id
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: read_product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: product
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: discounts
    params: {}
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: create_product
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: data
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: update_company
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
    data_selector: request
    params: {}
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/sobjects/MeteredUsage
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: data
    params: {}
- name: company
  endpoint:
    path: /company
    method: POST
    data_selector: data
    params: {}
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: id
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: id
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: ''
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: id
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: dataSourceId
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: ''
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: id
- name: createAI
  endpoint:
    path: /v1/ai
    method: POST
    data_selector: data
    params: {}
- name: getAIDetails
  endpoint:
    path: /v1/ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: approveAI
  endpoint:
    path: /v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: getAIChats
  endpoint:
    path: /v1/ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: createAIChat
  endpoint:
    path: /v1/ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: listAIDataSources
  endpoint:
    path: /v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: createApiDataSource
  endpoint:
    path: /v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: getChat
  endpoint:
    path: /v1/chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: usage_metrics
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: picture
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      contextrequired: RESELLER, RESELLER_MANAGER
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: id
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      contextrequired: RESELLER, RESELLER_MANAGER
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: id
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
    data_selector: id
- name: company_associations
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invitation
    params: {}
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: string
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: string
      userUuid: string
- name: invite_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: inviteResponse
    params:
      companyUuid: string
      userUuid: string
      inviterUuid: string
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseResponse
    params:
      applicationId: integer
      companyUuid: string
      userUuid: string
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: string
      userUuid: string
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
      userUuid: string
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: string
      userUuid: string
      ldap: boolean
      page: integer
      searchText: string
      size: integer
      sortField: string
      sortOrder: string
- name: publish_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: eventResponse
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params: {}
- name: createExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: ''
    params: {}
- name: readExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: ''
    params: {}
- name: deactivateExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: ''
    params: {}
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: content
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: content
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: template
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: template
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /discount
    method: GET
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: ''
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /services/data/vXX.X/sobjects/PATIENT_CARE_DAY
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: application/json
    params:
      discountId: required
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: create_invoice_payment
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: list_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: list_leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: lead_list
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: companyAssociation
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: companies_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params:
      searchText: ''
      member: true
      page: 0
      size: 50
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: ''
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: read_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
- name: lead_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: lead_conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
- name: lead_assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
- name: lead_association
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
- name: lead_update
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
- name: lead_discard
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: response
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: retrieve_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_with_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: string
      ownerCompanyId: string
      customerId: string
      customerCompanyId: string
      context: string
      status: string
      purchaseEffectiveDate: Array of strings
      createdOn: Array of strings
      searchText: string
      number: integer
      size: integer
      sort: string
- name: createOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
    params: {}
- name: deleteOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: '{}'
    params:
      opportunityId: Array of strings
- name: getOpportunityDetails
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: '{}'
    params:
      opportunityId: string
- name: updateOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: '{}'
    params:
      opportunityId: string
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: string
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: string
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: null
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: null
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: null
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: null
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: paymentInstruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstruments
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstruments
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: retrievePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: content
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: content
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: content
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: content
    params: {}
- name: paymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: retrievePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: delete_product_question_answer
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: DELETE
- name: create_product_review_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
- name: list_all_comments
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
- name: retrieve_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: review
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
    params: {}
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: products
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: stagingProducts
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: list_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: required
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: required
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: required
      reviewId: required
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: required
      reviewId: required
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: required
      reviewId: required
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params:
      size: 50
      number: 0
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: GET
    data_selector: content
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: associations
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: preAuth
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: items
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}
    method: DELETE
    data_selector: '204'
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments/{dynamicSegmentId}
    method: GET
    data_selector: '204'
    params: {}
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ''
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: ''
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: ''
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: GET
    data_selector: items
    params:
      shoppingCartId: string
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: string
    params:
      level: string
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: null
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: null
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: null
    params: {}
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: id
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: assignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
    data_selector: records
    params: {}
- name: listResellerSubscriptionAssignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
    data_selector: records
    params: {}
- name: unassignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
    data_selector: records
    params: {}
- name: reactivateSubscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: get_shopping_cart_validation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: delete_discount
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_cart_fee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_cart_fee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: Read SAML Metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: data
    params:
      subscriptionUuid: required
- name: List Company Subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: data
    params:
      companyId: required
- name: Change Subscription Details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: data
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: List User Subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: data
    params:
      companyId: required
      userId: required
- name: Create Subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: data
    params:
      companyId: required
      userId: required
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params:
      sendNotification: true
- name: update_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: PATCH
    data_selector: null
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: read_saml_info
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account_create
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: developer_account_expire
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: user_assign
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: user_unassign
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: updated_subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel_response
- name: inactiveUsers
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: User activation information
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: User
    params: {}
- name: userMemberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: User memberships
    params: {}
- name: updateUser
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: User updates
    params: {}
- name: updateUserProfile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: User profile updates
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: null
    params:
      userUuidrequired: string
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: null
    params:
      userUuidrequired: string
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: components
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: update_user_picture
  endpoint:
    path: /api/account/v2/users/{userUuid}/picture
    method: PUT
    data_selector: ''
    params: {}
- name: read_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /data/config
    method: GET
    data_selector: config
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks list
    params: {}
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: webhook information
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: webhook details
    params: {}
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: webhook update
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
    data_selector: webhook deletion
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
    params: {}
- name: ui
  endpoint:
    path: /api/marketplace/v1/ui
    method: GET
    data_selector: ui
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: theme_static_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
- name: callToAction
  endpoint:
    path: /cta
    method: GET
    data_selector: records
    params: {}
- name: Carousel
  endpoint:
    path: /sfb-toolkit/components-add
    method: POST
- name: Slider
  endpoint:
    path: /sfb-toolkit/components-add
    method: POST
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: properties
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params:
      defaultValue: true
      type: TOGGLE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: records
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: size
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: theme_translations
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets/images
    method: GET
    data_selector: assets
    params: {}
- name: header_footer_templates
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
    data_selector: templates
- name: meta_tags
  endpoint:
    path: /themes/themeName/content/layout/base.html
    method: GET
    data_selector: meta_tags
- name: sliderSettings
  endpoint:
    path: /properties/sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: /properties/SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: /properties/SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: /properties/PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: pageTabs
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: drawerList
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: records
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: properties
- name: height
  endpoint:
    path: /form/height
    method: GET
    data_selector: options
    params: {}
- name: footerLogo
  endpoint:
    path: /properties/footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: conditionalAttributes
  endpoint:
    path: /properties/conditionalAttributes
    method: GET
    data_selector: conditionalAttributes
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    data_selector: labelOn
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: label
    params: {}
- name: backgroundColor
  endpoint:
    path: /properties/backgroundColor
    method: GET
    data_selector: title
    params: {}
- name: billing_and_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /user-guides/product-information/
    method: GET
    data_selector: records
- name: users_accounts_memberships
  endpoint:
    path: /user-guides/user-companies/
    method: GET
    data_selector: records
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: common
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: nav
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
- name: CommissionEvent
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionEvent
    method: GET
- name: CommissionCycle
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionCycle
    method: GET
- name: CommissionEventErrorSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionEventErrorSummary
    method: GET
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: discounts
  endpoint:
    path: /api/billing/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: POST
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: order
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: none
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: DELETE
    data_selector: none
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: List company subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
- name: List user subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: Read subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: Cancel subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: order
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/<productId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    params:
      code: ''
      sortField: CREATED_ON
      sortOrder: ASC
      start: 0
      count: 250
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: paymentInstrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: records
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: paymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: listPaymentInstruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: readPaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription/order
    params:
      paymentPlanId: 749
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: response
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: response
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: response
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: finalizeCart
    method: POST
    data_selector: finalizeCart
- name: create_discount
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: remove_items_from_cart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params: {}
- name: update_cart_items
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems.cart
    params: {}
- name: update_cart_custom_attributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook.priceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /cartFields
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: account
  endpoint:
    path: /graphql-docs/docs
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notificationTemplatesByType
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
    params: {}
- name: updateNotificationTemplate
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updateResult
    params: {}
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deleteResult
    params: {}
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
- name: productPublicationProcess
  endpoint:
    path: /productPublicationProcess
    method: GET
- name: marketplaceProductSettings
  endpoint:
    path: /marketplaceProduct/productSettings/{productId}
    method: PUT
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: userErrors
    params:
      type: TENANT
      operation: CREATE
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: userErrors
    params:
      type: TENANT
      operation: EXPIRE
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: account
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: account
    params: {}
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: ''
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params:
      account: accountIdentifier
      quantity: quantity
      price: price
      description: description
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params:
      account: accountIdentifier
      unit: unit
      quantity: quantity
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: send_meted_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: user
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: user
    params: {}
- name: list_all_users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: list_all_companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: Create user connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: Publish event content
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: Search content
  endpoint:
    path: /appwise/v2/accounts
    method: GET
- name: feedResources
  endpoint:
    path: /graphql
    method: POST
- name: Disconnect user accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: assign_users
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/assign-users
    method: GET
- name: cancel_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/cancel-subscriptions
    method: GET
- name: change_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/change-subscriptions
    method: GET
- name: create_payment_instruments
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-payment-instruments
    method: GET
- name: create_subscriptions
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/create-subscriptions
    method: GET
- name: manage_discounts
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/manage-discounts
    method: GET
- name: metered_usage_v1
  endpoint:
    path: /user-guides/billing-and-subscription/rest-api/metered-usage-v1
    method: GET
- name: publish_content_events
  endpoint:
    path: /data
    method: POST
- name: search_content
  endpoint:
    path: /search
    method: GET
    params:
      q: search terms
- name: query_feed_resources
  endpoint:
    path: /feeds
    method: GET
- name: custom_metered_usage
  endpoint:
    path: /api/v2/metered-usage/custom
    method: POST
    data_selector: results
- name: preconfigured_metered_usage
  endpoint:
    path: /api/v2/metered-usage/preconfigured
    method: POST
    data_selector: results
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
    data_selector: {}
    params:
      partnerId: the AppDirect marketplace partner ID
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
    data_selector: {}
    params:
      partnerId: the AppDirect marketplace partner ID
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
    data_selector: {}
    params:
      partnerId: the AppDirect marketplace partner ID
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
    data_selector: {}
    params:
      fulfillmentUuid: Unique identifier of the fulfillment record
- name: rollback
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
    data_selector: {}
    params:
      fulfillmentUuid: Unique identifier of the fulfillment record
- name: status_update
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
    data_selector: {}
    params:
      fulfillmentUuid: Unique identifier of the fulfillment record
      shipmentId: Unique identifier of a shipment within a fulfillment record
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: rollback_failed_shipments
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: tracking_information_updates
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_metrics
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: rollback_shipments
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: tracking_updates
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: data.createPriceDefinition.priceDefinition
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: id
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
    data_selector: id
    params: {}
- name: account
  endpoint:
    path: /graphql/accounts_query
    method: GET
    data_selector: data.accounts
    params: {}
- name: user
  endpoint:
    path: /graphql/user_query
    method: GET
    data_selector: data.user
    params: {}
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
- name: readCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
    data_selector: content
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: content
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: content
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: content
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: null
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: list_company_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: null
    params: {}
- name: revoke_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: read_companies
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: read_accounts
  endpoint:
    path: /accounts
    method: GET
- name: read_users
  endpoint:
    path: /users
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: update_account
  endpoint:
    path: /accounts/{accountId}
    method: PATCH
- name: update_user
  endpoint:
    path: /users/{userUuid}
    method: PUT
- name: subscription_changed
  endpoint:
    path: /billing/v1/subscriptions
    method: POST
    data_selector: resource
    params: {}
- name: subscription_removed
  endpoint:
    path: /billing/v1/subscriptions
    method: DELETE
    data_selector: resource
    params: {}
- name: order_added
  endpoint:
    path: /billing/v1/orders
    method: POST
    data_selector: resource
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: companyAssignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: order_changed
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: resource
    params: {}
- name: invoice_added
  endpoint:
    path: /appmarket/v1/invoices
    method: GET
    data_selector: resource
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRateById
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: content
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: content
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: fetchcheckoutsettings
  endpoint:
    path: /user-guides/checkout/graphql/fetchcheckoutsettings.md
    method: GET
- name: fetchdetailsactive
  endpoint:
    path: /user-guides/checkout/graphql/fetchdetailsactive.md
    method: GET
- name: validatecartdetails
  endpoint:
    path: /user-guides/checkout/graphql/validatecartdetails.md
    method: GET
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /user-companies/rest/readcompaniesaccounts
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /user-companies/rest/createusers
    method: POST
    data_selector: records
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params:
      count: 250
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: id
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: id
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: id
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: id
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Add an existing data source to the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: aiId
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: aiId
    params: {}
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: id
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: id
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: id
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: id
    params: {}
- name: Duplicate a chat session
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: id
    params: {}
- name: Reset a chat session
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: ''
    params: {}
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
    params: {}
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: ''
    params: {}
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: application/json
    params:
      discountId: required
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      name: SOME_STRING_VALUE
      includeCustomAttributes: SOME_BOOLEAN_VALUE
      includePurchaseLimitData: SOME_BOOLEAN_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      custom.customAttributeName: SOME_STRING_VALUE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: discounts
    params: {}
- name: companies_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
    params: {}
- name: companies_verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: events
    params: {}
- name: groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      fromDate: SOME_INTEGER_VALUE
      page: '0'
      size: '50'
      sortField: DATE
      sortOrder: DESC
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: 'false'
      fromDate: SOME_NUMBER_VALUE
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: null
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: null
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: null
    params: {}
- name: user_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: specific_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: content
    params:
      baseCurrency: USD
      counterCurrency: CAD
      rate: '0.5'
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: content
    params:
      active: false
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: templates
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: product_catalog_update
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: product_catalog_create
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      code: string
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
      start: integer
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: removeItem
    params:
      opportunityId: required
      itemId: required
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: ''
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: ''
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: ''
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: members
    params: {}
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: boolean
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: users
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: 'false'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      page: '0'
      size: '50'
      sortField: DATE
      sortOrder: DESC
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: payment_method_types
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: '[]'
- name: payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payment_plans
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: ''
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: ''
- name: billing_usage
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: queryUsageStatus
    params: {}
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params: {}
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      count: '250'
      excludeFree: 'false'
      fromDate: ''
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: ''
      toDate: ''
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: response
    params: {}
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: response
    params: {}
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: response
    params: {}
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
    params:
      includeBalance: 'false'
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: response
    params: {}
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
    data_selector: response
    params: {}
- name: list_all_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: response
    params: {}
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
    data_selector: response
    params: {}
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: response
    params: {}
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: response
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: records
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_details
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: removeItem
    params:
      opportunityId: required
      itemId: required
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params:
      applicationId: required
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params:
      applicationId: required
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params:
      applicationId: required
      reviewId: required
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params:
      applicationId: required
      reviewId: required
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params:
      applicationId: required
      reviewId: required
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params:
      applicationId: required
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params:
      vendorUuid: required
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params:
      applicationId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: records
    params: {}
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: records
    params: {}
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: records
    params: {}
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: records
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /purchaseOrder/v1/company/{companyId}
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: purchase_orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_purchase_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: purchase_order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: '50'
      page: '0'
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params:
      companyId: required
      userId: required
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params:
      companyUuid: required
      userUuid: required
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: null
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: null
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: null
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: null
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: records
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: records
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: records
- name: delete_answer
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: DELETE
- name: create_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
- name: list_comments
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
- name: retrieve_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: update_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: list_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: appReseller_catalog_sellableProducts
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: channel_group_create
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: id
    params: {}
- name: channel_group_read
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: available_and_associated_companies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: records
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: records
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/finalize
    method: POST
- name: purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: user_purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: shopping_cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: '[]'
- name: cart_pre_auth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: '{}'
- name: shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: '[]'
- name: create_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: '{}'
- name: retrieve_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: '{}'
- name: update_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: '{}'
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params: {}
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: GET
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivationRequest
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: ''
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: ''
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: ''
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: ''
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: ''
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: ''
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
- name: Create subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: List subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: Subscription details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: Update subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: success
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: success
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: success
- name: userProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: success
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: content
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: content
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: shopping_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: delete_discount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: delete_shopping_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: notify_locked_carts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema
    method: GET
    data_selector: components
    params: {}
- name: installation
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall
    method: GET
    data_selector: installation
    params: {}
- name: creating_new_component
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add
    method: GET
    data_selector: creating_new_component
    params: {}
- name: remove_added_components
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall
    method: GET
    data_selector: remove_added_components
    params: {}
- name: delete_ui_library_components
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-delete
    method: GET
    data_selector: delete_ui_library_components
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    params:
      companyId: required
      userId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: pages.profile.components
- name: menus
  endpoint:
    path: /menus
    method: GET
    data_selector: menus.FOOTER_MENU.menu
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: urlCreator
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
    data_selector: items
    params:
      productId: '577'
      type: BUY
      eppid: 123123-123123
      appid:
      - 1233-123
      - 876-4569
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: records
    params:
      required: true
- name: description
  endpoint:
    path: /form/schema/description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: size
    method: GET
    data_selector: options
    params: {}
- name: inactiveUsers
  endpoint:
    path: /inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: userMemberships
  endpoint:
    path: /users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: userProfile
  endpoint:
    path: /users/{userUuid}/profile
    method: GET
    data_selector: response
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_details
  endpoint:
    path: /users/details
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: theme
  endpoint:
    path: /sfb-toolkit/themes
    method: GET
    data_selector: themes
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: ''
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /product/comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/*productId*
    method: GET
- name: user_details
  endpoint:
    path: /user/details
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: Banner
  endpoint:
    path: /api/v1/banner
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: sliderTitle
    params: {}
- name: description
  endpoint:
    path: /properties
    method: GET
    data_selector: description
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: size
  endpoint:
    path: /size
    method: GET
- name: productsList
  endpoint:
    path: /path/to/productsList
    method: GET
    data_selector: defaultValue.items
    params: {}
- name: background_image
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: title
    params: {}
- name: tabs_list
  endpoint:
    path: pageTabs
    method: GET
    data_selector: type
    params: {}
- name: drawer_list
  endpoint:
    path: drawerList
    method: GET
    data_selector: type
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: records
    params: {}
- name: payment_method
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: user_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.user
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      incremental: creationDate
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: user_details
  endpoint:
    path: /users/details
    method: GET
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: payment_instrument
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription_deletion
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: product_profile
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    params: {}
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: InvoiceLine
  endpoint:
    path: /invoiceLines
    method: GET
    data_selector: invoiceLines
- name: InvoicePaymentTerms
  endpoint:
    path: /invoicePaymentTerms
    method: GET
    data_selector: invoicePaymentTerms
- name: InvoiceBillingCharge
  endpoint:
    path: /invoiceBillingCharges
    method: GET
    data_selector: invoiceBillingCharges
- name: TaxReport
  endpoint:
    path: /taxReports
    method: GET
    data_selector: taxReports
- name: TaxReportDetail
  endpoint:
    path: /taxReportDetails
    method: GET
    data_selector: taxReportDetails
- name: TaxReportSummary
  endpoint:
    path: /taxReportSummaries
    method: GET
    data_selector: taxReportSummaries
- name: InvoiceListItem
  endpoint:
    path: /invoiceListItems
    method: GET
    data_selector: invoiceListItems
- name: CommissionEvent
  endpoint:
    path: /commission/event
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: id
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discount
    params: {}
- name: paymentPlan
  endpoint:
    path: /marketplace/v1/products
    method: GET
    data_selector: paymentPlan
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: ''
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: ''
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: ''
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: ''
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: ''
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: product
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: discounts
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: ''
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: content
    params: {}
- name: fetch_fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart
  endpoint:
    path: /checkout
    method: GET
    data_selector: shoppingCartDetails
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: id
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: updateCartItems
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '599'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: records
    params:
      paymentPlanId: '566'
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: GET
    data_selector: subscription
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: setResellerCompanyPrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setResellerCompanyPrice
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: metered_usage_events
  endpoint:
    path: /services/data/vXX.X/metered_usage_events
    method: POST
    data_selector: records
    params: {}
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/usage_processing_status
    method: GET
    data_selector: records
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
- name: createAI
  endpoint:
    path: /ai
    method: POST
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: subscription
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: list_ais
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: create_discount
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: payment_method
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: smsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: emailTemplate
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: template
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: template
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: templates
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: catalog
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: catalog
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
- name: lead
  endpoint:
    path: /leads
    method: POST
    data_selector: lead
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      count: 250
- name: user_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.user
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /api/discount
    method: GET
    data_selector: records
    params: {}
- name: user_details
  endpoint:
    path: /users/details
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: user_details
  endpoint:
    path: /services/data/vXX.X/graphql
    method: POST
    data_selector: data.users
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: user_details
  endpoint:
    path: /read/user/details
    method: GET
    data_selector: data
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: companies_users_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: companies_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoices_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: single_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: notificationTemplatesByType
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: updateNotificationTemplate
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product.id
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition.id
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration.id
- name: generateProductIntegrationInboundClient
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productIntegrationInboundClient.clientId
- name: publishProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.publishProductIntegration.productIntegration.id
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.linkProductIntegration.product.id
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing.id
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: ''
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: productPublicationProcess
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: send_custom_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: send_meted_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: string
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: string
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: string
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: string
      itemId: string
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: string
      itemId: string
- name: feedResources
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accountMembership.feedResources.nodes
    params: {}
- name: createUserConnection
  endpoint:
    path: /accounts
    method: POST
    data_selector: ''
    params: {}
- name: publishContent
  endpoint:
    path: /data
    method: POST
    data_selector: ''
    params: {}
- name: disconnectUser
  endpoint:
    path: /accounts
    method: DELETE
    data_selector: ''
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: '202'
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: '200'
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: '200'
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: '200'
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: shipment_status
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: zones
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: records
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: records
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: records
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: records
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
      productId: required
      editionId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: records
    params:
      opportunityId: required
- name: zones
  endpoint:
    path: /shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /shippingConfigurations/zones/{uuid}
    method: PUT
- name: price_definition
  endpoint:
    path: /priceDefinition
    method: POST
    data_selector: data.createPriceDefinition.priceDefinition
    params: {}
- name: request_subscription_price_change
  endpoint:
    path: /requestSubscriptionPriceChange
    method: POST
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: Create an account
  endpoint:
    path: /companies
    method: POST
- name: Update an account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: Patch an account
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: Read an account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: Read all accounts
  endpoint:
    path: /companies
    method: GET
- name: Create company membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
- name: Update company membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: Delete company membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: defaultPaymentMethods
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: defaultPaymentMethod
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data.users.nodes
    params: {}
- name: current_user
  endpoint:
    path: /me
    method: GET
    data_selector: data.user
    params: {}
- name: update_user
  endpoint:
    path: /users/{userUuid}
    method: PUT
    data_selector: data.user
    params: {}
- name: user
  endpoint:
    path: /account/v1/users
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: paymentPlans
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}/paymentPlans
    method: GET
    data_selector: content
    params: {}
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params: {}
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params: {}
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: resource.content
    params: {}
- name: invoice
  endpoint:
    path: /appmarket/v1/invoices
    method: GET
    data_selector: resource.content
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: company
  endpoint:
    path: /api/v1/companies
    method: GET
    data_selector: records
    params: {}
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: payment_methods
  endpoint:
    path: /services/payment/methods
    method: GET
    data_selector: methods
- name: payments
  endpoint:
    path: /services/payment/transactions
    method: POST
    data_selector: transactions
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: create_company_account_memberships
  endpoint:
    path: /user-companies/rest/createcompanyaccountmemberships
    method: POST
    data_selector: records
    params: {}
- name: delete_company_account_memberships
  endpoint:
    path: /user-companies/rest/deletecompanyaccountmemberships
    method: DELETE
    data_selector: records
    params: {}
- name: update_company_account_memberships
  endpoint:
    path: /user-companies/rest/updatecompanyaccountmemberships
    method: PUT
    data_selector: records
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: ''
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: ''
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: ''
    params: {}
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/company/{companyId}/purchaseOrders
    method: GET
    data_selector: ''
    params:
      companyId: required
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
- name: getAllChatsForAI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
- name: addDataSourceToAI
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: company_association
  endpoint:
    path: /companyAssociations
    method: GET
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
- name: list_companies
  endpoint:
    path: /companies
    method: GET
- name: create_user
  endpoint:
    path: /users
    method: POST
- name: list_users
  endpoint:
    path: /users
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: segment
    params: {}
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params:
      shoppingCartId: string
- name: shopping_cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params:
      shoppingCartId: string
- name: shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params:
      shoppingCartId: string
- name: add_item_to_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params:
      shoppingCartId: string
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      shoppingCartId: string
      itemId: string
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: none
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: none
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: none
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: none
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: delete_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: success
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      code: SOME_STRING_VALUE
      count: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_INTEGER_VALUE
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discount
    params:
      discountId: required
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: PricingUnit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      sendNotification: true
- name: vendorSharePercentage
  endpoint:
    path: /path/to/vendorSharePercentage
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: success
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: success
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: success
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: success
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: success
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: set_temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: content
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: status_verification
  endpoint:
    path: /api/integration/v1/customers/{customerIdentifier}/domains/{domain}/verificationStatus
    method: POST
- name: myapps_read_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: myapps_read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: myapps_read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: value
    params:
      required: 'true'
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: ''
      ownerCompanyId: ''
      customerId: ''
      customerCompanyId: ''
      context: ''
      status: ''
      purchaseEffectiveDate: ''
      createdOn: ''
      searchText: ''
      number: 1
      size: 10
      sort: ''
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: ''
- name: update_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: label
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: title
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: id
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: id
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: amountDueAfterTax
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricingPlanId
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: currency
  endpoint:
    path: /configuration/currency
    method: GET
- name: locale
  endpoint:
    path: /configuration/locale
    method: GET
- name: user
  endpoint:
    path: /configuration/user
    method: GET
- name: marketplaceName
  endpoint:
    path: /configuration/marketplaceName
    method: GET
- name: logo
  endpoint:
    path: /configuration/logo
    method: GET
- name: googleAnalyticsId
  endpoint:
    path: /configuration/googleAnalyticsId
    method: GET
- name: channelSettings
  endpoint:
    path: /configuration/channelSettings
    method: GET
- name: listingEndpoint
  endpoint:
    path: /configuration/listingEndpoint
    method: GET
- name: pageId
  endpoint:
    path: /configuration/pageId
    method: GET
- name: delete_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params:
      opportunityId: string
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params:
      opportunityId: string
- name: create_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params:
      companyId: string
      userId: string
- name: paymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: id
    params: {}
- name: list_payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: list_company_payments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
    params:
      count: '250'
- name: list_user_payments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
    params:
      count: '250'
- name: list_all_payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params:
      count: '250'
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: list_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: get_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: response
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: POST
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: response
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: response
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /api/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: company_orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ledgerLines
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/78/editions/468/paymentPlans/571
    method: POST
    data_selector: subscription
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_item_to_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription/order
    params: {}
- name: deleteCartItem
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: ''
    params: {}
- name: deleteCartItems
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ''
    params: {}
- name: previewShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: ''
    params: {}
- name: previewShoppingCartById
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: null
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: product
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: discounts
    params:
      start: 0
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params: {}
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: deleteFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: response
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: response
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: response
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: response
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: response
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1
    method: POST
    data_selector: items
    params: {}
- name: payment_methods
  endpoint:
    path: /api/payment/v1/methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: shippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: Create subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: List subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: Subscription details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: Update subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: data.checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: data.activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: data.finalizeCart
- name: subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: update_user
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user
    params: {}
- name: read_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: profile
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params:
      cartId: 65117cd8ce3df31e68af9446
      locale: en-US
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart.cart
    params:
      cartId: 64c8c666e7977d2ffef9d97d
      itemIds:
      - 5f339a9a-ce68-4bab-931c-e6ee45035241
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems.cart
    params:
      cartId: 668be7d341fe9e7a04bbbb53
      items:
      - id: 33e7ac1a-fcaf-484c-9d17-eccb77153152
        units:
          quantity: '3'
          unit: USER
        pricingPlanId: ae2665ca-84fa-4dd4-ac61-0c36fe8a1fe1
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes.cart
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
- name: create_webhook
  endpoint:
    path: /channel/v1/webhooks
    method: POST
- name: retrieve_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: GET
- name: update_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: PUT
- name: delete_webhook
  endpoint:
    path: /channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings.json
    method: GET
    data_selector: pages
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
- name: ui
  endpoint:
    path: /api/marketplace/v1/ui
    method: GET
    data_selector: ui
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
- name: theme_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
- name: header
  endpoint:
    path: themes/themeName/header-footer
    method: GET
    data_selector: templates
- name: footer
  endpoint:
    path: themes/themeName/header-footer
    method: GET
    data_selector: templates
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: string
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: string
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: string
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: string
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: string
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: string
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: string
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: string
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: string
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: string
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: string
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: string
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: string
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: string
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: records
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: /properties/showRatings
    method: GET
    data_selector: labelOn
    params:
      defaultValue: true
      type: TOGGLE
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read.
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read.
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: Display carets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: defaultValue
- name: Backround color
  endpoint:
    path: /backgroundColor
    method: GET
    data_selector: defaultValue
- name: borderRadius
  endpoint:
    path: /uieditor/sfbComponent/sliderComponent
    method: GET
    data_selector: borderRadius
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: POST
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: companyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /isDisplayCaretsOnHover
    method: GET
    data_selector: isDisplayCaretsOnHover
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: string
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: string
      userUuid: string
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: string
      userUuid: string
      inviterUuid: string
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: string
      userUuid: string
      applicationId: integer
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: string
      userUuid: string
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
      userUuid: string
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: string
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: string
      userUuid: string
      ldap: boolean
      page: integer
      searchText: string
      size: integer
      sortField: string
      sortOrder: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: default
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscription_id}/assignments
    method: GET
    data_selector: response
    params: {}
- name: notification_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: InvoiceLine
  endpoint:
    path: /invoiceLines
    method: GET
    data_selector: records
- name: InvoicePaymentTerms
  endpoint:
    path: /invoicePaymentTerms
    method: GET
    data_selector: records
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: message
    params: {}
- name: get_default_email_template_by_type
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: message
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: records
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
    params: {}
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/Order
    method: GET
    data_selector: records
    params: {}
- name: COMPANY
  endpoint:
    path: /services/data/vXX.X/sobjects/Company
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
    params: {}
- name: lead_details
  endpoint:
    path: /prm/v1/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: retrieve_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
- name: billingUsageV1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billingUsageV2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billingUsageStatus
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myApps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: updateMyAppsOrder
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: readAppByUserEntitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: readAppByPendingId
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: response
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: response
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: response
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: opportunities
  endpoint:
    path: /v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: string
- name: opportunity_items
  endpoint:
    path: /v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: string
- name: remove_opportunity_item
  endpoint:
    path: /v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item removal
    params:
      opportunityId: string
      itemId: string
- name: edit_opportunity_item
  endpoint:
    path: /v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item edit
    params:
      opportunityId: string
      itemId: string
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: payment_methods
  endpoint:
    path: /api/account/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: list_users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: list_companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: pricing_plan_costs
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
    params:
      opportunityId: required
- name: get_opportunity_validation_results
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: get_required_fields_definitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: apply_discount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params: {}
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
- name: userPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: allPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: response
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: response
    params:
      transferMethodId: required
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: response
- name: companies
  endpoint:
    path: /crm/companies
    method: POST
    data_selector: properties
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: company_account_membership
  endpoint:
    path: /services/data/vXX.X/sobjects/CompanyAccountMembership
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: order
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: records
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: records
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: records
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: publishProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.publishProductIntegration.productIntegration
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.linkProductIntegration.product
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: null
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
      sort: +name
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params:
      number: 0
      size: 50
      sort: +name
      selected: false
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
    data_selector: pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /productPublicationProcess
    method: GET
    data_selector: productPublicationProcess
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: ''
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: CREATE
    data_selector: tenants
    params: {}
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: EXPIRE
    data_selector: tenants
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: ''
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params:
      shoppingCartId: required
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params:
      shoppingCartId: required
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params:
      shoppingCartId: required
- name: send_meted_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: remove_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: search_content
  endpoint:
    path: /search/content
    method: GET
- name: feed_resources
  endpoint:
    path: /search/feed
    method: GET
- name: feedResources
  endpoint:
    path: /api/appwise/v2/accounts
    method: POST
- name: publishContent
  endpoint:
    path: /api/appwise/v2/data
    method: POST
- name: disconnectUser
  endpoint:
    path: /api/appwise/v2/accounts
    method: DELETE
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params:
      level: PRE_FINALIZE
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: validateAddress
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipmentRecords
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
    data_selector: records
- name: shipment_status
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
    data_selector: records
- name: zones
  endpoint:
    path: /shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /shippingConfigurations/zones/{uuid}
    method: PUT
- name: price_definition
  endpoint:
    path: /priceDefinition
    method: POST
    data_selector: data.createPriceDefinition.priceDefinition
    params: {}
- name: request_subscription_price_change
  endpoint:
    path: /requestSubscriptionPriceChange
    method: POST
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_reseller_subscription_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: Create Account
  endpoint:
    path: /companies
    method: POST
    data_selector: account
    params: {}
- name: Update Account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: account
    params: {}
- name: Read Account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: account
    params: {}
- name: List All Accounts
  endpoint:
    path: /companies
    method: GET
    data_selector: accounts
    params: {}
- name: Create Company Membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: Delete Company Membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
- name: read_saml_info
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: response
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: update_account_membership
  endpoint:
    path: updateAccount
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params:
      sendNotification: true
- name: user
  endpoint:
    path: /account/v1/users
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: order
  endpoint:
    path: /billing/v1/orders
    method: POST
    data_selector: resource.content
    params: {}
- name: invoice
  endpoint:
    path: /appmarket/v1/invoices
    method: POST
    data_selector: resource.content
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: payment_methods
  endpoint:
    path: /api/payment_methods
    method: GET
    data_selector: records
- name: tokens
  endpoint:
    path: /api/tokens
    method: POST
    data_selector: token
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: string
    params: {}
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: string
    params: {}
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: string
    params: {}
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: string
    params: {}
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: string
    params: {}
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: string
    params: {}
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: string
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
    data_selector: string
    params: {}
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: string
    params: {}
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: string
    params: {}
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: string
    params: {}
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
    data_selector: string
    params: {}
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
    data_selector: string
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: productList
  endpoint:
    path: /productLists
    method: GET
    data_selector: products
    params: {}
- name: faqList
  endpoint:
    path: /faqs
    method: GET
    data_selector: faqs
    params: {}
- name: navigator
  endpoint:
    path: /navigator
    method: GET
    data_selector: attributeGroups
    params: {}
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company_picture
    params: {}
- name: header
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: footer
  endpoint:
    path: /themes/themeName/header-footer
    method: GET
- name: custom_page
  endpoint:
    path: /themeName/content/pages/custom
    method: GET
    data_selector: pages
    params: {}
- name: theme_package
  endpoint:
    path: /theme-zips
    method: POST
    data_selector: packages
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: Banner
  endpoint:
    path: /sfb-theme-components/Banner
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: /form/schema/sliderTitle
    method: GET
    data_selector: properties
    params:
      required: 'true'
- name: companyMemberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: null
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: description
    params: {}
- name: Height
  endpoint:
    path: /properties/height
    method: GET
- name: showRatings
  endpoint:
    path: showRatings
    method: GET
    data_selector: defaultValue
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: label
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: title
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: Array
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: Object
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: Object
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: Object
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: Object
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: Object
    params: {}
- name: read_company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: Object
    params: {}
- name: company_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: Array
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: Object
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: Array
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: bundle
  endpoint:
    path: /bundle
    method: GET
- name: product_comparison
  endpoint:
    path: /comparison
    method: GET
- name: product_profile
  endpoint:
    path: /apps/{productId}
    method: GET
- name: publishCatalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: defaultNotificationTemplate
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: createOrUpdateDefaultEmailTemplate
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: vendor_discount
  endpoint:
    path: /api/v1/vendor_discount
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: data
    params:
      discountId: required
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: group_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: null
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
      subscriptionId: the ID assigned by the channel to identify each subscription
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
- name: marketplace_product_active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: marketplace_product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription_update
  endpoint:
    path: /subscription/update
    method: PUT
    data_selector: subscription
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params: {}
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params: {}
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params: {}
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplied
    params:
      opportunityId: required
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      start: '0'
      sortField: INVOICE_ID
      sortOrder: ASC
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: transferPlatformConfigurations
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: transferPlatformConfiguration
    params: {}
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: transferMethods
    params: {}
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: ''
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: ''
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: ''
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review
    params:
      applicationId: required
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews
    params:
      applicationId: required
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review
    params:
      applicationId: required
      reviewId: required
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review
    params:
      applicationId: required
      reviewId: required
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review
    params:
      applicationId: required
      reviewId: required
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
    params:
      applicationId: required
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: vendorProducts
    params:
      vendorUuid: required
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: productStatus
    params:
      applicationId: required
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: ''
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: ''
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1/send
    method: POST
    data_selector: account
    params: {}
- name: orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/orders
    method: GET
- name: user_orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
- name: order_payments
  endpoint:
    path: /api/billing/v1/orders/{orderId}/payments
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fetch_shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params:
      shippingQuoteId: e3c98671-7e3a-41ee-be52-a662634192e2
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: quote_execute_action
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: quote_by_id
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transfer_ledger_lines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
- name: available_and_associated_companies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicant_list
- name: shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
    data_selector: content
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_shopping_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_shopping_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: getPricingSummary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: getPricingSummaryByShoppingCartId
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: null
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: null
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params: {}
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get AI Chats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create AI Chat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List AI Data Sources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Create API Data Source
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Get Chat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: Message Chat
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: user_assignments
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
- name: user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
- name: update_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: ''
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
    params: {}
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: ''
    params: {}
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: request_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: read_company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: events
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
- name: FOOTER_MENU
  endpoint:
    params:
      menuType: MENU_LINK
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: baseCurrency
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: records
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: records
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: records
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: records
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: records
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: ''
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: true
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: product_comparison
  endpoint:
    path: /mytheme/comparison
    method: GET
- name: product_listing
  endpoint:
    path: /mytheme/listing
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: companies_verifiedDomains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: members
    params:
      searchText: string
      member: true
      page: 0
      size: 50
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params:
      filter: string
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: records
- name: list_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
      buyerRole: string
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: list_invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params:
      count: '250'
      fromDate: number
      method: string
      result: string
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: '0'
      toDate: number
- name: pay_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: list_leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params:
      fromDate: integer
      page: '0'
      searchText: string
      size: '50'
      sortField: DATE
      sortOrder: DESC
      source: array
      status: array
      target: array
      toDate: integer
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: content
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: ''
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: POST
- name: unassign_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- endpoint:
    params:
      paymentPlanId: '553'
- endpoint:
    params:
      paymentPlanId: '568'
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: createOpportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
- name: getOpportunityDetails
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: content
- name: opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: '[].id'
    params:
      opportunityId: required
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: id
    params:
      opportunityId: required
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: ID of the product
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstruments
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstruments
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: listPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /api/marketplace/v1/products/78/editions/468/paymentPlans/571
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
- name: payments
  endpoint:
    path: /payments/{paymentNumber}
    method: GET
    data_selector: responses
    params: {}
- name: payment_invoices
  endpoint:
    path: /payments/{paymentNumber}/invoices
    method: GET
    data_selector: responses
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: responses
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: responses
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params: {}
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: stagingCatalog
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/marketplace/v1/purchaseOrders
    method: GET
    data_selector: purchaseOrders
    params: {}
- name: create_discount
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: 50
      page: 0
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: addItemsToCart
  endpoint:
    path: /addItemsToCart
    method: POST
- name: applyDiscountToCart
  endpoint:
    path: /applyDiscountToCart
    method: POST
- name: removeDiscountFromCart
  endpoint:
    path: /removeDiscountFromCart
    method: POST
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: POST
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: shippingQuoteId
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: null
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: null
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: null
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: null
    params: {}
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_by_id
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: create_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: POST
    data_selector: id
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: send_custom_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: results
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: list_reseller_subscription_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: user_sync
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: user
    params: {}
- name: feedResources
  endpoint:
    path: /feedResources
    method: GET
    data_selector: nodes
- name: Create user connections
  endpoint:
    path: /accounts
    method: POST
- name: Publish event content
  endpoint:
    path: /data
    method: POST
- name: Disconnect user accounts
  endpoint:
    path: /accounts
    method: DELETE
- name: readSAMLmetadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: validateAddress
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipmentRecords
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: shipment_status
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: zones
  endpoint:
    path: /shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /shippingConfigurations/zones/{uuid}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: RESELLER_COMPANY_ID
      customerCompanyId: CUSTOMER_COMPANY_ID
- name: subscription_detail
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: requestSubscriptionPriceChange
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: priceDefinition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.priceDefinition
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: read_user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: create_account
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: ''
    params: {}
- name: update_account
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: read_account
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_accounts
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: ''
    params: {}
- name: create_user_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: resource.content
    params: {}
- name: company
  endpoint:
    path: /api/account/v2/companies/{companyUuid}
    method: PUT
    data_selector: resource.content
    params: {}
- name: user
  endpoint:
    path: /api/account/v1/users
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /api/account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productList
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: products
- name: faq
  endpoint:
    path: /api/faq
    method: GET
    data_selector: faqs
- name: navigator
  endpoint:
    path: /api/navigator
    method: GET
    data_selector: navigator
- name: Buy button
  endpoint:
    path: /api/internal/storefront/v1/cta
    method: GET
    data_selector: ''
    params:
      productId: '577'
      type: BUY
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: properties
    params: {}
- name: metered_usage
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: events
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params:
      defaultValue: true
      type: TOGGLE
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: companies
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
      active: SOME_STRING_VALUE
      enabled: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
      partner: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      active: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      fromDate: SOME_STRING_VALUE
      toDate: SOME_STRING_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      searchText: SOME_STRING_VALUE
      createdOn: SOME_STRING_VALUE
      sort: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
- name: company_memberships
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
    params: {}
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
      ldap: optional
      page: optional
      searchText: optional
      size: optional
      sortField: optional
      sortOrder: optional
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: events
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: content
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: content
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: message
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: response
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /commissionEvent
    method: POST
    data_selector: data
- name: CommissionCycle
  endpoint:
    path: /commissionCycle
    method: GET
    data_selector: data
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
- name: verified_companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: content
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: POST
- name: delete_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /api/billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoice_registration
  endpoint:
    path: /api/account/v2/invitations/{invitationToken}/registration
    method: POST
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '553'
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
- name: subscription
  endpoint:
    path: /api/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usages
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: product
    params: {}
- name: product_tags
  endpoint:
    path: /marketplace/v1/navigator
    method: GET
    data_selector: Product tags information
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunityId
    params: {}
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: createdPaymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: updatedPaymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: deletedPaymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /api/marketplace/v1/products/78/editions/463/paymentPlans/566
    method: POST
    data_selector: subscription
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: listPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: add_items_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: apply_discount_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: '250'
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: validateCart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart
    params:
      input:
        cartId: string
        level: PRE_FINALIZE
        itemIds:
        - string
        locale: en-US
- name: cartValidation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params:
      input:
        cartId: string
        level: PRE_FINALIZE
        itemIds:
        - string
        locale: en-US
- name: createPriceBook
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: data.createPriceBook
    params:
      createPriceBookInput:
        name: string
        description: string
        createdBy: string
- name: createPriceBookCondition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: data.createPriceBookCondition
    params:
      createPriceBookConditionInput:
        priceBookId: string
        name: string
        createdBy: string
        conditions:
        - property: COMPANY_ID
          values:
          - string
- name: createPriceBookEntry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: data.createPriceBookEntry
    params:
      createPriceBookEntryInput:
        priceBookId: string
        pricingPlanId: string
        createdBy: string
        units:
        - unit: string
          priceRanges:
          - minUnits: integer
            maxUnits: integer
            percentage: boolean
            prices:
            - currency: string
              price: number
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: applicants
  endpoint:
    path: /api/applicants
    method: GET
    data_selector: applicants
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channelSettings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shoppingCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: get_shopping_cart_validation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: delete_discount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: delete_shopping_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: create_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: update_accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: delete_accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notify_locked_carts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
    data_selector: records
- name: list_reseller_subscription_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
    data_selector: records
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
    data_selector: records
    params:
      subscriptionAssignmentId: required
- name: reactivate_subscription
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_update
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: subscription_cancellation
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
    params:
      sendNotification: true
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: userAccounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /inactiveUsers/{activationToken}
    method: PATCH
    data_selector: success
- name: users
  endpoint:
    path: /users/{userUuid}
    method: GET
    data_selector: success
- name: user_memberships
  endpoint:
    path: /users/{userUuid}/memberships
    method: GET
    data_selector: success
- name: update_user
  endpoint:
    path: /users/{userUuid}
    method: PUT
    data_selector: success
- name: update_user_profile
  endpoint:
    path: /users/{userUuid}/profile
    method: PUT
    data_selector: success
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: userProfile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporaryPassword
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: webhookList
    params: {}
- name: Carousel
  endpoint:
    path: /components/Carousel
    method: POST
- name: Slider
  endpoint:
    path: /components/Slider
    method: POST
- name: settings
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: logo
- name: custom_apps
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_apps
- name: custom_lists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: custom_lists
- name: size
  endpoint:
    path: /form/schema/size
    method: GET
    data_selector: options
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notificationTemplatesByType
  endpoint:
    path: /graphql/notificationTemplatesByType
    method: POST
    data_selector: data.notificationTemplatesByType
- name: updateNotificationTemplate
  endpoint:
    path: /graphql/updateNotificationTemplate
    method: POST
    data_selector: data.updateNotificationTemplate
- name: deleteNotificationTemplate
  endpoint:
    path: /graphql/deleteNotificationTemplate
    method: POST
    data_selector: data.deleteNotificationTemplate
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: createProduct
  endpoint:
    path: /api/products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /api/products/v1/resources/image/uploadAndLink
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - overview
    - features
    - reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue:
      items:
      - label: Facebook
        icon: facebook
      - label: Twitter
        icon: twitter
      form:
        accountLink:
          title: account link
          placeholder: placeholder
          defaultValue: ''
          type: INPUT
          required: false
        uploadIcon:
          title: upload icon
          caption: caption
          placeholder: placeholder
          defaultValue: ''
          type: IMAGE_UPLOADER
          required: false
      contextMenuOptions:
      - SHOW_HIDE
- name: configuration_data
  endpoint:
    path: /config
    method: GET
- name: metadata
  endpoint:
    path: /meta
    method: GET
- name: common_data
  endpoint:
    path: /common
    method: GET
- name: navigation_data
  endpoint:
    path: /nav
    method: GET
- name: internationalization_data
  endpoint:
    path: /i18n
    method: GET
- name: createAI
  endpoint:
    path: /api/v1/ai
    method: POST
    data_selector: id
- name: getAIDetails
  endpoint:
    path: /api/v1/ai/{aiId}
    method: GET
    data_selector: id
- name: approveAI
  endpoint:
    path: /api/v1/ai/{aiId}/approve
    method: PUT
- name: getAllChatsForAI
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /api/v1/ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /api/v1/ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /api/v1/ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /api/v1/chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /api/v1/chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /api/v1/chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /api/v1/chats/{chatId}/reset
    method: PUT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: ai_usage
  endpoint:
    path: /api/v1/usage/ai
    method: GET
    data_selector: orgUsage
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: ''
    params:
      name: SOME_STRING_VALUE
      includeCustomAttributes: SOME_BOOLEAN_VALUE
      includePurchaseLimitData: SOME_BOOLEAN_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      custom.customAttributeName: SOME_STRING_VALUE
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: ''
    params: {}
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: ''
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: payload
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: payload
- name: currency_exchange_rates
  endpoint:
    path: /account/v2/currencyExchangeRates
    method: GET
    data_selector: payload
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_notification_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_element
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params:
      typerequired: string
- name: common_templates_definitions
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: ''
    params: {}
- name: update_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params:
      filerequired: string
      entityTyperequired: string
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params:
      filerequired: string
      entityTyperequired: string
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: data
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: 749
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription_details
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: status
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: validate_cart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.notificationTemplatesByType
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateNotificationTemplate
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.deleteNotificationTemplate
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
- name: OVERAGE_FEES
  endpoint:
    path: /OVERAGE_FEES
    method: GET
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /OVERAGE_FEE_TRANSACTION
    method: GET
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /OVERAGE_FEES_DOCUMENT
    method: GET
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /OVERAGE_FEES_ITEM
    method: GET
- name: EVENT
  endpoint:
    path: /EVENT
    method: GET
- name: BUSINESS_EVENT
  endpoint:
    path: /BUSINESS_EVENT
    method: GET
- name: LEGAL_TENDER
  endpoint:
    path: /LEGAL_TENDER
    method: GET
- name: ANNUAL_REVENUE
  endpoint:
    path: /ANNUAL_REVENUE
    method: GET
- name: AD_SYNC
  endpoint:
    path: /AD_SYNC
    method: GET
- name: FULL_DATA_RESTORE
  endpoint:
    path: /FULL_DATA_RESTORE
    method: GET
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: data.createProduct.product.id
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: data.productPublicationProcesses.id
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: records
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: DiscountType
  endpoint:
    path: DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: PricingUnit
    method: GET
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: unique system-assigned identifier
- name: send_custom_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: events
- name: send_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: assign_user
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: unassign_user
    params: {}
- name: feedResources
  endpoint:
    path: /api/appwise/v2/accounts
    method: POST
- name: validateAddress
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipmentRecords
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/{fulfillmentUuid}/shipmentRecords
    method: PUT
- name: shipment_status
  endpoint:
    path: /api/appMarket/v2/fulfillment/{fulfillmentUuid}/shipments/{shipmentId}/status
    method: PUT
- name: zones
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: PUT
- name: requestSubscriptionPriceChange
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: priceDefinition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.priceDefinition
    params: {}
- name: Create account
  endpoint:
    path: /companies
    method: POST
    data_selector: account
    params: {}
- name: Update account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: account
    params: {}
- name: Read account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: account
    params: {}
- name: List accounts
  endpoint:
    path: /companies
    method: GET
    data_selector: accounts
    params: {}
- name: Create company membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: Update company membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
    params: {}
- name: Delete company membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: success
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: POST
    data_selector: ''
    params: {}
- name: company_memberships
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
    params: {}
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: editions
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: events
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data.users.nodes
- name: update_user
  endpoint:
    path: /users/{userUuid}
    method: PUT
    data_selector: data.user
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: user
  endpoint:
    path: /account/v1/users
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      start: '0'
      sortOrder: ASC
- name: lead
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: '50'
      sortOrder: DESC
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: content
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: resource
    params: {}
- name: resource
  endpoint:
    path: /resource
    method: GET
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /order
    method: GET
    data_selector: order
    params: {}
- name: catalog_product
  endpoint:
    path: /catalog_product
    method: GET
    data_selector: application
    params: {}
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: company
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: invoice
    params: {}
- name: lead
  endpoint:
    path: /lead
    method: GET
    data_selector: lead
    params: {}
- name: membership
  endpoint:
    path: /membership
    method: GET
    data_selector: membership
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/{id}
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params: {}
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: lead
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: lead
    params: {}
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: activities
    params: {}
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: Membership
  endpoint:
    path: /api/account/v1/companies/{company_uuid}/users/{user_uuid}
    method: GET
- name: Staging Product
  endpoint:
    path: /api/marketplace/v1/products/{id}
    method: GET
- name: Subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscr_uuid}
    method: GET
- name: User
  endpoint:
    path: /api/account/v1/users/{user_id}
    method: GET
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usage data information
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: metered usage request body
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: usage event processing status
    params: {}
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications assigned to a marketplace company user
    params: {}
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: ordered list of app hrefs
    params: {}
- name: read_app_by_user_entitlement
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
    data_selector: user's application when assignment is complete
    params: {}
- name: read_app_by_pending_id
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
    data_selector: user's application when assignment is pending
    params: {}
- name: account
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.account
    params:
      id: ID!
- name: accountAssociations
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accountAssociations
    params:
      resellerAccountId: ID
      customerAccountId: ID
      first: Int
      after: String
      before: String
      last: Int
      filter: AccountAssociationFilter
      orderBy: AccountAssociationOrderBy
- name: accountByExternalId
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accountByExternalId
    params:
      externalId: String!
- name: accountMembership
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accountMembership
    params:
      accountId: ID!
      userId: ID!
- name: accountMemberships
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accountMemberships
    params:
      accountId: ID!
      first: Int
      after: String
      before: String
      last: Int
      filter: AccountMembershipFilter
      orderBy: AccountMembershipOrderBy
- name: accounts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.accounts
    params:
      first: Int
      after: String
      before: String
      last: Int
      filter: AccountsFilter
      orderBy: AccountOrderBy
- name: activeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.activeCart
    params:
      locale: Locale
      isPreviewCheckout: Boolean
- name: allocation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.allocation
    params:
      input: SubscriptionAllocationInput!
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: opportunity
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: attestationStatusByCompany
  endpoint:
    path: /attestationStatusByCompany
    method: POST
    data_selector: data.attestationStatusByCompany
    params: {}
- name: billingChargeAllocations
  endpoint:
    path: /billingChargeAllocations
    method: POST
    data_selector: data.billingChargeAllocations
    params: {}
- name: billingRelationship
  endpoint:
    path: /billingRelationship
    method: POST
    data_selector: data.billingRelationship
    params: {}
- name: billingRelationships
  endpoint:
    path: /billingRelationships
    method: POST
    data_selector: data.billingRelationships
    params: {}
- name: bootstrapMarketplaceProductSearchIndexesStatus
  endpoint:
    path: /bootstrapMarketplaceProductSearchIndexesStatus
    method: POST
    data_selector: data.bootstrapMarketplaceProductSearchIndexesStatus
    params: {}
- name: cartFields
  endpoint:
    path: /cartFields
    method: POST
    data_selector: data.cartFields
    params: {}
- name: cartValidation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: POST
    data_selector: data.checkoutSettings
    params: {}
- name: commissionCycleExecutions
  endpoint:
    path: /commissionCycleExecutions
    method: POST
    data_selector: data.commissionCycleExecutions
    params: {}
- name: commissionCyclesByYear
  endpoint:
    path: /commissionCyclesByYear
    method: POST
    data_selector: data.commissionCyclesByYear
    params: {}
- name: commissionEvent
  endpoint:
    path: /commissionEvent
    method: POST
    data_selector: data.commissionEvent
    params: {}
- name: commissionEventReport
  endpoint:
    path: /commissionEventReport
    method: POST
    data_selector: data.commissionEventReport
    params: {}
- name: creditMemo
  endpoint:
    path: /creditMemo
    method: POST
    data_selector: data.creditMemo
    params: {}
- name: creditMemos
  endpoint:
    path: /creditMemos
    method: POST
    data_selector: data.creditMemos
    params: {}
- name: curatedCompanyCatalog
  endpoint:
    path: /curatedCompanyCatalog
    method: POST
    data_selector: data.curatedCompanyCatalog
    params: {}
- name: customer
  endpoint:
    path: /customer
    method: POST
    data_selector: data.customer
    params: {}
- name: customerByUserAndAccountAndMerchant
  endpoint:
    path: /customerByUserAndAccountAndMerchant
    method: POST
    data_selector: data.customerByUserAndAccountAndMerchant
    params: {}
- name: customerDetailsByJobRunId
  endpoint:
    path: /customerDetailsByJobRunId
    method: POST
    data_selector: data.customerDetailsByJobRunId
    params: {}
- name: customersForMerchantOfRecord
  endpoint:
    path: /customersForMerchantOfRecord
    method: POST
    data_selector: data.customersForMerchantOfRecord
    params: {}
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: response
    params: {}
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: response
    params: {}
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: response
    params: {}
- name: getPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: getPricingPlanCostsWithoutOpportunity
  endpoint:
    path: /assistedSales/v1/pricingPlanCosts
    method: GET
    data_selector: response
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: customerTotalBalanceByAccountAndMerchant
  endpoint:
    path: customerTotalBalanceByAccountAndMerchant
    method: POST
    data_selector: data.customerTotalBalanceByAccountAndMerchant
    params:
      accountId: ID!
      merchantReference: String!
- name: defaultBillingRelationship
  endpoint:
    path: defaultBillingRelationship
    method: POST
    data_selector: data.defaultBillingRelationship
    params:
      locale: Locale!
- name: distributorAccount
  endpoint:
    path: distributorAccount
    method: POST
    data_selector: data.distributorAccount
    params:
      accountId: String!
      distributorId: DistributorId!
- name: distributorProductImports
  endpoint:
    path: distributorProductImports
    method: POST
    data_selector: data.distributorProductImports
    params:
      first: Int
      after: String
      last: Int
      before: String
      filter: DistributorProductImportsFilter
      orderBy: DistributorsProductsImportsOrderByInput
- name: distributors
  endpoint:
    path: distributors
    method: POST
    data_selector: data.distributors
    params: {}
- name: distributorsProducts
  endpoint:
    path: distributorsProducts
    method: POST
    data_selector: data.distributorsProducts
    params:
      first: Int
      after: String
      last: Int
      before: String
      filter: DistributorsProductsFilter
      orderBy: DistributorsProductsOrderByInput
- name: distributorsProductsFiltersData
  endpoint:
    path: distributorsProductsFiltersData
    method: POST
    data_selector: data.distributorsProductsFiltersData
    params:
      distributorDetails: DistributorDetailsInput
- name: domainAvailability
  endpoint:
    path: domainAvailability
    method: POST
    data_selector: data.domainAvailability
    params:
      domain: String!
      country: String!
      resellerDomain: String
- name: errorSummaryByCycle
  endpoint:
    path: errorSummaryByCycle
    method: POST
    data_selector: data.errorSummaryByCycle
    params:
      cycle: String!
- name: eventsMissingByCycle
  endpoint:
    path: eventsMissingByCycle
    method: POST
    data_selector: data.eventsMissingByCycle
    params:
      cycle: String!
- name: exchangeRate
  endpoint:
    path: exchangeRate
    method: POST
    data_selector: data.exchangeRate
    params:
      input: ExchangeRateInput!
- name: exportSearchIndexDocuments
  endpoint:
    path: exportSearchIndexDocuments
    method: POST
    data_selector: data.exportSearchIndexDocuments
    params:
      locale: Locale!
      tenant: String!
- name: failedInvoices
  endpoint:
    path: failedInvoices
    method: POST
    data_selector: data.failedInvoices
    params:
      first: Int
      after: String
      before: String
      sort: OrderDirection!
      sortBy: FailedInvoiceOrderField!
      searchText: String
      filter: FailedInvoiceFilter
- name: failedUsages
  endpoint:
    path: failedUsages
    method: POST
    data_selector: data.failedUsages
    params:
      jobId: String!
      first: Int
      after: String
      last: Int
      before: String
- name: fetchEligibleOffersForCustomer
  endpoint:
    path: fetchEligibleOffersForCustomer
    method: POST
    data_selector: data.fetchEligibleOffersForCustomer
    params:
      customerId: String!
      companyUuid: String!
- name: fetchProductRecommendations
  endpoint:
    path: fetchProductRecommendations
    method: POST
    data_selector: data.fetchProductRecommendations
    params:
      input: AdobeRecommendationInput!
- name: filteredUsageDetailsByJobRunId
  endpoint:
    path: filteredUsageDetailsByJobRunId
    method: POST
    data_selector: data.filteredUsageDetailsByJobRunId
    params: {}
- name: findPaginatedSubscriptionSyncRequests
  endpoint:
    path: findPaginatedSubscriptionSyncRequests
    method: POST
    data_selector: data.findPaginatedSubscriptionSyncRequests
    params:
      page: Int
      size: Int
      subscriptionUuid: String
      microsoftSubscriptionUuid: String
      companyName: String
      status: String
      startDate: Date
      endDate: Date
- name: function
  endpoint:
    path: function
    method: POST
    data_selector: data.function
    params:
      id: ID!
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discount
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: requiredFields
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: shippingAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: shippingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: cloneOpportunity
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
    params: {}
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
    params: {}
- name: functions
  endpoint:
    path: functions
    method: POST
    data_selector: functions
    params: {}
- name: getSubscriptionAndSkuDetails
  endpoint:
    path: getSubscriptionAndSkuDetails
    method: POST
    data_selector: getSubscriptionAndSkuDetails
    params: {}
- name: gmvBalance
  endpoint:
    path: gmvBalance
    method: POST
    data_selector: gmvBalance
    params: {}
- name: iaasJobDetailsWithJobRunParameters
  endpoint:
    path: iaasJobDetailsWithJobRunParameters
    method: POST
    data_selector: iaasJobDetailsWithJobRunParameters
    params: {}
- name: iaasJobs
  endpoint:
    path: iaasJobs
    method: POST
    data_selector: iaasJobs
    params: {}
- name: inventory
  endpoint:
    path: inventory
    method: POST
    data_selector: inventory
    params: {}
- name: inventoryByEditionCode
  endpoint:
    path: inventoryByEditionCode
    method: POST
    data_selector: inventoryByEditionCode
    params: {}
- name: inventoryRulesConfiguration
  endpoint:
    path: inventoryRulesConfiguration
    method: POST
    data_selector: inventoryRulesConfiguration
    params: {}
- name: invoice
  endpoint:
    path: invoice
    method: POST
    data_selector: invoice
    params: {}
- name: invoices
  endpoint:
    path: invoices
    method: POST
    data_selector: invoices
    params: {}
- name: jobDetailsByJobId
  endpoint:
    path: jobDetailsByJobId
    method: POST
    data_selector: jobDetailsByJobId
    params: {}
- name: jobDetailsByJobIdStatusPartner
  endpoint:
    path: jobDetailsByJobIdStatusPartner
    method: POST
    data_selector: jobDetailsByJobIdStatusPartner
    params: {}
- name: jobDetailsByJobRunId
  endpoint:
    path: jobDetailsByJobRunId
    method: POST
    data_selector: jobDetailsByJobRunId
    params: {}
- name: jobDetailsResponseByJobExecutionId
  endpoint:
    path: jobDetailsResponseByJobExecutionId
    method: POST
    data_selector: jobDetailsResponseByJobExecutionId
    params: {}
- name: jobStatusByJobId
  endpoint:
    path: jobStatusByJobId
    method: POST
    data_selector: jobStatusByJobId
    params: {}
- name: marketplaceProduct
  endpoint:
    path: marketplaceProduct
    method: POST
    data_selector: marketplaceProduct
    params: {}
- name: me
  endpoint:
    path: me
    method: POST
    data_selector: me
    params: {}
- name: microsoftSubscriptionSyncStatus
  endpoint:
    path: microsoftSubscriptionSyncStatus
    method: POST
    data_selector: microsoftSubscriptionSyncStatus
    params: {}
- name: notificationOptOutsByMethodAndTarget
  endpoint:
    path: notificationOptOutsByMethodAndTarget
    method: POST
    data_selector: notificationOptOutsByMethodAndTarget
    params: {}
- name: notificationOptOutsByMethodAndType
  endpoint:
    path: notificationOptOutsByMethodAndType
    method: POST
    data_selector: notificationOptOutsByMethodAndType
    params: {}
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: response
    params: {}
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: response
    params: {}
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: response
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: response
    params: {}
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: response
    params: {}
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: response
    params: {}
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: response
    params: {}
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: response
    params: {}
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
    data_selector: response
    params: {}
- name: list_all_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: response
    params: {}
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
    data_selector: response
    params: {}
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: response
    params: {}
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: response
    params: {}
- name: notificationOptOutSettings
  endpoint:
    path: notificationOptOutSettings
    method: POST
    data_selector: data.notificationOptOutSettings
    params: {}
- name: notificationTemplatesByType
  endpoint:
    path: notificationTemplatesByType
    method: POST
    data_selector: data.notificationTemplatesByType
    params: {}
- name: payment
  endpoint:
    path: payment
    method: POST
    data_selector: data.payment
    params: {}
- name: paymentByPaymentNumber
  endpoint:
    path: paymentByPaymentNumber
    method: POST
    data_selector: data.paymentByPaymentNumber
    params: {}
- name: paymentMethods
  endpoint:
    path: paymentMethods
    method: POST
    data_selector: data.paymentMethods
    params: {}
- name: payments
  endpoint:
    path: payments
    method: POST
    data_selector: data.payments
    params: {}
- name: paymentsByCompanyId
  endpoint:
    path: paymentsByCompanyId
    method: POST
    data_selector: data.paymentsByCompanyId
    params: {}
- name: paymentsByUserAndCompanyId
  endpoint:
    path: paymentsByUserAndCompanyId
    method: POST
    data_selector: data.paymentsByUserAndCompanyId
    params: {}
- name: product
  endpoint:
    path: product
    method: POST
    data_selector: data.product
    params: {}
- name: productDeletionProcess
  endpoint:
    path: productDeletionProcess
    method: POST
    data_selector: data.productDeletionProcess
    params: {}
- name: productEditionAssociations
  endpoint:
    path: productEditionAssociations
    method: POST
    data_selector: data.productEditionAssociations
    params: {}
- name: productIntegration
  endpoint:
    path: productIntegration
    method: POST
    data_selector: data.productIntegration
    params: {}
- name: productIntegrationsByVendorId
  endpoint:
    path: productIntegrationsByVendorId
    method: POST
    data_selector: data.productIntegrationsByVendorId
    params: {}
- name: productPublicationProcess
  endpoint:
    path: productPublicationProcess
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: productRecommendations
  endpoint:
    path: productRecommendations
    method: POST
    data_selector: data.productRecommendations
    params: {}
- name: products
  endpoint:
    path: products
    method: POST
    data_selector: data.products
    params: {}
- name: answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: null
    params: {}
- name: comments
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: null
    params: {}
- name: questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: null
    params: {}
- name: productsByVendorId
  endpoint:
    path: /productsByVendorId
    method: POST
    data_selector: productsByVendorId
    params:
      vendorId: ID
      version: String!
      first: Int
      after: String
      last: Int
      before: String
- name: productSearchSettings
  endpoint:
    path: /productSearchSettings
    method: POST
    data_selector: productSearchSettings
    params:
      useProductionVersion: Boolean!
- name: productUnpublicationProcess
  endpoint:
    path: /productUnpublicationProcess
    method: POST
    data_selector: productUnpublicationProcess
    params:
      id: ID!
- name: productVariantsCreationProcess
  endpoint:
    path: /productVariantsCreationProcess
    method: POST
    data_selector: productVariantsCreationProcess
    params:
      id: ID!
- name: program
  endpoint:
    path: /program
    method: POST
    data_selector: program
    params:
      type: String!
- name: psaCompaniesByName
  endpoint:
    path: /psaCompaniesByName
    method: POST
    data_selector: psaCompaniesByName
    params:
      name: String!
      connectorType: PsaConnectorType
      mor:
        type: null
        identifier: example
- name: psaAgreementsByCompanyId
  endpoint:
    path: /psaAgreementsByCompanyId
    method: POST
    data_selector: psaAgreementsByCompanyId
    params:
      psaCompanyId: ID!
      connectorType: PsaConnectorType
      mor:
        type: null
        identifier: example
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: records
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: records
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: records
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: records
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/marketplace/v1/purchaseOrders
    method: GET
    data_selector: records
    params:
      companyId: required
- name: orders
  endpoint:
    path: /get/billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /get/billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /get/billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: publishedProductsSearch
  endpoint:
    path: publishedProductsSearch
    method: POST
    data_selector: data.publishedProductsSearch
    params: {}
- name: publishedProductsSearchTesting
  endpoint:
    path: publishedProductsSearchTesting
    method: POST
    data_selector: data.publishedProductsSearchTesting
    params: {}
- name: rawUsageCountByJobId
  endpoint:
    path: rawUsageCountByJobId
    method: POST
    data_selector: data.rawUsageCountByJobId
    params: {}
- name: rawUsageItem
  endpoint:
    path: rawUsageItem
    method: POST
    data_selector: data.rawUsageItem
    params: {}
- name: rawUsageItemsByJobId
  endpoint:
    path: rawUsageItemsByJobId
    method: POST
    data_selector: data.rawUsageItemsByJobId
    params: {}
- name: readCompanyMappingByAccountIdAndOrPsaAccountId
  endpoint:
    path: readCompanyMappingByAccountIdAndOrPsaAccountId
    method: POST
    data_selector: data.readCompanyMappingByAccountIdAndOrPsaAccountId
    params: {}
- name: readPsaProductMappingByItemIdsOrPsaProductId
  endpoint:
    path: readPsaProductMappingByItemIdsOrPsaProductId
    method: POST
    data_selector: data.readPsaProductMappingByItemIdsOrPsaProductId
    params: {}
- name: relationshipRequestByCompany
  endpoint:
    path: relationshipRequestByCompany
    method: POST
    data_selector: data.relationshipRequestByCompany
    params: {}
- name: relationshipRequestByDomain
  endpoint:
    path: relationshipRequestByDomain
    method: POST
    data_selector: data.relationshipRequestByDomain
    params: {}
- name: reprocessByJobRunId
  endpoint:
    path: reprocessByJobRunId
    method: POST
    data_selector: data.reprocessByJobRunId
    params: {}
- name: resellerPublishedProductsSearch
  endpoint:
    path: resellerPublishedProductsSearch
    method: POST
    data_selector: data.resellerPublishedProductsSearch
    params: {}
- name: reviewAllStats
  endpoint:
    path: reviewAllStats
    method: POST
    data_selector: data.reviewAllStats
    params: {}
- name: reviews
  endpoint:
    path: reviews
    method: POST
    data_selector: data.reviews
    params: {}
- name: reviewStats
  endpoint:
    path: reviewStats
    method: POST
    data_selector: data.reviewStats
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params:
      context: RESELLER_MANAGER
      page: 1
      size: 50
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: salesAgentPublishedProductsSearch
  endpoint:
    path: salesAgentPublishedProductsSearch
    method: POST
    data_selector: salesAgentPublishedProductsSearch
    params: {}
- name: scheduleJob
  endpoint:
    path: scheduleJob
    method: POST
    data_selector: scheduleJob
    params: {}
- name: scheduleJobByName
  endpoint:
    path: scheduleJobByName
    method: POST
    data_selector: scheduleJobByName
    params: {}
- name: scheduleJobs
  endpoint:
    path: scheduleJobs
    method: POST
    data_selector: scheduleJobs
    params: {}
- name: scheduleJobSchedule
  endpoint:
    path: scheduleJobSchedule
    method: POST
    data_selector: scheduleJobSchedule
    params: {}
- name: selfServeSubscriptionUpdateCapabilities
  endpoint:
    path: selfServeSubscriptionUpdateCapabilities
    method: POST
    data_selector: selfServeSubscriptionUpdateCapabilities
    params: {}
- name: serializedUnitsByShipmentItemId
  endpoint:
    path: serializedUnitsByShipmentItemId
    method: POST
    data_selector: serializedUnitsByShipmentItemId
    params: {}
- name: subscriptionDiscrepancyDetail
  endpoint:
    path: subscriptionDiscrepancyDetail
    method: POST
    data_selector: subscriptionDiscrepancyDetail
    params: {}
- name: subscriptionUpdateCartFields
  endpoint:
    path: subscriptionUpdateCartFields
    method: POST
    data_selector: subscriptionUpdateCartFields
    params: {}
- name: usageFileUploads
  endpoint:
    path: usageFileUploads
    method: POST
    data_selector: usageFileUploads
    params: {}
- name: usageReader
  endpoint:
    path: usageReader
    method: POST
    data_selector: usageReader
    params: {}
- name: usageReaderConfiguration
  endpoint:
    path: usageReaderConfiguration
    method: POST
    data_selector: usageReaderConfiguration
    params: {}
- name: usageReaders
  endpoint:
    path: usageReaders
    method: POST
    data_selector: usageReaders
    params: {}
- name: user
  endpoint:
    path: user
    method: POST
    data_selector: user
    params: {}
- name: userActivities
  endpoint:
    path: userActivities
    method: POST
    data_selector: userActivities
    params: {}
- name: userActivity
  endpoint:
    path: userActivity
    method: POST
    data_selector: userActivity
    params: {}
- name: userByExternalId
  endpoint:
    path: userByExternalId
    method: POST
    data_selector: userByExternalId
    params: {}
- name: userByUsername
  endpoint:
    path: userByUsername
    method: POST
    data_selector: userByUsername
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: appReseller_catalog_sellableProducts
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: content
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /post/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
- name: channelSettings
  endpoint:
    path: /get/channel/v1/settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shoppingCarts
  endpoint:
    path: /get/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: createShoppingCart
  endpoint:
    path: /post/v3/checkout/shoppingCarts
    method: POST
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: users
    method: GET
    data_selector: nodes
    params:
      first: 10
      after: cursor
      before: example
      last: 1
      filter:
        name: example
        email: example
      orderBy:
        field: null
        direction: null
- name: vendorExchangeRate
  endpoint:
    path: vendorExchangeRate
    method: GET
    data_selector: id
    params:
      input:
        baseCurrency: null
        targetCurrency: null
- name: visualizationDataset
  endpoint:
    path: visualizationDataset
    method: GET
    data_selector: id
    params:
      id: '123'
- name: visualizationMetric
  endpoint:
    path: visualizationMetric
    method: GET
    data_selector: id
    params:
      id: '123'
- name: visualizationMetricData
  endpoint:
    path: visualizationMetricData
    method: GET
    data_selector: data
    params:
      metricId: '123'
      timeFrame:
        start: null
        end: null
      metricParams:
      - paramKey: example
        paramValue: example
- name: webhook
  endpoint:
    path: webhook
    method: GET
    data_selector: id
    params:
      id: '123'
- name: webhookConfiguration
  endpoint:
    path: webhookConfiguration
    method: GET
    data_selector: id
    params:
      id: '123'
- name: webhookConfigurations
  endpoint:
    path: webhookConfigurations
    method: GET
    data_selector: totalCount
    params:
      tenant: example
      first: 10
      after: cursor
      last: 1
      before: example
      filter:
        active: true
        status: null
- name: webhooks
  endpoint:
    path: webhooks
    method: GET
    data_selector: totalCount
    params:
      tenant: example
      first: 10
      after: cursor
      last: 1
      before: example
      filter:
        statuses: null
        resourceType: null
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: status
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: applyDiscountToCart
  endpoint:
    path: /applyDiscountToCart
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: assignTransformersToUsageReader
  endpoint:
    path: /assignTransformersToUsageReader
    method: POST
    data_selector: data.assignTransformersToUsageReader
    params: {}
- name: associateUsageReader
  endpoint:
    path: /associateUsageReader
    method: POST
    data_selector: data.associateUsageReader
    params: {}
- name: bootstrapAccountByPartner
  endpoint:
    path: /bootstrapAccountByPartner
    method: POST
    data_selector: data.bootstrapAccountByPartner
    params: {}
- name: bootstrapMarketplaceProductSearchIndexesForCluster
  endpoint:
    path: /bootstrapMarketplaceProductSearchIndexesForCluster
    method: POST
    data_selector: data.bootstrapMarketplaceProductSearchIndexesForCluster
    params: {}
- name: bootstrapMarketplaceProductSearchIndexesForPartner
  endpoint:
    path: /bootstrapMarketplaceProductSearchIndexesForPartner
    method: POST
    data_selector: data.bootstrapMarketplaceProductSearchIndexesForPartner
    params: {}
- name: bootstrapMembershipByPartner
  endpoint:
    path: /bootstrapMembershipByPartner
    method: POST
    data_selector: data.bootstrapMembershipByPartner
    params: {}
- name: bootstrapUserByPartner
  endpoint:
    path: /bootstrapUserByPartner
    method: POST
    data_selector: data.bootstrapUserByPartner
    params: {}
- name: cancelHighGrowthOrder
  endpoint:
    path: /cancelHighGrowthOrder
    method: POST
    data_selector: data.cancelHighGrowthOrder
    params: {}
- name: cancelResellerRelationship
  endpoint:
    path: /cancelResellerRelationship
    method: POST
    data_selector: data.cancelResellerRelationship
    params: {}
- name: closeCreditMemo
  endpoint:
    path: /closeCreditMemo
    method: POST
    data_selector: data.closeCreditMemo
    params: {}
- name: createAccount
  endpoint:
    path: /createAccount
    method: POST
    data_selector: data.createAccount
    params: {}
- name: createAccountAssociation
  endpoint:
    path: /createAccountAssociation
    method: POST
    data_selector: data.createAccountAssociation
    params: {}
- name: createAccountMembership
  endpoint:
    path: /createAccountMembership
    method: POST
    data_selector: data.createAccountMembership
    params: {}
- name: createAccountMembershipWithPassword
  endpoint:
    path: /createAccountMembershipWithPassword
    method: POST
    data_selector: data.createAccountMembershipWithPassword
    params: {}
- name: createAccountWebhookConfiguration
  endpoint:
    path: /createAccountWebhookConfiguration
    method: POST
    data_selector: data.createAccountWebhookConfiguration
    params: {}
- name: createAgreement
  endpoint:
    path: /createAgreement
    method: POST
    data_selector: data.createAgreement
    params: {}
- name: createAllocation
  endpoint:
    path: /createAllocation
    method: POST
    data_selector: data.createAllocation
    params: {}
- name: createAttestation
  endpoint:
    path: /createAttestation
    method: POST
    data_selector: data.createAttestation
    params: {}
- name: createBalanceApplicationRequest
  endpoint:
    path: /createBalanceApplicationRequest
    method: POST
    data_selector: data.createBalanceApplicationRequest
    params: {}
- name: createBillingRelationship
  endpoint:
    path: /createBillingRelationship
    method: POST
    data_selector: data.createBillingRelationship
    params: {}
- name: createFunction
  endpoint:
    path: /createFunction
    method: POST
    data_selector: data.createFunction
    params: {}
- name: createHighGrowthOffer
  endpoint:
    path: /createHighGrowthOffer
    method: POST
    data_selector: data.createHighGrowthOffer
    params: {}
- name: shoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params:
      itemId: []
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: reactivationRequest
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: assignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: listAppResellerAssignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassignProduct
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: createInventory
  endpoint:
    path: createInventory
    method: POST
    data_selector: data.createInventory.inventory
    params:
      input:
        editionCode: example
        sku: example
- name: createMissingIndexes
  endpoint:
    path: createMissingIndexes
    method: POST
    data_selector: data.createMissingIndexes.success
    params: {}
- name: createNotificationOptOut
  endpoint:
    path: createNotificationOptOut
    method: POST
    data_selector: data.createNotificationOptOut.success
    params:
      input:
        target: example
- name: createOrUpdateAdobe3YCCommitments
  endpoint:
    path: createOrUpdateAdobe3YCCommitments
    method: POST
    data_selector: data.createOrUpdateAdobe3YCCommitments.customerResponse
    params:
      adobe3YCCommitmentsRequest:
        companyUUID: example
- name: createOrUpdateAdobeCustomerAccount
  endpoint:
    path: createOrUpdateAdobeCustomerAccount
    method: POST
    data_selector: data.createOrUpdateAdobeCustomerAccount.customerResponse
    params:
      adobeCustomerAccountRequest:
        customerCompanyUuid: example
        customerCompanyName: example
        firstName: example
        lastName: example
        email: example
        address: example
        city: example
        country: example
        state: example
        zip: example
        preferredLanguage: example
- name: createPayment
  endpoint:
    path: createPayment
    method: POST
    data_selector: data.createPayment.payment
    params:
      input:
        userId: '123'
        accountId: '123'
        merchantOfRecordId: example
        merchantOfRecordType: example
- name: createProduct
  endpoint:
    path: createProduct
    method: POST
    data_selector: data.createProduct.product
    params:
      input:
        addon: true
        allowMultiplePurchases: true
        referable: true
- name: createProductEdition
  endpoint:
    path: createProductEdition
    method: POST
    data_selector: data.createProductEdition.edition
    params:
      input:
        productId: '123'
- name: createProductEditionAssociations
  endpoint:
    path: createProductEditionAssociations
    method: POST
    data_selector: data.createProductEditionAssociations.associations
    params:
      input: {}
- name: createProductIntegration
  endpoint:
    path: createProductIntegration
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params:
      input:
        name: example
        vendorId: '123'
- name: createProgramApplicant
  endpoint:
    path: createProgramApplicant
    method: POST
    data_selector: data.createProgramApplicant.applicant
    params:
      input:
        programType: example
- name: createPsaAddition
  endpoint:
    path: createPsaAddition
    method: POST
    data_selector: data.createPsaAddition.additionId
    params:
      input:
        agreementId: '123'
        itemId: '123'
- name: createPsaConnector
  endpoint:
    path: createPsaConnector
    method: POST
    data_selector: data.createPsaConnector.connector
    params:
      input:
        name: example
- name: createTenantWebhookConfiguration
  endpoint:
    path: createTenantWebhookConfiguration
    method: POST
    data_selector: data.createTenantWebhookConfiguration.webhookConfiguration
    params:
      input: {}
- name: saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: createUpdatePsaCompanyMapping
  endpoint:
    path: createUpdatePsaCompanyMapping
    method: mutation
    data_selector: createUpdatePsaCompanyMapping
    params: {}
- name: createUsageFileUploadLink
  endpoint:
    path: createUsageFileUploadLink
    method: mutation
    data_selector: createUsageFileUploadLink
    params: {}
- name: createUsageReader
  endpoint:
    path: createUsageReader
    method: mutation
    data_selector: createUsageReader
    params: {}
- name: createUsageReaderConfiguration
  endpoint:
    path: createUsageReaderConfiguration
    method: mutation
    data_selector: createUsageReaderConfiguration
    params: {}
- name: createUsageReaderWithFieldDefinitions
  endpoint:
    path: createUsageReaderWithFieldDefinitions
    method: mutation
    data_selector: createUsageReaderWithFieldDefinitions
    params: {}
- name: createVisualizationDataset
  endpoint:
    path: createVisualizationDataset
    method: mutation
    data_selector: createVisualizationDataset
    params: {}
- name: createVisualizationMetric
  endpoint:
    path: createVisualizationMetric
    method: mutation
    data_selector: createVisualizationMetric
    params: {}
- name: customizeProductSearchSettings
  endpoint:
    path: customizeProductSearchSettings
    method: mutation
    data_selector: customizeProductSearchSettings
    params: {}
- name: deactivateUsageReader
  endpoint:
    path: deactivateUsageReader
    method: mutation
    data_selector: deactivateUsageReader
    params: {}
- name: deleteAccount
  endpoint:
    path: deleteAccount
    method: mutation
    data_selector: deleteAccount
    params: {}
- name: deleteAccountAssociation
  endpoint:
    path: deleteAccountAssociation
    method: mutation
    data_selector: deleteAccountAssociation
    params: {}
- name: deleteAccountMembership
  endpoint:
    path: deleteAccountMembership
    method: mutation
    data_selector: deleteAccountMembership
    params: {}
- name: deleteBillingRelationship
  endpoint:
    path: deleteBillingRelationship
    method: mutation
    data_selector: deleteBillingRelationship
    params: {}
- name: deleteDistributorAccount
  endpoint:
    path: deleteDistributorAccount
    method: mutation
    data_selector: deleteDistributorAccount
    params: {}
- name: deleteFunction
  endpoint:
    path: deleteFunction
    method: mutation
    data_selector: deleteFunction
    params: {}
- name: deleteInventory
  endpoint:
    path: deleteInventory
    method: mutation
    data_selector: deleteInventory
    params: {}
- name: deleteInvoice
  endpoint:
    path: deleteInvoice
    method: mutation
    data_selector: deleteInvoice
    params: {}
- name: deleteNotificationOptOut
  endpoint:
    path: deleteNotificationOptOut
    method: mutation
    data_selector: deleteNotificationOptOut
    params: {}
- name: deleteNotificationOptOutsForTargets
  endpoint:
    path: deleteNotificationOptOutsForTargets
    method: mutation
    data_selector: deleteNotificationOptOutsForTargets
    params: {}
- name: deleteNotificationOptOutsForTypes
  endpoint:
    path: deleteNotificationOptOutsForTypes
    method: mutation
    data_selector: deleteNotificationOptOutsForTypes
    params: {}
- name: deleteNotificationTemplate
  endpoint:
    path: deleteNotificationTemplate
    method: mutation
    data_selector: deleteNotificationTemplate
    params: {}
- name: deleteProductEditionAssociation
  endpoint:
    path: deleteProductEditionAssociation
    method: mutation
    data_selector: deleteProductEditionAssociation
    params: {}
- name: deleteProductIntegrationSingleSignOnConfigurationSetupForm
  endpoint:
    path: deleteProductIntegrationSingleSignOnConfigurationSetupForm
    method: mutation
    data_selector: deleteProductIntegrationSingleSignOnConfigurationSetupForm
    params: {}
- name: deleteProductReviews
  endpoint:
    path: deleteProductReviews
    method: mutation
    data_selector: deleteProductReviews
    params: {}
- name: deleteProviderReviews
  endpoint:
    path: deleteProviderReviews
    method: mutation
    data_selector: deleteProviderReviews
    params: {}
- name: deleteReviews
  endpoint:
    path: deleteReviews
    method: mutation
    data_selector: deleteReviews
    params: {}
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: response
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user profile resource
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
- name: availability
  endpoint:
    path: /storefront/reference/toolkit-commands.md#install-custom-components-to-a-theme
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: releaseInvoiceBalance
  endpoint:
    path: /releaseInvoiceBalance
    method: POST
    data_selector: data.releaseInvoiceBalance
    params: {}
- name: removeCompanyMapping
  endpoint:
    path: /removeCompanyMapping
    method: POST
    data_selector: data.removeCompanyMapping
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /removeDiscountFromCart
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: removeFileFromProductEdition
  endpoint:
    path: /removeFileFromProductEdition
    method: POST
    data_selector: data.removeFileFromProductEdition
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: removePrivacyPolicyLink
  endpoint:
    path: /removePrivacyPolicyLink
    method: POST
    data_selector: data.removePrivacyPolicyLink
    params: {}
- name: removeProductVariantOption
  endpoint:
    path: /removeProductVariantOption
    method: POST
    data_selector: data.removeProductVariantOption
    params: {}
- name: removeProductVariantOptionValue
  endpoint:
    path: /removeProductVariantOptionValue
    method: POST
    data_selector: data.removeProductVariantOptionValue
    params: {}
- name: removePsaProductMapping
  endpoint:
    path: /removePsaProductMapping
    method: POST
    data_selector: data.removePsaProductMapping
    params: {}
- name: removeTermsAndConditionsLink
  endpoint:
    path: /removeTermsAndConditionsLink
    method: POST
    data_selector: data.removeTermsAndConditionsLink
    params: {}
- name: resellerRelationship
  endpoint:
    path: /resellerRelationship
    method: POST
    data_selector: data.resellerRelationship
    params: {}
- name: resetProductSearchSettings
  endpoint:
    path: /resetProductSearchSettings
    method: POST
    data_selector: data.resetProductSearchSettings
    params: {}
- name: resetProgramQuestionnaire
  endpoint:
    path: /resetProgramQuestionnaire
    method: POST
    data_selector: data.resetProgramQuestionnaire
    params: {}
- name: retryFunctionProvisioning
  endpoint:
    path: /retryFunctionProvisioning
    method: POST
    data_selector: data.retryFunctionProvisioning
    params: {}
- name: retryInvoiceImports
  endpoint:
    path: /retryInvoiceImports
    method: POST
    data_selector: data.retryInvoiceImports
    params: {}
- name: retryWebhook
  endpoint:
    path: /retryWebhook
    method: POST
    data_selector: data.retryWebhook
    params: {}
- name: scheduledAdobeOrder
  endpoint:
    path: /scheduledAdobeOrder
    method: POST
    data_selector: data.scheduledAdobeOrder
    params: {}
- name: sendAttestationReminder
  endpoint:
    path: /sendAttestationReminder
    method: POST
    data_selector: data.sendAttestationReminder
    params: {}
- name: setRenewalSettingResponse
  endpoint:
    path: /setRenewalSettingResponse
    method: POST
    data_selector: data.setRenewalSettingResponse
    params: {}
- name: triggerBalanceOperationEvent
  endpoint:
    path: /triggerBalanceOperationEvent
    method: POST
    data_selector: data.triggerBalanceOperationEvent
    params: {}
- name: triggerCommissionCancelProcess
  endpoint:
    path: /triggerCommissionCancelProcess
    method: POST
    data_selector: data.triggerCommissionCancelProcess
    params: {}
- name: triggerCommissionImportProcess
  endpoint:
    path: /triggerCommissionImportProcess
    method: POST
    data_selector: data.triggerCommissionImportProcess
    params: {}
- name: triggerCommissionRetryProcess
  endpoint:
    path: /triggerCommissionRetryProcess
    method: POST
    data_selector: data.triggerCommissionRetryProcess
    params: {}
- name: triggerCreateAdhocCreditMemoProcess
  endpoint:
    path: /triggerCreateAdhocCreditMemoProcess
    method: POST
    data_selector: data.triggerCreateAdhocCreditMemoProcess
    params: {}
- name: triggerCreditMemoRetryProcess
  endpoint:
    path: /triggerCreditMemoRetryProcess
    method: POST
    data_selector: data.triggerCreditMemoRetryProcess
    params: {}
- name: triggerDistributorsProductsImports
  endpoint:
    path: /triggerDistributorsProductsImports
    method: POST
    data_selector: data.triggerDistributorsProductsImports
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
    params: {}
- name: external
  endpoint:
    path: /external
    method: GET
    data_selector: external
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
    params: {}
- name: translations
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: checkout_flow
  endpoint:
    path: /cta
    method: GET
    data_selector: items
- name: Banner
  endpoint:
    path: /components/Banner
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: /properties/sliderTitle
    method: GET
    data_selector: properties
- name: description
  endpoint:
    path: /properties/description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: isDisplayCarets
  endpoint:
    data_selector: label
    params:
      defaultValue: true
      type: TOGGLE_CHECK
      marginSize: 10
      indentSize: 0
- name: backgroundColor
  endpoint:
    data_selector: title
    params:
      defaultValue: '#474747'
      type: COLORPICKER
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: triggerMigrateMarketplaceProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerMigrateMarketplaceProcess
    params:
      input:
        tenant: example
- name: triggerProductDeletionProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductDeletionProcess
    params:
      input:
        productIds: '123'
- name: triggerProductDownloadProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductDownloadProcess
    params:
      input:
        entityType: null
- name: triggerProductIntegrationPingTest
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductIntegrationPingTest
    params:
      input:
        id: '123'
        version: example
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess
    params:
      input:
        productIds: '123'
- name: triggerProductUnpublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductUnpublicationProcess
    params:
      input:
        productIds: '123'
- name: triggerProductVariantsCreation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductVariantsCreation
    params:
      input:
        productId: '123'
- name: triggerRefreshCycleSummaryDataProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerRefreshCycleSummaryDataProcess
    params:
      input:
        partner: example
        cycleYear: 1
- name: unlistProductFromStorefront
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.unlistProductFromStorefront
    params:
      input:
        productId: '123'
        productUuid: '123'
- name: updateAccount
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateAccount
    params:
      input:
        id: '123'
- name: updateAttestationStatus
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateAttestationStatus
    params:
      companyUuid: example
      attestationId: example
      status: value
      agreementDate: example
- name: updateBillingRelationship
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateBillingRelationship
    params:
      input:
        id: '123'
        locale: null
        label: example
        description: example
        default: true
        relationships: null
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params:
      input:
        cartId: '123'
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params:
      input:
        cartId: '123'
        items: null
- name: updateCompanyCatalogCuration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCompanyCatalogCuration
    params:
      input:
        companyId: '123'
        productIds: '123'
- name: updateCustomer
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCustomer
    params:
      updateCustomerRequest:
        customerId: example
        name: example
        type: example
- name: updateDistributorAccount
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateDistributorAccount
    params:
      input:
        id: example
- name: updateFunction
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateFunction
    params:
      input:
        id: '123'
- name: updateInventory
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateInventory
    params:
      input:
        id: '123'
- name: updateNotificationTemplate
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateNotificationTemplate
    params:
      input:
        method: null
        type: null
        id: '123'
        subject: example
        content: example
- name: updateOffPlatformPayment
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateOffPlatformPayment
    params:
      input:
        id: '123'
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct
    params:
      input:
        productId: '123'
- name: updateProductDefaultVariant
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProductDefaultVariant
    params:
      input:
        productId: '123'
- name: updateProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProductEdition
    params:
      input:
        id: '123'
        productId: '123'
- name: updateProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProductIntegration
    params:
      input:
        id: '123'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: /products
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: defaultValue
    params:
      required: 'false'
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: defaultValue
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: defaultValue
    params: {}
- name: footerLogo
  endpoint:
    path: /properties/footerLogo
    method: GET
    data_selector: properties
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /properties/isDisplayCarets
    method: GET
    data_selector: properties
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /properties/isDisplayCaretsOnHover
    method: GET
    data_selector: properties
    params: {}
- name: updateProductIntegrationBookmarkConfiguration
  endpoint:
    path: /updateProductIntegrationBookmarkConfiguration
    method: POST
    data_selector: data.updateProductIntegrationBookmarkConfiguration
    params: {}
- name: updateProductIntegrationOpenIdConfiguration
  endpoint:
    path: /updateProductIntegrationOpenIdConfiguration
    method: POST
    data_selector: data.updateProductIntegrationOpenIdConfiguration
    params: {}
- name: updateProductIntegrationOpenIdConnectConfiguration
  endpoint:
    path: /updateProductIntegrationOpenIdConnectConfiguration
    method: POST
    data_selector: data.updateProductIntegrationOpenIdConnectConfiguration
    params: {}
- name: updateProductIntegrationSamlConfiguration
  endpoint:
    path: /updateProductIntegrationSamlConfiguration
    method: POST
    data_selector: data.updateProductIntegrationSamlConfiguration
    params: {}
- name: updateProductVariantOption
  endpoint:
    path: /updateProductVariantOption
    method: POST
    data_selector: data.updateProductVariantOption
    params: {}
- name: updateProductVariantOptionValue
  endpoint:
    path: /updateProductVariantOptionValue
    method: POST
    data_selector: data.updateProductVariantOptionValue
    params: {}
- name: updateProductVariants
  endpoint:
    path: /updateProductVariants
    method: POST
    data_selector: data.updateProductVariants
    params: {}
- name: updateProgram
  endpoint:
    path: /updateProgram
    method: POST
    data_selector: data.updateProgram
    params: {}
- name: updateProgramApplicant
  endpoint:
    path: /updateProgramApplicant
    method: POST
    data_selector: data.updateProgramApplicant
    params: {}
- name: updateProgramApplicantStatus
  endpoint:
    path: /updateProgramApplicantStatus
    method: POST
    data_selector: data.updateProgramApplicantStatus
    params: {}
- name: updatePsaConnector
  endpoint:
    path: /updatePsaConnector
    method: POST
    data_selector: data.updatePsaConnector
    params: {}
- name: updateRolesForAccountMembership
  endpoint:
    path: /updateRolesForAccountMembership
    method: POST
    data_selector: data.updateRolesForAccountMembership
    params: {}
- name: updateScheduleJobSchedule
  endpoint:
    path: /updateScheduleJobSchedule
    method: POST
    data_selector: data.updateScheduleJobSchedule
    params: {}
- name: updateUsageReaderConfiguration
  endpoint:
    path: /updateUsageReaderConfiguration
    method: POST
    data_selector: data.updateUsageReaderConfiguration
    params: {}
- name: updateUser
  endpoint:
    path: /updateUser
    method: POST
    data_selector: data.updateUser
    params: {}
- name: updateWebhookConfiguration
  endpoint:
    path: /updateWebhookConfiguration
    method: POST
    data_selector: data.updateWebhookConfiguration
    params: {}
- name: validateCart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: validateProgramApplicant
  endpoint:
    path: /validateProgramApplicant
    method: POST
    data_selector: data.validateProgramApplicant.applicant
    params: {}
- name: voidInvoice
  endpoint:
    path: /voidInvoice
    method: POST
    data_selector: data.voidInvoice.invoice
    params: {}
- name: billing_and_subscriptions
  endpoint:
    path: /billing-and-subscription
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceRecordedBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceRecordedBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
    params: {}
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
    params: {}
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
    params: {}
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
    params: {}
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscription/v1
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /api/payment/v1
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '565'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique identifier for the company
      userId: unique identifier for the user
      subscriptionId: unique identifier for the subscription
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: the ID assigned by the channel to identify each company
      userId: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: The unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '599'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discount
    method: GET
    data_selector: discounts
    params: {}
- name: create_discount
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
    data_selector: response
    params: {}
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
    data_selector: response
    params: {}
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
    data_selector: response
    params: {}
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: response
    params: {}
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: response
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: ''
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appMarket/v2/paymentMethods
    method: GET
    data_selector: ''
    params: {}
- name: createPaymentMethod
  endpoint:
    path: /api/appMarket/v2/paymentMethods
    method: POST
    data_selector: ''
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook.priceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: setResellerCompanyPrice
  endpoint:
    path: /graphql-docs/setresellercompanyplaceprice.doc.html
    method: POST
- name: triggerSetResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/triggersetresellercompanypricesprocess.doc.html
    method: POST
- name: removeResellerCompanyPrice
  endpoint:
    path: /graphql-docs/removeresellercompanyprice.doc.html
    method: POST
- name: setResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/setresellercompanypricesprocess_query.doc.html
    method: GET
- name: applicant_management
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
- name: lead_management
  endpoint:
    path: /leads
    method: POST
    data_selector: leads
- name: applicant_list_download
  endpoint:
    path: /download/applicants
    method: GET
    data_selector: csv
- name: companies
  endpoint:
    path: /crm/companies/basicApi/create
    method: POST
    data_selector: response.id
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: create_product_integration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration
    params: {}
- name: ping_test
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductIntegrationPingTest
    params: {}
- name: metered_usage
  endpoint:
    path: /path/to/metered_usage
    method: POST
    data_selector: data
    params: {}
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: Get AI Chats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: Create AI Chat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: List AI Data Sources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: Create API Data Source
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
    data_selector: id
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: orgId
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: records
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: records
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: records
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: null
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: null
    params: {}
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
    data_selector: null
    params: {}
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /patch/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: Array
    params: {}
- name: user_checklist
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: records
    params: {}
- name: invite_managed_user
  endpoint:
    path: /post/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: records
    params: {}
- name: request_purchase
  endpoint:
    path: /post/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: records
    params: {}
- name: user_assignments
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: assignable_roles
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: records
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /get/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: publish_content_events
  endpoint:
    path: /post/appwise/v2/data
    method: POST
    data_selector: records
    params: {}
- name: exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: common_email_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: '[].type'
- name: common_email_element_by_type
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
- name: email_notification_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: id
- name: publishCatalog
  endpoint:
    path: /publishCatalog
    method: POST
    data_selector: message
    params:
      file: required
      entityType: PRODUCT
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /path/to/master_records
    method: GET
- name: ORDER
  endpoint:
    path: /path/to/order
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: companies_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: companies_verifiedDomains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitation
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: links
    params: {}
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: links
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: links
    params: {}
- name: create_invoice_payment
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: POST
    data_selector: links
    params: {}
- name: list_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: links
    params: {}
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: links
    params: {}
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: links
    params: {}
- name: list_leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: links
    params: {}
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: links
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: id
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: lead_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: my_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: null
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: null
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: null
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: null
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      opportunityId: required
- name: opportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: sameAsBillingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethod
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
- name: userPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: allPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: results
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: results
    params:
      paymentNumber: required
      count: '250'
      excludeFree: 'false'
      fromDate: ''
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: ''
      toDate: ''
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: results
    params: {}
- name: transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
    data_selector: results
    params:
      transferPlatformConfigurationId: required
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: results
    params:
      includeBalance: 'false'
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: results
    params:
      transferMethodId: required
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
- name: retrieve_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: appReseller_orders
  endpoint:
    path: /appReseller/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: POST
    data_selector: quote
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_details
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: retrieve_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: delete_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
- name: update_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
- name: finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/finalize
    method: POST
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: retrieve_cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: pre_auth
    params: {}
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: items
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: retrieve_pricing_summary
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: none
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: none
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: none
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: none
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: none
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: none
    params: {}
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: listAppResellerAssignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassignProduct
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: ''
      customerCompanyId: ''
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: sync_tasks
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignments
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: PUT
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: api_overview
  endpoint:
    path: /api/overview
    method: GET
    data_selector: data
    params: {}
- name: Carousel
  endpoint:
    path: /sfb-toolkit/components
    method: POST
- name: Slider
  endpoint:
    path: /sfb-toolkit/components
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: theme_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: configurator
  endpoint:
    path: /application/configurator
    method: GET
    data_selector: selected_states
    params: {}
- name: callToAction
  endpoint:
    path: /application/callToAction
    method: GET
    data_selector: urlCreator
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: /en-US/apps/163915/talech
    method: GET
    data_selector: defaultValue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: InvoiceLine
  endpoint:
    path: /invoice-lines
    method: GET
    data_selector: invoiceLines
- name: InvoicePaymentTerms
  endpoint:
    path: /invoice-payment-terms
    method: GET
    data_selector: invoicePaymentTerms
- name: InvoiceBillingCharge
  endpoint:
    path: /invoice-billing-charges
    method: GET
    data_selector: invoiceBillingCharges
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: ''
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: ''
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: ''
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: ''
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '599'
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription/order
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: checkout_settings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: active_cart_of_user
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalize_cart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: company
  endpoint:
    path: /crm/companies
    method: POST
    data_selector: properties
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.notificationTemplatesByType
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateNotificationTemplate
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.deleteNotificationTemplate
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: addProductIntegrationOpenIdConnectConfiguration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.openIdConnectConfiguration
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: ''
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: ''
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: ''
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: ''
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
    params: {}
- name: usage_metrics
  endpoint:
    path: /api/v1/usage/org
    method: GET
    data_selector: data
    params: {}
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: content
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: ''
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
- name: currency_exchange_rates
  endpoint:
    path: /currency-exchange-rate
    method: GET
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_notification_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: id
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: id
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: type
    params: {}
- name: update_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params:
      entityType: PRODUCT
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: template
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: template
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
- name: DiscountType
  endpoint:
    path: /services/data/vXX.X/sobjects/DiscountType
    method: GET
    data_selector: records
    params: {}
- name: PricingUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/PricingUnit
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /vendor/share/percentage
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_membership_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: memberships
- name: group_membership_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invite_user
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: lead_list
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: id
- name: lead_details
  endpoint:
    path: /prm/v1/leads/{uuid}
    method: GET
    data_selector: content
- name: get_all_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: id
- name: lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: content
    params: {}
- name: delete_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: ''
    params: {}
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: ''
    params: {}
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: ''
    params: {}
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: ''
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: marketplace_product_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: marketplace_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_read_apps
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: myapps_read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: myapps_read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: ''
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: ''
    params:
      opportunityId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
      ownerId: required
      ownerCompanyId: required
- name: validationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: sameAsBillingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: listPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_review_comment
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: product_context
  endpoint:
    path: /billing/v1/userProductContext/{applicationId}
    method: GET
    data_selector: productContext
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: content
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: content
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: content
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: purchase_order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: order
    params: {}
- name: update_order
  endpoint:
    path: /billing/v1/orders/{orderId}/parameters
    method: PUT
    data_selector: update
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
    params: {}
- name: createShoppingCartValidationByShoppingCartId
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidationByShoppingCartId
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscountByShoppingCartId
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivateSubscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: subscriptions_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: content
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: content
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params: {}
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: files
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets/images
    method: POST
    data_selector: images
    params: {}
- name: sliderTitle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: description
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: height
  endpoint:
    path: /height
    method: GET
    data_selector: options
    params:
      required: false
      defaultValue: 555
      options:
      - value: 400
        label: Small 400px
      - value: 555
        label: Medium 555px
      - value: 660
        label: Large 660px
      validation:
        default: Select
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
    params: {}
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
    params: {}
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
    params: {}
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /configuration
    method: GET
    data_selector: config
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: meta
    params: {}
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: common
    params: {}
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: nav
    params: {}
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: records
- name: SubscriptionDefinition
  endpoint:
    path: /services/data/vXX.X/sobjects/SubscriptionDefinition
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestEligibility
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestEligibility
    method: GET
    data_selector: records
    params: {}
- name: FreeTrialExtensionRequestIneligibilityReason
  endpoint:
    path: /services/data/vXX.X/sobjects/FreeTrialExtensionRequestIneligibilityReason
    method: GET
    data_selector: records
    params: {}
- name: CartItem
  endpoint:
    path: /services/data/vXX.X/sobjects/CartItem
    method: GET
    data_selector: records
    params: {}
- name: CartItemVendorSpecialPricingOffer
  endpoint:
    path: /services/data/vXX.X/sobjects/CartItemVendorSpecialPricingOffer
    method: GET
    data_selector: records
    params: {}
- name: CartItemDiscount
  endpoint:
    path: /services/data/vXX.X/sobjects/CartItemDiscount
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: users
  endpoint:
    path: /api/account/v1/users
    method: GET
    data_selector: users
    params: {}
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: POST
    data_selector: data
    params: {}
- name: unassign_user
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: DELETE
    data_selector: data
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: read_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription_order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      id: 7845d75c-0fc0-4ec3-ac17-df95a746eff9
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '599'
- name: order
  endpoint:
    path: /api/order
    method: POST
    data_selector: order
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /companies/<companyId>/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /subscriptions/<subscriptionId>
    method: DELETE
- name: read_product_list
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: null
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: null
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: null
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: null
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: null
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
    params: {}
- name: validate_cart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: methods
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: POST
    data_selector: checkout_details
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: company_memberships_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: payload
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: payload
    params: {}
- name: purchase_request
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: payload
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: payload
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: payload
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: payload
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: payload
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: payload
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency_exchange_rates
    method: GET
    data_selector: payload
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currency_exchange_rate_uuid
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: records
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: records
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: records
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: records
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: records
- endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
- endpoint:
    path: /notification/v1/templates/default
    method: GET
- endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
- endpoint:
    path: /notification/v1/templates/default/common/email/{type}
    method: GET
- endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
- endpoint:
    path: /discount
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_batch
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: add_user_to_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: read_user_from_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: GET
- name: delete_user_from_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: list_company_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users_to_company
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invite_users_to_company_csv
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/csv
    method: POST
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: all_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: lead
    params: {}
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
    params: {}
- name: conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
    params: {}
- name: assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
    params: {}
- name: companyAssociation
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
    params: {}
- name: update
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: lead
    params: {}
- name: discard
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: lead
    params: {}
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: string
      leadId: string
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: string
- name: active_product_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
- name: update_product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: ''
    params: {}
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: ''
    params: {}
- name: update_my_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: ''
    params: {}
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
    data_selector: ''
    params: {}
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: ''
      ownerCompanyId: ''
      customerId: ''
      customerCompanyId: ''
      context: ''
      status: ''
      purchaseEffectiveDate: ''
      createdOn: ''
      searchText: ''
      number: 1
      size: 10
      sort: ''
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: []
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: records
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: listPaymentsForCompany
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: listPaymentsForUser
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: answers
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: 'false'
      fromDate: null
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: null
      toDate: null
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: configuration
    params: {}
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: 'false'
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
- name: invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: quote_version
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quote_version
    params: {}
- name: execute_action
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: execute_action
    params: {}
- name: ledger_lines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer_details
    params: {}
- name: transfer_ledger_lines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ledger_lines
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: content
    params: {}
- name: read_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /delete/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /post/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
    params: {}
- name: preview_non_persisted_carts
  endpoint:
    path: /post/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_carts
  endpoint:
    path: /get/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: 'null'
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: SOME_STRING_VALUE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
    params: {}
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
    params:
      itemId: SOME_ARRAY_VALUE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
    params: {}
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: ''
    params: {}
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: ''
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: data
    params:
      subscriptionUuid: required
      userUuid: required
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: data
    params:
      subscriptionUuid: required
      userUuid: required
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: data
    params:
      subscriptionUuid: required
      userUuid: required
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: data
    params:
      subscriptionUuid: required
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: data
    params:
      subscriptionUuid: required
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: data
    params:
      subscriptionUuid: required
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: data
    params:
      subscriptionUuid: required
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /api/appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /api/sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /api/sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /api/sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /api/sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /api/sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /api/appwise/v2/accounts
    method: POST
- name: disconnect_user_account
  endpoint:
    path: /api/appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /api/account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: uuid
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/toolkit-commands.md#install-custom-components-to-a-theme
    method: GET
    data_selector: components
    params: {}
- name: configuration
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: localization_file_requirements
  endpoint:
    path: /localization/file/requirements
    method: GET
    data_selector: files
    params: {}
- name: localization_formatting_requirements
  endpoint:
    path: /localization/formatting/requirements
    method: GET
    data_selector: formatting
    params: {}
- name: customize_storefront_themes_labels
  endpoint:
    path: /localization/customize/themes/labels
    method: GET
    data_selector: labels
    params: {}
- name: themes_and_static_assets
  endpoint:
    path: /localization/themes/static/assets
    method: GET
    data_selector: assets
    params: {}
- name: themes_and_custom_resources
  endpoint:
    path: /localization/themes/custom/resources
    method: GET
    data_selector: custom_resources
    params: {}
- name: theme_css_grid
  endpoint:
    path: /localization/theme/css/grid
    method: GET
    data_selector: css_grid
    params: {}
- name: global_platform_css
  endpoint:
    path: /localization/global/platform/css
    method: GET
    data_selector: global_css
    params: {}
- name: integrate_checkout
  endpoint:
    path: /localization/integrate/checkout
    method: GET
    data_selector: checkout
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: value
    params:
      required: 'true'
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: records
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: height
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: backgroundColor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: size
  endpoint:
    path: /form/schema/size
    method: GET
    data_selector: options
    params: {}
- name: Properties
  endpoint:
    path: /properties
    method: GET
    data_selector: records
    params: {}
- name: SLIDER
  endpoint:
    path: /slider
    method: GET
    data_selector: records
    params: {}
- name: GROUP_HEADER
  endpoint:
    path: /group_header
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: sliderSettings
    method: GET
    data_selector: title
- name: SPACER
  endpoint:
    path: SPACER
    method: GET
    data_selector: type
- name: SLIDES
  endpoint:
    path: SLIDES
    method: GET
    data_selector: required
- name: PRODUCTS_LIST
  endpoint:
    path: PRODUCTS_LIST
    method: GET
    data_selector: description
- name: productsList
  endpoint:
    path: productsList
    method: POST
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: image upload field
    params:
      required: false
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: TABS_LIST
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: DRAWER_LIST
    params: {}
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: billing_and_subscriptions
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: none
    params: {}
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      id: 7845d75c-0fc0-4ec3-ac17-df95a746eff9
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: create_discount
  endpoint:
    path: /api/channel/v1/discounts
    method: POST
- name: delete_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
- name: retrieve_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
- name: update_discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: PUT
- name: add_items_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: apply_discount_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: remove_discount_from_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: null
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: trigger_set_marketplace_prices_process
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: remove_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: titles
  endpoint:
    path: /api/titles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updateTemplateResponse
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deleteTemplateResponse
- name: createPricingPlan
  endpoint:
    path: /graphql-docs/createpricingplan.doc.html
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql-docs/createproduct.doc.html
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql-docs/trigger-product-publication-process.doc.html
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses.id
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql-docs/product-publication-process.doc.html
    method: GET
    data_selector: data.productPublicationProcess.id
    params: {}
- name: create_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: data
    params: {}
- name: tenants
  endpoint:
    path: /tenants
    method: CREATE
    data_selector: tenants
    params: {}
- name: usage_events
  endpoint:
    path: /v2/usage/events
    method: POST
    data_selector: records
    params: {}
- name: usage_status
  endpoint:
    path: /v2/usage/status
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: ''
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ''
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ''
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: ''
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: ''
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: ''
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: ''
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: ''
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: ''
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: ''
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: ''
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: ''
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: ''
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: ''
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_AIs
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_AI
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: List of companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: string
      customerCompanyId: string
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
    params: {}
- name: create_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: content
    params: {}
- name: update_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: content
    params: {}
- name: delete_company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: content
    params: {}
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_application_purchase
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: currency_exchange_rate_by_uuid
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /post/notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: templates
    params: {}
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: template
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
      sortField: CREATED_ON
      sortOrder: ASC
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MASTER_RECORDS
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /services/data/vXX.X/sobjects/ORDER
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
    data_selector: records
- name: MASTER_RECORDS
  endpoint:
    path: /api/master_records
    method: GET
    data_selector: records
- name: ORDER
  endpoint:
    path: /api/orders
    method: GET
    data_selector: records
- name: USER
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: company_verified_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: members
    params: {}
- name: group_membership_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: success
    params: {}
- name: group_membership_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: success
    params: {}
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
    data_selector: success
    params: {}
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
- name: invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: lead_assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
- name: lead_association
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
- name: lead_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: lead_conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: null
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: null
    params:
      opportunityId: SOME_ARRAY_VALUE
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: null
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: null
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: required
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: required
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: required
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: costs
    params:
      opportunityId: required
      pricingPlanId: required
      currency: required
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: opportunitySummary
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: get_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodType
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params:
      number: 1
      size: 50
- name: payments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payments
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      startDateFrom: SOME_NUMBER_VALUE
      startDateTo: SOME_NUMBER_VALUE
      status: SOME_STRING_VALUE
      currency: SOME_STRING_VALUE
      type: SOME_STRING_VALUE
      frequency: SOME_STRING_VALUE
      orderReferenceCode: SOME_STRING_VALUE
      applicationIds: SOME_NUMBER_VALUE
      fromCreationDate: SOME_NUMBER_VALUE
      toCreationDate: SOME_NUMBER_VALUE
      page: SOME_INTEGER_VALUE
      referenceCode: SOME_STRING_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params:
      count: '250'
      excludeFree: SOME_BOOLEAN_VALUE
      fromDate: SOME_NUMBER_VALUE
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: SOME_STRING_VALUE
      toDate: SOME_NUMBER_VALUE
- name: quote_versions
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: content
    params:
      sourceId: SOME_STRING_VALUE
      sourceType: OPPORTUNITY
      status: SOME_STRING_VALUE
      after: SOME_STRING_VALUE
      first: SOME_INTEGER_VALUE
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfer_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
    params: {}
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
- name: get_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
- name: remove_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: items
    params: {}
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: removeAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params: {}
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: preview_cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account_create
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: user
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: llms
  endpoint:
    path: /llms.txt
    method: GET
    data_selector: records
    params: {}
- name: graphql
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
    params: {}
- name: faqs
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets/images
    method: GET
    data_selector: custom_images
    params: {}
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: title
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: height
  endpoint:
    path: /height
    method: GET
    data_selector: options
- name: showRatings
  endpoint:
    path: uieditor.sfbComponent.productBanner.showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: size
  endpoint:
    path: /form/schema/size
    method: GET
    data_selector: size
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: POST
    data_selector: defaultValue.items
    params:
      required: true
- name: backgroundImg
  endpoint:
    path: backgroundImg
    method: GET
    data_selector: backgroundImg
    params: {}
- name: pageTabs
  endpoint:
    path: pageTabs
    method: GET
    data_selector: pageTabs
    params: {}
- name: drawerList
  endpoint:
    path: drawerList
    method: GET
    data_selector: drawerList
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: InvoiceLine
  endpoint:
    path: /invoiceLines
    method: GET
    data_selector: invoiceLines
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      id: 7845d75c-0fc0-4ec3-ac17-df95a746eff9
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: payment_instrument
  endpoint:
    path: /payment_instruments
    method: POST
    data_selector: paymentInstrument
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: paymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: listPaymentInstruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: readPaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /marketplace/v1/products/78/editions/463/paymentPlans/566
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      companyId: <companyId>
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      companyId: <companyId>
      userId: <userId>
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      subscriptionId: <subscriptionId>
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    params:
      companyId: <companyId>
      userId: <userId>
      subscriptionId: <subscriptionId>
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      subscriptionId: <subscriptionId>
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /api/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discount
    method: POST
    data_selector: discount
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: none
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discount
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discount
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: data.checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: data.activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: data.finalizeCart
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook.priceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: set_marketplace_price
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: records
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: records
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: records
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.linkProductIntegration.product
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: CREATE
    data_selector: tenants
    params: {}
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: EXPIRE
    data_selector: tenants
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: POST
    data_selector: null
    params: {}
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get All Chats for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create New Chat Session for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List Data Sources for AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Add Existing Data Source to AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: Create New API Data Source for AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Get Chat Session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: Message a Chat Session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: Delete a Chat Session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read.
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read.
- name: checkout_item_details
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: ''
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: ''
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: ''
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: ''
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
    data_selector: ''
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
    data_selector: ''
- name: companies
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /v1/companyAssociations
    method: GET
    data_selector: content
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequests
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: events
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: createExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: baseCurrency
    params: {}
- name: readExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: baseCurrency
    params: {}
- name: deactivateExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: active
    params: {}
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
    data_selector: ''
    params:
      directSales: SOME_BOOLEAN_VALUE
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: data
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: data
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: MASTER_RECORDS
  endpoint:
    path: /services/data/vXX.X/sobjects/MasterRecords
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: data
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /api/vendorSharePercentage
    method: GET
    data_selector: data
    params: {}
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
    params: {}
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params: {}
- name: leads
  endpoint:
    path: /api/prm/v1/leads
    method: GET
    params:
      fromDate: SOME_INTEGER_VALUE
      page: '0'
      size: '50'
      sortField: DATE
      sortOrder: DESC
- name: invoices
  endpoint:
    path: /api/billing/v1/invoices
    method: GET
    params:
      count: '250'
      excludeFree: 'false'
      fromDate: SOME_NUMBER_VALUE
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: id
    params: {}
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: retrieve_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: retrieve_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: update_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: billing_usage
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usageData
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usageData
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: statusData
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items_to_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items_in_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item_from_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: itemRemoval
    params:
      opportunityId: required
      itemId: required
- name: edit_item_in_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: itemUpdate
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getPricingPlanCosts
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerDetails
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplied
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params:
      opportunityId: required
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params:
      opportunityId: required
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params:
      opportunityId: required
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: paymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: retrieveDefaultPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodType
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: id
- name: listPaymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: companyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: get_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: create_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: get_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: product_question_update
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: product_question_delete
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: review
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: products
    params:
      page: '0'
      size: '20'
      sortField: NAME
      sortOrder: ASC
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product
    params: {}
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: products
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params:
      applicationId: required
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
- name: user_purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      size: '50'
      page: '0'
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reporting_v1_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reporting_v2_reports
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: segment
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
- name: dynamic_segment
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: content
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: content
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: shopping_cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /{shoppingCartId}/validation
    method: POST
    data_selector: ''
- name: getShoppingCartValidation
  endpoint:
    path: /{shoppingCartId}/validation
    method: GET
    data_selector: ''
- name: deleteDiscount
  endpoint:
    path: /{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: ''
- name: deleteShoppingCartFee
  endpoint:
    path: /{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: ''
- name: createCartFee
  endpoint:
    path: /{shoppingCartId}/fees
    method: POST
    data_selector: ''
- name: updateAccreditedAgents
  endpoint:
    path: /{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: ''
- name: deleteAccreditedAgents
  endpoint:
    path: /{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: ''
- name: notifyLockedCarts
  endpoint:
    path: /notifyLockedCarts
    method: POST
    data_selector: ''
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscriptionDetails
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: '{{ reseller_company_id }}'
      customerCompanyId: '{{ customer_company_id }}'
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: id
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: data
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user_profile
    params: {}
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: temporary_password
    params: {}
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
    params: {}
- name: faq
  endpoint:
    path: /faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: POST
    data_selector: translations
    params: {}
- name: theme_overrides
  endpoint:
    path: /themes/themeName/overrides
    method: POST
    data_selector: overrides
    params: {}
- name: static_assets
  endpoint:
    path: /themes/themeName/assets
    method: GET
    data_selector: assets
    params: {}
- name: Banner
  endpoint:
    path: /sfb-theme-components/Banner
    method: GET
    data_selector: settings
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: input_field
    params:
      required: 'true'
- name: description
  endpoint:
    path: /properties/description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /api/config
    method: GET
    data_selector: config
    params: {}
- name: metadata
  endpoint:
    path: /api/meta
    method: GET
    data_selector: meta
    params: {}
- name: common_data
  endpoint:
    path: /api/common
    method: GET
    data_selector: common
    params: {}
- name: navigation_data
  endpoint:
    path: /api/nav
    method: GET
    data_selector: nav
    params: {}
- name: internationalization_data
  endpoint:
    path: /api/i18n
    method: GET
    data_selector: i18n
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /commissionEvent
    method: POST
    data_selector: data
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: null
    params: {}
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change_one_time
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      id: 7845d75c-0fc0-4ec3-ac17-df95a746eff9
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/marketplace/v1/products/78
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '541'
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: shippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.checkoutSettings
    params: {}
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.activeCartOfUser
    params: {}
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.finalizeCart
    params: {}
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: data.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /productPublicationProcess
    method: GET
    data_selector: data.productPublicationProcess
    params: {}
- name: create_product
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: CREATE
- name: expire_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: EXPIRE
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: accountIdentifier
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: metered_usage_events
  endpoint:
    path: /services/data/vXX.X/meteredUsage
    method: POST
    data_selector: records
- name: Create New AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve an AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Add an existing data source to the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: Create a new API data source for the specified AI
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Revoking AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: bundles
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
      active: ''
      enabled: ''
      searchText: ''
      fromDate: ''
      toDate: ''
      sortField: ''
      sortOrder: ''
      page: ''
      size: ''
      vendor: ''
      channelAdmin: ''
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
      partner: ''
      companyId: ''
      active: ''
      searchText: ''
      fromDate: ''
      toDate: ''
      sortField: ''
      sortOrder: ''
      page: ''
      size: ''
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params:
      resellerCompanyId: ''
      customerCompanyId: ''
      searchText: ''
      createdOn: ''
      sort: ''
      number: ''
      size: ''
- name: company_association
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currency/exchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: baseCurrency
    params: {}
- name: readCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: baseCurrency
    params: {}
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: active
    params: {}
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: template
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: template
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: templates
    params: {}
- name: product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: catalog
    params: {}
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: catalog
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: ''
    params:
      code: string
      count: integer
      sortField: string
      sortOrder: string
      start: integer
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params: {}
- name: vendorSharePercentage
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: records
    params:
      discountId: string
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: revoke_invitation
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params:
      size: 50
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: '250'
      start: '0'
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params:
      count: '250'
      start: '0'
- name: invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: ''
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: ''
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: records
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: records
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: records
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: read_application_completed_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
- name: read_application_pending_assignment
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: string
      ownerCompanyId: string
      customerId: string
      customerCompanyId: string
      context: string
      status: string
      purchaseEffectiveDate: Array of strings
      createdOn: Array of strings
      searchText: string
      number: integer
      size: integer
      sort: string
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: response
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: response
    params:
      opportunityId: Array of strings
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: response
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: response
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: addItems
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: listItems
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: removeItem
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: editItem
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: Accepted
    params:
      opportunityId: string
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: Success
    params:
      opportunityId: string
- name: readOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: Success
    params:
      opportunityId: string
- name: readPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: Success
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: paymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: createPaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: readDefaultPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
    params: {}
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: userPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: payments
    params: {}
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    params:
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: product_questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: createdQuestion
- name: update_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: updatedQuestion
- name: delete_product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: id
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: id
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: DELETE
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: POST
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: filters
    params: {}
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: settings
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
- name: cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: null
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: null
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: null
    params: {}
- name: pricingSummary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricingSummaryByShoppingCartId
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: ''
    params:
      level: PRE_FINALIZE
- name: shopping_cart_validation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: validationSummary
    params:
      level: PRE_FINALIZE
- name: delete_discount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: response
    params: {}
- name: create_cart_fee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: fee
    params: {}
- name: remove_accredited_agents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: response
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: subscription_reactivation_request
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: update
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: subscription_addons
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/addons
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: activeOrder
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
    data_selector: developerAccounts
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
    data_selector: ''
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
    data_selector: ''
    params: {}
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: ''
    params: {}
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
    data_selector: connection
    params: {}
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
    data_selector: ''
    params: {}
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: ''
    params: {}
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: response
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: llms
  endpoint:
    path: /llms.txt
    method: GET
    data_selector: content
- name: graphql
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: productLists
    params: {}
- name: ui
  endpoint:
    path: /ui
    method: GET
    data_selector: ui
    params: {}
- name: checkout_flow
  endpoint:
    path: /checkout
    method: GET
- name: meta_tags
  endpoint:
    path: /meta
    method: GET
- name: Banner
  endpoint:
    path: /sfb-theme-components/Banner
    method: GET
    data_selector: schema
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: records
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: records
    params: {}
- name: showRatings
  endpoint:
    path: showRatings
    method: GET
    data_selector: defaultValue
- name: backgroundColor
  endpoint:
    path: /assets/images/COLORPICKER-9e37dbf3d9040591b470193625888d9f.png
    method: GET
    data_selector: title
    params: {}
- name: borderRadius
  endpoint:
    path: borderRadius
    method: GET
    data_selector: title
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: pageTabs
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: drawerList
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: home_page
  endpoint:
    path: /themes/themeName/content/pages/home/home.html
    method: GET
    data_selector: page_content
- name: listing_page
  endpoint:
    path: /themes/themeName/content/pages/listing/listing.html
    method: GET
    data_selector: page_content
- name: profile_page
  endpoint:
    path: /themes/themeName/content/pages/profile/profile.html
    method: GET
    data_selector: page_content
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /commission-event
    method: GET
    data_selector: events
- name: CommissionCycle
  endpoint:
    path: /commission-cycle
    method: GET
    data_selector: cycles
- name: CommissionEventSummary
  endpoint:
    path: /commission-event-summary
    method: GET
    data_selector: summaries
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{userId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_change
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      id: 7845d75c-0fc0-4ec3-ac17-df95a746eff9
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: product
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{company_id}/users/{user_id}/subscriptions
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: 749
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      <companyId>: ''
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      <companyId>: ''
      <userId>: ''
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      <subscriptionId>: ''
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    params:
      <companyId>: ''
      <userId>: ''
      <subscriptionId>: ''
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      <subscriptionId>: ''
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    data_selector: ''
    params:
      count: '250'
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: subscription
- name: discounts
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: discounts
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: id
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: ''
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1/usage
    method: POST
    data_selector: items
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: ''
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: lead
  endpoint:
    path: /leads
    method: POST
    data_selector: lead
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: usage_processing_status
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/fetch-usage-processing-status
    method: GET
    data_selector: records
- name: historic_usage_and_adjustments
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/historic-usage-and-adjustments
    method: GET
    data_selector: records
- name: preconfigured_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-preconfigured-usage
    method: POST
    data_selector: records
- name: custom_metered_usage
  endpoint:
    path: /user-guides/product-integration/rest-api/metered-usage-v2/send-custom-metered-usage
    method: POST
    data_selector: records
- name: Create New AI
  endpoint:
    path: /ai
    method: POST
    data_selector: ai
    params: {}
- name: Get AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: ai
    params: {}
- name: Approve an AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: ai
    params: {}
- name: Get all chats for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: chats
    params: {}
- name: Create a new chat session for the AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: chat
    params: {}
- name: List data sources for the AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: checkout_item_details
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: List of all companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: company_association
  endpoint:
    path: /api/appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params:
      companyUuid: required
      userUuid: required
      applicationId: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currencyExchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: currencyExchangeRateByUuid
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: content
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_element
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: ''
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: vendorSharePercentage
  endpoint:
    path: /vendor/share/percentage
    method: GET
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: ''
    params: {}
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: ''
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: ''
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: ''
    params: {}
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: ''
    params: {}
- name: create_lead
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: leads
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usage data information
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: metered usage request body
    params: {}
- name: billing_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: usage event processing status
    params: {}
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications
    params: {}
- name: update_apps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: ordered list of app hrefs
    params: {}
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
    data_selector: application
    params: {}
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
    data_selector: application
    params: {}
- name: opportunities
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities
    method: POST
    data_selector: ' '
    params: {}
- name: opportunity
  endpoint:
    path: /v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: remove_item
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: edit_item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: changeOwner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discount
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_user_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: listPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: content
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: configuration
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
    data_selector: configuration
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
    data_selector: method
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
    data_selector: method
- name: product_question_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
    data_selector: answers
- name: create_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
    data_selector: answer
- name: retrieve_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
    data_selector: answer
- name: update_product_question_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: answer
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_by_id
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: ''
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: ''
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: ''
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: ''
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /api/reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: product_editions
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /api/channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: read_segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: null
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: null
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: null
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/finalize
    method: POST
    data_selector: null
    params: {}
- name: cart_associations
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_preauth
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items
    method: POST
- name: get_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricingSummary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricingSummaryByShoppingCartId
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: id
    params: {}
- name: deleteDiscount
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: id
    params: {}
- name: deleteShoppingCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: id
    params: {}
- name: createCartFee
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: setAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: deleteAccreditedAgents
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: id
    params: {}
- name: notifyLockedCarts
  endpoint:
    path: /v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: id
    params: {}
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: list_reseller_subscription_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: SAML metadata for subscription
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: List all subscriptions for a company
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: Change subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: List all subscriptions for a user
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: Create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: Preview changed subscription details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: Preview create a subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_preview
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: preview
    params: {}
- name: subscription_update
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: update
    params: {}
- name: subscription_cancel
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
    params:
      sendNotification: true
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
    params:
      context: RESELLER
      resellerCompanyId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: details
    params: {}
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: status
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connection
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_account
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user_activation_info
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: user_info
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships_info
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: GET
    data_selector: profile_info
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: null
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: null
    params: {}
- name: ai_api
  endpoint:
    path: /ai/rest
    method: GET
    data_selector: records
- name: graphql_api
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: products
- name: faq
  endpoint:
    path: /api/faq
    method: GET
    data_selector: faqs
- name: navigator
  endpoint:
    path: /api/navigator
    method: GET
    data_selector: categories
- name: configurator
  endpoint:
    path: /application/configurator
    method: GET
- name: checkout
  endpoint:
    path: /application/callToAction
    method: GET
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: records
    params: {}
- name: height
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: showRatings
  endpoint:
    data_selector: labelOn
    params:
      defaultValue: true
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: size
    params:
      required: true
      defaultValue: xsmall
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: /sliderSettings
    method: GET
    data_selector: settings
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: footerLogo
  endpoint:
    path: /footerLogo
    method: GET
    data_selector: properties
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /isDisplayCarets
    method: GET
    data_selector: properties
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /isDisplayCaretsOnHover
    method: GET
    data_selector: properties
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: records
- name: SubscriptionCancellationIdInvalidError
  endpoint:
    path: /SubscriptionCancellationIdInvalidError
    method: GET
    data_selector: records
- name: SubscriptionCancellationServerError
  endpoint:
    path: /SubscriptionCancellationServerError
    method: GET
    data_selector: records
- name: SubscriptionCancellationReasonIdValidationError
  endpoint:
    path: /SubscriptionCancellationReasonIdValidationError
    method: GET
    data_selector: records
- name: CommissionEvent
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionEvent
    method: GET
    data_selector: records
- name: CommissionCycle
  endpoint:
    path: /services/data/vXX.X/sobjects/CommissionCycle
    method: GET
    data_selector: records
- name: webhookConfigurations
  endpoint:
    path: /webhookConfigurations
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: subscription_one_time
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: payment_instruments
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '599'
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: <companyId>
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      companyId: <companyId>
      userId: <userId>
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params:
      subscriptionId: <subscriptionId>
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params:
      companyId: <companyId>
      userId: <userId>
      subscriptionId: <subscriptionId>
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params:
      subscriptionId: <subscriptionId>
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/payment-methods
    method: POST
    data_selector: paymentMethod
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: addPaymentMethod
  endpoint:
    path: /api/appMarket/v2/paymentMethods
    method: POST
    data_selector: data.createPaymentMethod
    params: {}
- name: saveShippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: data.saveFulfillment
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: records
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: records
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /createPricingPlan
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: data.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /productPublicationProcess
    method: GET
    data_selector: data.productPublicationProcess
    params: {}
- name: marketplaceProductSettings
  endpoint:
    path: /marketplaceProduct/productSettings/{productId}
    method: PUT
    data_selector: data
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
- name: disableProductVariants
  endpoint:
    path: /graphql-docs/disableproductvariants.doc.html
    method: POST
    data_selector: disableProductVariants
    params: {}
- name: enableProductVariants
  endpoint:
    path: /graphql-docs/enableproductvariants.doc.html
    method: POST
    data_selector: enableProductVariants
    params: {}
- name: productVariantsCreationProcess
  endpoint:
    path: /graphql-docs/productvariantscreationprocess_query.doc.html
    method: POST
    data_selector: productVariantsCreationProcess
    params: {}
- name: marketplaceProduct
  endpoint:
    path: /graphql-docs/marketplaceproduct_query.doc.html
    method: POST
    data_selector: marketplaceProduct
    params: {}
- name: orderProductVariantOptionValues
  endpoint:
    path: /graphql-docs/orderproductvariantoptionvalues.doc.html
    method: POST
    data_selector: orderProductVariantOptionValues
    params: {}
- name: usage_processing_status
  endpoint:
    path: /usage/processing/status
    method: GET
    data_selector: records
    params: {}
- name: historic_usage_adjustments
  endpoint:
    path: /usage/historic/adjustments
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_ai
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read.
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read.
- name: checkout_item_details
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: picture
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: request_purchase
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequest
    params: {}
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: companyAssignableRoles
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    data_selector: content
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: createExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
    data_selector: ''
    params: {}
- name: readExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
    data_selector: ''
    params: {}
- name: deactivateExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: sms_template
  endpoint:
    path: /templates/sms
    method: POST
    data_selector: id
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: audience
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    data_selector: discounts
    params:
      code: SOME_STRING_VALUE
      count: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
      start: SOME_INTEGER_VALUE
- name: dataset_name
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: records
    params:
      discountId: required
- name: discount
  endpoint:
    path: /services/data/vXX.X/sobjects/Discount
    method: GET
    data_selector: records
    params:
      incremental: createdOn
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
- name: edition
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
- name: group_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: group_membership_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
    data_selector: memberships
- name: group_membership_update
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: group_membership_delete
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
- name: invitation_revoke
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/{email}
    method: DELETE
    data_selector: invitation
- name: invitation_list
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitation_create
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
    data_selector: invitations
- name: invitation_create_csv
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations/csv
    method: POST
    data_selector: invitations
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: content
- name: activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: conversion
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: content
- name: assignment
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: content
- name: companyAssociation
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: content
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: fetch_usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: list_applications
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: update_myapps_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: id
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: null
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: null
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: null
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: null
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: null
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId, ownerCompanyId
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFieldsDefinitions
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: updatedOpportunitySummary
    params:
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstruments
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstruments
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstruments
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: paymentMethods
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
- name: paymentsForCompany
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: paymentsForUser
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: listAllPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
    data_selector: payments
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
    data_selector: configuration
    params: {}
- name: get_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: transferMethods
    params:
      includeBalance: 'false'
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: review
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: review
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: review
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: review
    params: {}
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_purchase_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: transfer
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params:
      count: SOME_INTEGER_VALUE
      fromDate: SOME_NUMBER_VALUE
      start: SOME_INTEGER_VALUE
      toDate: SOME_NUMBER_VALUE
      type: SOME_STRING_VALUE
- name: reports_v2
  endpoint:
    path: /api/reporting/v2/reports
    method: GET
    data_selector: content
    params:
      ownerType: SOME_STRING_VALUE
      reportName: SOME_STRING_VALUE
      date: SOME_STRING_VALUE
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params:
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      searchText: SOME_STRING_VALUE
      targetUserId: SOME_STRING_VALUE
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: content
    params:
      number: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sort: SOME_STRING_VALUE
      name: SOME_STRING_VALUE
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: '204'
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
    params: {}
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: preAuth
    params: {}
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
    params: {}
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: item
    params: {}
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: item
    params: {}
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: list_invoices
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/invoices
    method: GET
- name: preview_cancel
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/previewCancel
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: connection
    params: {}
- name: developerAccount
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params: {}
- name: userAssignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: userAssignments
    params: {}
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: ''
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: ''
    params: {}
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: components
  endpoint:
    path: /storefront/reference/custom-components/schema.md
    method: GET
    data_selector: components
    params: {}
- name: installation
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-uninstall.md
    method: GET
    data_selector: installation
    params: {}
- name: creating_new_component
  endpoint:
    path: /storefront/how-tos/components/storefront-custom-components-add.md
    method: GET
    data_selector: creating_new_component
    params: {}
- name: using_toolkit
  endpoint:
    path: /storefront/reference/toolkit-commands.md#install-custom-components-to-a-theme
    method: GET
    data_selector: using_toolkit
    params: {}
- name: layout_management
  endpoint:
    path: /storefront/reference/layout-management.md
    method: GET
    data_selector: layout_management
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: productLists
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: productLists
    params: {}
- name: faqs
  endpoint:
    path: /api/faq
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: theme_labels
  endpoint:
    path: /themes/themeName/labels
    method: GET
    data_selector: labels
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
- name: showRatings
  endpoint:
    path: showRatings
    method: GET
    data_selector: labelOn
    params: {}
- name: Display carets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: records
    params: {}
- name: Backround color
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sliderSettings
  endpoint:
    path: /properties/sliderSettings
    method: GET
    data_selector: title
- name: SPACER
  endpoint:
    path: /properties/spacer
    method: GET
    data_selector: type
- name: SLIDES
  endpoint:
    path: /properties/slides
    method: GET
    data_selector: required
- name: PRODUCTS_LIST
  endpoint:
    path: /properties/products_list
    method: GET
    data_selector: description
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue: []
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: []
- name: footerLogo
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: isDisplayCarets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: CommissionEvent
  endpoint:
    path: /CommissionEvent
    method: GET
- name: CommissionCycle
  endpoint:
    path: /CommissionCycle
    method: GET
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
- name: discounts
  endpoint:
    path: /api/billing/v1/discounts
    method: GET
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: companies_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: paymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: listPaymentInstruments
  endpoint:
    path: /billing/v1/companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
- name: readPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/<paymentInstrumentUuid>
    method: GET
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '571'
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
    params: {}
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: discounts
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: discounts
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: discounts
    params: {}
- name: payment_methods
  endpoint:
    path: /api/account/v2/payment-methods
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
- name: add_items_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: apply_discount_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: remove_discount_from_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: add_shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: 6512b7ff875fe104e5fde6da
- name: shipping_fee
  endpoint:
    path: /fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkout_settings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: active_cart_of_user
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalize_cart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: validateCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cartValidation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: createProduct
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      type: TENANT
      operation: CREATE
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      type: TENANT
      operation: EXPIRE
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: unique system-assigned identifier for the API request
- name: send_custom_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: custom usage events
    params: {}
- name: usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: usage_events
  endpoint:
    path: /api/billing/v1/usage
    method: POST
    data_selector: usages
    params: {}
- name: user_sync
  endpoint:
    path: /api/user/sync
    method: POST
    data_selector: userSync
    params: {}
- name: historical_usage
  endpoint:
    path: /services/data/vXX.X/sobjects/HistoricalUsage
    method: GET
    data_selector: records
    params: {}
- name: usage_processing_status
  endpoint:
    path: /services/data/vXX.X/sobjects/UsageProcessingStatus
    method: GET
    data_selector: records
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: string
    params: {}
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: string
    params: {}
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: string
    params: {}
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: string
    params: {}
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: string
    params: {}
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: string
    params: {}
- name: addDataSourceToAI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: string
    params: {}
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: string
    params: {}
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: string
    params: {}
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: string
    params: {}
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: string
    params: {}
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: string
    params: {}
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: string
    params: {}
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: string
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: usage_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: activities
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
- name: create_company
  endpoint:
    path: /account/v2/companies
    method: POST
- name: read_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
- name: update_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
- name: patch_company
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PATCH
- name: update_company_picture
  endpoint:
    path: /account/v2/companies/{companyUuid}/picture
    method: PUT
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params: {}
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: ''
    params: {}
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: ''
    params: {}
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
    data_selector: ''
    params: {}
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: company_membership_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params:
      companyUuid: required
      userUuid: required
- name: invite_managed_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: request_purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchaseRequests
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: assignableRoles
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: data
    params: {}
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: currency_exchange_rate_create
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: currency_exchange_rate_read
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: currency_exchange_rate_deactivate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: ''
    params: {}
- name: email_template
  endpoint:
    path: /api/notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /api/notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /api/notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: data
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: DiscountType
  endpoint:
    path: /DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /PricingUnit
    method: GET
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: USER
  endpoint:
    path: /USER
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: applicationId
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
    params: {}
- name: DiscountType
  endpoint:
    path: /path/to/DiscountType
    method: GET
- name: PricingUnit
  endpoint:
    path: /path/to/PricingUnit
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: content
    params: {}
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: content
    params: {}
- name: companies_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: content
    params: {}
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: content
    params: {}
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: content
    params: {}
- name: groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: content
    params: {}
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_create
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: group_memberships_update
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: group_memberships_delete
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: invitations_create
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: invitations_csv
  endpoint:
    path: /companies/{companyUuid}/invitations/csv
    method: POST
- name: invitations
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
    params: {}
- name: user_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      start: '0'
- name: company_invoices
  endpoint:
    path: /billing/v1/companies/{companyId}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      start: '0'
      sortOrder: DESC
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params:
      count: '250'
      start: '0'
- name: all_invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      start: '0'
      sortOrder: ASC
- name: retrieve_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
    params: {}
- name: patch_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: PATCH
    data_selector: invoice
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params:
      size: '50'
      page: '0'
      sortOrder: DESC
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: list_leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: lead
    params: {}
- name: leads
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: discard_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: DELETE
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: update_lead
  endpoint:
    path: /api/lead/v2/leads/{leadId}
    method: PATCH
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: assign_lead
  endpoint:
    path: /api/lead/v2/assignment
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: associate_lead
  endpoint:
    path: /api/lead/v2/companyAssociation
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: list_activities
  endpoint:
    path: /api/lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
- name: convert_lead
  endpoint:
    path: /api/lead/v2/conversion
    method: POST
    data_selector: records
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    data_selector: lead
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: marketplace_product_active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: marketplace_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
    data_selector: productInformation
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usage
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params: {}
- name: list_applications
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: applications
    params: {}
- name: update_myapps_order
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
    data_selector: order
    params: {}
- name: read_app_by_user_entitlement
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/assigned/{userEntitlementId}
    method: GET
    data_selector: application
    params: {}
- name: read_app_by_pending_id
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps/pending/{pendingAppId}
    method: GET
    data_selector: application
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      ownerId: SOME_STRING_VALUE
      ownerCompanyId: SOME_STRING_VALUE
      customerId: SOME_STRING_VALUE
      customerCompanyId: SOME_STRING_VALUE
      context: SOME_STRING_VALUE
      status: SOME_STRING_VALUE
      purchaseEffectiveDate: SOME_ARRAY_VALUE
      createdOn: SOME_ARRAY_VALUE
      searchText: SOME_STRING_VALUE
      number: 1
      size: 10
      sort: SOME_STRING_VALUE
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: records
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: records
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: records
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: records
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalizeOpportunity
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: requestOpportunityReview
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: getOpportunitySummary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: getOpportunityPricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: application/json
    params:
      ownerId: required
      ownerCompanyId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: application/json
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: application/json
    params:
      opportunityId: required
      discountCode: required
      itemIds: required
- name: remove_discount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: paymentMethods
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: paymentMethod
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
- name: get_default_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: GET
    data_selector: defaultPaymentMethods
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: createPaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethod
    params: {}
- name: listPaymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params: {}
- name: removePaymentMethod
  endpoint:
    path: /appReseller/v1/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: listCompanyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: listUserPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: payments
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: string
      excludeFree: boolean
      fromDate: number
      sortField: string
      sortOrder: string
      start: string
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
    params: {}
- name: product_questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
- name: list_all_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: company_purchase_orders
  endpoint:
    path: /api/marketplace/v1/company/{companyId}/purchaseOrders
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_by_id
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: content
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: sellable_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: company_groups
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: name
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channel_settings
  endpoint:
    path: /api/channel/v1/settings/{partner}
    method: GET
    data_selector: ''
    params: {}
- name: shopping_carts
  endpoint:
    path: /api/v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: ''
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /api/shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_shopping_cart_by_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /api/v3/checkout/shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: null
    params: {}
- name: createShoppingCartValidationByShoppingCartId
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidationByShoppingCartId
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscountByShoppingCartId
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: read_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: POST
- name: list_product_assignments
  endpoint:
    path: /appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params:
      subscriptionUuid: required
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params:
      companyId: required
      userId: required
      subscriptionId: required
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancellation
    params:
      sendNotification: true
- name: Create Subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: content
- name: List Subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: content
- name: Subscription Details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: content
- name: Update Subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: content
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: expire_developer_account
  endpoint:
    path: /sync/v1/tasks#expire
    method: POST
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
- name: get_user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: list_all_users
  endpoint:
    path: /account/v2/users
    method: GET
- name: inactive_users
  endpoint:
    path: /api/account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: userActivationInfo
- name: users
  endpoint:
    path: /api/account/v2/users/{userUuid}
    method: GET
    data_selector: userInfo
- name: user_memberships
  endpoint:
    path: /api/account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: membershipsInfo
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: user
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: components
  endpoint:
    path: /components
    method: POST
- name: custom-components
  endpoint:
    path: /custom-components
    method: POST
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: header
  endpoint:
    path: themes/themeName/header-footer/logged-in.html
    method: GET
- name: footer
  endpoint:
    path: themes/themeName/header-footer/footer.html
    method: GET
- name: Banner
  endpoint:
    path: /sfb-theme-components/banner
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: title
    params:
      required: true
      validation:
        pattern: /^[a-zA-Z0-9 ]+$/gm
        message: This field is invalid
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: /uieditor/sfbComponent/productBanner/showRatings
    method: GET
    data_selector: showRatings
    params: {}
- name: isDisplayCarets
  endpoint:
    path: isDisplayCarets
    method: GET
    data_selector: records
    params: {}
- name: backgroundColor
  endpoint:
    path: backgroundColor
    method: GET
    data_selector: records
    params: {}
- name: size
  endpoint:
    path: /size
    method: GET
    data_selector: options
    params: {}
- name: borderRadius
  endpoint:
    path: /uieditor/sfbComponent/sliderComponent/borderRadius
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue: []
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: []
- name: footerLogo
  endpoint:
    path: /properties/footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: conditionalAttributes
  endpoint:
    path: /properties/conditionalAttributes
    method: GET
    data_selector: conditionalAttributes
    params: {}
- name: billing_and_subscriptions
  endpoint:
    path: /billing/subscriptions
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: Invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params: {}
- name: InvoiceLine
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceLine
    method: GET
    data_selector: records
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoicePaymentTerms
    method: GET
    data_selector: records
    params: {}
- name: InvoiceBillingCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceBillingCharge
    method: GET
    data_selector: records
    params: {}
- name: InvoiceConnection
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceConnection
    method: GET
    data_selector: records
    params: {}
- name: TaxReport
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReport
    method: GET
    data_selector: records
    params: {}
- name: TaxReportDetail
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportDetail
    method: GET
    data_selector: records
    params: {}
- name: TaxReportSummary
  endpoint:
    path: /services/data/vXX.X/sobjects/TaxReportSummary
    method: GET
    data_selector: records
    params: {}
- name: InvoiceListItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceListItem
    method: GET
    data_selector: records
    params: {}
- name: CommissionEventConnection
  endpoint:
    path: /commission/events
    method: GET
    data_selector: events
    params: {}
- name: CommissionCycle
  endpoint:
    path: /commission/cycles
    method: GET
    data_selector: cycles
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: POST
- name: delete_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /api/billing/v1/orders
    method: GET
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: product
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: paymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: listPaymentInstruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: readPaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: create_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: subscription
  endpoint:
    path: /api/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: discount
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
    params: {}
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
    params: {}
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: ''
    params: {}
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: ''
    params: {}
- name: create_payment_method
  endpoint:
    path: /api/payment/v1/paymentMethods
    method: POST
    data_selector: response
- name: list_payment_methods
  endpoint:
    path: /api/payment/v1/paymentMethods
    method: GET
    data_selector: response
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: cart_fields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
    params: {}
- name: remove_items_from_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: update_cart_items
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: update_cart_custom_attributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: createPriceBook
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: createPriceBook.priceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: createPriceBookCondition.condition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: createPriceBookEntry.priceBookEntry
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses[0].id
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess.id
    params: {}
- name: createDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: CREATE
- name: expireDeveloperAccount
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
    params:
      operation: EXPIRE
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params:
      account: accountIdentifier
      quantity: quantity
      price: price
      description: description
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params:
      account: accountIdentifier
      unit: unit
      quantity: quantity
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier for the API request
- name: send_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usage_events
    params: {}
- name: send_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: create_user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: publish_event_content
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: search_content
  endpoint:
    path: /appwise/v2/accounts
    method: GET
- name: feed_resources
  endpoint:
    path: /graphql/feedResources
    method: GET
- name: disconnect_user_accounts
  endpoint:
    path: /appwise/v2/accounts
    method: DELETE
- name: publish_content_events
  endpoint:
    path: /data
    method: POST
- name: search_content
  endpoint:
    path: /search
    method: GET
    params:
      q: ''
- name: query_feed_resources
  endpoint:
    path: /graphql
    method: GET
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: rolling_back
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: status_updates
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: rollback_failed_shipments
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
- name: tracking_information_updates
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
- name: zones
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones
    method: GET
- name: create_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zone
    method: POST
- name: update_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: PUT
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: request_subscription_price_change
  endpoint:
    path: /subscriptionPriceChange
    method: POST
- name: create_account
  endpoint:
    path: /graphql-docs/createaccount.doc.html
    method: POST
- name: update_account
  endpoint:
    path: /graphql-docs/updateaccount.doc.html
    method: POST
- name: patch_account
  endpoint:
    path: /graphql-docs/updateaccount.doc.html
    method: PATCH
- name: read_account
  endpoint:
    path: /graphql-docs/accounts_query.doc.html
    method: GET
- name: read_all_accounts
  endpoint:
    path: /graphql-docs/accounts_query.doc.html
    method: GET
- name: read_account_activities
  endpoint:
    path: /rest.md#tag/Companies/operation/resource_Company_readCompanyActivities_GET
    method: GET
- name: update_user
  endpoint:
    path: /graphql-docs/updateuser.doc.html
    method: POST
- name: patch_user
  endpoint:
    path: /graphql-docs/updateuser.doc.html
    method: PATCH
- name: activate_user
  endpoint:
    path: /rest.md#tag/User/operation/resource_User_updateInactiveUser_PATCH
    method: PATCH
- name: read_user
  endpoint:
    path: /graphql-docs/user_query.doc.html
    method: GET
- name: read_user_profile
  endpoint:
    path: /rest.md#tag/User/operation/resource_User_readUserProfile_GET
    method: GET
- name: read_user_memberships
  endpoint:
    path: /rest.md#tag/User/operation/resource_User_readUserMemberships_GET
    method: GET
- name: list_all_users
  endpoint:
    path: /graphql-docs/users_query.doc.html
    method: GET
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: user
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: ''
    params: {}
- name: revoke_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations/{email}
    method: DELETE
- name: read_companies
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
- name: read_company_details
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: read_accounts
  endpoint:
    path: /accounts
    method: GET
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: update_user
  endpoint:
    path: /users/{userUuid}
    method: PUT
- name: subscription_changed
  endpoint:
    path: /api/billing/v1/subscriptions
    method: POST
    data_selector: resource
    params: {}
- name: subscription_removed
  endpoint:
    path: /api/billing/v1/subscriptions
    method: DELETE
    data_selector: resource
    params: {}
- name: order_added
  endpoint:
    path: /api/billing/v1/orders
    method: POST
    data_selector: resource
    params: {}
- name: order_changed
  endpoint:
    path: /api/billing/v1/orders
    method: POST
    data_selector: resource
    params: {}
- name: order_removed
  endpoint:
    path: /api/billing/v1/orders
    method: DELETE
    data_selector: resource
    params: {}
- name: invoice_added
  endpoint:
    path: /api/appmarket/v1/invoices
    method: POST
    data_selector: resource
    params: {}
- name: add_edit_payment_details
  endpoint:
    path: /user-guides/checkout/graphql/addeditpaymentdetails.md
    method: POST
- name: add_items_to_cart
  endpoint:
    path: /user-guides/checkout/graphql/additemstocart.md
    method: POST
- name: apply_remove_discount
  endpoint:
    path: /user-guides/checkout/graphql/applyremovediscount.md
    method: POST
- name: fetch_modify_shipping
  endpoint:
    path: /user-guides/checkout/graphql/fetchaddmodifyshipping.md
    method: POST
- name: fetch_checkout_settings
  endpoint:
    path: /user-guides/checkout/graphql/fetchcheckoutsettings.md
    method: POST
- name: fetch_details_active_cart
  endpoint:
    path: /user-guides/checkout/graphql/fetchdetailsactive.md
    method: POST
- name: finalize_cart
  endpoint:
    path: /user-guides/checkout/graphql/finalizeacart.md
    method: POST
- name: get_cart_fields
  endpoint:
    path: /user-guides/checkout/graphql/getcartfields.md
    method: POST
- name: remove_items_from_cart
  endpoint:
    path: /user-guides/checkout/graphql/removeitemsfromacart.md
    method: POST
- name: update_cart_details
  endpoint:
    path: /user-guides/checkout/graphql/updatecartdetails.md
    method: POST
- name: validate_cart_details
  endpoint:
    path: /user-guides/checkout/graphql/validatecartdetails.md
    method: POST
- name: user_synchronization
  endpoint:
    path: /user-synchronization
    method: GET
    data_selector: records
- name: product_variants
  endpoint:
    path: /product-variants
    method: GET
    data_selector: records
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get all chats for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create a new chat session for AI
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List data sources for AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Add data source to AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: Create a new API data source
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Revoke AI approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: Get a chat session
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
    params: {}
- name: Message a chat session
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
    params: {}
- name: Delete a chat session
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: POST
- name: chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle.
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: all_companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies.
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyAssociations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: company_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: content
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: content
- name: update_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: content
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: content
- name: user_details
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: Success
    params:
      companyUuid: string
      userUuid: string
- name: user_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: Success
    params:
      companyUuid: string
- name: user_application_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: Success
    params:
      companyUuid: string
      userUuid: string
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: Success
    params:
      companyUuid: string
      userUuid: string
- name: publish_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: Success
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: notificationTemplates
  endpoint:
    path: /notification/v1/templates
    method: GET
- name: sms_notification_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: data
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: ''
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
    params: {}
- name: company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
    params: {}
- name: verified_company_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
    params: {}
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
    params: {}
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
    params:
      searchText: ''
      member: true
      page: 0
      size: 50
- name: invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
    params:
      filter: ''
      inviterUuid: ''
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
    params: {}
- name: read_invoice
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}
    method: GET
    data_selector: invoice
    params: {}
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: POST
    data_selector: lead
    params: {}
- name: lead_details
  endpoint:
    path: /prm/v1/leads/{uuid}
    method: GET
    data_selector: lead
    params: {}
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
    data_selector: lead
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
    data_selector: lead
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
    data_selector: lead
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
    data_selector: content
- name: lead_conversion_request
  endpoint:
    path: /lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /v3/marketplaceProduct/activeSettings/{productId}
    method: GET
    params: {}
- name: product_settings
  endpoint:
    path: /v3/marketplaceProduct/productSettings/{productId}
    method: GET
    params: {}
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usages
    params:
      async: false
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: billing_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params: {}
- name: read_my_apps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
    data_selector: apps
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: read_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: opportunity
    params: {}
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params: {}
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params: {}
- name: add_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params: {}
- name: delete_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params: {}
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params: {}
- name: opportunity_finalize
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: accepted
    params: {}
- name: opportunity_request_review
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: success
    params: {}
- name: opportunity_summary
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params: {}
- name: opportunity_pricing_plan_costs
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params: {}
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: validationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: requiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: user_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
- name: default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: defaultPaymentInstrument
- name: paymentMethodTypes
  endpoint:
    path: /api/appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: content
- name: paymentMethods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: content
- name: listUserPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: content
- name: listCompanyPayments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: content
- name: listPayments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: details
    params: {}
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: boolean
- name: product_question
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_comment
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: GET
    data_selector: comments
- name: product_review
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: reviews
- name: product_image
  endpoint:
    path: /api/products/v1/resources/image/delete
    method: POST
    data_selector: image
- name: product_pdf
  endpoint:
    path: /api/products/v1/resources/file/uploadAndLink
    method: POST
    data_selector: pdf
- name: product_review_create
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: product_review_list
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: product_review_retrieve
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: product_review_update
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: product_review_delete
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: product_read
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: product_retrieve
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: vendor_products_list
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: product_status_retrieve
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
- name: orders
  endpoint:
    path: /billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: user_orders
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: order_payments
  endpoint:
    path: /billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: payments
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: content
    params: {}
- name: order_invoices
  endpoint:
    path: /orders/{orderId}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: action
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: quotes
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: user_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
    data_selector: content
    params:
      size: 50
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
    params: {}
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
    params: {}
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
    params: {}
- name: shopping_cart
  endpoint:
    path: /checkout/shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
- name: create_finalize_shopping_cart
  endpoint:
    path: /checkout/shoppingCarts/finalize
    method: POST
    data_selector: id
- name: finalize_shopping_cart
  endpoint:
    path: /checkout/shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: '[]'
- name: cart_pre_auth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: '{}'
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: '[]'
- name: add_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: '{}'
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: '{}'
- name: update_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: '{}'
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /shoppingCarts/pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /shoppingCarts/validation
    method: POST
    data_selector: items
    params: {}
- name: createShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: createSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: deleteSubscriptionAssignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: listSubscriptionAssignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: cancel
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscriptions
- name: create_developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
- name: assign_user
  endpoint:
    path: /sync/v1/tasks#assign
    method: POST
    data_selector: assignments
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks#unassign
    method: POST
    data_selector: unassignments
- name: list_users
  endpoint:
    path: /account/v2/users
    method: GET
    data_selector: users
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: updateUser
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: records
- name: readUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: updateUserProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: records
- name: user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: profile
    params: {}
- name: temporary_password
  endpoint:
    path: /account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params: {}
- name: webhooks
  endpoint:
    path: /channel/v1/webhooks
    method: GET
    data_selector: content
    params:
      page: '0'
      size: '10'
      sortField: DATE
      sortOrder: DESC
- name: components
  endpoint:
    path: /components
    method: GET
- name: ui_library_components
  endpoint:
    path: /ui-library/components
    method: GET
- name: user_details
  endpoint:
    path: /api/users
    method: GET
- name: profile
  endpoint:
    path: /content/pages/profile
    method: GET
    data_selector: components
    params: {}
- name: global
  endpoint:
    path: /global
    method: GET
    data_selector: components
    params: {}
- name: productLists
  endpoint:
    path: /api/marketplace/v1/productLists
    method: GET
    data_selector: productLists
    params: {}
- name: faq
  endpoint:
    path: /api/marketplace/v1/faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /api/marketplace/v1/navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: theme_translations
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: theme_customizations
  endpoint:
    path: /themes/themeName/customizations
    method: GET
    data_selector: customizations
    params: {}
- name: callToAction
  endpoint:
    path: /cta
    method: GET
- name: Banner
  endpoint:
    path: /sfb-theme-components/banner
    method: GET
    data_selector: records
- name: TabsMenu
  endpoint:
    path: /sfb-theme-components/tabs-menu
    method: GET
    data_selector: records
- name: sliderTitle
  endpoint:
    path: /sliderTitle
    method: GET
    data_selector: inputField
    params: {}
- name: users
  endpoint:
    path: /read/users
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /read/users
    method: GET
- name: size
  endpoint:
    path: /size
    method: GET
- name: user_details
  endpoint:
    path: /read-user-details
    method: GET
    data_selector: userDetails
    params: {}
- name: users
  endpoint:
    path: /read-users
    method: GET
    data_selector: usersList
    params: {}
- name: productsList
  endpoint:
    path: /read-users
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments
    method: GET
    data_selector: data
    params: {}
- name: Invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: data
    params: {}
- name: InvoiceLine
  endpoint:
    path: /invoiceLine
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/account/v1/users
    method: GET
    data_selector: records
- name: subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionId}/assignments/{assignmentId}
    method: DELETE
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /api/account/v1/orders
    method: GET
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: GET
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: payment_instrument
  endpoint:
    path: /paymentInstruments
    method: POST
    data_selector: id
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription_order
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '599'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '566'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: user
  endpoint:
    path: /api/account/v1/users
    method: GET
    data_selector: user
    params: {}
- name: company
  endpoint:
    path: /api/account/v1/companies
    method: GET
    data_selector: company
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products
    method: GET
    data_selector: product
    params: {}
- name: edition
  endpoint:
    path: /api/marketplace/v1/products/{product_id}/editions
    method: GET
    data_selector: edition
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
- name: product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
- name: read_product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: list_discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: content
    params: {}
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: GET
    data_selector: content
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: fetchShippingDetails
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: cartFields
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartFields
- name: removeItemsFromCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.removeItemsFromCart
- name: updateCartItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartItems
- name: updateCartCustomAttributes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateCartCustomAttributes
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: create_price_book
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBook
    params: {}
- name: create_price_book_condition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookCondition
    params: {}
- name: create_price_book_entry
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPriceBookEntry
    params: {}
- name: applicants
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
    data_selector: templates
    params: {}
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
    data_selector: updateResult
    params: {}
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
    data_selector: deleteResult
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: linkProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.linkProductIntegration.product
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses
    params: {}
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess
    params: {}
- name: create_product
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: data.tenants
    params:
      type: TENANT
      operation: CREATE
- name: expire_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: data.tenants
    params:
      type: TENANT
      operation: EXPIRE
- name: custom_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: preconfigured_metered_usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: billing_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usageEvents
    params: {}
- name: fetch_usage_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: Unique system-assigned identifier
- name: send_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: type
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: type
    params: {}
- name: feedResources
  endpoint:
    path: /feedResources
    method: POST
    data_selector: data.accountMembership.feedResources.nodes
    params: {}
- name: userConnections
  endpoint:
    path: /accounts
    method: POST
    data_selector: data.userConnections
    params: {}
- name: publishContent
  endpoint:
    path: /data
    method: POST
    data_selector: data.publishContent
    params: {}
- name: search_content
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      q: search_terms
- name: serialized_fulfillment
  endpoint:
    path: /serializedFulfillment
    method: POST
    data_selector: serializedUnits
    params: {}
- name: zones
  endpoint:
    path: /shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /shippingConfigurations/zones/{uuid}
    method: PUT
- name: Price Change Request
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: create_account
  endpoint:
    path: /companies
    method: POST
    data_selector: account
    params: {}
- name: update_account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: account
    params: {}
- name: read_account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: account
    params: {}
- name: list_all_accounts
  endpoint:
    path: /companies
    method: GET
    data_selector: accounts
    params: {}
- name: create_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: delete_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: membership
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: POST
    data_selector: ''
    params: {}
- name: company_memberships
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data.users.nodes
    params: {}
- name: user
  endpoint:
    path: /account/v1/users
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /billing/v1/orders
    method: POST
    data_selector: resource.content
    params: {}
- name: invoice
  endpoint:
    path: /appmarket/v1/invoices
    method: POST
    data_selector: resource.content
    params: {}
- name: create_company_account_memberships
  endpoint:
    path: /user-companies/rest/createcompanyaccountmemberships
    method: POST
    data_selector: records
    params: {}
- name: delete_company_account_memberships
  endpoint:
    path: /user-companies/rest/deletecompanyaccountmemberships
    method: DELETE
    data_selector: records
    params: {}
- name: AI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
    params: {}
- name: AI Details
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
    params: {}
- name: Approve AI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
    params: {}
- name: Get AI Chats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
    params: {}
- name: Create AI Chat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
    params: {}
- name: List AI Data Sources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
    params: {}
- name: Create API Data Source
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
    params: {}
- name: Add Data Source to AI
  endpoint:
    path: /ai/{aiId}/data-sources
    method: POST
    data_selector: data
    params: {}
- name: Revoke AI Approval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
    params: {}
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: data
- name: delete_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}
    method: DELETE
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: leave_group
  endpoint:
    path: /api/v1/groups/{groupId}/leave
    method: PUT
- name: list_AIs
  endpoint:
    path: /api/v1/me/ai
    method: GET
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage_by_ai
  endpoint:
    path: /api/v1/usage/ai
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: bundle
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}
    method: GET
    data_selector: Bundle application read
- name: bundle_status
  endpoint:
    path: /marketplace/v1/bundles/{bundleId}/status
    method: GET
    data_selector: Bundle application status read
- name: checkout_items
  endpoint:
    path: /api/v3/checkout/items
    method: POST
    data_selector: Item details retrieved successfully
- name: companies
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      includeCustomAttributes: true
      includePurchaseLimitData: true
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: id
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: id
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: create_company_association
  endpoint:
    path: /companyAssociations
    method: POST
    data_selector: id
- name: companyMemberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
    data_selector: memberships
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: membership
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: roles
    params: {}
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: checklist
    params: {}
- name: invite_managed_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: invite
    params: {}
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: purchase
    params: {}
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: roles
    params: {}
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: roles
    params: {}
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: groups
    params: {}
- name: content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: event
    params: {}
- name: currency_exchange_rates
  endpoint:
    path: /api/account/v2/currencyExchangeRates
    method: GET
    data_selector: exchangeRates
    params: {}
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: createCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: readCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivateCurrencyExchangeRate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: smsTemplate
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: emailTemplate
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: message
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: message
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: message
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: message
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: message
    params: {}
- name: publish_catalog
  endpoint:
    path: /v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_template
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: discount
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: response
    params:
      discountId: required
- name: discount
  endpoint:
    path: /path/to/discount/endpoint
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: companies_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: verified_companies_domains
  endpoint:
    path: /account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
    data_selector: memberships
- name: invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: invitations
- name: invitations_registration
  endpoint:
    path: /account/v2/invitations/{invitationToken}/registration
    method: POST
    data_selector: links
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    data_selector: payments
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: leads
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: ''
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: ''
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: ''
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
    data_selector: records
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: conversionRequest
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: conversionApproval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: activeSettings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: productSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
    data_selector: usageData
    params: {}
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
    data_selector: usageData
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: get_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: []
- name: opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: removeItem
    params:
      opportunityId: required
      itemId: required
- name: edit_opportunity_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: editItem
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
    data_selector: opportunity
    params:
      opportunityId: string
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
    data_selector: opportunity
    params:
      opportunityId: string
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
    data_selector: summary
    params:
      opportunityId: string
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      opportunityId: string
      pricingPlanId: string
      currency: string
- name: pricingPlanCosts
  endpoint:
    path: /assistedSales/v1/opportunities/pricingPlanCosts
    method: GET
    data_selector: pricing
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: ownerId
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/validation
    method: GET
    data_selector: blockingErrors
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /assistedSales/v1/opportunities/items/requiredFields/definitions
    method: POST
    data_selector: forms
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /assistedSales/v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountCode
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params: {}
- name: payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: default_payment_instrument
  endpoint:
    path: /paymentInstruments/default
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: POST
    data_selector: id
    params:
      ownerId: string
      companyId: string
      paymentMethodType: string
      billingAddress: object
- name: list_payment_methods
  endpoint:
    path: /api/appReseller/v1/paymentMethods
    method: GET
    data_selector: content
    params:
      ownerId: string
      companyId: string
      number: integer
      size: integer
      paymentMethodType: string
- name: payments
  endpoint:
    path: /api/billing/v1/payments
    method: GET
    data_selector: content
    params:
      count: string
      fromDate: number
      method: string
      result: string
      sortField: string
      sortOrder: string
      start: string
      toDate: number
- name: retrieve_payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
- name: list_payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
- name: retrieve_transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
- name: create_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: POST
- name: retrieve_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: GET
- name: update_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: PUT
- name: delete_transfer_platform_configuration
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations/{transferPlatformConfigurationId}
    method: DELETE
- name: create_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: POST
- name: retrieve_transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
- name: retrieve_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
- name: delete_transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: DELETE
- name: list_all_answers
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: GET
- name: create_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers
    method: POST
- name: retrieve_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: GET
- name: update_answer
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
- name: product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: product_question_detail
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: update_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_product_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
- name: create_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
- name: list_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
- name: update_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
- name: delete_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
- name: purchase_orders
  endpoint:
    path: /purchaseOrder/v1/company/{companyId}/orders
    method: GET
- name: orders
  endpoint:
    path: /companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: DATE
      sortOrder: ASC
      start: '0'
- name: user_orders
  endpoint:
    path: /companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: DATE
      sortOrder: ASC
      start: '0'
- name: order_payments
  endpoint:
    path: /orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: '250'
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: '0'
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params: {}
- name: purchase_order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
    params: {}
- name: purchase_order
  endpoint:
    path: /billing/v1/orders/{orderId}
    method: GET
    data_selector: content
    params: {}
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: execute_action
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: get_quote_by_id
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledger_lines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transfer_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transfer_ledger_lines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: list_reports
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: retrieve_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_reports_v2
  endpoint:
    path: /reporting/v2/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v2/reports/{reportUuid}
    method: GET
    data_selector: ''
    params: {}
- name: list_sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: get_product_editions
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts/{productId}/editions
    method: GET
    data_selector: ''
    params: {}
- name: search_content
  endpoint:
    path: /appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: create_segment_folder
  endpoint:
    path: /channel/v1/companyGroups
    method: POST
    data_selector: ''
    params: {}
- name: get_segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: content
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
    data_selector: id
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
    data_selector: privacyPolicyUrlMap
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
    data_selector: content
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: items
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: items
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: '[]'
- name: cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
    data_selector: '{}'
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: '[]'
- name: add_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
    data_selector: '{}'
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
    data_selector: '{}'
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
    data_selector: '{}'
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: '[]'
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: '[]'
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: '[]'
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params: {}
- name: shopping_cart_validation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: id
    params:
      level: PRE_FINALIZE
- name: delete_discount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: null
    params:
      itemId: []
- name: delete_shopping_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: null
    params: {}
- name: create_cart_fee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
    params: {}
- name: set_accredited_agents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
    params: {}
- name: notify_locked_carts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: null
    params: {}
- name: subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params: {}
- name: create_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params: {}
- name: delete_subscription_assignment
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params: {}
- name: list_subscription_assignments
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params: {}
- name: read_subscription_saml_certificate
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params: {}
- name: readSamlInfo
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: records
    params: {}
- name: listCompanySubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: changeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: records
    params: {}
- name: listUserSubscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: createSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: records
    params: {}
- name: previewChangeSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
    data_selector: records
    params: {}
- name: previewCreateSubscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
- name: update_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: null
- name: create_subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscription_details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
- name: update_subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
- name: user_connections
  endpoint:
    path: /appwise/v2/accounts
    method: POST
- name: inactive_users
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: response
    params: {}
- name: user_memberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: response
    params: {}
- name: update_user
  endpoint:
    path: /account/v2/users/{userUuid}
    method: PUT
    data_selector: response
    params: {}
- name: update_user_profile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: PUT
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: ''
    params:
      userUuid: required
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: ''
    params:
      userUuid: required
- name: company_account_memberships
  endpoint:
    path: /api/v1/company_account_memberships
    method: POST
    data_selector: data
    params: {}
- name: themes
  endpoint:
    path: /themes
    method: GET
    data_selector: themes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: localization
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: translations
    params: {}
- name: custom_resources
  endpoint:
    path: /themes/themeName/assets/images
    method: GET
    data_selector: custom_images
    params: {}
- name: sliderTitle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: description
  endpoint:
    path: /api/v1/description
    method: GET
    data_selector: description
    params: {}
- name: height
  endpoint:
    path: /properties/height
    method: GET
    data_selector: options
    params: {}
- name: showRatings
  endpoint:
    path: /uieditor/sfbComponent/productBanner/showRatings
    method: GET
    data_selector: showRatings
    params: {}
- name: borderRadius
  endpoint:
    path: /borderRadius
    method: GET
    data_selector: borderRadius
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: defaultValue.items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: footerLogo
  endpoint:
    path: /path/to/footerLogo
    method: GET
    data_selector: footerLogo
    params: {}
- name: isDisplayCarets
  endpoint:
    path: /path/to/isDisplayCarets
    method: GET
    data_selector: isDisplayCarets
    params: {}
- name: isDisplayCaretsOnHover
  endpoint:
    path: /path/to/isDisplayCaretsOnHover
    method: GET
    data_selector: isDisplayCaretsOnHover
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: No Content
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '553'
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: null
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: null
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    data_selector: null
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: paymentInstrument
  endpoint:
    path: /api/billing/v1/paymentInstruments
    method: POST
    data_selector: id
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
- name: list_payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments
    method: GET
- name: read_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: GET
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyUuid}/users/{userUuid}/paymentInstruments/{paymentInstrumentUuid}
    method: PUT
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentUuid}
    method: DELETE
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: order
  endpoint:
    path: /order
    method: GET
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{company_id}/users/{user_id}/subscriptions
    method: POST
    data_selector: order
    params:
      paymentPlanId: 749
- name: create_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    data_selector: subscriptions
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    data_selector: subscription
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    data_selector: subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    data_selector: subscription
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: products
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: discounts
  endpoint:
    path: /api/v1/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart.cart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart.cart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart.cart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: shippingFees
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: response
    params: {}
- name: checkoutSettings
  endpoint:
    path: /graphql
    method: POST
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /graphql
    method: POST
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /graphql
    method: POST
    data_selector: finalizeCart
- name: validateCart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart.cartValidation
    params: {}
- name: cartValidation
  endpoint:
    path: /cartValidation
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: createPriceBook
  endpoint:
    path: /createPriceBook
    method: POST
    data_selector: data.createPriceBook.priceBook
    params: {}
- name: createPriceBookCondition
  endpoint:
    path: /createPriceBookCondition
    method: POST
    data_selector: data.createPriceBookCondition.condition
    params: {}
- name: createPriceBookEntry
  endpoint:
    path: /createPriceBookEntry
    method: POST
    data_selector: data.createPriceBookEntry.priceBookEntry
    params: {}
- name: setMarketplacePrice
  endpoint:
    path: /setMarketplacePrice
    method: POST
    data_selector: data.setMarketplacePrice
    params: {}
- name: triggerSetMarketplacePricesProcess
  endpoint:
    path: /triggerSetMarketplacePricesProcess
    method: POST
    data_selector: data.triggerSetMarketplacePricesProcess
    params: {}
- name: removeMarketplacePrice
  endpoint:
    path: /removeMarketplacePrice
    method: POST
    data_selector: data.removeMarketplacePrice
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: lead
  endpoint:
    path: /leads
    method: POST
    data_selector: leads
    params: {}
- name: company
  endpoint:
    path: /services/data/vXX.X/sobjects/Company
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /services/data/vXX.X/sobjects/Settings
    method: GET
    data_selector: records
    params: {}
- name: companies
  endpoint:
    path: /crm/companies
    method: POST
    data_selector: properties
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: updateProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateProduct.product
    params: {}
- name: createProductEdition
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductEdition.edition
    params: {}
- name: createProductIntegration
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: updateEditionPricing
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateEditionPricing.editionPricing
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
    params: {}
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses[0].id
    params: {}
- name: create_product
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
- name: expire_developer_account
  endpoint:
    path: /api/sync/v1/tasks
    method: POST
    data_selector: tenants
- name: Send custom metered usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: Send preconfigured metered usage
  endpoint:
    path: /api/integration/v1/billing/usage
    method: POST
    data_selector: items
    params: {}
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
- name: send_custom_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usageEvents
- name: send_metered_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: assignment
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: unassignment
    params: {}
- name: feedResources
  endpoint:
    path: /feedResources
    method: POST
- name: createUserConnections
  endpoint:
    path: /accounts
    method: POST
- name: disconnectUserAccounts
  endpoint:
    path: /accounts
    method: DELETE
- name: publishContentEvents
  endpoint:
    path: /data
    method: POST
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: zones
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: PUT
- name: price_definition
  endpoint:
    path: /priceDefinition
    method: POST
- name: request_subscription_price_change
  endpoint:
    path: /requestSubscriptionPriceChange
    method: POST
- name: create_account
  endpoint:
    path: /companies
    method: POST
    data_selector: null
    params: {}
- name: update_account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: null
    params: {}
- name: read_account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: null
    params: {}
- name: list_accounts
  endpoint:
    path: /companies
    method: GET
    data_selector: null
    params: {}
- name: create_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: null
    params: {}
- name: delete_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: data
- name: create_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: data
- name: delete_company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: data
- name: list_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
    data_selector: data
- name: read_company_details
  endpoint:
    path: /companies/externalID:{external_ID}
    method: GET
    data_selector: data
- name: read_users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: company_membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: PUT
    data_selector: content
- name: user
  endpoint:
    path: /users/{userUuid}
    method: PUT
    data_selector: content
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
    params: {}
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
    params: {}
- name: order
  endpoint:
    path: /billing/v1/orders
    method: POST
    data_selector: resource
    params: {}
- name: invoice
  endpoint:
    path: /appmarket/v1/invoices
    method: POST
    data_selector: resource
    params: {}
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: data_sources
  endpoint:
    path: /api/v1/data-sources
    method: GET
- name: refresh_data_source
  endpoint:
    path: /api/v1/data-sources/{dataSourceId}/refresh
    method: PUT
- name: create_group
  endpoint:
    path: /api/v1/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /api/v1/groups/{groupId}
    method: DELETE
- name: get_chats
  endpoint:
    path: /api/v1/me/chats
    method: GET
- name: get_user_groups
  endpoint:
    path: /api/v1/me/groups
    method: GET
- name: get_org_usage
  endpoint:
    path: /api/v1/usage/org
    method: GET
- name: create_chat_completion
  endpoint:
    path: /api/v1/chats/completions
    method: POST
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: companyActivities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
    params:
      displayType: ONLY_ME
      page: 0
      size: 12
- name: allCompanies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: Retrieve all marketplace companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
- name: companyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: GET
- name: createCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
- name: updateCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: PUT
- name: deleteCompanyMembership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: company_membership_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: payload
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: invite_user
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
      inviterUuid: optional
- name: purchase_application
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: payload
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: payload
    params:
      companyUuid: required
- name: company_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: payload
    params:
      companyUuid: required
      userUuid: required
- name: publish_content_events
  endpoint:
    path: /api/appwise/v2/data
    method: POST
    data_selector: payload
- name: currency_exchange_rates
  endpoint:
    path: /api/currency/v2/exchangeRates
    method: GET
    data_selector: payload
- name: currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
- name: create_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates
    method: POST
- name: read_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: GET
- name: deactivate_currency_exchange_rate
  endpoint:
    path: /channel/v1/exchangeRates/{currencyExchangeRateUuid}
    method: PATCH
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms/{type}
    method: GET
- name: email_template
  endpoint:
    path: /notification/v1/templates/email/{type}
    method: GET
- name: sms_template
  endpoint:
    path: /notification/v1/templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params:
      file: required
      entityType: required
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: content
- name: create_or_update_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email
    method: POST
    data_selector: content
- name: get_default_common_email_template
  endpoint:
    path: /notification/v1/templates/default/common/email/{type}
    method: GET
    data_selector: content
- name: create_or_update_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email
    method: POST
    data_selector: content
- name: get_default_email_template
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: content
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params:
      count: 250
- name: MASTER_RECORDS
  endpoint:
    path: /MASTER_RECORDS
    method: GET
- name: MBPS
  endpoint:
    path: /MBPS
    method: GET
- name: MONITORED_USER
  endpoint:
    path: /MONITORED_USER
    method: GET
- name: MPLS
  endpoint:
    path: /MPLS
    method: GET
- name: ORDER
  endpoint:
    path: /ORDER
    method: GET
- name: OUTPATIENT_DAYS
  endpoint:
    path: /OUTPATIENT_DAYS
    method: GET
- name: PAGE_VIEW
  endpoint:
    path: /PAGE_VIEW
    method: GET
- name: PATIENT_CARE_DAY
  endpoint:
    path: /PATIENT_CARE_DAY
    method: GET
- name: PATIENT_TREATED
  endpoint:
    path: /PATIENT_TREATED
    method: GET
- name: PLANT
  endpoint:
    path: /PLANT
    method: GET
- name: POINTS_OF_DELIVERY
  endpoint:
    path: /POINTS_OF_DELIVERY
    method: GET
- name: PREMIUM
  endpoint:
    path: /PREMIUM
    method: GET
- name: PROCESS
  endpoint:
    path: /PROCESS
    method: GET
- name: PRODUCTS
  endpoint:
    path: /PRODUCTS
    method: GET
- name: RECORDS
  endpoint:
    path: /RECORDS
    method: GET
- name: RENTAL_UNIT
  endpoint:
    path: /RENTAL_UNIT
    method: GET
- name: RESOURCES
  endpoint:
    path: /RESOURCES
    method: GET
- name: REVENUE
  endpoint:
    path: /REVENUE
    method: GET
- name: SALES_ORDER
  endpoint:
    path: /SALES_ORDER
    method: GET
- name: SALES_PORTFOLIOS
  endpoint:
    path: /SALES_PORTFOLIOS
    method: GET
- name: SERVICE_ORDERS
  endpoint:
    path: /SERVICE_ORDERS
    method: GET
- name: SITE_VISITS
  endpoint:
    path: /SITE_VISITS
    method: GET
- name: SPENDS
  endpoint:
    path: /SPENDS
    method: GET
- name: SPEND_VOLUMES
  endpoint:
    path: /SPEND_VOLUMES
    method: GET
- name: STREAM
  endpoint:
    path: /STREAM
    method: GET
- name: STUDENT
  endpoint:
    path: /STUDENT
    method: GET
- name: SUBSCRIBER
  endpoint:
    path: /SUBSCRIBER
    method: GET
- name: SUPPLIERS
  endpoint:
    path: /SUPPLIERS
    method: GET
- name: TICKETS
  endpoint:
    path: /TICKETS
    method: GET
- name: TOTAL_ANNUAL_BUDGET
  endpoint:
    path: /TOTAL_ANNUAL_BUDGET
    method: GET
- name: TUNNEL
  endpoint:
    path: /TUNNEL
    method: GET
- name: VIRTUAL_USERS
  endpoint:
    path: /VIRTUAL_USERS
    method: GET
- name: SAP_SYSTEM
  endpoint:
    path: /SAP_SYSTEM
    method: GET
- name: POSITION_TYPES
  endpoint:
    path: /POSITION_TYPES
    method: GET
- name: OVERAGE_FEES
  endpoint:
    path: /OVERAGE_FEES
    method: GET
- name: OVERAGE_FEE_TRANSACTION
  endpoint:
    path: /OVERAGE_FEE_TRANSACTION
    method: GET
- name: OVERAGE_FEES_DOCUMENT
  endpoint:
    path: /OVERAGE_FEES_DOCUMENT
    method: GET
- name: OVERAGE_FEES_ITEM
  endpoint:
    path: /OVERAGE_FEES_ITEM
    method: GET
- name: EVENT
  endpoint:
    path: /EVENT
    method: GET
- name: BUSINESS_EVENT
  endpoint:
    path: /BUSINESS_EVENT
    method: GET
- name: LEGAL_TENDER
  endpoint:
    path: /LEGAL_TENDER
    method: GET
- name: ANNUAL_REVENUE
  endpoint:
    path: /ANNUAL_REVENUE
    method: GET
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
    params:
      discountId: required
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: records
- name: companies_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: records
- name: companies_verified_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: records
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: records
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: records
- name: group_memberships
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: group_memberships_batch
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships
    method: POST
- name: add_user_to_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: PUT
- name: delete_user_from_group
  endpoint:
    path: /account/v2/companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: list_invitations
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: GET
- name: invite_users
  endpoint:
    path: /account/v2/companies/{companyUuid}/invitations
    method: POST
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    params:
      count: '250'
      excludeFree: boolean
      fromDate: number
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: string
      toDate: number
      buyerRole: string
- name: invoice_payments
  endpoint:
    path: /billing/v1/invoices/{invoiceNumber}/payments
    method: GET
    params:
      count: string
      fromDate: number
      method: string
      result: string
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: string
      toDate: number
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    params:
      fromDate: integer
      page: integer
      searchText: string
      size: integer
      sortField: DATE
      sortOrder: DESC
      source: Array of strings
      status: Array of strings
      target: Array of strings
      toDate: integer
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: null
- name: get_lead_details
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: null
- name: lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: delete_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: RESELLER
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: RESELLER
      leadId: SOME_STRING_VALUE
- name: active_product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: usage_processing_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps_list
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: myapps_update_order
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: PUT
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params: {}
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: ''
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params: {}
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PATCH
    data_selector: opportunity
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: POST
    data_selector: items
    params:
      opportunityId: required
- name: list_items
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items
    method: GET
    data_selector: items
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: item
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricing_plan_costs
  endpoint:
    path: /v1/opportunities/pricingPlanCosts
    method: GET
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: change_opportunity_owner
  endpoint:
    path: /v1/opportunities/{opportunityId}/owner
    method: PATCH
    params:
      opportunityId: required
- name: opportunity_validation_results
  endpoint:
    path: /v1/opportunities/{opportunityId}/validation
    method: GET
    params:
      opportunityId: required
      enforce: optional
- name: required_field_definitions
  endpoint:
    path: /v1/opportunities/items/requiredFields/definitions
    method: POST
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: apply_discount
  endpoint:
    path: /v2/opportunities/{opportunityId}/applyDiscount
    method: POST
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: response
    params:
      opportunityId: string
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: response
    params:
      opportunityId: string
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: response
    params:
      opportunityId: string
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: response
    params:
      companyId: string
      userId: string
- name: payment_instruments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
    params: {}
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
    params: {}
- name: retrieve_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: GET
    data_selector: records
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
    params: {}
- name: list_payment_methods
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: GET
    data_selector: records
    params: {}
- name: create_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods
    method: POST
    data_selector: records
    params: {}
- name: delete_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/{paymentMethodId}
    method: DELETE
    data_selector: records
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /appMarket/v2/paymentMethods/defaults
    method: POST
    data_selector: records
    params: {}
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
    data_selector: paymentMethodTypes
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
    data_selector: paymentMethods
- name: userPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
    data_selector: payments
- name: companyPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/payments
    method: GET
    data_selector: payments
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
    params: {}
- name: transfer_method
  endpoint:
    path: /api/appMarket/v2/transferMethods/{transferMethodId}
    method: GET
    data_selector: transferMethod
    params: {}
- name: questions
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
- name: question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: GET
    data_selector: question
- name: create_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions
    method: POST
    data_selector: question
- name: update_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: PUT
    data_selector: question
- name: delete_question
  endpoint:
    path: /marketplace/v1/products/{applicationId}/questions/{questionId}
    method: DELETE
    data_selector: question
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
    data_selector: Review created.
    params: {}
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
    data_selector: Reviews read.
    params: {}
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
    data_selector: Review read.
    params: {}
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
    data_selector: Review updated.
    params: {}
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
    data_selector: Review deleted.
    params: {}
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
    data_selector: product information
    params: {}
- name: list_vendor_products
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
    data_selector: Success
    params: {}
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: products status
    params: {}
- name: product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: status
    params: {}
- name: product_recommendations
  endpoint:
    path: /marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: recommendations
    params: {}
- name: product_listing
  endpoint:
    path: /marketplace/v1/listing
    method: GET
    data_selector: products
    params: {}
- name: staging_catalog
  endpoint:
    path: /channel/v1/stagingCatalog
    method: GET
    data_selector: content
    params: {}
- name: orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    data_selector: records
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /api/billing/v1/orders/{orderId}/payments
    method: GET
    data_selector: records
    params:
      count: 250
      start: 0
      sortField: PAYMENT_ID
      sortOrder: ASC
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
    data_selector: content
    params:
      context: RESELLER, RESELLER_MANAGER
- name: order_invoices
  endpoint:
    path: /billing/v1/orders/{orderId}/invoices
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: content
- name: quotes
  endpoint:
    path: /assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: transferDetails
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}
    method: GET
    data_selector: ''
    params: {}
- name: transferLedgerLines
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: ''
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports_v1
  endpoint:
    path: /reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: download_report
  endpoint:
    path: /reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: companyGroups
  endpoint:
    path: /channel/v1/companyGroups/{companyGroupId}
    method: PUT
- name: segments
  endpoint:
    path: /channel/v1/segments
    method: GET
- name: availableAndAssociatedCompanies
  endpoint:
    path: /channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: GET
- name: dynamic_segments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channel_settings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shopping_carts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: cart_associations
  endpoint:
    path: /{shoppingCartId}/associations
    method: GET
- name: cart_pre_auth
  endpoint:
    path: /{shoppingCartId}/preauth
    method: GET
- name: cart_items
  endpoint:
    path: /{shoppingCartId}/items
    method: GET
- name: add_cart_item
  endpoint:
    path: /{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /{shoppingCartId}/items/{itemId}
    method: GET
- name: update_cart_item
  endpoint:
    path: /{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
- name: preview_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
- name: preview_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
- name: pricing_summary
  endpoint:
    path: /v3/checkout/shoppingCarts/pricingSummary
    method: GET
    data_selector: items
- name: validate_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/validation
    method: POST
    data_selector: ''
- name: validateShoppingCart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: POST
- name: getShoppingCartValidation
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/validation
    method: GET
- name: deleteDiscount
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
- name: deleteShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
- name: createShoppingCartFee
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/fees
    method: POST
- name: updateShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
- name: deleteShoppingCartAccreditedAgents
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
- name: notifyLockedCarts
  endpoint:
    path: /shoppingCarts/notifyLockedCarts
    method: POST
- name: readSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: createSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: deleteSubscriptionAssignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
    data_selector: records
    params:
      subscriptionUuid: required
      userUuid: required
- name: listSubscriptionAssignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSubscriptionAssignmentCount
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
    data_selector: records
    params:
      subscriptionUuid: required
- name: reactivationRequest
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
    data_selector: records
    params:
      subscriptionUuid: required
- name: readSamlCertificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
    data_selector: records
    params:
      subscriptionUuid: required
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
- name: change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
- name: preview_change_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}/preview
    method: PUT
- name: preview_create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/preview
    method: POST
- name: subscriptions
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_payments
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_subscription
  endpoint:
    path: /billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params:
      sendNotification: true
- name: Create subscription
  endpoint:
    path: /appReseller/v1/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: List subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: Subscription details
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: Update subscription
  endpoint:
    path: /appReseller/v1/subscriptions/{subscriptionId}
    method: PUT
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /api/appReseller/v1/subscriptions/{subscriptionId}
    method: DELETE
- name: developerAccountCreate
  endpoint:
    path: /api/sync/v1/tasks#create
    method: POST
- name: developerAccountExpire
  endpoint:
    path: /api/sync/v1/tasks#expire
    method: POST
- name: userAssign
  endpoint:
    path: /api/sync/v1/tasks#assign
    method: POST
- name: userUnassign
  endpoint:
    path: /api/sync/v1/tasks#unassign
    method: POST
- name: userAssignments
  endpoint:
    path: /api/sync/v1/assignments
    method: GET
- name: userConnections
  endpoint:
    path: /api/appwise/v2/accounts
    method: POST
- name: disconnectUserAccounts
  endpoint:
    path: /api/appwise/v2/accounts
    method: DELETE
- name: listAllUsers
  endpoint:
    path: /api/account/v2/users
    method: GET
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: records
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: records
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: records
- name: userProfile
  endpoint:
    path: /account/v2/users/{userUuid}/profile
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: create_webhook
  endpoint:
    path: /api/channel/v1/webhooks
    method: POST
    data_selector: uuid
- name: retrieve_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: GET
    data_selector: uuid
- name: update_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: PUT
    data_selector: uuid
- name: delete_webhook
  endpoint:
    path: /api/channel/v1/webhooks/{webhookUuid}
    method: DELETE
- name: PageOrderableContainer
  endpoint:
    path: /storefront/reference/components
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: productLists
  endpoint:
    path: /productLists
    method: GET
    data_selector: custom_lists
    params: {}
- name: faqs
  endpoint:
    path: /faqs
    method: GET
    data_selector: ui.faqs
    params: {}
- name: navigator
  endpoint:
    path: /navigator
    method: GET
    data_selector: ui.navigator
    params: {}
- name: sliderTitle
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: description
  endpoint:
    path: description
    method: GET
    data_selector: fields
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: productsList
  endpoint:
    path: /productsList
    method: GET
    data_selector: items
    params:
      required: 'true'
- name: backgroundImg
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: pageTabs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: drawerList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: properties
- name: metadata
  endpoint:
    path: /meta
    method: GET
    data_selector: properties
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: properties
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: properties
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: properties
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: InvoiceLine
  endpoint:
    path: /invoices/lines
    method: GET
    data_selector: lines
    params: {}
- name: InvoicePaymentTerms
  endpoint:
    path: /invoices/paymentTerms
    method: GET
    data_selector: paymentTerms
    params: {}
- name: TaxReport
  endpoint:
    path: /invoices/taxReports
    method: GET
    data_selector: taxReports
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_methods
  endpoint:
    path: /api/billing/v1/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: none
    params: {}
- name: company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: none
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params: {}
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params: {}
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/<productId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: create_payment_instrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: read_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: update_payment_instrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: delete_payment_instrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription/order
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/account/v1/subscription
    method: POST
    data_selector: subscription
- name: subscription
  endpoint:
    path: /billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params:
      count: 250
- name: create_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: id
- name: update_discount
  endpoint:
    path: /discounts/{discountId}
    method: PUT
    data_selector: id
- name: delete_discount
  endpoint:
    path: /discounts/{discountId}
    method: DELETE
- name: list_discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: retrieve_discount
  endpoint:
    path: /discounts/{discountId}
    method: GET
    data_selector: id
- name: metered_usage
  endpoint:
    path: /api/metered-usage/v1
    method: POST
    data_selector: usage
- name: add_items_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: apply_discount_to_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: remove_discount_from_cart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: save_shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params: {}
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params: {}
- name: setResellerCompanyPrice
  endpoint:
    path: /graphql-docs/setresellercompanyplaceprice.doc.html
    method: POST
- name: triggerSetResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/triggersetresellercompanypricesprocess.doc.html
    method: POST
- name: removeResellerCompanyPrice
  endpoint:
    path: /graphql-docs/removeresellercompanyprice.doc.html
    method: POST
- name: setResellerCompanyPricesProcess
  endpoint:
    path: /graphql-docs/setresellercompanypricesprocess_query.doc.html
    method: GET
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createPricingPlan
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createPricingPlan.pricingPlan.id
- name: createProduct
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProduct.product.id
- name: triggerProductPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.triggerProductPublicationProcess.productPublicationProcesses[0].id
- name: productPublicationProcess
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.productPublicationProcess.id
- name: marketplaceProductSettings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: PUT
- name: fetch_usage_processing_status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
- name: usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: ''
    params: {}
- name: feedResources
  endpoint:
    path: /feedResources
    method: GET
- name: userConnections
  endpoint:
    path: /accounts
    method: POST
- name: publishData
  endpoint:
    path: /data
    method: POST
- name: disconnectUser
  endpoint:
    path: /accounts
    method: DELETE
- name: validate_address
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipment_requests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipment_records
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: shipping_zones
  endpoint:
    path: /shippingConfigurations/zones
    method: GET
    data_selector: zones
- name: update_zone
  endpoint:
    path: /shippingConfigurations/zones/{uuid}
    method: PUT
    data_selector: zone
    params: {}
- name: create_account
  endpoint:
    path: /account/v2/companies
    method: POST
    data_selector: account
    params: {}
- name: update_account
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: PUT
    data_selector: account
    params: {}
- name: read_account
  endpoint:
    path: /account/v2/companies/{companyUuid}
    method: GET
    data_selector: account
    params: {}
- name: list_accounts
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: accounts
    params: {}
- name: create_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships
    method: POST
    data_selector: membership
    params: {}
- name: delete_company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
    data_selector: success
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: POST
- name: company_memberships
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data.users.nodes
- name: user
  endpoint:
    path: /users/{userUuid}
    method: PUT
    data_selector: data.user
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data.companies
- name: company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: data.company
- name: company
  endpoint:
    path: /api/account/v1/companies
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions
    method: GET
    data_selector: content
- name: createAI
  endpoint:
    path: /ai
    method: POST
    data_selector: data
- name: getAIDetails
  endpoint:
    path: /ai/{aiId}
    method: GET
    data_selector: data
- name: approveAI
  endpoint:
    path: /ai/{aiId}/approve
    method: PUT
    data_selector: data
- name: getAIChats
  endpoint:
    path: /ai/{aiId}/chats
    method: GET
    data_selector: data
- name: createAIChat
  endpoint:
    path: /ai/{aiId}/chats
    method: POST
    data_selector: data
- name: listAIDataSources
  endpoint:
    path: /ai/{aiId}/data-sources
    method: GET
    data_selector: data
- name: createApiDataSource
  endpoint:
    path: /ai/{aiId}/data-sources/api
    method: POST
    data_selector: data
- name: revokeAIApproval
  endpoint:
    path: /ai/{aiId}/revoke
    method: PUT
    data_selector: data
- name: getChat
  endpoint:
    path: /chats/{chatId}
    method: GET
    data_selector: data
- name: postChatSession
  endpoint:
    path: /chats/{chatId}
    method: POST
    data_selector: data
- name: deleteChat
  endpoint:
    path: /chats/{chatId}
    method: DELETE
    data_selector: data
- name: duplicateChat
  endpoint:
    path: /chats/{chatId}/duplicate
    method: PUT
    data_selector: data
- name: resetChat
  endpoint:
    path: /chats/{chatId}/reset
    method: PUT
    data_selector: data
- name: data_sources
  endpoint:
    path: /data-sources
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: chats
  endpoint:
    path: /me/chats
    method: GET
    data_selector: data
- name: usage_org
  endpoint:
    path: /usage/org
    method: GET
- name: bundles
  endpoint:
    path: /marketplace/v1/bundles
    method: GET
    data_selector: List of product bundle
- name: company_activities
  endpoint:
    path: /account/v2/companies/{companyUuid}/activities
    method: GET
    data_selector: Success
- name: companies
  endpoint:
    path: /account/v2/companies
    method: GET
    data_selector: List of all companies
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      includeCustomAttributes: 'true'
      includePurchaseLimitData: 'true'
      page: 0
      size: 50
      sortField: NAME
      sortOrder: DESC
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: company
    params: {}
- name: read_company
  endpoint:
    path: /companies/{companyUuid}
    method: GET
    data_selector: company
    params: {}
- name: update_company
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
    data_selector: company
    params: {}
- name: patch_company
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
    data_selector: company
    params: {}
- name: update_company_picture
  endpoint:
    path: /companies/{companyUuid}/picture
    method: PUT
    data_selector: company
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: content
    params:
      context: RESELLER
- name: company_associations
  endpoint:
    path: /companyAssociations
    method: GET
    data_selector: content
    params: {}
- name: company_association
  endpoint:
    path: /appReseller/v1/companyAssociations/{companyAssociationId}
    method: DELETE
- name: company_membership
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}
    method: GET
- name: user_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/roles
    method: PATCH
    data_selector: array
    params:
      companyUuid: required
- name: user_checklist
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/checklist
    method: GET
    data_selector: object
    params:
      companyUuid: required
      userUuid: required
- name: invite_user
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/invite
    method: POST
    data_selector: object
    params:
      companyUuid: required
      userUuid: required
- name: purchase_application
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/applications/{applicationId}/purchaseRequests
    method: POST
    data_selector: object
    params:
      applicationId: required
      companyUuid: required
      userUuid: required
- name: user_assignments
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignments
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/assignableRoles
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: company_assignable_roles
  endpoint:
    path: /account/v2/companies/{companyUuid}/assignableRoles
    method: GET
    data_selector: array
    params:
      companyUuid: required
- name: user_groups
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/groups
    method: GET
    data_selector: array
    params:
      companyUuid: required
      userUuid: required
- name: content_events
  endpoint:
    path: /appwise/v2/data
    method: POST
    data_selector: object
- name: currency_exchange_rates
  endpoint:
    path: /currencyExchangeRates
    method: GET
    data_selector: array
- name: exchangeRates
  endpoint:
    path: /channel/v1/exchangeRates
    method: GET
    params:
      baseCurrency: SOME_STRING_VALUE
      counterCurrency: SOME_STRING_VALUE
      page: SOME_INTEGER_VALUE
      size: SOME_INTEGER_VALUE
      sortField: SOME_STRING_VALUE
      sortOrder: SOME_STRING_VALUE
- name: sms_template
  endpoint:
    path: /templates/sms
    method: POST
    data_selector: content
    params: {}
- name: email_template
  endpoint:
    path: /notification/v1/templates/email
    method: POST
    data_selector: data
    params: {}
- name: common_email_template
  endpoint:
    path: /notification/v1/templates/common/email/{type}
    method: GET
    data_selector: data
    params: {}
- name: common_templates
  endpoint:
    path: /notification/v1/templates/common
    method: GET
    data_selector: data
    params: {}
- name: update_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/updateCatalog
    method: POST
    data_selector: data
    params: {}
- name: create_product_catalog
  endpoint:
    path: /api/v1/product-uploader-api/createCatalog
    method: POST
    data_selector: data
    params: {}
- name: publish_catalog
  endpoint:
    path: /api/v1/product-uploader-api/publishCatalog
    method: POST
    data_selector: message
    params: {}
- name: default_notification_templates
  endpoint:
    path: /notification/v1/templates/default
    method: GET
    data_selector: '[]'
    params: {}
- name: default_email_template
  endpoint:
    path: /notification/v1/templates/default/email/{type}
    method: GET
    data_selector: content
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /channel/v1/discounts
    method: POST
    data_selector: discounts
- name: discount
  endpoint:
    path: /api/channel/v1/discounts/{discountId}
    method: GET
    data_selector: discounts
- name: company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/domains
    method: GET
    data_selector: domains
- name: verified_company_domains
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/verifiedDomains
    method: GET
    data_selector: verifiedDomains
- name: editions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/editions/{editionId}
    method: GET
    data_selector: editions
- name: events
  endpoint:
    path: /api/channel/v1/events
    method: GET
    data_selector: events
- name: user_groups
  endpoint:
    path: /api/account/v2/companies/{companyUuid}/groups
    method: GET
    data_selector: groups
- name: group_memberships
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships
    method: GET
- name: delete_group_membership
  endpoint:
    path: /companies/{companyUuid}/groups/{groupUuid}/memberships/{userUuid}
    method: DELETE
- name: invite_users
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: POST
- name: list_invitations
  endpoint:
    path: /companies/{companyUuid}/invitations
    method: GET
- name: leads
  endpoint:
    path: /prm/v1/leads
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads
    method: GET
    data_selector: content
    params: {}
- name: create_lead
  endpoint:
    path: /lead/v2/leads
    method: POST
    data_selector: null
    params: {}
- name: get_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: GET
    data_selector: null
    params: {}
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{uuid}
    method: PATCH
    data_selector: null
    params: {}
- name: leads
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: GET
- name: discard_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: DELETE
- name: update_lead
  endpoint:
    path: /lead/v2/leads/{leadId}
    method: PATCH
- name: assign_lead
  endpoint:
    path: /lead/v2/assignment
    method: POST
- name: associate_lead
  endpoint:
    path: /lead/v2/companyAssociation
    method: POST
- name: list_activities
  endpoint:
    path: /lead/v2/leads/{leadId}/activities
    method: GET
- name: convert_lead
  endpoint:
    path: /lead/v2/conversion
    method: POST
- name: lead_conversion_request
  endpoint:
    path: /api/lead/v2/conversionRequest
    method: POST
    params:
      context: SOME_STRING_VALUE
      companyId: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: lead_conversion_approval
  endpoint:
    path: /api/lead/v2/conversionApproval
    method: POST
    params:
      context: SOME_STRING_VALUE
      leadId: SOME_STRING_VALUE
- name: active_settings
  endpoint:
    path: /api/v3/marketplaceProduct/activeSettings/{productId}
    method: GET
- name: product_settings
  endpoint:
    path: /api/v3/marketplaceProduct/productSettings/{productId}
    method: GET
- name: billing_usage_v1
  endpoint:
    path: /integration/v1/billing/usage
    method: POST
- name: billing_usage_v2
  endpoint:
    path: /integration/v2/billing/usage
    method: POST
- name: bill_usage_status
  endpoint:
    path: /integration/v2/billing/usage/requests/{requestId}
    method: GET
- name: myapps
  endpoint:
    path: /account/v2/companies/{companyUuid}/memberships/{userUuid}/myapps
    method: GET
- name: opportunities
  endpoint:
    path: /assistedSales/v1/opportunities
    method: GET
    data_selector: content
    params:
      number: 1
      size: 10
- name: create_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: POST
    data_selector: opportunity
    params: {}
- name: delete_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities
    method: DELETE
    data_selector: ''
    params:
      opportunityId: []
- name: get_opportunity_details
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: GET
    data_selector: ''
    params: {}
- name: update_opportunity
  endpoint:
    path: /assistedSales/v1/opportunities/{opportunityId}
    method: PUT
    data_selector: ''
    params: {}
- name: opportunities
  endpoint:
    path: /opportunities/{opportunityId}
    method: PATCH
    data_selector: success
    params:
      opportunityId: required
- name: opportunity_items
  endpoint:
    path: /opportunities/{opportunityId}/items
    method: POST
    data_selector: success
    params:
      opportunityId: required
- name: remove_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: DELETE
    data_selector: success
    params:
      opportunityId: required
      itemId: required
- name: edit_item
  endpoint:
    path: /opportunities/{opportunityId}/items/{itemId}
    method: PUT
    data_selector: success
    params:
      opportunityId: required
      itemId: required
- name: finalize_opportunity
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/finalize
    method: POST
- name: request_opportunity_review
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/requestReview
    method: POST
- name: get_opportunity_summary
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/summary
    method: GET
- name: get_pricing_plan_costs
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/pricingPlanCosts
    method: GET
- name: pricingPlanCosts
  endpoint:
    path: /opportunities/pricingPlanCosts
    method: GET
    data_selector: pricingPlanCosts
    params:
      pricingPlanId: required
      ownerId: required
      ownerCompanyId: required
      currency: required
- name: changeOpportunityOwner
  endpoint:
    path: /opportunities/{opportunityId}/owner
    method: PATCH
    data_selector: owner
    params:
      opportunityId: required
- name: getOpportunityValidationResults
  endpoint:
    path: /opportunities/{opportunityId}/validation
    method: GET
    data_selector: validationResults
    params:
      opportunityId: required
      enforce: optional
- name: getRequiredFieldsDefinitions
  endpoint:
    path: /opportunities/items/requiredFields/definitions
    method: POST
    data_selector: requiredFields
    params:
      userId: required
      companyId: required
      salesAgentUserId: required
      salesAgentCompanyId: required
- name: applyDiscount
  endpoint:
    path: /opportunities/{opportunityId}/applyDiscount
    method: POST
    data_selector: discountApplication
    params:
      opportunityId: required
- name: remove_discount
  endpoint:
    path: /api/assistedSales/v2/opportunities/{opportunityId}/deleteDiscount
    method: POST
    data_selector: discountCode
    params: {}
- name: update_required_fields
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/items/requiredFields
    method: PUT
    data_selector: itemIds
    params: {}
- name: get_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: GET
    data_selector: deliveryAddress
    params: {}
- name: create_or_replace_shipping_address
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/shipping
    method: POST
    data_selector: sameAsBillingAddress
    params: {}
- name: clone_opportunity
  endpoint:
    path: /api/assistedSales/v1/opportunities/{opportunityId}/clone
    method: POST
    data_selector: name
    params: {}
- name: list_payment_instruments
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: GET
    data_selector: records
- name: create_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: records
- name: update_payment_instrument
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/paymentInstruments/{paymentInstrumentId}
    method: PUT
    data_selector: records
- name: retrieve_default_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/default
    method: GET
    data_selector: records
- name: delete_payment_instrument
  endpoint:
    path: /billing/v1/paymentInstruments/{paymentInstrumentId}
    method: DELETE
    data_selector: records
- name: paymentMethodTypes
  endpoint:
    path: /appMarket/v2/paymentMethodTypes
    method: GET
- name: paymentMethods
  endpoint:
    path: /appReseller/v1/paymentMethods
    method: POST
- name: listUserPayments
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/payments
    method: GET
- name: listPayments
  endpoint:
    path: /billing/v1/payments
    method: GET
- name: payment
  endpoint:
    path: /billing/v1/payments/{paymentNumber}
    method: GET
    data_selector: payment
    params:
      paymentNumber: required
- name: payment_invoices
  endpoint:
    path: /billing/v1/payments/{paymentNumber}/invoices
    method: GET
    data_selector: invoices
    params:
      paymentNumber: required
      count: '250'
      excludeFree: 'false'
      fromDate: ''
      sortField: INVOICE_ID
      sortOrder: ASC
      start: '0'
      status: ''
      toDate: ''
- name: transfer_platform_configurations
  endpoint:
    path: /api/appMarket/v2/transferPlatformConfigurations
    method: GET
    data_selector: configurations
- name: transfer_methods
  endpoint:
    path: /api/appMarket/v2/transferMethods
    method: GET
    data_selector: methods
    params:
      includeBalance: 'false'
- name: answers
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions/{questionId}/answers/{answerId}
    method: PUT
    data_selector: answers
    params: {}
- name: comments
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/reviews/{reviewId}/comments
    method: POST
    data_selector: comments
    params: {}
- name: questions
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/questions
    method: GET
    data_selector: questions
    params: {}
- name: create_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: POST
- name: list_all_reviews
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews
    method: GET
- name: retrieve_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: GET
- name: update_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: PUT
- name: delete_product_review
  endpoint:
    path: /marketplace/v1/products/{applicationId}/reviews/{reviewId}
    method: DELETE
- name: retrieve_buyable_products
  endpoint:
    path: /channel/v1/applications
    method: GET
- name: retrieve_product
  endpoint:
    path: /marketplace/v1/products/{applicationId}
    method: GET
- name: list_all_products_by_vendor
  endpoint:
    path: /marketplace/v1/vendors/{vendorUuid}/products
    method: GET
- name: retrieve_product_status
  endpoint:
    path: /marketplace/v1/products/{applicationId}/status
    method: GET
- name: product_status
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/status
    method: GET
    data_selector: records
    params: {}
- name: product_recommendations
  endpoint:
    path: /api/marketplace/v1/products/{applicationId}/recommendations
    method: GET
    data_selector: records
    params: {}
- name: product_listing
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    data_selector: records
    params: {}
- name: staging_catalog
  endpoint:
    path: /api/channel/v1/stagingCatalog
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/orders
    method: GET
    params:
      count: 250
- name: user_orders
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/orders
    method: GET
    params:
      count: 250
- name: order_payments
  endpoint:
    path: /api/billing/v1/orders/{orderId}/payments
    method: GET
    params:
      count: 250
      start: 0
      sortOrder: ASC
      sortField: PAYMENT_ID
- name: orders
  endpoint:
    path: /billing/v1/orders
    method: GET
- name: quotes
  endpoint:
    path: /api/assistedSales/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: executeAction
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}/executeAction
    method: POST
    data_selector: ''
    params: {}
- name: getQuoteById
  endpoint:
    path: /api/assistedSales/v1/quotes/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: ledgerLines
  endpoint:
    path: /api/v3/reconciliation/ledgerLines
    method: GET
    data_selector: content
    params: {}
- name: transfers
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers
    method: GET
    data_selector: content
    params: {}
- name: reconciliation_transfers_details
  endpoint:
    path: /api/reseller/v1/reconciliation/transfers/{transferId}/details
    method: GET
    data_selector: content
    params: {}
- name: reports
  endpoint:
    path: /api/reporting/v1/reports
    method: GET
    data_selector: content
    params: {}
- name: report_by_id
  endpoint:
    path: /api/reporting/v1/report/{id}
    method: GET
    data_selector: ''
    params: {}
- name: sellable_products
  endpoint:
    path: /api/appReseller/v1/catalog/sellableProducts
    method: GET
    data_selector: content
    params: {}
- name: search_content
  endpoint:
    path: /api/appwise/v2/search
    method: GET
    data_selector: content
    params: {}
- name: segment_folders
  endpoint:
    path: /api/channel/v1/companyGroups
    method: GET
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /api/channel/v1/segments
    method: GET
    data_selector: content
    params: {}
- name: companyGroups
  endpoint:
    path: /api/channel/v1/companyGroups/{companyGroupId}
    method: PUT
    data_selector: ''
    params: {}
- name: availableAndAssociatedCompanies
  endpoint:
    path: /api/channel/v1/segments/{companySegmentId}/availableAndAssociatedCompanies
    method: GET
    data_selector: content
    params: {}
- name: dynamicSegments
  endpoint:
    path: /api/channel/v1/segments/dynamicSegments
    method: GET
    data_selector: ''
    params: {}
- name: dynamicSegments
  endpoint:
    path: /channel/v1/segments/dynamicSegments
    method: POST
- name: channelSettings
  endpoint:
    path: /channel/v1/settings/{partner}
    method: GET
- name: shoppingCarts
  endpoint:
    path: /v3/checkout/shoppingCarts
    method: GET
- name: shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: GET
    data_selector: items
    params: {}
- name: delete_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: DELETE
    data_selector: items
    params: {}
- name: update_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}
    method: PATCH
    data_selector: items
    params: {}
- name: finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: create_and_finalize_shopping_cart
  endpoint:
    path: /shoppingCarts/finalize
    method: POST
    data_selector: purchaseId
    params: {}
- name: shopping_cart_associations
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/associations
    method: GET
    data_selector: associations
- name: shopping_cart_preauth
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/preauth
    method: GET
- name: shopping_cart_items
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: GET
    data_selector: items
- name: create_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items
    method: POST
- name: retrieve_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: GET
- name: update_shopping_cart_item
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: PUT
- name: delete_cart_item
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/items/{itemId}
    method: DELETE
    data_selector: NO CONTENT
- name: delete_cart_items
  endpoint:
    path: /shoppingCarts/{shoppingCartId}/items/delete
    method: POST
    data_selector: ids
    params: {}
- name: preview_shopping_cart
  endpoint:
    path: /v3/checkout/shoppingCarts/preview
    method: POST
    data_selector: items
    params: {}
- name: preview_shopping_cart_by_id
  endpoint:
    path: /v3/checkout/shoppingCarts/{shoppingCartId}/preview
    method: GET
    data_selector: items
    params: {}
- name: pricing_summary
  endpoint:
    path: /pricingSummary
    method: POST
    data_selector: items
    params: {}
- name: pricing_summary_by_shopping_cart_id
  endpoint:
    path: /{shoppingCartId}/pricingSummary
    method: GET
    data_selector: items
    params: {}
- name: validate_shopping_cart
  endpoint:
    path: /validation
    method: POST
    data_selector: ''
    params:
      level: PRE_FINALIZE
- name: validateShoppingCart
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: POST
    data_selector: blockingErrors
    params:
      level: PRE_FINALIZE
- name: getShoppingCartValidation
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/validation
    method: GET
    data_selector: blockingErrors
- name: deleteDiscount
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/discounts/{discountCode}
    method: DELETE
    data_selector: none
- name: deleteShoppingCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees/{feeId}
    method: DELETE
    data_selector: none
- name: createCartFee
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/fees
    method: POST
    data_selector: id
- name: setAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: PUT
    data_selector: accreditedAgents
- name: deleteAccreditedAgents
  endpoint:
    path: /api/v3/checkout/shoppingCarts/{shoppingCartId}/accreditedAgents
    method: DELETE
    data_selector: none
- name: notifyLockedCarts
  endpoint:
    path: /api/v3/checkout/shoppingCarts/notifyLockedCarts
    method: POST
    data_selector: none
- name: read_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: GET
- name: create_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: POST
- name: delete_subscription_assignment
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments/{userUuid}
    method: DELETE
- name: list_subscription_assignments
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: GET
- name: read_subscription_assignment_count
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/assignments
    method: HEAD
- name: assign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: POST
- name: list_app_reseller_assignments
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments
    method: GET
- name: unassign_product
  endpoint:
    path: /api/appReseller/v1/subscriptionAssignments/{subscriptionAssignmentId}
    method: DELETE
- name: request_subscription_reactivation
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/reactivationRequest
    method: POST
- name: read_saml_certificate
  endpoint:
    path: /api/account/v2/subscriptions/{subscriptionUuid}/saml/certificate
    method: GET
- name: read_saml_metadata
  endpoint:
    path: /account/v2/subscriptions/{subscriptionUuid}/saml
    method: GET
    data_selector: response
    params:
      subscriptionUuid: required
- name: list_company_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
- name: change_subscription_details
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: response
    params:
      companyId: required
      subscriptionId: required
      userId: required
- name: list_user_subscriptions
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: response
    params:
      companyId: required
      userId: required
- name: create_subscription
  endpoint:
    path: /billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: response
    params:
      companyId: required
      userId: required
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params:
      count: 250
      sortField: DATE
      sortOrder: ASC
      start: 0
- name: subscription_orders
  endpoint:
    path: /subscriptions/{subscriptionId}/orders
    method: GET
    data_selector: orders
    params:
      count: 250
- name: subscription_payments
  endpoint:
    path: /subscriptions/{subscriptionId}/payments
    method: GET
    data_selector: payments
    params:
      count: 250
      sortField: PAYMENT_ID
      sortOrder: ASC
      start: 0
- name: subscriptions
  endpoint:
    path: /appReseller/v1/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: connection
    params: {}
- name: developer_account
  endpoint:
    path: /sync/v1/tasks#create
    method: POST
    data_selector: developerAccounts
    params:
      type: DEVELOPER_ACCOUNT
      operation: CREATE
- name: user_assignment
  endpoint:
    path: /sync/v1/assignments
    method: GET
    data_selector: assignments
    params: {}
- name: inactiveUsers
  endpoint:
    path: /account/v2/inactiveUsers/{activationToken}
    method: PATCH
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /account/v2/users/{userUuid}
    method: GET
    data_selector: user
    params: {}
- name: userMemberships
  endpoint:
    path: /account/v2/users/{userUuid}/memberships
    method: GET
    data_selector: memberships
    params: {}
- name: user_profile
  endpoint:
    path: /api/account/v2/users/{userUuid}/profile
    method: PATCH
    data_selector: links
    params:
      userUuidrequired: string
      removeUnspecifiedCustomAttributes: boolean
- name: temporary_password
  endpoint:
    path: /api/account/v2/users/{userUuid}/temporaryPassword
    method: PUT
    data_selector: password
    params:
      userUuidrequired: string
- name: webhooks
  endpoint:
    path: /api/channel/v1/webhooks
    method: GET
    data_selector: content
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
    params: {}
- name: localization_files
  endpoint:
    path: /themes/themeName/translations
    method: GET
    data_selector: files
    params: {}
- name: sliderTitle
  endpoint:
    path: sliderTitle
    method: GET
    data_selector: properties
- name: sliderSettings
  endpoint:
    path: /slider/settings
    method: GET
    data_selector: settings
    params: {}
- name: productsList
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backgroundImg
  endpoint:
    type: IMAGE_UPLOADER
    required: false
- name: pageTabs
  endpoint:
    type: TABS_LIST
    defaultValue:
    - PROFILE_TABS.overview
    - PROFILE_TABS.features
    - PROFILE_TABS.reviews
- name: drawerList
  endpoint:
    type: DRAWER_LIST
    defaultValue: DRAWER_LIST_ITEMS
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: config
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: meta
- name: common
  endpoint:
    path: /common
    method: GET
    data_selector: common
- name: nav
  endpoint:
    path: /nav
    method: GET
    data_selector: nav
- name: i18n
  endpoint:
    path: /i18n
    method: GET
    data_selector: i18n
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /companies/{companyId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: list_user_subscriptions
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions
    method: GET
    data_selector: null
    params: {}
- name: read_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: null
    params: {}
- name: change_subscription
  endpoint:
    path: /companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    data_selector: null
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '553'
- name: change_subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '568'
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params:
      paymentPlanId: '565'
- name: subscription
  endpoint:
    path: /v1/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions/{subscriptionId}
    method: PUT
    params:
      companyId: unique company identifier
      userId: unique user identifier
      subscriptionId: unique subscription identifier
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: GET
    params:
      companyId: ID assigned by the channel to identify each company
      userId: ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: GET
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscriptionId}
    method: DELETE
    params:
      subscriptionId: unique identifier assigned to the subscription by the channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: read_product_profile
  endpoint:
    path: /api/marketplace/v1/products/{productId}
    method: GET
    params:
      productId: product ID
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts
    method: GET
    params: {}
- name: paymentInstrument
  endpoint:
    path: /companies/{companyId}/users/{userId}/paymentInstruments
    method: POST
    data_selector: paymentInstrument
    params: {}
- name: listPaymentInstruments
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments
    method: GET
    data_selector: paymentInstruments
    params: {}
- name: readPaymentInstrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: GET
    data_selector: paymentInstrument
    params: {}
- name: updatePaymentInstrument
  endpoint:
    path: /companies/<companyUuid>/users/<userUuid>/paymentInstruments/<paymentInstrumentUuid>
    method: PUT
    data_selector: paymentInstrument
    params: {}
- name: deletePaymentInstrument
  endpoint:
    path: /paymentInstruments/<paymentInstrumentUuid>
    method: DELETE
    data_selector: paymentInstrument
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '568'
- name: order
  endpoint:
    path: /subscription
    method: POST
    data_selector: order
    params:
      paymentPlanId: '600'
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription
    params:
      paymentPlanId: '592'
- name: subscription
  endpoint:
    path: /marketplace/v1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /api/marketplace/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/a012bb88-c2c5-40a1-b140-ec6ed4593b78/users/3d4d2342-b7c4-4865-85bd-842f269adae6/subscriptions
    method: POST
    data_selector: order
    params: {}
- name: subscription
  endpoint:
    path: /api/billing/v1/companies/{companyId}/users/{userId}/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: list_company_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
- name: list_user_subscriptions
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions
    method: GET
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
- name: read_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: GET
    params:
      <subscriptionId>: The unique identifier assigned to the subscription by the
        channel
- name: change_subscription
  endpoint:
    path: /api/billing/v1/companies/<companyId>/users/<userId>/subscriptions/<subscriptionId>
    method: PUT
    params:
      <companyId>: the ID assigned by the channel to identify each company
      <userId>: the ID assigned by the channel to identify each user
      <subscriptionId>: the ID assigned by the channel to identify each subscription
- name: cancel_subscription
  endpoint:
    path: /api/billing/v1/subscriptions/<subscriptionId>
    method: DELETE
    params:
      <subscriptionId>: The unique identifier assigned to the subscription by the
        channel
- name: read_product_list
  endpoint:
    path: /api/marketplace/v1/listing
    method: GET
    params: {}
- name: product
  endpoint:
    path: /api/marketplace/v1/products/<applicationId>
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /api/channel/v1/discounts/listing
    method: GET
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
- name: addItemsToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.addItemsToCart
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.applyDiscountToCart
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: fulfillments
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: POST
    data_selector: response
    params: {}
- name: fulfillment_shipping_details
  endpoint:
    path: /api/appMarket/v2/fulfillments
    method: GET
    data_selector: content
    params:
      shoppingCartId: '{#cartId}'
- name: update_shipping_fee
  endpoint:
    path: /api/appMarket/v2/fulfillments/{#fulfillmentUuid}/shippingFees
    method: POST
    data_selector: ''
    params: {}
- name: checkoutSettings
  endpoint:
    path: /checkoutSettings
    method: GET
    data_selector: checkoutSettings
- name: activeCartOfUser
  endpoint:
    path: /activeCartOfUser
    method: GET
    data_selector: activeCartOfUser
- name: finalizeCart
  endpoint:
    path: /finalizeCart
    method: POST
    data_selector: finalizeCart
- name: validate_cart
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.validateCart
    params:
      input.cartId: 6512b7ff875fe104e5fde6da
      input.level: PRE_FINALIZE
      input.itemIds:
      - cf39a936-efe1-434b-a7d4-79b61b6b97ca
      input.locale: en-US
- name: cart_validation
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.cartValidation
    params:
      input.cartId: 6512b7ff875fe104e5fde6da
      input.level: PRE_FINALIZE
      input.itemIds:
      - cf39a936-efe1-434b-a7d4-79b61b6b97ca
      input.locale: en-US
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: applicants
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_templates
  endpoint:
    path: /graphql-docs/notificationtemplatesbytype_query.doc.html
    method: GET
- name: update_notification_template
  endpoint:
    path: /graphql-docs/updatenotificationtemplate.doc.html
    method: POST
- name: delete_notification_template
  endpoint:
    path: /graphql-docs/deletenotificationtemplate.doc.html
    method: DELETE
- name: product
  endpoint:
    path: /graphql-docs/docs
    method: GET
- name: Fetch usage processing status
  endpoint:
    path: /api/integration/v2/billing/usage/requests/{requestId}
    method: GET
    data_selector: status
    params:
      requestId: ''
- name: Send custom metered usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: ''
    params: {}
- name: send_usage
  endpoint:
    path: /api/integration/v2/billing/usage
    method: POST
    data_selector: usages
    params: {}
- name: assign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: user
    params: {}
- name: unassign_user
  endpoint:
    path: /sync/v1/tasks
    method: POST
    data_selector: user
    params: {}
- name: feedResources
  endpoint:
    path: /feedResources
    method: GET
- name: createUserConnections
  endpoint:
    path: /accounts
    method: POST
- name: disconnectUserAccounts
  endpoint:
    path: /accounts
    method: DELETE
- name: publishContentEvents
  endpoint:
    path: /data
    method: POST
- name: validateAddress
  endpoint:
    path: /shipments/v1/{partnerId}/validateAddress
    method: POST
- name: quote
  endpoint:
    path: /shipments/v1/{partnerId}/quote
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipments/v1/{partnerId}/shipmentRequests
    method: POST
- name: shipmentRecords
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: POST
- name: fulfillment
  endpoint:
    path: /api/appMarket/v2/fulfillments/<fulfillmentUuid>/shipmentRecords
    method: PUT
    data_selector: records
- name: shipment_status
  endpoint:
    path: /api/appMarket/v2/fulfillment/<fulfillmentUuid>/shipments/<shipmentId>/status
    method: PUT
    data_selector: records
- name: create_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zone
    method: POST
    data_selector: records
- name: read_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: GET
    data_selector: records
- name: zones
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones
    method: GET
- name: update_zone
  endpoint:
    path: /api/platformAdministration/v1/shippingConfigurations/zones/{uuid}
    method: PUT
- name: price_definition
  endpoint:
    path: /priceDefinition
    method: mutation
    data_selector: data.createPriceDefinition
    params: {}
- name: subscription_price_change
  endpoint:
    path: /requestSubscriptionPriceChange
    method: mutation
    data_selector: data.requestSubscriptionPriceChange
    params: {}
- name: Create Account
  endpoint:
    path: /companies
    method: POST
- name: Update Account
  endpoint:
    path: /companies/{companyUuid}
    method: PUT
- name: Patch Account
  endpoint:
    path: /companies/{companyUuid}
    method: PATCH
- name: Read Account
  endpoint:
    path: /companies/{companyUuid}
    method: GET
- name: List Accounts
  endpoint:
    path: /companies
    method: GET
- name: Read User
  endpoint:
    path: /users/{userUuid}
    method: GET
- name: List Users
  endpoint:
    path: /users
    method: GET
- name: Create Company Membership
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
- name: Delete Company Membership
  endpoint:
    path: /companies/{companyUuid}/memberships/{userUuid}
    method: DELETE
- name: companies
  endpoint:
    path: /companies
    method: POST
    data_selector: none
    params: {}
- name: company_memberships
  endpoint:
    path: /companies/{companyUuid}/memberships
    method: POST
    data_selector: none
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: none
    params: {}
- name: users
  endpoint:
    path: /api/account/v2/users
    method: GET
    data_selector: data.users.nodes
- name: current_user
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.user
- name: companies
  endpoint:
    path: /api/account/v2/companies
    method: PUT
    data_selector: data.company
- name: accounts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.account
- name: user
  endpoint:
    path: /account/v1/users
    method: GET
    data_selector: content
- name: company
  endpoint:
    path: /account/v1/companies
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /billing/v1/subscriptions
    method: GET
    data_selector: content
- name: order
  endpoint:
    path: /api/billing/v1/orders
    method: POST
    data_selector: resource
    params: {}
- name: invoice
  endpoint:
    path: /api/appmarket/v1/invoices
    method: POST
    data_selector: resource
    params: {}
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: resource
    params: {}
- name: resource
  endpoint:
    path: /resource
    method: GET
    data_selector: resource
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: content
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: invoice
    params: {}
- name: lead
  endpoint:
    path: /lead
    method: GET
    data_selector: lead
    params: {}
- name: membership
  endpoint:
    path: /membership
    method: GET
    data_selector: membership
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: App Assignment
  endpoint:
    path: /api/account/v2/subscriptions/assignments/{assignment_uuid}
    method: GET
- name: catalog_product
  endpoint:
    path: /api/marketplace/v1/products/{id}
    method: GET
    data_selector: content
    params: {}
- name: company
  endpoint:
    path: /api/account/v1/companies/{company_id}
    method: GET
    data_selector: content
    params: {}
- name: invoice
  endpoint:
    path: /api/appmarket/v1/invoices/{invoice_uuid}
    method: GET
    data_selector: content
    params: {}
- name: Order
  endpoint:
    path: /api/billing/v1/orders/{order_id}
    method: GET
- name: Membership
  endpoint:
    path: /api/account/v1/companies/{company_uuid}/users/{user_uuid}
    method: GET
- name: staging_product
  endpoint:
    path: /api/marketplace/v1/products/{id}
    method: GET
    data_selector: content
- name: subscription
  endpoint:
    path: /api/billing/v1/subscriptions/{subscr_uuid}
    method: GET
    data_selector: content
- name: user
  endpoint:
    path: /api/account/v1/users/{user_id}
    method: GET
    data_selector: content
- name: account
  endpoint:
    path: account
    method: POST
    data_selector: data.account
    params: {}
- name: accountAssociations
  endpoint:
    path: accountAssociations
    method: POST
    data_selector: data.accountAssociations
    params: {}
- name: accountByExternalId
  endpoint:
    path: accountByExternalId
    method: POST
    data_selector: data.accountByExternalId
    params: {}
- name: accountMembership
  endpoint:
    path: accountMembership
    method: POST
    data_selector: data.accountMembership
    params: {}
- name: accountMemberships
  endpoint:
    path: accountMemberships
    method: POST
    data_selector: data.accountMemberships
    params: {}
- name: accounts
  endpoint:
    path: accounts
    method: POST
    data_selector: data.accounts
    params: {}
- name: activeCart
  endpoint:
    path: activeCart
    method: POST
    data_selector: data.activeCart
    params: {}
- name: allocation
  endpoint:
    path: allocation
    method: POST
    data_selector: data.allocation
    params: {}
- name: analyzeIndexDeltaStatus
  endpoint:
    path: analyzeIndexDeltaStatus
    method: POST
    data_selector: data.analyzeIndexDeltaStatus
    params: {}
- name: attestationStatusByCompany
  endpoint:
    path: attestationStatusByCompany
    method: POST
    data_selector: data.attestationStatusByCompany
    params:
      companyUuid: String!
- name: billingChargeAllocations
  endpoint:
    path: billingChargeAllocations
    method: POST
    data_selector: data.billingChargeAllocations
    params:
      input: BillingChargeAllocationInput!
- name: billingRelationship
  endpoint:
    path: billingRelationship
    method: POST
    data_selector: data.billingRelationship
    params:
      id: ID!
      locale: Locale!
- name: billingRelationships
  endpoint:
    path: billingRelationships
    method: POST
    data_selector: data.billingRelationships
    params:
      first: Int
      after: String
      last: Int
      before: String
      locale: Locale!
      orderBy: BillingRelationshipOrderBy
- name: bootstrapMarketplaceProductSearchIndexesStatus
  endpoint:
    path: bootstrapMarketplaceProductSearchIndexesStatus
    method: POST
    data_selector: data.bootstrapMarketplaceProductSearchIndexesStatus
    params:
      id: ID!
- name: cartFields
  endpoint:
    path: cartFields
    method: POST
    data_selector: data.cartFields
    params:
      cartId: ID!
      locale: Locale!
      filter: CartFieldsFilter
- name: cartValidation
  endpoint:
    path: cartValidation
    method: POST
    data_selector: data.cartValidation
    params:
      input: CartValidationRequest!
- name: checkoutSettings
  endpoint:
    path: checkoutSettings
    method: POST
    data_selector: data.checkoutSettings
- name: commissionCycleExecutions
  endpoint:
    path: commissionCycleExecutions
    method: POST
    data_selector: data.commissionCycleExecutions
    params:
      cycle: String!
- name: commissionCyclesByYear
  endpoint:
    path: commissionCyclesByYear
    method: POST
    data_selector: data.commissionCyclesByYear
    params:
      year: Int!
      partner: String
- name: commissionEvent
  endpoint:
    path: commissionEvent
    method: POST
    data_selector: data.commissionEvent
    params:
      cycle: String!
      filter: CommissionEventFilter
      first: Int
      after: String
      last: Int
      before: String
- name: commissionEventReport
  endpoint:
    path: commissionEventReport
    method: POST
    data_selector: data.commissionEventReport
    params:
      cycle: String!
      status: EventStatus!
      totalEvents: Int
      sortOrder: String
- name: creditMemo
  endpoint:
    path: creditMemo
    method: POST
    data_selector: data.creditMemo
    params:
      id: ID!
      locale: String
- name: creditMemos
  endpoint:
    path: creditMemos
    method: POST
    data_selector: data.creditMemos
    params:
      filter: CreditMemoFilter!
      orderBy: '[CreditMemoOrderBy]'
      first: Int
      after: String
      last: Int
      before: String
- name: curatedCompanyCatalog
  endpoint:
    path: curatedCompanyCatalog
    method: POST
    data_selector: data.curatedCompanyCatalog
    params:
      input: CuratedCompanyCatalogInput!
- name: customer
  endpoint:
    path: customer
    method: POST
    data_selector: data.customer
    params:
      id: ID!
- name: customerByUserAndAccountAndMerchant
  endpoint:
    path: customerByUserAndAccountAndMerchant
    method: POST
    data_selector: data.customerByUserAndAccountAndMerchant
    params:
      userId: ID
      accountId: ID!
      merchantReference: String!
- name: customerDetailsByJobRunId
  endpoint:
    path: customerDetailsByJobRunId
    method: POST
    data_selector: data.customerDetailsByJobRunId
- name: customersForMerchantOfRecord
  endpoint:
    path: customersForMerchantOfRecord
    method: POST
    data_selector: data.customersForMerchantOfRecord
    params:
      reference: String!
      first: Int
      after: String
      before: String
- name: customerTotalBalanceByAccountAndMerchant
  endpoint:
    path: customerTotalBalanceByAccountAndMerchant
    method: POST
    data_selector: data.customerTotalBalanceByAccountAndMerchant
    params:
      accountId: ID!
      merchantReference: String!
- name: defaultBillingRelationship
  endpoint:
    path: defaultBillingRelationship
    method: POST
    data_selector: data.defaultBillingRelationship
    params:
      locale: Locale!
- name: distributorAccount
  endpoint:
    path: distributorAccount
    method: POST
    data_selector: data.distributorAccount
    params:
      accountId: String!
      distributorId: DistributorId!
- name: distributorProductImports
  endpoint:
    path: distributorProductImports
    method: POST
    data_selector: data.distributorProductImports
    params:
      first: Int
      after: String
      last: Int
      before: String
      filter: DistributorProductImportsFilter
      orderBy: DistributorsProductsImportsOrderByInput
- name: distributors
  endpoint:
    path: distributors
    method: POST
    data_selector: data.distributors
- name: distributorsProducts
  endpoint:
    path: distributorsProducts
    method: POST
    data_selector: data.distributorsProducts
    params:
      first: Int
      after: String
      last: Int
      before: String
      filter: DistributorsProductsFilter
      orderBy: DistributorsProductsOrderByInput
- name: distributorsProductsFiltersData
  endpoint:
    path: distributorsProductsFiltersData
    method: POST
    data_selector: data.distributorsProductsFiltersData
    params:
      distributorDetails: DistributorDetailsInput
- name: domainAvailability
  endpoint:
    path: domainAvailability
    method: POST
    data_selector: data.domainAvailability
    params:
      domain: String!
      country: String!
      resellerDomain: String
- name: errorSummaryByCycle
  endpoint:
    path: errorSummaryByCycle
    method: POST
    data_selector: data.errorSummaryByCycle
    params:
      cycle: String!
- name: eventsMissingByCycle
  endpoint:
    path: eventsMissingByCycle
    method: POST
    data_selector: data.eventsMissingByCycle
    params:
      cycle: String!
- name: exchangeRate
  endpoint:
    path: exchangeRate
    method: POST
    data_selector: data.exchangeRate
    params:
      input: ExchangeRateInput!
- name: exportSearchIndexDocuments
  endpoint:
    path: exportSearchIndexDocuments
    method: POST
    data_selector: data.exportSearchIndexDocuments
    params:
      locale: Locale!
      tenant: String!
- name: failedInvoices
  endpoint:
    path: failedInvoices
    method: POST
    data_selector: data.failedInvoices
    params:
      first: Int
      after: String
      before: String
      sort: OrderDirection!
      sortBy: FailedInvoiceOrderField!
      searchText: String
      filter: FailedInvoiceFilter
- name: failedUsages
  endpoint:
    path: failedUsages
    method: POST
    data_selector: data.failedUsages
    params:
      jobId: String!
      first: Int
      after: String
      last: Int
      before: String
- name: fetchEligibleOffersForCustomer
  endpoint:
    path: fetchEligibleOffersForCustomer
    method: POST
    data_selector: data.fetchEligibleOffersForCustomer
    params:
      customerId: String!
      companyUuid: String!
- name: fetchProductRecommendations
  endpoint:
    path: fetchProductRecommendations
    method: POST
    data_selector: data.fetchProductRecommendations
    params:
      input: AdobeRecommendationInput!
- name: filteredUsageDetailsByJobRunId
  endpoint:
    path: filteredUsageDetailsByJobRunId
    method: POST
    data_selector: data.filteredUsageDetailsByJobRunId
- name: findPaginatedSubscriptionSyncRequests
  endpoint:
    path: findPaginatedSubscriptionSyncRequests
    method: POST
    data_selector: data.findPaginatedSubscriptionSyncRequests
    params:
      page: Int
      size: Int
      subscriptionUuid: String
      microsoftSubscriptionUuid: String
      companyName: String
      status: String
      startDate: Date
      endDate: Date
- name: function
  endpoint:
    path: function
    method: POST
    data_selector: data.function
    params:
      id: ID!
- name: functions
  endpoint:
    path: functions
    method: POST
    data_selector: data.functions
    params: {}
- name: getSubscriptionAndSkuDetails
  endpoint:
    path: getSubscriptionAndSkuDetails
    method: POST
    data_selector: data.getSubscriptionAndSkuDetails
    params: {}
- name: gmvBalance
  endpoint:
    path: gmvBalance
    method: POST
    data_selector: data.gmvBalance
    params: {}
- name: iaasJobDetailsWithJobRunParameters
  endpoint:
    path: iaasJobDetailsWithJobRunParameters
    method: POST
    data_selector: data.iaasJobDetailsWithJobRunParameters
    params: {}
- name: iaasJobs
  endpoint:
    path: iaasJobs
    method: POST
    data_selector: data.iaasJobs
    params: {}
- name: inventory
  endpoint:
    path: inventory
    method: POST
    data_selector: data.inventory
    params: {}
- name: inventoryByEditionCode
  endpoint:
    path: inventoryByEditionCode
    method: POST
    data_selector: data.inventoryByEditionCode
    params: {}
- name: inventoryRulesConfiguration
  endpoint:
    path: inventoryRulesConfiguration
    method: POST
    data_selector: data.inventoryRulesConfiguration
    params: {}
- name: invoice
  endpoint:
    path: invoice
    method: POST
    data_selector: data.invoice
    params: {}
- name: invoices
  endpoint:
    path: invoices
    method: POST
    data_selector: data.invoices
    params: {}
- name: jobDetailsByJobId
  endpoint:
    path: jobDetailsByJobId
    method: POST
    data_selector: data.jobDetailsByJobId
    params: {}
- name: jobDetailsByJobIdStatusPartner
  endpoint:
    path: jobDetailsByJobIdStatusPartner
    method: POST
    data_selector: data.jobDetailsByJobIdStatusPartner
    params: {}
- name: jobDetailsByJobRunId
  endpoint:
    path: jobDetailsByJobRunId
    method: POST
    data_selector: data.jobDetailsByJobRunId
    params: {}
- name: jobDetailsResponseByJobExecutionId
  endpoint:
    path: jobDetailsResponseByJobExecutionId
    method: POST
    data_selector: data.jobDetailsResponseByJobExecutionId
    params: {}
- name: jobStatusByJobId
  endpoint:
    path: jobStatusByJobId
    method: POST
    data_selector: data.jobStatusByJobId
    params: {}
- name: marketplaceProduct
  endpoint:
    path: marketplaceProduct
    method: POST
    data_selector: data.marketplaceProduct
    params: {}
- name: me
  endpoint:
    path: me
    method: POST
    data_selector: data.me
    params: {}
- name: microsoftSubscriptionSyncStatus
  endpoint:
    path: microsoftSubscriptionSyncStatus
    method: POST
    data_selector: data.microsoftSubscriptionSyncStatus
    params: {}
- name: notificationOptOutsByMethodAndTarget
  endpoint:
    path: notificationOptOutsByMethodAndTarget
    method: POST
    data_selector: data.notificationOptOutsByMethodAndTarget
    params: {}
- name: notificationOptOutsByMethodAndType
  endpoint:
    path: notificationOptOutsByMethodAndType
    method: POST
    data_selector: data.notificationOptOutsByMethodAndType
    params: {}
- name: notificationOptOutSettings
  endpoint:
    path: notificationOptOutSettings
    method: query
    data_selector: data.notificationOptOutSettings
    params: {}
- name: notificationTemplatesByType
  endpoint:
    path: notificationTemplatesByType
    method: query
    data_selector: data.notificationTemplatesByType
    params: {}
- name: payment
  endpoint:
    path: payment
    method: query
    data_selector: data.payment
    params: {}
- name: paymentByPaymentNumber
  endpoint:
    path: paymentByPaymentNumber
    method: query
    data_selector: data.paymentByPaymentNumber
    params: {}
- name: paymentMethods
  endpoint:
    path: paymentMethods
    method: query
    data_selector: data.paymentMethods
    params: {}
- name: payments
  endpoint:
    path: payments
    method: query
    data_selector: data.payments
    params: {}
- name: paymentsByCompanyId
  endpoint:
    path: paymentsByCompanyId
    method: query
    data_selector: data.paymentsByCompanyId
    params: {}
- name: paymentsByUserAndCompanyId
  endpoint:
    path: paymentsByUserAndCompanyId
    method: query
    data_selector: data.paymentsByUserAndCompanyId
    params: {}
- name: product
  endpoint:
    path: product
    method: query
    data_selector: data.product
    params: {}
- name: productDeletionProcess
  endpoint:
    path: productDeletionProcess
    method: query
    data_selector: data.productDeletionProcess
    params: {}
- name: productEditionAssociations
  endpoint:
    path: productEditionAssociations
    method: query
    data_selector: data.productEditionAssociations
    params: {}
- name: productIntegration
  endpoint:
    path: productIntegration
    method: query
    data_selector: data.productIntegration
    params: {}
- name: productIntegrationsByVendorId
  endpoint:
    path: productIntegrationsByVendorId
    method: query
    data_selector: data.productIntegrationsByVendorId
    params: {}
- name: productPublicationProcess
  endpoint:
    path: productPublicationProcess
    method: query
    data_selector: data.productPublicationProcess
    params: {}
- name: productRecommendations
  endpoint:
    path: productRecommendations
    method: query
    data_selector: data.productRecommendations
    params: {}
- name: products
  endpoint:
    path: products
    method: query
    data_selector: data.products
    params: {}
- name: productsByVendorId
  endpoint:
    path: /productsByVendorId
    method: GET
    data_selector: data.productsByVendorId
    params: {}
- name: productSearchSettings
  endpoint:
    path: /productSearchSettings
    method: GET
    data_selector: data.productSearchSettings
    params: {}
- name: productUnpublicationProcess
  endpoint:
    path: /productUnpublicationProcess
    method: GET
    data_selector: data.productUnpublicationProcess
    params: {}
- name: productVariantsCreationProcess
  endpoint:
    path: /productVariantsCreationProcess
    method: GET
    data_selector: data.productVariantsCreationProcess
    params: {}
- name: productVariantsCreationProcessByProductRefId
  endpoint:
    path: /productVariantsCreationProcessByProductRefId
    method: GET
    data_selector: data.productVariantsCreationProcessByProductRefId
    params: {}
- name: program
  endpoint:
    path: /program
    method: GET
    data_selector: data.program
    params: {}
- name: programApplicants
  endpoint:
    path: /programApplicants
    method: GET
    data_selector: data.programApplicants
    params: {}
- name: psaAgreementsByCompanyId
  endpoint:
    path: /psaAgreementsByCompanyId
    method: GET
    data_selector: data.psaAgreementsByCompanyId
    params: {}
- name: psaCompaniesByName
  endpoint:
    path: /psaCompaniesByName
    method: GET
    data_selector: data.psaCompaniesByName
    params: {}
- name: psaCompanyMappings
  endpoint:
    path: /psaCompanyMappings
    method: GET
    data_selector: data.psaCompanyMappings
    params: {}
- name: psaConnectorConfiguration
  endpoint:
    path: /psaConnectorConfiguration
    method: GET
    data_selector: data.psaConnectorConfiguration
    params: {}
- name: psaConnectors
  endpoint:
    path: /psaConnectors
    method: GET
    data_selector: data.psaConnectors
    params: {}
- name: psaProductMappings
  endpoint:
    path: /psaProductMappings
    method: GET
    data_selector: data.psaProductMappings
    params: {}
- name: psaProductsByName
  endpoint:
    path: /psaProductsByName
    method: GET
    data_selector: data.psaProductsByName
    params: {}
- name: psaSyncedSubscriptions
  endpoint:
    path: /psaSyncedSubscriptions
    method: GET
    data_selector: data.psaSyncedSubscriptions
    params: {}
- name: publishedProductsSearch
  endpoint:
    path: publishedProductsSearch
    method: POST
    data_selector: data.publishedProductsSearch
    params: {}
- name: publishedProductsSearchTesting
  endpoint:
    path: publishedProductsSearchTesting
    method: POST
    data_selector: data.publishedProductsSearchTesting
    params: {}
- name: rawUsageCountByJobId
  endpoint:
    path: rawUsageCountByJobId
    method: POST
    data_selector: data.rawUsageCountByJobId
    params: {}
- name: rawUsageItem
  endpoint:
    path: rawUsageItem
    method: POST
    data_selector: data.rawUsageItem
    params: {}
- name: rawUsageItemsByJobId
  endpoint:
    path: rawUsageItemsByJobId
    method: POST
    data_selector: data.rawUsageItemsByJobId
    params: {}
- name: readCompanyMappingByAccountIdAndOrPsaAccountId
  endpoint:
    path: readCompanyMappingByAccountIdAndOrPsaAccountId
    method: POST
    data_selector: data.readCompanyMappingByAccountIdAndOrPsaAccountId
    params: {}
- name: readPsaProductMappingByItemIdsOrPsaProductId
  endpoint:
    path: readPsaProductMappingByItemIdsOrPsaProductId
    method: POST
    data_selector: data.readPsaProductMappingByItemIdsOrPsaProductId
    params: {}
- name: relationshipRequestByCompany
  endpoint:
    path: relationshipRequestByCompany
    method: POST
    data_selector: data.relationshipRequestByCompany
    params: {}
- name: relationshipRequestByDomain
  endpoint:
    path: relationshipRequestByDomain
    method: POST
    data_selector: data.relationshipRequestByDomain
    params: {}
- name: reprocessByJobRunId
  endpoint:
    path: reprocessByJobRunId
    method: POST
    data_selector: data.reprocessByJobRunId
    params: {}
- name: resellerPublishedProductsSearch
  endpoint:
    path: resellerPublishedProductsSearch
    method: POST
    data_selector: data.resellerPublishedProductsSearch
    params: {}
- name: reviewAllStats
  endpoint:
    path: reviewAllStats
    method: POST
    data_selector: data.reviewAllStats
    params: {}
- name: reviews
  endpoint:
    path: reviews
    method: POST
    data_selector: data.reviews
    params: {}
- name: reviewStats
  endpoint:
    path: reviewStats
    method: POST
    data_selector: data.reviewStats
    params: {}
- name: salesAgentPublishedProductsSearch
  endpoint:
    path: salesAgentPublishedProductsSearch
    method: POST
    data_selector: salesAgentPublishedProductsSearch
    params: {}
- name: scheduleJob
  endpoint:
    path: scheduleJob
    method: POST
    data_selector: scheduleJob
    params: {}
- name: scheduleJobByName
  endpoint:
    path: scheduleJobByName
    method: POST
    data_selector: scheduleJobByName
    params: {}
- name: scheduleJobs
  endpoint:
    path: scheduleJobs
    method: POST
    data_selector: scheduleJobs
    params: {}
- name: scheduleJobSchedule
  endpoint:
    path: scheduleJobSchedule
    method: POST
    data_selector: scheduleJobSchedule
    params: {}
- name: selfServeSubscriptionUpdateCapabilities
  endpoint:
    path: selfServeSubscriptionUpdateCapabilities
    method: POST
    data_selector: selfServeSubscriptionUpdateCapabilities
    params: {}
- name: serializedUnitsByShipmentItemId
  endpoint:
    path: serializedUnitsByShipmentItemId
    method: POST
    data_selector: serializedUnitsByShipmentItemId
    params: {}
- name: subscriptionDiscrepancyDetail
  endpoint:
    path: subscriptionDiscrepancyDetail
    method: POST
    data_selector: subscriptionDiscrepancyDetail
    params: {}
- name: subscriptionUpdateCartFields
  endpoint:
    path: subscriptionUpdateCartFields
    method: POST
    data_selector: subscriptionUpdateCartFields
    params: {}
- name: usageFileUploads
  endpoint:
    path: usageFileUploads
    method: POST
    data_selector: usageFileUploads
    params: {}
- name: usageReader
  endpoint:
    path: usageReader
    method: POST
    data_selector: usageReader
    params: {}
- name: usageReaderConfiguration
  endpoint:
    path: usageReaderConfiguration
    method: POST
    data_selector: usageReaderConfiguration
    params: {}
- name: usageReaders
  endpoint:
    path: usageReaders
    method: POST
    data_selector: usageReaders
    params: {}
- name: user
  endpoint:
    path: user
    method: POST
    data_selector: user
    params: {}
- name: userActivities
  endpoint:
    path: userActivities
    method: POST
    data_selector: userActivities
    params: {}
- name: userActivity
  endpoint:
    path: userActivity
    method: POST
    data_selector: userActivity
    params: {}
- name: userByExternalId
  endpoint:
    path: userByExternalId
    method: POST
    data_selector: userByExternalId
    params: {}
- name: userByUsername
  endpoint:
    path: userByUsername
    method: POST
    data_selector: userByUsername
    params: {}
- name: users
  endpoint:
    path: users
    method: GET
    data_selector: data.users
    params: {}
- name: vendorExchangeRate
  endpoint:
    path: vendorExchangeRate
    method: GET
    data_selector: data.vendorExchangeRate
    params: {}
- name: visualizationDataset
  endpoint:
    path: visualizationDataset
    method: GET
    data_selector: data.visualizationDataset
    params: {}
- name: visualizationMetric
  endpoint:
    path: visualizationMetric
    method: GET
    data_selector: data.visualizationMetric
    params: {}
- name: visualizationMetricData
  endpoint:
    path: visualizationMetricData
    method: GET
    data_selector: data.visualizationMetricData
    params: {}
- name: webhook
  endpoint:
    path: webhook
    method: GET
    data_selector: data.webhook
    params: {}
- name: webhookConfiguration
  endpoint:
    path: webhookConfiguration
    method: GET
    data_selector: data.webhookConfiguration
    params: {}
- name: webhookConfigurations
  endpoint:
    path: webhookConfigurations
    method: GET
    data_selector: data.webhookConfigurations
    params: {}
- name: webhooks
  endpoint:
    path: webhooks
    method: GET
    data_selector: data.webhooks
    params: {}
- name: applyDiscountToCart
  endpoint:
    path: /applyDiscountToCart
    method: POST
    data_selector: applyDiscountToCart
    params: {}
- name: assignTransformersToUsageReader
  endpoint:
    path: /assignTransformersToUsageReader
    method: POST
    data_selector: assignTransformersToUsageReader
    params: {}
- name: associateUsageReader
  endpoint:
    path: /associateUsageReader
    method: POST
    data_selector: associateUsageReader
    params: {}
- name: bootstrapAccountByPartner
  endpoint:
    path: /bootstrapAccountByPartner
    method: POST
    data_selector: bootstrapAccountByPartner
    params: {}
- name: bootstrapMarketplaceProductSearchIndexesForCluster
  endpoint:
    path: /bootstrapMarketplaceProductSearchIndexesForCluster
    method: POST
    data_selector: bootstrapMarketplaceProductSearchIndexesForCluster
    params: {}
- name: bootstrapMarketplaceProductSearchIndexesForPartner
  endpoint:
    path: /bootstrapMarketplaceProductSearchIndexesForPartner
    method: POST
    data_selector: bootstrapMarketplaceProductSearchIndexesForPartner
    params: {}
- name: bootstrapMembershipByPartner
  endpoint:
    path: /bootstrapMembershipByPartner
    method: POST
    data_selector: bootstrapMembershipByPartner
    params: {}
- name: bootstrapUserByPartner
  endpoint:
    path: /bootstrapUserByPartner
    method: POST
    data_selector: bootstrapUserByPartner
    params: {}
- name: cancelHighGrowthOrder
  endpoint:
    path: /cancelHighGrowthOrder
    method: POST
    data_selector: cancelHighGrowthOrder
    params: {}
- name: cancelResellerRelationship
  endpoint:
    path: /cancelResellerRelationship
    method: POST
    data_selector: cancelResellerRelationship
    params: {}
- name: closeCreditMemo
  endpoint:
    path: /closeCreditMemo
    method: POST
    data_selector: closeCreditMemo
    params: {}
- name: createAccount
  endpoint:
    path: /createAccount
    method: POST
    data_selector: createAccount
    params: {}
- name: createAccountAssociation
  endpoint:
    path: /createAccountAssociation
    method: POST
    data_selector: createAccountAssociation
    params: {}
- name: createAccountMembership
  endpoint:
    path: /createAccountMembership
    method: POST
    data_selector: createAccountMembership
    params: {}
- name: createAccountMembershipWithPassword
  endpoint:
    path: /createAccountMembershipWithPassword
    method: POST
    data_selector: createAccountMembershipWithPassword
    params: {}
- name: createAccountWebhookConfiguration
  endpoint:
    path: /createAccountWebhookConfiguration
    method: POST
    data_selector: createAccountWebhookConfiguration
    params: {}
- name: createAgreement
  endpoint:
    path: /createAgreement
    method: POST
    data_selector: createAgreement
    params: {}
- name: createAllocation
  endpoint:
    path: /createAllocation
    method: POST
    data_selector: createAllocation
    params: {}
- name: createAttestation
  endpoint:
    path: /createAttestation
    method: POST
    data_selector: createAttestation
    params: {}
- name: createBalanceApplicationRequest
  endpoint:
    path: /createBalanceApplicationRequest
    method: POST
    data_selector: createBalanceApplicationRequest
    params: {}
- name: createBillingRelationship
  endpoint:
    path: /createBillingRelationship
    method: POST
    data_selector: createBillingRelationship
    params: {}
- name: createFunction
  endpoint:
    path: /createFunction
    method: POST
    data_selector: createFunction
    params: {}
- name: createHighGrowthOffer
  endpoint:
    path: /createHighGrowthOffer
    method: POST
    data_selector: createHighGrowthOffer
    params: {}
- name: createInventory
  endpoint:
    path: /createInventory
    method: POST
    data_selector: data.createInventory.inventory
    params: {}
- name: createMissingIndexes
  endpoint:
    path: /createMissingIndexes
    method: POST
    data_selector: data.createMissingIndexes
    params: {}
- name: createNotificationOptOut
  endpoint:
    path: /createNotificationOptOut
    method: POST
    data_selector: data.createNotificationOptOut
    params: {}
- name: createOrUpdateAdobe3YCCommitments
  endpoint:
    path: /createOrUpdateAdobe3YCCommitments
    method: POST
    data_selector: data.createOrUpdateAdobe3YCCommitments.customerResponse
    params: {}
- name: createOrUpdateAdobeCustomerAccount
  endpoint:
    path: /createOrUpdateAdobeCustomerAccount
    method: POST
    data_selector: data.createOrUpdateAdobeCustomerAccount.customerResponse
    params: {}
- name: createPayment
  endpoint:
    path: /createPayment
    method: POST
    data_selector: data.createPayment.payment
    params: {}
- name: createProduct
  endpoint:
    path: /createProduct
    method: POST
    data_selector: data.createProduct.product
    params: {}
- name: createProductEdition
  endpoint:
    path: /createProductEdition
    method: POST
    data_selector: data.createProductEdition.edition
    params: {}
- name: createProductEditionAssociations
  endpoint:
    path: /createProductEditionAssociations
    method: POST
    data_selector: data.createProductEditionAssociations
    params: {}
- name: createProductIntegration
  endpoint:
    path: /createProductIntegration
    method: POST
    data_selector: data.createProductIntegration.productIntegration
    params: {}
- name: createProgramApplicant
  endpoint:
    path: /createProgramApplicant
    method: POST
    data_selector: data.createProgramApplicant.applicant
    params: {}
- name: createPsaAddition
  endpoint:
    path: /createPsaAddition
    method: POST
    data_selector: data.createPsaAddition.additionId
    params: {}
- name: createPsaAdditionForSubscription
  endpoint:
    path: /createPsaAdditionForSubscription
    method: POST
    data_selector: data.createPsaAdditionForSubscription.success
    params: {}
- name: createPsaAdditionForSubscriptionAndAgreement
  endpoint:
    path: /createPsaAdditionForSubscriptionAndAgreement
    method: POST
    data_selector: data.createPsaAdditionForSubscriptionAndAgreement.success
    params: {}
- name: createPsaConnector
  endpoint:
    path: /createPsaConnector
    method: POST
    data_selector: data.createPsaConnector.connector
    params: {}
- name: createPsaConnectorConfiguration
  endpoint:
    path: /createPsaConnectorConfiguration
    method: POST
    data_selector: data.createPsaConnectorConfiguration.connectorConfiguration
    params: {}
- name: createPsaProductMapping
  endpoint:
    path: /createPsaProductMapping
    method: POST
    data_selector: data.createPsaProductMapping.productMapping
    params: {}
- name: createRefundPayment
  endpoint:
    path: /createRefundPayment
    method: POST
    data_selector: data.createRefundPayment.payment
    params: {}
- name: createScheduleJobSchedule
  endpoint:
    path: /createScheduleJobSchedule
    method: POST
    data_selector: data.createScheduleJobSchedule.scheduleJobSchedule
    params: {}
- name: createSerializedUnitsForShipment
  endpoint:
    path: /createSerializedUnitsForShipment
    method: POST
    data_selector: data.createSerializedUnitsForShipment.serializedUnits
    params: {}
- name: createSubscriptionSyncRequests
  endpoint:
    path: /createSubscriptionSyncRequests
    method: POST
    data_selector: data.createSubscriptionSyncRequests
    params: {}
- name: createTenantWebhookConfiguration
  endpoint:
    path: /createTenantWebhookConfiguration
    method: POST
    data_selector: data.createTenantWebhookConfiguration.webhookConfiguration
    params: {}
- name: createUpdatePsaCompanyMapping
  endpoint:
    path: /createUpdatePsaCompanyMapping
    method: mutation
    data_selector: createUpdatePsaCompanyMapping
- name: createUsageFileUploadLink
  endpoint:
    path: /createUsageFileUploadLink
    method: mutation
    data_selector: createUsageFileUploadLink
- name: createUsageReader
  endpoint:
    path: /createUsageReader
    method: mutation
    data_selector: createUsageReader
- name: createUsageReaderConfiguration
  endpoint:
    path: /createUsageReaderConfiguration
    method: mutation
    data_selector: createUsageReaderConfiguration
- name: createUsageReaderWithFieldDefinitions
  endpoint:
    path: /createUsageReaderWithFieldDefinitions
    method: mutation
    data_selector: createUsageReaderWithFieldDefinitions
- name: createVisualizationDataset
  endpoint:
    path: /createVisualizationDataset
    method: mutation
    data_selector: createVisualizationDataset
- name: createVisualizationMetric
  endpoint:
    path: /createVisualizationMetric
    method: mutation
    data_selector: createVisualizationMetric
- name: customizeProductSearchSettings
  endpoint:
    path: /customizeProductSearchSettings
    method: mutation
    data_selector: customizeProductSearchSettings
- name: deactivateUsageReader
  endpoint:
    path: /deactivateUsageReader
    method: mutation
    data_selector: deactivateUsageReader
- name: deleteAccount
  endpoint:
    path: /deleteAccount
    method: mutation
    data_selector: deleteAccount
- name: deleteAccountAssociation
  endpoint:
    path: /deleteAccountAssociation
    method: mutation
    data_selector: deleteAccountAssociation
- name: deleteAccountMembership
  endpoint:
    path: /deleteAccountMembership
    method: mutation
    data_selector: deleteAccountMembership
- name: deleteBillingRelationship
  endpoint:
    path: /deleteBillingRelationship
    method: mutation
    data_selector: deleteBillingRelationship
- name: deleteDistributorAccount
  endpoint:
    path: /deleteDistributorAccount
    method: mutation
    data_selector: deleteDistributorAccount
- name: deleteFunction
  endpoint:
    path: /deleteFunction
    method: mutation
    data_selector: deleteFunction
- name: deleteInventory
  endpoint:
    path: /deleteInventory
    method: mutation
    data_selector: deleteInventory
- name: deleteInvoice
  endpoint:
    path: /deleteInvoice
    method: mutation
    data_selector: deleteInvoice
- name: deleteNotificationOptOut
  endpoint:
    path: /deleteNotificationOptOut
    method: mutation
    data_selector: deleteNotificationOptOut
- name: deleteNotificationOptOutsForTargets
  endpoint:
    path: /deleteNotificationOptOutsForTargets
    method: mutation
    data_selector: deleteNotificationOptOutsForTargets
- name: deleteNotificationOptOutsForTypes
  endpoint:
    path: /deleteNotificationOptOutsForTypes
    method: mutation
    data_selector: deleteNotificationOptOutsForTypes
- name: deleteNotificationTemplate
  endpoint:
    path: /deleteNotificationTemplate
    method: mutation
    data_selector: deleteNotificationTemplate
- name: deleteProductEditionAssociation
  endpoint:
    path: /deleteProductEditionAssociation
    method: mutation
    data_selector: deleteProductEditionAssociation
- name: deleteProductIntegrationSingleSignOnConfigurationSetupForm
  endpoint:
    path: /deleteProductIntegrationSingleSignOnConfigurationSetupForm
    method: mutation
    data_selector: deleteProductIntegrationSingleSignOnConfigurationSetupForm
- name: deleteProductReviews
  endpoint:
    path: /deleteProductReviews
    method: mutation
    data_selector: deleteProductReviews
- name: deleteProviderReviews
  endpoint:
    path: /deleteProviderReviews
    method: mutation
    data_selector: deleteProviderReviews
- name: deleteReviews
  endpoint:
    path: /deleteReviews
    method: mutation
    data_selector: deleteReviews
- name: deleteScheduleJobSchedule
  endpoint:
    path: deleteScheduleJobSchedule
    method: POST
    data_selector: deleteScheduleJobSchedule
- name: deleteSerializedUnitsForShipment
  endpoint:
    path: deleteSerializedUnitsForShipment
    method: POST
    data_selector: deleteSerializedUnitsForShipment
- name: deleteUsageReader
  endpoint:
    path: deleteUsageReader
    method: POST
    data_selector: deleteUsageReader
- name: deleteVisualizationMetric
  endpoint:
    path: deleteVisualizationMetric
    method: POST
    data_selector: deleteVisualizationMetric
- name: deleteWebhookConfiguration
  endpoint:
    path: deleteWebhookConfiguration
    method: POST
    data_selector: deleteWebhookConfiguration
- name: disableAccountMembership
  endpoint:
    path: disableAccountMembership
    method: POST
    data_selector: disableAccountMembership
- name: disableProductVariants
  endpoint:
    path: disableProductVariants
    method: POST
    data_selector: disableProductVariants
- name: disableWebhookConfiguration
  endpoint:
    path: disableWebhookConfiguration
    method: POST
    data_selector: disableWebhookConfiguration
- name: enableAccountMembership
  endpoint:
    path: enableAccountMembership
    method: POST
    data_selector: enableAccountMembership
- name: enableProductVariants
  endpoint:
    path: enableProductVariants
    method: POST
    data_selector: enableProductVariants
- name: enableWebhookConfiguration
  endpoint:
    path: enableWebhookConfiguration
    method: POST
    data_selector: enableWebhookConfiguration
- name: enrollToLinkedMembership
  endpoint:
    path: enrollToLinkedMembership
    method: POST
    data_selector: enrollToLinkedMembership
- name: finalizeCart
  endpoint:
    path: finalizeCart
    method: POST
    data_selector: finalizeCart
- name: generateProductIntegrationInboundClient
  endpoint:
    path: generateProductIntegrationInboundClient
    method: POST
    data_selector: generateProductIntegrationInboundClient
- name: linkProductIntegration
  endpoint:
    path: linkProductIntegration
    method: POST
    data_selector: linkProductIntegration
- name: listProductOnStorefront
  endpoint:
    path: listProductOnStorefront
    method: POST
    data_selector: listProductOnStorefront
- name: microsoftSubscriptionSyncRequest
  endpoint:
    path: microsoftSubscriptionSyncRequest
    method: POST
    data_selector: microsoftSubscriptionSyncRequest
- name: migrateAllSearchIndexes
  endpoint:
    path: migrateAllSearchIndexes
    method: POST
    data_selector: migrateAllSearchIndexes
- name: migrateDeltaSearchIndexes
  endpoint:
    path: migrateDeltaSearchIndexes
    method: POST
    data_selector: migrateDeltaSearchIndexes
- name: orderProductVariantOptions
  endpoint:
    path: orderProductVariantOptions
    method: POST
    data_selector: orderProductVariantOptions
- name: orderProductVariantOptionValues
  endpoint:
    path: orderProductVariantOptionValues
    method: POST
    data_selector: orderProductVariantOptionValues
- name: publishProductIntegration
  endpoint:
    path: publishProductIntegration
    method: POST
    data_selector: publishProductIntegration
- name: publishProductSearchSettings
  endpoint:
    path: publishProductSearchSettings
    method: POST
    data_selector: publishProductSearchSettings
- name: publishSearchSettings
  endpoint:
    path: publishSearchSettings
    method: POST
    data_selector: publishSearchSettings
- name: pushReviews
  endpoint:
    path: pushReviews
    method: POST
    data_selector: pushReviews
- name: pushToVisualizationDataset
  endpoint:
    path: pushToVisualizationDataset
    method: POST
    data_selector: pushToVisualizationDataset
- name: registerDistributorAccount
  endpoint:
    path: registerDistributorAccount
    method: POST
    data_selector: registerDistributorAccount
- name: releaseInvoiceBalance
  endpoint:
    path: /releaseInvoiceBalance
    method: POST
    data_selector: data.releaseInvoiceBalance
    params: {}
- name: removeCompanyMapping
  endpoint:
    path: /removeCompanyMapping
    method: POST
    data_selector: data.removeCompanyMapping
    params: {}
- name: removeDiscountFromCart
  endpoint:
    path: /removeDiscountFromCart
    method: POST
    data_selector: data.removeDiscountFromCart
    params: {}
- name: removeFileFromProductEdition
  endpoint:
    path: /removeFileFromProductEdition
    method: POST
    data_selector: data.removeFileFromProductEdition
    params: {}
- name: removeItemsFromCart
  endpoint:
    path: /removeItemsFromCart
    method: POST
    data_selector: data.removeItemsFromCart
    params: {}
- name: removePrivacyPolicyLink
  endpoint:
    path: /removePrivacyPolicyLink
    method: POST
    data_selector: data.removePrivacyPolicyLink
    params: {}
- name: removeProductVariantOption
  endpoint:
    path: /removeProductVariantOption
    method: POST
    data_selector: data.removeProductVariantOption
    params: {}
- name: removeProductVariantOptionValue
  endpoint:
    path: /removeProductVariantOptionValue
    method: POST
    data_selector: data.removeProductVariantOptionValue
    params: {}
- name: removePsaProductMapping
  endpoint:
    path: /removePsaProductMapping
    method: POST
    data_selector: data.removePsaProductMapping
    params: {}
- name: removeTermsAndConditionsLink
  endpoint:
    path: /removeTermsAndConditionsLink
    method: POST
    data_selector: data.removeTermsAndConditionsLink
    params: {}
- name: resellerRelationship
  endpoint:
    path: /resellerRelationship
    method: POST
    data_selector: data.resellerRelationship
    params: {}
- name: resetProductSearchSettings
  endpoint:
    path: /resetProductSearchSettings
    method: POST
    data_selector: data.resetProductSearchSettings
    params: {}
- name: resetProgramQuestionnaire
  endpoint:
    path: /resetProgramQuestionnaire
    method: POST
    data_selector: data.resetProgramQuestionnaire
    params: {}
- name: retryFunctionProvisioning
  endpoint:
    path: /retryFunctionProvisioning
    method: POST
    data_selector: data.retryFunctionProvisioning
    params: {}
- name: retryInvoiceImports
  endpoint:
    path: /retryInvoiceImports
    method: POST
    data_selector: data.retryInvoiceImports
    params: {}
- name: retryWebhook
  endpoint:
    path: /retryWebhook
    method: POST
    data_selector: data.retryWebhook
    params: {}
- name: scheduledAdobeOrder
  endpoint:
    path: /scheduledAdobeOrder
    method: POST
    data_selector: data.scheduledAdobeOrder
    params: {}
- name: sendAttestationReminder
  endpoint:
    path: /sendAttestationReminder
    method: POST
    data_selector: data.sendAttestationReminder
    params: {}
- name: setRenewalSettingResponse
  endpoint:
    path: /setRenewalSettingResponse
    method: POST
    data_selector: data.setRenewalSettingResponse
    params: {}
- name: triggerBalanceOperationEvent
  endpoint:
    path: /triggerBalanceOperationEvent
    method: POST
    data_selector: data.triggerBalanceOperationEvent
    params: {}
- name: triggerCommissionCancelProcess
  endpoint:
    path: /triggerCommissionCancelProcess
    method: POST
    data_selector: data.triggerCommissionCancelProcess
    params: {}
- name: triggerCommissionImportProcess
  endpoint:
    path: /triggerCommissionImportProcess
    method: POST
    data_selector: data.triggerCommissionImportProcess
    params: {}
- name: triggerCommissionRetryProcess
  endpoint:
    path: /triggerCommissionRetryProcess
    method: POST
    data_selector: data.triggerCommissionRetryProcess
    params: {}
- name: triggerCreateAdhocCreditMemoProcess
  endpoint:
    path: /triggerCreateAdhocCreditMemoProcess
    method: POST
    data_selector: data.triggerCreateAdhocCreditMemoProcess
    params: {}
- name: triggerCreditMemoRetryProcess
  endpoint:
    path: /triggerCreditMemoRetryProcess
    method: POST
    data_selector: data.triggerCreditMemoRetryProcess
    params: {}
- name: triggerDistributorsProductsImports
  endpoint:
    path: /triggerDistributorsProductsImports
    method: POST
    data_selector: data.triggerDistributorsProductsImports
    params: {}
- name: triggerMigrateMarketplaceProcess
  endpoint:
    path: /triggerMigrateMarketplaceProcess
    method: POST
    data_selector: data.triggerMigrateMarketplaceProcess
    params: {}
- name: triggerProductDeletionProcess
  endpoint:
    path: /triggerProductDeletionProcess
    method: POST
    data_selector: data.triggerProductDeletionProcess
    params: {}
- name: triggerProductDownloadProcess
  endpoint:
    path: /triggerProductDownloadProcess
    method: POST
    data_selector: data.triggerProductDownloadProcess
    params: {}
- name: triggerProductIntegrationPingTest
  endpoint:
    path: /triggerProductIntegrationPingTest
    method: POST
    data_selector: data.triggerProductIntegrationPingTest
    params: {}
- name: triggerProductPublicationProcess
  endpoint:
    path: /triggerProductPublicationProcess
    method: POST
    data_selector: data.triggerProductPublicationProcess
    params: {}
- name: triggerProductUnpublicationProcess
  endpoint:
    path: /triggerProductUnpublicationProcess
    method: POST
    data_selector: data.triggerProductUnpublicationProcess
    params: {}
- name: triggerProductVariantsCreation
  endpoint:
    path: /triggerProductVariantsCreation
    method: POST
    data_selector: data.triggerProductVariantsCreation
    params: {}
- name: triggerRefreshCycleSummaryDataProcess
  endpoint:
    path: /triggerRefreshCycleSummaryDataProcess
    method: POST
    data_selector: data.triggerRefreshCycleSummaryDataProcess
    params: {}
- name: unlistProductFromStorefront
  endpoint:
    path: /unlistProductFromStorefront
    method: POST
    data_selector: data.unlistProductFromStorefront
    params: {}
- name: updateAccount
  endpoint:
    path: /updateAccount
    method: POST
    data_selector: data.updateAccount
    params: {}
- name: updateAttestationStatus
  endpoint:
    path: /updateAttestationStatus
    method: POST
    data_selector: data.updateAttestationStatus
    params: {}
- name: updateBillingRelationship
  endpoint:
    path: /updateBillingRelationship
    method: POST
    data_selector: data.updateBillingRelationship
    params: {}
- name: updateCartCustomAttributes
  endpoint:
    path: /updateCartCustomAttributes
    method: POST
    data_selector: data.updateCartCustomAttributes
    params: {}
- name: updateCartItems
  endpoint:
    path: /updateCartItems
    method: POST
    data_selector: data.updateCartItems
    params: {}
- name: updateCompanyCatalogCuration
  endpoint:
    path: /updateCompanyCatalogCuration
    method: POST
    data_selector: data.updateCompanyCatalogCuration
    params: {}
- name: updateCustomer
  endpoint:
    path: /updateCustomer
    method: POST
    data_selector: data.updateCustomer
    params: {}
- name: updateDistributorAccount
  endpoint:
    path: /updateDistributorAccount
    method: POST
    data_selector: data.updateDistributorAccount
    params: {}
- name: updateFunction
  endpoint:
    path: /updateFunction
    method: POST
    data_selector: data.updateFunction
    params: {}
- name: updateInventory
  endpoint:
    path: /updateInventory
    method: POST
    data_selector: data.updateInventory
    params: {}
- name: updateNotificationTemplate
  endpoint:
    path: /updateNotificationTemplate
    method: POST
    data_selector: data.updateNotificationTemplate
    params: {}
- name: updateOffPlatformPayment
  endpoint:
    path: /updateOffPlatformPayment
    method: POST
    data_selector: data.updateOffPlatformPayment
    params: {}
- name: updateProduct
  endpoint:
    path: /updateProduct
    method: POST
    data_selector: data.updateProduct
    params: {}
- name: updateProductDefaultVariant
  endpoint:
    path: /updateProductDefaultVariant
    method: POST
    data_selector: data.updateProductDefaultVariant
    params: {}
- name: updateProductEdition
  endpoint:
    path: /updateProductEdition
    method: POST
    data_selector: data.updateProductEdition
    params: {}
- name: updateProductIntegration
  endpoint:
    path: /updateProductIntegration
    method: POST
    data_selector: data.updateProductIntegration
    params: {}
- name: updateProductIntegrationBookmarkConfiguration
  endpoint:
    path: /updateProductIntegrationBookmarkConfiguration
    method: POST
    data_selector: data.updateProductIntegrationBookmarkConfiguration
    params:
      input:
        integrationConfigurationId: '123'
        url: example
- name: updateProductIntegrationOpenIdConfiguration
  endpoint:
    path: /updateProductIntegrationOpenIdConfiguration
    method: POST
    data_selector: data.updateProductIntegrationOpenIdConfiguration
    params:
      input:
        integrationConfigurationId: '123'
- name: updateProductIntegrationOpenIdConnectConfiguration
  endpoint:
    path: /updateProductIntegrationOpenIdConnectConfiguration
    method: POST
    data_selector: data.updateProductIntegrationOpenIdConnectConfiguration
    params:
      input:
        integrationConfigurationId: '123'
- name: updateProductIntegrationSamlConfiguration
  endpoint:
    path: /updateProductIntegrationSamlConfiguration
    method: POST
    data_selector: data.updateProductIntegrationSamlConfiguration
    params:
      input:
        integrationConfigurationId: '123'
- name: updateProductVariantOption
  endpoint:
    path: /updateProductVariantOption
    method: POST
    data_selector: data.updateProductVariantOption
    params:
      input:
        productId: '123'
        code: example
- name: updateProductVariantOptionValue
  endpoint:
    path: /updateProductVariantOptionValue
    method: POST
    data_selector: data.updateProductVariantOptionValue
    params:
      input:
        productId: '123'
        optionCode: example
        valueCode: example
- name: updateProductVariants
  endpoint:
    path: /updateProductVariants
    method: POST
    data_selector: data.updateProductVariants
    params:
      input:
        productId: '123'
        configuration: null
- name: updateProductVariantsByIds
  endpoint:
    path: /updateProductVariantsByIds
    method: POST
    data_selector: data.updateProductVariantsByIds
    params:
      input:
        productId: '123'
        ids: '123'
- name: updateProgram
  endpoint:
    path: /updateProgram
    method: POST
    data_selector: data.updateProgram
    params:
      input:
        type: example
- name: updateProgramApplicant
  endpoint:
    path: /updateProgramApplicant
    method: POST
    data_selector: data.updateProgramApplicant
    params:
      input:
        id: '123'
- name: updateProgramApplicantStatus
  endpoint:
    path: /updateProgramApplicantStatus
    method: POST
    data_selector: data.updateProgramApplicantStatus
    params:
      input:
        id: '123'
        status: null
- name: updatePsaConnector
  endpoint:
    path: /updatePsaConnector
    method: POST
    data_selector: data.updatePsaConnector
    params:
      input:
        id: '123'
        name: example
- name: updatePsaConnectorConfiguration
  endpoint:
    path: /updatePsaConnectorConfiguration
    method: POST
    data_selector: data.updatePsaConnectorConfiguration
    params:
      input:
        connectorId: '123'
        mor: null
        configuration: null
- name: updateRolesForAccountMembership
  endpoint:
    path: /updateRolesForAccountMembership
    method: POST
    data_selector: data.updateRolesForAccountMembership
    params:
      input:
        accountId: '123'
        userId: '123'
- name: updateRolesForAccountMemberships
  endpoint:
    path: /updateRolesForAccountMemberships
    method: POST
    data_selector: data.updateRolesForAccountMemberships
    params:
      input:
        accountId: '123'
- name: updateScheduleJobSchedule
  endpoint:
    path: /updateScheduleJobSchedule
    method: POST
    data_selector: data.updateScheduleJobSchedule
    params:
      input:
        id: '123'
        schedule: example
- name: updateUsageReaderConfiguration
  endpoint:
    path: /updateUsageReaderConfiguration
    method: POST
    data_selector: data.updateUsageReaderConfiguration
    params:
      input:
        id: '123'
        updatedBy: example
- name: updateUsageReaderRatingConfiguration
  endpoint:
    path: /updateUsageReaderRatingConfiguration
    method: POST
    data_selector: data.updateUsageReaderRatingConfiguration
    params:
      input:
        readerId: example
        exchangeRateSource: null
        updatedBy: example
- name: updateUser
  endpoint:
    path: /updateUser
    method: POST
    data_selector: data.updateUser
    params:
      input:
        id: '123'
- name: updateVisualizationDataset
  endpoint:
    path: /updateVisualizationDataset
    method: POST
    data_selector: data.updateVisualizationDataset
    params:
      input:
        name: example
        productId: '123'
        datasetId: '123'
        datasetSchema: null
- name: updateVisualizationMetric
  endpoint:
    path: /updateVisualizationMetric
    method: POST
    data_selector: data.updateVisualizationMetric
    params:
      input:
        metricId: '123'
        name: example
        productId: '123'
        datasetId: '123'
        revisionId: 1
        query: example
- name: updateWebhookConfiguration
  endpoint:
    path: /updateWebhookConfiguration
    method: POST
    data_selector: data.updateWebhookConfiguration
    params:
      input:
        id: '123'
- name: validateCart
  endpoint:
    path: /validateCart
    method: POST
    data_selector: data.validateCart
    params: {}
- name: validateProgramApplicant
  endpoint:
    path: /validateProgramApplicant
    method: POST
    data_selector: data.validateProgramApplicant
    params: {}
- name: voidInvoice
  endpoint:
    path: /voidInvoice
    method: POST
    data_selector: data.voidInvoice
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Our APIs use an OAuth-authenticated interface that facilitates secure data access
  by partners and developers.
- Webhooks send notifications after an event occurs.
- AppDirect webhooks only work in one direction, which is from the AppDirect platform
  to the endpoint.
- The Search API only returns resources that the user has access to based on the permissions
  set on each resource.
- This feature is currently in Early Availability (EA) status.
- Use the Product integration API to synchronize company or user information between
  your own systems and the AppDirect platform.
- Marketplace owners can adjust the list price to increase or decrease their revenue
  share.
- This part of the GraphQL API is currently in Preview status.
- Integration with Ironclad Clickwrap provides a centralized workflow for user agreement
  management.
- Helps in maintaining versions of contracts and staying legally compliant.
- 'Rate limit: Bucket size is 20 requests, with a leak rate of 5 requests per second.'
- You cannot set the Marketplace Manager role through the API.
- Retrieve all of the current and historical exchange rates set on the marketplace.
- Webhook deleted successfully returns 204.
- Description of discount is a required field.
- Percentage value for discounts cannot exceed two decimal places.
- Webhook deleted successfully.
- Percentage discounts cannot exceed two decimal places (for example, 10.15)
- Description of discount is a required field and must be at least 4 characters, but
  no longer than 255 characters.
- Requires setup of roles for access
- Requires setup of connected app in AppDirect
- Requires OAuth2 authentication setup.
- Manual leads are visible to only those who created them.
- Company profile leads are visible to the Reseller that created the profile page
  as well as the Reseller Managers and Marketplace Managers.
- Product profile leads are visible to Marketplace Managers and Reseller Managers.
- 'Required Scopes: ROLE_RESELLER, ROLE_REFERRAL, ROLE_DEVELOPER, ROLE_RESELLER_MANAGER'
- Requires setup of OAuth2 credentials.
- Required scopes vary based on the operation performed.
- Role permissions are required to execute actions.
- Accept-Language header is required for all requests.
- 'Required: Accept-Language header with Locale format. For example: en-US'
- Requires a public developer key (use the AD-Public-Developer-Key header), which
  you must obtain from AppDirect.
- Requires ROLE_CHANNEL_ADMIN to access or create transfer platform configurations.
- Responses may vary; check response codes for details.
- Authentication required for accessing certain endpoints.
- Maximum of 5 requests per second per caller.
- 'Rate limit: Bucket size is 20 requests, with a leak rate of 4 requests per second.'
- Required scopes include ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN, ROLE_RESELLER_MANAGER.
- Requires setup of connected app in API
- Some operations require specific role permissions
- Ensure correct partner code is included in headers
- Requires setup of OAuth2 authentication.
- Prices are not prorated and tax is not included in the pricing summary.
- Webhook deleted successfully returns status 204
- Subscriptions can be filtered by various parameters
- Default count for results is 250
- Default sortField is 'DATE'
- Default sortOrder is 'ASC'
- Maximum of global requests of 20 per 2 seconds.
- Requires setup of consumer key and secret for authentication
- Some endpoints require specific roles for access.
- Users and companies can be active or inactive.
- Users themselves cannot be enabled or disabled.
- Select the appropriate grant types and scopes for your use case.
- Use standard notification templates for the type of event.
- Ensure that changes you make do not disrupt your business.
- You have the toolkit installed and accessible in your terminal.
- You have an existing workspace folder already set up.
- To upload your theme, you must have the Marketplace Manager role.
- Meta tags are snippets of text in the HTML of a page that describe the content on
  the page.
- You have to manually add your Twitter handle to the base layout.
- Use caution when modifying header or footer position or display properties.
- The APIs use an OAuth-authenticated interface that facilitates secure data access
  by partners and developers.
- Application is a legacy term for a product and is still present in some documentation.
  Product is the preferred term.
- Product APIs are in the Early Availability release status and have limitations.
- Product publication is not supported.
- Uses OAuth2 with refresh token — requires setup of connected app in pricing API
- Requires configuration setup in the application.
- API authentication Overview
- Requires various roles for different access levels.
- API uses an OAuth-authenticated interface
- Deletes a company association.
- Requires product-scoped OAuth2 authentication.
- Uses OAuth2 for authentication
- Webhook deleted successfully
- The parameters can be used to filter the results.
- Discount code must be at least 4 characters, but no longer than 103 characters.
- Description of discount must be at least 4 characters, but no longer than 255 characters.
- Expiration date for the discount must be in the future.
- Description of discount is required and must be at least 4 characters, but no longer
  than 255 characters.
- Percentage value cannot exceed two decimal places.
- Requires setup of OAuth scopes for access to various roles.
- Requires specific roles for access.
- Requires specific roles for access
- Requires setup of OAuth authentication.
- Requires setup of OAuth scopes for different roles.
- Invoices can be filtered by various query parameters.
- Allows access as a Reseller for the company
- Allows access as a Referral for the company
- Allows access as a Developer for the company
- Allows access as a Reseller Manager for the marketplace
- Uses OAuth2 authentication for secure data access.
- Requires setup of OAuth authentication
- Default async value is false.
- Requires Accept-Language header with Locale format, e.g., en-US.
- Accept-Language header is required with Locale format.
- Accept-Language header with Locale format required for requests
- Requires setup of OAuth2 for authentication
- Access to payment methods is limited to users with ROLE_PARTNER or ROLE_USER
- Requires setup of OAuth scopes for ROLE_RESELLER and ROLE_SALES_SUPPORT.
- API uses OAuth-authenticated interface for secure data access.
- Manage subscriptions, payment method information and discounts using REST APIs.
- Allows access to retrieve transfer platform configurations.
- Uses OAuth2 authentication.
- Webhook deleted successfully returns a 204 response.
- Deletes a specific image resource from a product. The image is identified by the
  product reference ID, upload type, locale, and path to delete.
- API uses an OAuth-authenticated interface.
- To receive language-specific content, ensure your marketplace supports the specified
  language.
- Filters results by various query parameters such as startDateFrom, startDateTo,
  status, currency, type, frequency, and more.
- Currently only supported value for context is 'RESELLER_MANAGER'.
- Use gte and lte for filtering reports based on date.
- Requires a user-based token for search operations.
- Dynamic segments contain user selected automatically based on filter values.
- Webhook deleted successfully returns 204 status.
- Uses OAuth2 with authentication token for secure data access.
- API uses OAuth authenticated interface that facilitates secure data access.
- Valid subscription statuses include INITIALIZED, FAILED, FREE_TRIAL, FREE_TRIAL_EXPIRED,
  ACTIVE, SUSPENDED, or CANCELLED.
- This endpoint is being deprecated.
- API uses OAuth2 for authentication
- API uses OAuth2-authenticated interface.
- Users must have appropriate roles to access different endpoints.
- Webhook API requires authentication token in the HTTP header.
- API uses an OAuth-authenticated interface that facilitates secure data access by
  partners and developers.
- Requires setup of connected app in api
- Requires setup of roles for access to company information
- Requires specific roles for different operations.
- Some objects like Discount may return nulls in deeply nested fields
- Discount code must be at least 4 characters but no longer than 103 characters.
- Description is required and must be at least 4 characters but no longer than 255
  characters.
- Requires various roles for different endpoints
- Company profile leads are visible to the Reseller that created the profile page.
- Requires setup of roles for access to different endpoints.
- API responses may vary based on user roles and permissions
- Requires `ROLE_CHANNEL_ADMIN` for certain operations.
- Default pagination size is 250.
- API requires authentication for all endpoints.
- Requires valid shopping cart ID.
- Responses may vary based on user permissions.
- Requires partner code in header for each request.
- Default count for paginated results is 250.
- Sort field defaults to DATE and sort order defaults to ASC.
- Requires setup of OAuth2 authentication for the application.
- Some API responses may vary by endpoint
- 'We recommend that you enable delayed invoicing for products configured for metered
  usage if you (the vendor) will be:'
- Usage can be submitted retroactively to correct usage for billing periods that are
  already invoiced except for usage for products configured for volume pricing.
- Requires setup of roles such as ROLE_RESELLER and ROLE_RESELLER_MANAGER.
- Requires specific roles for access to different endpoints.
- Some endpoints may return status 404 if the company or user is not found.
- Use multipart/form-data for file uploads.
- Discounts can be automatically applied.
- Requires roles such as ROLE_SYS_ADMIN, ROLE_CHANNEL_ADMIN, etc.
- Required parameters for creating a lead include Company name, Contact email, Lead
  type, and Partner.
- Some endpoints require specific user roles for access
- Requires ROLE_CHANNEL_ADMIN for certain operations.
- Supports filtering by various parameters such as startDateFrom, startDateTo, status,
  currency, type, frequency, etc.
- Rate limit uses leaky bucket algorithm allowing unlimited requests over a large
  time horizon.
- Required headers include Accept-Language for certain endpoints.
- This API is intended for reseller management.
- Most endpoints require specific roles for access.
- Metered usage V2 supports delayed invoicing.
- Usage can be submitted retroactively to correct usage for billing periods.
- Uses ApiKeyAuth for authorization.
- Some objects may require specific roles for access.
- The API provides exchange rates for different currencies.
- Optional query parameters include baseCurrency, counterCurrency, page, size, sortField,
  and sortOrder.
- Content type is application/json
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Requires specific roles for access (e.g., ROLE_BILLING_ADMIN, ROLE_RESELLER)
- Requires setup of roles for access to different endpoints
- Requires Accept-Language header with Locale format.
- Some opportunity fields may return null.
- Requires ROLE_CHANNEL_ADMIN for access.
- Filters subscriptions by various parameters including start dates and status.
- Required Scopes and Authorization Rules for certain operations include ROLE_RESELLER,
  ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN, and ROLE_RESELLER_MANAGER.
- Accept-Language header with Locale format is required for certain endpoints.
- Requires user-based token for certain endpoints.
- Some endpoints require specific partner codes in the request.
- The payload matches the REST API Order definition for the order.
- Includes attributes that do not appear in the REST API documentation.
- Still haven't installed the toolkit? Get started here.
- Developer mode will be enabled for 8 hours and for this user only. Each developer
  needs to login and enable developer mode for themselves to work on extensions locally.
- Once custom components are installed there is currently no command to automatically
  reverse this action.
- Webhooks are a way for web applications to provide real-time notifications or data
  updates to other applications or services.
- Requires setup of connected app in marketplace.
- Uses OAuth2 with refresh token — requires setup of connected app in discount_api
- Requires userId and companyId parameters for all requests.
- Requires setup of permissions for ROLE_CHANNEL_ADMIN
- API responses are in XML for most endpoints.
- Rate limit uses leaky bucket algorithm allowing unlimited requests over a large
  time horizon but prevents large bursts.
- Some endpoints have specific role requirements.
- Requires valid shopping cart ID for all operations
- Ensure proper OAuth setup for authentication
- Requires an AD-ShoppingCart-Partner header for all requests.
- Ensure to configure OAuth2 with a connected app in AppDirect.
- This document applies to `sfb-toolkit@5.x.x` or newer.
- Leave the command-line window open with the `start` command running.
- This command is available starting sfb-toolkit@5.x.x.
- This document applies to sfb-toolkit@5.x.x and sfb-theme-components@0.0.352 or newer.
- Layout Management is a feature available in Plaza theme that enables you to manage
  multiple components in a page container element.
- 'For each component that you want to add to the container, you need to follow this
  pattern for the component ID: {componentName}:orderable:{uuid}'
- Requires OAuth2 configuration.
- Ensure to handle errors related to API limits.
- Requires setup of roles for access permissions.
- Requires setup of OAuth2 authentication for access.
- Some endpoints require specific user roles for access.
- Uses OAuth2 with refresh token — requires setup of connected app in Discount API
- Some discounts may have null values in certain fields
- Some objects may return nulls in deeply nested fields
- Requires proper roles for accessing different endpoints.
- Requires setup of connected app in AppDirect.
- Ensure correct roles are assigned for API access.
- Accept-Language header required with Locale format.
- Some endpoints require companyId and userId as path parameters
- Default number of results to fetch is 250.
- Requires shopping cart ID for operations
- API requires shoppingCartId to be passed as a parameter for relevant endpoints.
- Retrieves a pricing summary for the cart, includes detailed and effective costs
  as well as billing schedule and recurring charges.
- This API is intended for use by resellers and requires specific authorization scopes.
- Uses BEM methodology for CSS structure
- You can request additional data on a page with a custom block tag.
- The checkout pages are not considered part of the theme itself.
- Requires specific roles for different endpoints.
- Use the appropriate endpoint based on the action required, such as creating or retrieving
  templates.
- Percentage discounts cannot exceed two decimal places
- Requires context and companyId for most operations.
- Requires appropriate role for access to various endpoints.
- Accept-Language header is required with Locale format, e.g., en-US
- Filters available for subscriptions include startDateFrom, startDateTo, status,
  currency, type, frequency, orderReferenceCode, applicationIds, fromCreationDate,
  toCreationDate, sortField, sortOrder, and start.
- Uses OAuth2 for authentication. Ensure proper setup of connected app.
- Requires authentication for all endpoints
- Requires specific roles for access such as ROLE_USER, ROLE_BILLING_ADMIN, etc.
- Some fields may return nulls in deeply nested structures
- Documentation is generated for AI tools to understand and work with the AppDirect
  Developer Portal content.
- You can request additional data on a page with a custom `block` tag.
- This document applies to `sfb-toolkit@5.x.x` and `sfb-theme-components@0.0.352`
  or newer.
- Once custom components are installed there is currently no command to automatically
  reverse this action!
- AppDirect powers millions of cloud subscriptions worldwide with marketplace, billing,
  reseller, and distribution solutions.
- Ensure to check the API documentation for specific endpoint details.
- We recommend that you enable delayed invoicing for products configured for metered
  usage if you (the vendor) will be submitting usage events.
- Requires specific roles for authorization based on context.
- Requires setup of partner credentials for email templates.
- Ensure the correct entity type is used when uploading catalogs.
- Requires specific roles for access to various endpoints.
- Leads can be created manually or through profiles.
- Different contexts available for lead creation.
- Accept-Language header with Locale format is required
- Filters available for startDateFrom, startDateTo, status, currency, type, frequency,
  orderReferenceCode, applicationIds, fromCreationDate, toCreationDate, count, sortField,
  sortOrder, start.
- 'Accept-Language header is required with Locale format. For example: en-US'
- Some responses may contain null values
- Requires authentication with OAuth2.
- User must be active to set a temporary password.
- The orderable option is only available for themes using @appdirect/sfb-theme-components@0.352
  or newer.
- YAML locale files are primarily intended for localization.
- You can use a YAML file to override some labels, as determined by your base theme.
- Ensure that you test your changes thoroughly when modifying header or footer position
  or display properties.
- This document is applicable to custom components created using toolkit version @appdirect/sfb-toolkit@4.x.x
  or earlier and @appdirect/sfb-theme-components@0.0.344 or earlier.
- If you have recently upgraded your Toolkit to version 4.0 from an earlier version,
  you may receive warnings and error messages when you start it.
- Requires setup of associated roles for access.
- The API requires specific roles for access control.
- Content type must be application/json
- Requires various roles for access depending on the endpoint.
- Requires various roles for different API endpoints.
- Manual leads are visible only to those who created them.
- Some fields may be optional based on payment method type
- Filters subscriptions by various fields like start date, status, currency, type,
  frequency, etc.
- Rate limit uses leaky bucket algorithm, allows unlimited requests over time but
  prevents large bursts.
- Requires setup of roles and authorization rules for access.
- Some endpoints require specific query parameters.
- Requires authentication for all operations
- Shopping cart ID is required for retrieving, deleting, updating, and finalizing
  shopping carts
- Locked carts must be approved before they can be finalized.
- Supports filtering by several parameters
- Default pagination size is 250
- This API requires the role 'ROLE_RESELLER' for access.
- Requires setup of connected app for OAuth authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in AppDirect
- Some API responses may vary based on user permissions and API version
- YAML locale files must follow a specific naming convention.
- Custom resources must replace all product images in a list.
- If you have recently upgraded your Toolkit to version **4.0** from an earlier version,
  you may receive warnings and error messages when you start it.
- AppDirect’s Storefront UI library (sfb-theme-components) is built and maintained
  to meet WCAG 2.1 AA.
- Once you install custom components you will no longer receive automatic updates.
- If you created a theme using custom components that used toolkit version 4.x.x or
  earlier upgrading the UI library to version 0.0.352+ still means the 3rd Scenario
  described previously applies to you!
- Only themes using custom components that were created with toolkit version 5.x.x
  or newer will fall under the 2nd Scenario.
- Run accessibility checks after every library upgrade and before each release.
- Webhooks provide real-time notifications or data updates.
- Requires setup of OAuth for API access.
- Ensure unique external IDs for companies and users
- Requires product-scoped OAuth2 authentication setup.
- Ensure that all endpoints are accessible before making requests.
- Uses OAuth2 with refresh token — requires setup of connected app in discount-api
- Some discounts may return nulls in deeply nested fields
- Ensure proper roles are assigned for API access.
- Accept-Language header is required with Locale format, e.g., en-US.
- 'Required Accept-Language header with Locale format: ''en-US'''
- Filters subscriptions by various parameters including status, currency, and date.
- Some responses may contain null values for certain fields
- Requires setup of Marketplace Manager access
- Requires partner code in headers for certain actions.
- Requires specific role scopes for access to endpoints.
- The Plaza theme provides a generic e-commerce storefront for a marketplace that
  primarily sells digital subscription services.
- The Plaza theme meets the AA accessibility standards defined in version 2.2 of the
  W3C Web Content Accessibility Guidelines.
- This document applies to sfb-toolkit@5.x.x or newer.
- Localization files must use the language and country codes with .yml extension.
- Assets are linked through a content delivery network (CDN).
- Default meta tags are provided for every page on the storefront.
- If your custom theme does not have blocks in your base layout (`base.html` file),
  you must manually add the blocks.
- To create a theme, use the command `sfb-toolkit create themeName`.
- Ensure that you include `https://` in the marketplace URL.
- When you use the vanilla Plaza theme (without custom components), you automatically
  receive every accessibility fix and enhancement shipped by AppDirect.
- 'The schema component type: DROPDOWN.'
- The label text to display when the switch is on.
- The label text to display when the switch is off.
- The default switch option. true or false.
- Certain files are required as the minimum for any theme.
- The CSS files are generated automatically from the SASS files.
- Requires setup of user roles for access.
- Requires specific roles for access to different endpoints
- ANONYMOUS context can be used to create a PRODUCT or COMPANY lead without authentication.
- 'Required: Accept-Language header with Locale format.'
- Requires a public developer key in the header for some operations.
- Default count for results is 250.
- Requires access as a Marketplace Manager for the marketplace.
- Requires authorization for accessing shopping cart operations.
- Some endpoints are being deprecated.
- Maximum of global requests of 20 per 2 seconds
- Marketplace supports different languages for localization.
- Use the Data Viewer to find the item you want to change.
- The platform is open so that you can handle the SASS theme architecture however
  you want.
- Use caution when modifying header or footer position or display properties, because
  such changes can interact with page elements across the platform beyond the storefront,
  such as login modals, in unexpected ways.
- Uses WCAG 2.1 AA compliance.
- Custom components will not receive automatic updates.
- The default switch option is true or false.
- The schema component type is TOGGLE.
- The schema component type is RADIO.
- The product list curated type can be manual or dynamic.
- The schema component type is PRODUCTS_LIST.
- A theme must include a Home page, listing page, and profile page template.
- Do not make changes directly in the CSS files, as they are overwritten when the
  toolkit is activated.
- Ensure unique external IDs when creating companies or users
- User roles must be specified correctly for access.
- The API allows creating and retrieving email templates.
- Templates require a content type of application/json.
- DiscountType and PricingUnit are required fields.
- Requires specific roles to access certain endpoints.
- Requires setup of roles for access to various endpoints.
- Accept-Language header required in all requests.
- Filters subscriptions by various parameters including startDateFrom, startDateTo,
  status, currency, type, frequency, applicationIds, etc.
- Accept-Language header with Locale format required for certain actions.
- Requires setup of roles for accessing certain endpoints
- Requires shoppingCartId as a parameter for all operations
- Responses are in application/json format
- Some operations may require specific permissions or configurations.
- Only UI library components created through `sfb-toolkit components-copy` command
  can be deleted using this method.
- The `orderable` option is only available for themes using `@appdirect/sfb-theme-components@0.352`
  or newer.
- Important to include https:// in the marketplace URL.
- 'The label text to display when the switch is on: ''uieditor.sfbComponent.productBanner.showRatings.labelOn'''
- 'The label text to display when the switch is off: ''uieditor.sfbComponent.productBanner.showRatings.labelOff'''
- 'The default switch option: true'
- 'Type: TOGGLE'
- IMAGE_UPLOADER types displays a control that allows image uploading.
- API requires OAuth authentication.
- Ensure to include https:// in the full marketplace URL.
- Uses Authorization Code flow with PKCE for native applications
- API uses ApiKeyAuth for authorization.
- Requires OAuth2 authentication with specific roles for access
- The API requires OAuth2 for authentication.
- Requires setup of roles for accessing resources
- Accept-Language header with Locale format is required.
- Required headers must include Accept-Language in the specified format.
- Some endpoints require specific roles for access
- Requires ROLE_CHANNEL_ADMIN to access certain endpoints
- Filters subscriptions by various parameters including date ranges, status, currency,
  and more.
- 'Localization files must be in the themes/themeName/translations folder with the
  format: language-country.yml.'
- Use caution when modifying header or footer position or display properties, because
  such changes can interact with page elements across the platform beyond the storefront,
  such as login modals, in unexpected ways. Ensure that you test your changes thoroughly.
- 'To create a custom page, use the format: http://localhost:3555/en-US/customPageName'
- Ensure that you include https:// in the marketplace URL.
- After the upgrade your custom components will not inherit new fixes.
- All API requests must be made over HTTPS.
- Access tokens must be included in every API request.
- Uses OAuth2 with client credentials — requires setup of connected app in api
- Access tokens expire after 12 hours.
- Refresh tokens last for 30 days.
- The object **InvoiceLine** was updated to include additional fields.
- The object **Payment** was updated to include new fields.
- Marketplace Managers can enable a GraphQL Explorer for your marketplace.
- 'Caution: Using either the Preview or Production endpoints in the Explorer affects
  live marketplace data.'
- Most of the API is only available in Preview.
- Subscription assignment requires OAuth 2.0 authorization code grant type.
- AppDirect supports an OAuth-authenticated REST interface that allows API users to
  read, create, edit, and delete marketplace records that describe a subscription.
- API supports both JSON and XML formats for requests and responses.
- A payment instrument is required if you are creating a subscription for a paid product.
- You must create a payment instrument before you can create subscriptions via the
  Billing API.
- Supports both JSON and XML formats for requests and responses.
- Uses JSON for requests and responses
- Subscription creation may take place through reseller management rather than through
  the marketplace.
- Currently, credit cards are the only supported payment method types.
- API is currently in Early Availability status.
- This part of the GraphQL API is currently in Early Availability status.
- Questions and answers are exported in the exact order they were submitted by each
  applicant.
- Optional questions that were left unanswered are exported with the answer left blank.
- The order of questions can vary over time when the applicant form is changed.
- CORS needs to be enabled on your API server.
- The token has a short expiration time to reduce the impact of token theft or misuse.
- Uses access token for authentication
- The access token should be stored in an environment variable ACCESS_TOKEN
- Introspection must be enabled to execute queries and receive responses.
- 'Important: The GraphQL API is currently in Preview status.'
- 'Important: The Product APIs are currently in Early Availability (EA) status.'
- 'Product APIs are in the Early Availability release status and have the following
  limitations: Product publication is not supported.'
- This API is currently in Early Availability status.
- Different OAuth2 grant types support different scopes.
- This topic is about Metered usage V1. Marketplaces use the metered usage V1 API,
  metered usage V2 API, or both, to support metered usage billing.
- Uses OAuth2 with password grant type — requires username and password
- Access token must be included in the Authorization header as a bearer token
- All users have the User role and it cannot be removed.
- Missed usage can be submitted, and over-reported usage corrected.
- This API requires various roles for different operations.
- Requires setup of roles and permissions for API access.
- 'Content type: application/json'
- True if the discount is automatically applied. Default value is true.
- The percentage value cannot exceed two decimal places.
- Retainable discounts can be redeemed on orders that are updated after the discount
  expires.
- Requires a public developer key for some operations.
- Requires valid applicationId for all endpoints.
- Filters subscriptions by various fields such as startDateFrom, status, currency,
  etc.
- Allows access as a Marketplace Manager for the marketplace.
- Dynamic segments allow for complex filtering options.
- Channel settings must include the partner code in the request.
- Shopping cart API supports multiple query parameters.
- Requires setup of partner code in API
- Subscription ID required for most endpoints.
- OAuth2 authentication is required.
- Endpoints may require specific roles for access.
- Localization files must use language and country codes with .yml extension.
- The i18n.overrides section must be added to the YAML file for label overrides.
- The new checkout flow only accepts pricing plan IDs as items to add to carts.
- You must use JavaScript to construct the URL for the selected items.
- An uploaded theme is not automatically published.
- DROPDOWN types display a control that provides a menu of options through a dropdown
  list.
- GROUP_HEADER types display a group header text.
- API requests must be made over HTTPS.
- All API requests must be authenticated.
- Uses OAuth2 with client credentials flow — requires setup of connected app in api
- Uses OAuth2 with client credentials — requires setup of client in marketplace
- Uses OAuth 2.0 Password flow
- Includes additional attributes that do not appear in the REST API documentation.
- APIs in Early Availability (EA) are available in production to a limited number
  of customers based on fit with one or more specific use cases.
- Webhooks are available for real-time notifications.
- Ensure to handle OAuth token expiration properly.
- Requires setup of roles and permissions for access
- Requires various roles for different operations.
- Manual leads are visible only to the creators.
- Company profile leads are visible to Resellers and Managers.
- Required scopes include ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN, ROLE_RESELLER_MANAGER,
  ROLE_PARTNER.
- Requires setup of connected app for OAuth2.
- Response content type is application/xml for product status and recommendations,
  and application/json for listing and staging catalog.
- Accept-Language header is required in some requests.
- Endpoints for managing shopping cart items and associations.
- Endpoint for creating subscription is being deprecated.
- 'Requires roles: ROLE_RESELLER and ROLE_RESELLER_MANAGER for certain operations.'
- Uses OAuth2 for authentication.
- Ensure user has the required roles to perform operations.
- The format of the file name must use the language and country codes with the .yml
  extension.
- You can embed variables in the localized value.
- HTML and CSS are encapsulated—Every rule is encapsulated post processing, and you
  cannot use any styles that come from your base theme.
- Uses sfb-toolkit for theme customization and component management
- OAuth 2.0 must be used for authentication
- All API requests must be made over HTTPS
- Refresh tokens are valid for 30 days.
- GraphQL schema fields and operations that are marked as deprecated but have not
  yet reached their retirement date will continue to be covered under all technical
  support and service level agreements until the retirement date is reached.
- AppDirect strongly encourages developers to migrate to the latest GA functionality
  before retirement.
- Supports delayed invoicing for products configured for metered usage.
- Discount code cannot exceed two decimal places.
- Consult API documentation for additional setup requirements.
- Requires various roles for different endpoints.
- Requires specific roles for various operations
- Leads created manually by users have the MANUAL type.
- Leads created by anonymous users through profiles have the PRODUCT or COMPANY types.
- Some endpoints may require specific roles for access
- Accept-Language header is required in Locale format, e.g., en-US
- Requires OAuth2 authorization for certain endpoints.
- Endpoints accept JSON and XML content types.
- Endpoints may require specific user roles for access.
- Requires Accept-Language header for some endpoints, e.g., en-US
- 'The segment already exists: 409'
- 'Bad request: 400'
- Requires the partner code of a marketplace.
- Customizable components for storefront display including homepage and product profiles.
- Ensure the marketplace supports localization to deploy translations.
- The .yml file must contain translations in a specific format.
- The multi-line plain-text field value is required.
- The regex expression to validate the multi-line plain-text field value is /^[a-zA-Z0-9
  ]+$/gm.
- The default switch option is true.
- CHECKBOX types display a control that provides a menu of options through checkboxes
  group. Multiple options can be selected.
- Uses OAuth2 — requires setup of API clients in AppDirect
- The access token is returned in the response after authorization.
- Access tokens must be included in the Authorization header as a bearer token.
- Refresh tokens expire after 30 days.
- Some objects like Invoice may return nulls in deeply nested fields
- 'Caution: Changes affect live marketplace data. Use test environment for testing.'
- APIs in Early Availability (EA) are available in production to a limited number
  of customers based on specific use cases.
- Features in Early Availability status are only available in production to a limited
  number of customers based on fit with specific use cases.
- The subscription assignment API requires either the password or authorization code
  OAuth 2.0 grant type to successfully authenticate.
- Ensure delayed invoicing is enabled for products configured for metered usage.
- Requires specific roles for accessing different endpoints.
- Request body schema requires content, directSales, enabled, id, locale, and type.
- Ensure CSV file format is correct for catalog updates/creation
- Uses OAuth2 with refresh token — requires setup of connected app in discount API
- Percentage discounts cannot exceed two decimal places.
- Requires setup of proper OAuth scopes
- Ensure companyId is included for relevant queries
- Role visibility limits the opportunities returned.
- Accept-Language header is required in all requests.
- Accept-Language header is required in requests.
- Requires userId and companyId as path parameters
- Requires scopes and authorization rules based on roles such as ROLE_RESELLER and
  ROLE_CHANNEL_ADMIN.
- Requires shoppingCartId parameter for all operations
- Responses include standard HTTP status codes
- Only UI library components created through sfb-toolkit components-copy command can
  be deleted using this method.
- YAML locale files must follow specific naming conventions.
- Use the Data Viewer to find item IDs for overrides.
- OAuth 1.0 was deprecated on 1 December 2020.
- The application must authenticate using the client ID and secret.
- GraphQL schema changes frequently, check documentation for updates.
- Technical support and service-level agreements do not apply to preview APIs.
- GraphQL API is currently in Early Availability status.
- Rate limits define the maximum number of requests that are allowed by a client application
  per minute.
- The current bucket size is 20 requests, with a leak rate of 4 requests per second.
- Cancellation of a subscription doesn't require parameters beyond the subscriptionId.
- Uses JSON format for requests and responses.
- Ensure to handle rate limits and authentication properly.
- User requires channel admin access to update subscriptions.
- Use OAuth for authentication
- Ensure correct base URL is used for the marketplace
- Response includes order details such as paymentPlanId, discountId, and orderLines
- Response includes details about the subscription status and order.
- 'Status Code: 201 Created'
- 'Cache-Control: no-cache, no-store, max-age=0, must-revalidate'
- 'Content-Encoding: gzip'
- 'Content-Length: 1072'
- 'Content-Type: application/json;charset=UTF-8'
- Returns a status code of 201 Created upon successful subscription creation
- 'Content-Type: application/xml;charset=UTF-8'
- Response includes creationDate, externalAccountId, and status among other details.
- Creating a subscription for a recurring edition charging a percentage tax.
- Status codes may vary based on the request.
- You can have only one discount on an edition at a time.
- The retainable property has no effect on extending contracts.
- Tokens expire after 15 minutes.
- Delayed invoicing is recommended for products configured for metered usage.
- API requires specific roles for access to certain endpoints.
- Ensure to handle pagination when retrieving companies.
- Requires specific roles for accessing various endpoints.
- Requires setup of connected app for OAuth2 authentication
- Some discounts may have specific redemption restrictions.
- Requires setup of roles for access to endpoints.
- Requires specific roles for access depending on the operation.
- Ensure to provide valid productId for settings retrieval.
- Requires setup of developer key for tokenizing payment methods
- Requires setup of connected app for authentication.
- Filters available for startDateFrom, startDateTo, status, currency, type, frequency,
  orderReferenceCode, applicationIds, fromCreationDate, toCreationDate, sortField,
  sortOrder, and start.
- Components can be managed in the Theme Editor.
- Default components can be set in the settings.json file.
- Your marketplace may be configured to support different languages for localization.
- The format of the file name must use the language (two-letter ISO 639-1 code) and
  country (two-letter ISO 3166-1 code) codes with the .yml extension.
- URL for selected items must be constructed using JavaScript.
- 'For additional details about how to build pages, see the following topics: Page
  structure, Templating language features, Customized data.'
- 'Best practices: Backup & branch – never upgrade directly on your production branch.'
- Run these checks after every library upgrade and before each release.
- The label text for the input field is Slider Title.
- The placeholder text for the input field is Slider title.
- Uses OAuth 2.0 for authentication
- Uses OAuth2 with client credentials — requires setup of connected app in marketplace
- The union TriggerSubscriptionCancellationProcessError was updated with new types.
- The Inventory Sync GraphQL API was promoted from Preview to Early Availability status.
- New Checkout GraphQL APIs were released to support end-to-end self-serve checkout.
- Resource limitations may change as AppDirect learns more about how developers use
  the AppDirect GraphQL API.
- Requires OAuth2 authentication with authorization code flow
- Creating a payment instrument is equivalent to entering billing details on purchase
  through the UI.
- If a payment instrument exists for the user and company pair, a 409 Conflict response
  is returned.
- The paymentMethod must be CREDIT_CARD.
- Creating a subscription requires the paymentPlanId in the order.
- Uses JSON and XML formats for requests and responses
- Supports both JSON and XML formats for requests
- You can create a discount with required properties.
- The retainable property can be set to true in discount creation or update requests.
- 'Access token is included in the header section of each query and mutation as ''Authorization:
  Bearer access_token''.'
- Supports fetching active cart details and finalizing a cart
- This feature is enabled by default. If it is not active in your marketplace, contact
  your AppDirect technical representative to request it.
- CORS needs to be enabled on your API server to allow requests from the marketplace.
- The auth token can be included via request header, body, query param, or cookie.
- JWT is used to authenticate the platform extension with your API server.
- Webhook payload properties can be extracted by navigating the object structure.
- Handle updates and deletions as an exercise.
- The GraphQL API supports an Inventory system that can track the stock of an edition
  of a physical product.
- 'Inventory for a physical product edition is optional: physical products on a marketplace
  are not required to have an associated Inventory.'
- Use of GraphQL APIs requires understanding of authentication scopes.
- Ensure to verify token's scope alignment with required scope for operations.
- You must complete prerequisites before sending a user's metered usage to a marketplace.
- The base URL is derived from the marketplace element in events.
- Use your test marketplace to test your payment.js implementation before deploying
  it to production.
- Requires setup of roles for accessing different endpoints.
- Requires setup of product-scoped OAuth2 authentication.
- Some operations may require specific roles to be assigned.
- Some discounts may have restrictions based on redemption.
- Ensure proper roles are assigned for access
- Requires ROLE_CHANNEL_ADMIN for certain operations
- Filters subscriptions by various criteria such as date, status, currency, type,
  frequency, etc.
- Required Accept-Language header with Locale format for certain requests.
- Ensure to replace {shoppingCartId} and {itemId} with actual IDs in the URL paths.
- Filters results using optional filter parameters.
- Subscription status can be INITIALIZED, FAILED, FREE_TRIAL, ACTIVE, SUSPENDED, or
  CANCELLED.
- This API requires specific roles for access.
- Uses JSON structure for component settings in `settings.json`.
- The data included in the templates pulls basic information from your marketplace
  to help you get started on your theme.
- Localization requires separate YAML locale files for each language.
- The YAML locale files are primarily intended for localization.
- You can override some labels using a YAML file.
- Use caution when modifying header or footer position or display properties
- Ensure that you test your changes thoroughly
- Review ARIA roles & labels, Keyboard navigation, Color & contrast after upgrade.
- The label text for the dropdown list field is 'Height'.
- The default option text to display when no options were selected is 'Select'.
- TOGGLE_CHECK types display a control that provides a checkbox to switch between
  two different options.
- OAuth 2.0 authentication uses access tokens to determine which APIs a client can
  successfully call.
- The input object ProgramApplicantFilter was updated with the field lastModifiedOn.
- 'The following changes were made: The queries transferUnitEligibleSubscriptions
  and transferUnitEligibleEditions were updated with the scope billing.subscription.read.instance.'
- Uses OAuth2 with authorization code — requires setup of connected app in AppDirect
- The subscription was successfully deleted returns 204 No Content
- Cannot cancel a subscription in CANCELLED status or with pending null
- AppDirect supports an OAuth-authenticated REST interface
- 200 OK on success; 404 Not Found if no product with the specified productId exists
  in the system.
- Requires channel admin access to change subscriptions.
- If no payment instrument exists for the user and company pair, a payment instrument
  will be created and set to be the default.
- If a payment instrument already exists, a 409 Conflict response will be returned.
- You must create a payment instrument before you can create subscriptions via the
  Billling API.
- Supports one-time subscriptions with flat rates and discounts
- Uses standard HTTP methods for API interactions.
- Uses JSON format for requests and responses
- Uses OAuth1 for authentication
- Once a company, user and payment instrument have been created, you may create subscriptions
  for the user through the AppDirect API.
- All fields in payment method creation are required.
- 'Authorization: Bearer <access_token> must be included in the header of each request.'
- Every usage event is submitted with an associated date, so adjustments are allocated
  to the correct historic billing period and invoiced accordingly.
- Requires various roles for different operations depending on the endpoint.
- Requires setup of roles to access different endpoints.
- API supports both SMS and email notifications.
- Supports various endpoints related to business and revenue data.
- Requires various permissions based on the operation.
- Requires proper scopes set for each operation.
- 'Required header with Accept-Language format: ''en-US'''
- Accept-Language header required in Locale format (e.g., en-US)
- Some endpoints may return nulls in deeply nested fields
- Requires ROLE_CHANNEL_ADMIN for certain endpoints
- Requires applicationId and questionId as path parameters.
- Filters results based on various parameters such as startDateFrom, currency, status,
  etc.
- Requires ROLE_CHANNEL_ADMIN to access the endpoints.
- Use application/json as content type for requests.
- Ensure to handle 401 NOT AUTHORIZED error.
- Requires OAuth2 authentication.
- The `orderable` option is only available for themes using @appdirect/sfb-theme-components@0.352
  or newer.
- You can view existing page data in the developer tool.
- Global information includes the current user locale and specific information.
- Product profile pages found at http://mytheme/apps/{productId}
- Comparison page accessible after selecting products to compare
- OAuth2 authentication is required for accessing APIs.
- GraphQL endpoints may require different query structures.
- The user cancelling the subscription does not necessarily have to be the original
  purchaser.
- 200 OK on success
- 404 Not Found if no product with the specified productId exists in the system.
- Creating a payment instrument is the equivalent to entering billing details on purchase
  through the UI.
- If a payment instrument exists, a 409 Conflict response will be returned.
- Requires creation of a payment instrument before creating subscriptions via the
  Billing API.
- Response includes both JSON and XML formats
- Uses OAuth2 with refresh token — requires setup of connected app in appdirect
- Uses multiple formats (JSON and XML) for requests and responses.
- Uses OAuth2 with refresh token — requires setup of connected app in app direct
- Requires setup of connected app in app direct
- Use the Client Id and secret to retrieve an access token.
- Authorization token is included in the header section of each query and mutation.
- fulfillmentUuid & shippingQuoteId can be retrieved from the api response of fetching
  or saving shipping address
- Ensure to handle user errors during cart finalization.
- Check for common errors related to input validation.
- This API is in Early Availability status.
- Responses may vary based on user roles and authorization
- Vendor's percentage share of the discount.
- Requires access tokens with appropriate scopes.
- Company profile leads are visible to Reseller and Marketplace Managers.
- Requires setup of OAuth permissions as per roles defined.
- 'Requires Accept-Language header with Locale format. For example: en-US'
- Some endpoints require specific role-based access.
- Requires setup of authorization scopes for reseller and channel admin.
- Requires setup of roles for access as a Marketplace Manager.
- Data includes information about meta tags, locales, products, UI elements, and other
  items.
- If you do not want to style in SASS, ensure that only the header-index.css file
  exists in themes/themeName/header-footer/css. Remove the header-index.scss file.
- Ensure that you include https:// in the URL when updating the marketplace URL.
- If you created a theme using custom components that used toolkit version 4.x.x or
  earlier upgrading the UI library to version 0.0.352+ still means the 3rd Scenario
  applies to you.
- The following changes were made to the schema on various dates in 2025.
- GraphQL API with multiple input and output types.
- Once a subscription has been created, you may cancel the subscription through the
  AppDirect API.
- Handles subscription changes for recurring price per unit editions
- If a payment instrument exists for the user and company pair, a 409 Conflict response
  will be received.
- Uses XML and JSON formats for request and response.
- Subscription status codes include CREATED and ACTIVE.
- Uses REST API for subscription management
- Uses JSON and XML for API responses
- Uses XML and JSON for requests and responses.
- This API allows to create and manage discount codes that can be applied to various
  marketplace editions or applications.
- 'The retainable property has no effect on the following: If you change only the
  number of units in an edition.'
- Currently, only credit cards are the only supported payment method types.
- 'Use Authorization: Bearer <access_token> in headers for API calls'
- The API is in Early Availability status.
- Asynchronous validations may return pending validations.
- The applicant entry is added to the Developer Applicant list and is in Pending Review
  status.
- Requires different roles for access based on specific operations.
- Additional attributes not appearing in the REST API documentation include details
  on transactionMode, paymentPlan, and orderLine description.
- Currently, AppDirect Functions can only be invoked as webhook listeners.
- The feature is available only in public cloud environments (US and EU).
- If this is the only company the user was member of, user is marked as deleted.
- A user that has active entitlements, owns products or is externally managed can't
  be deleted.
- To access this API, you must configure product-scoped OAuth2 authentication for
  your application.
- Webhooks and other responses may return different status codes.
- The secure token system allows authenticated access to your external APIs from within
  your extension frontend app, with the use of Cross-Origin Resource Sharing (CORS)
  headers and JSON Web Tokens (JWT).
- Supports delayed invoicing for products configured for metered usage
- Endpoints allow for creating and updating product catalogs using CSV files.
- When a partner has not customized a notification template, the default template
  will be used to send notifications.
- Reserved for super support users.
- API Authentication requires OAuth2.
- Some roles require specific scopes for access.
- The API uses an OAuth-authenticated interface.
- Non-interactive OAuth 1.0 credentials with read and write access are required.
- Requires various roles for access based on the endpoint.
- 'Required Scopes: ROLE_CHANNEL_ADMIN, ROLE_CHANNEL_PRODUCT_SUPPORT'
- Cannot set the Marketplace Manager role through the API.
- 'Required scopes for different operations: ROLE_RESELLER, ROLE_RESELLER_MANAGER,
  ROLE_CHANNEL_ADMIN, ROLE_CHANNEL_PRODUCT_SUPPORT'
- Endpoints require valid company and user UUIDs.
- Roles determine access to opportunities.
- Requires ROLE_RESELLER or ROLE_SALES_SUPPORT for access.
- The default number of results to fetch is 250.
- Requires ROLE_CHANNEL_ADMIN to access update and delete transfer platform configurations.
- Deletes a specific image resource from a product.
- Requires a valid companyId and userId in the request path.
- Responses are in XML and JSON formats depending on the endpoint.
- API uses OAuth-authenticated interface.
- The API supports multiple response formats including XML.
- Some endpoints require path parameters.
- Required Scopes and Authorization Rules include ROLE_RESELLER, ROLE_SALES_SUPPORT,
  ROLE_CHANNEL_ADMIN, ROLE_RESELLER_MANAGER.
- Currently only supported value for contextrequired is 'RESELLER_MANAGER'
- Maximum allowed page size is 250
- Requires a user-based token for search.
- Currently only supported context is 'RESELLER_MANAGER'.
- Requires ROLE_CHANNEL_ADMIN to access the API.
- Requires valid shoppingCartId and itemId in the path parameters.
- The pricing summary includes detailed and effective costs as well as the billing
  schedule and recurring charges.
- API uses an OAuth-authenticated interface that facilitates secure data access.
- Uses OAuth-authenticated interface for secure data access.
- API authentication uses OAuth2.
- Default sort field is 'DATE' and order is 'ASC'.
- This API requires specific roles for access, such as ROLE_RESELLER.
- Access control based on user roles
- Default pagination is 10 records per page.
- Ensure products are configured for metered usage before submitting usage.
- The label text for the dropdown list field.
- The default option value for the dropdown list field.
- Uses ApiKeyAuth for authentication.
- Requires setup of OAuth2 for API access
- Direct sales templates are indicated by 'directSales' flag.
- Enabled templates are indicated by 'enabled' flag.
- Discount codes must be at least 4 characters, but no longer than 103 characters.
- Uses OAuth2 with client credentials grant type.
- The object InvoiceLine was updated to include new fields.
- Be careful if you are making any changes and if you only want to test the API, consider
  using a test environment if you have one.
- 'PricingUnit Enum: USER, GIGABYTE, MEGABYTE, HOUR, MINUTE, INVOICE, UNIT, PROJECT,
  PROPERTY, ITEM, WORD, EMAIL, CONTACT, CALL, CREDIT, ROOM, HOST, AGENT, OPERATOR,
  PROVIDER, MANAGER, TESTER, JVM, SERVER, WEB_USE_MINUTE, AUDIO_USE_MINUTE, PIECE,
  EMPLOYEE_PAY_PER_PERIOD, EMPLOYEE_PER_PAY_PERIOD, COMPUTER, NOT_APPLICABLE, ONE_TIME_SETUP,
  DATA_POINTS, TIER1_API_CALLS, TIER2_API_CALLS, ADVISORY_HOURS, OVERAGE_AUDIO_MINUTE,
  EMPLOYEE, CONNECTION, PUSH_USER, THOUSAND_EMAILS_PER_DAY, PUSH_NOTIFICATION_DEVICES,
  API_CALLS, SMS_TEXT_MESSAGE, CONTACTS_1000, CONTRACT_FEE, TRANSFER_FEE, REACTIVATION_FEE,
  RECIPIENT, ADDITIONAL_1000_CONTACTS_BLOCK, SCHEDULE_PLAN, EMAILS_1000, EMAILS_2500,
  MOBILE_DEVICE, PAYSLIP, PAYSLIP_CORRECTION, STORE, WEBSITE, EPAPER, PAGE, POSTAGE_AND_PRINT,
  INTERNATIONAL_POSTAGE_AND_PRINT, TIER1_TOP_LEVEL_DOMAIN, TIER2_TOP_LEVEL_DOMAIN,
  DEDICATED_IP, ENABLELCM, MAXCOMPONENTS, DATA_MANAGEMENT_USER, SPECIALIST_USER, PROFESSIONAL_USER,
  MATERIALITY_MATRIX, STAKEHOLDER_MANAGEMENT, SCORECARD, STANDARD_MAPPING, DONATION_MANAGEMENT,
  DOCUMENT, PACKAGE_SMALL, PACKAGE_LARGE, MEMBER, ATTENDEE, MAILING, RESPONSE, EXTERNAL_INVOICE_FEE,
  CLIENT_TEST, IMAGE_TRANSFORMATION, TOTAL_IMAGE, LICENSE, MAILBOX, FREE_40_INCH_HDXTV_PC,
  FREE_46_INCH_HDXTV_PC, FREE_46_INCH_HDXTV_PC_MOUNTING, EMPLOYEE_PER_WEEK, REGISTER,
  END_USER, CORE, DEVICE, PORT, MEASURER, PUBLISHED_MEASUREMENT, NODE, SERVER_RULE,
  VPN_LP, PROXY_LP, DESKTOP_CONNECT_LP, CAMERA, MAIN_SOUND_ZONE, SUB_SOUND_ZONE, POST,
  REPORT, BOX, SESSION, DISPLAY, TRUCKROLL, TRANSACTION_FEE, SENDING_API_CALL, LOOKUP_API_CALL,
  ANALYTICS_API_CALL, MIGRATION_INSTANCE, NFON_SETUP_PER_PHONE_EXTENSION, NFON_SETUP_PER_PHONE_EXTENSION_PLUS,
  NFON_SETUP_PER_EFAX_EXTENSION, NFON_PHONE_EXTENSION, NFON_PHONE_EXTENSION_PLUS,
  NFON_EFAX_EXTENSION, NFON_CALL_CENTER_MONITORING, NFON_NMEETING, NFON_MOBILE_NFON_DEVICE,
  NFON_ISOFTPHONE_MAC, NFON_NSOFTPHONE_STANDARD_WINDOWS, NFON_NSOFTPHONE_PREMIUM_WINDOWS,
  NFON_NCTI_STANDARD_WINDOWS, NFON_NCTI_STANDARD_CRM_WINDOWS, NFON_NCTI_STANDARD_MAC,
  NFON_NSOFTPHONE_STANDARD_WINDOWS_OR_MOBILE, WESUSTAIN_PERFORMANCE, WESUSTAIN_STAKEHOLDER_REPUTATION,
  WESUSTAIN_WEAPP, FAX, FAX_LINE, ROOM_LINE, DEPARTMENT_LINE, INTERNATIONAL_LICENSE,
  INTERNATIONAL_DEPARTMENT_LINE, INTERNATIONAL_ROOM_LINE, INTERNATIONAL_LINE, CALLING_CREDIT,
  LINE, TOLLFREE_ROOM_LINE, TOLLFREE_DEPARTMENT_LINE, TAXES_AND_FEES, LEAD, OPPORTUNITY,
  CAMPAIGN, CASE, CUSTOMER, TIER1_STANDARD_LINE, TIER1_ROOM_LINE, TIER1_TOLLFREE_ROOM_LINE,
  TIER1_TOLLFREE_DEPARTMENT_LINE, TIER1_FAX_LINE, TIER1_DEPARTMENT_LINE, TIER2_STANDARD_LINE,
  TIER2_ROOM_LINE, TIER2_DEPARTMENT_LINE, TIER3_STANDARD_LINE, TIER3_ROOM_LINE, TIER3_DEPARTMENT_LINE,
  TIER4_STANDARD_LINE, TIER4_ROOM_LINE, TIER4_DEPARTMENT_LINE, CLUSTER, NODE_4VCPU,
  FIVE_HUNDRED_GB_SSD, TWELVE_TB_NETWORK_IO, JBOSS_EAP, JBOSS_FUSE, JBOSS_A_MQ, JBOSS_BRMS,
  JBOSS_BPM_SUITE, JBOSS_DATA_GRID, JBOSS_DATA_VIRT, USER_LICENSE, ADDITIONAL_NUMBER_LICENSE,
  ROOM_PHONE_LICENSE, UBERCONFERENCE_PRO_LICENSE, UBERCONFERENCE_PRO_LICENSE_UNBUNDLED,
  INSTANCE, INDOOR_CAMERA, OUTDOOR_CAMERA, VINGATE_LP_LICENCE, ADMINISTRATOR, MOBILE_USER,
  G_SUITE, T1, PHONE, AUTO_ATTENDANT, HUNT_GROUP, VOICEMAIL_BOX, TOLL_FREE_NUMBER,
  INBOUND_LONG_DISTANCE_MINUTE, OUTBOUND_LONG_DISTANCE_MINUTE, INBOUND_OUTBOUND_LONG_DISTANCE_MINUTE,
  SET_TOP_BOX, MODEM, ACCESS_POINT, CALLING_FEATURE, IAD_DEVICE, ANALOG_LINE, PRI,
  SBC_DEVICE, ROUTER, INTERNATIONAL_MINUTE, PHONE_LINE, DYNAMIC_IP_ADDRESS, STATIC_IP_ADDRESS,
  GATEWAY, REMOTE_CONTROL, TIER1_STANDARD_SEAT, TIER2_STANDARD_SEAT, TIER3_STANDARD_SEAT,
  TIER4_STANDARD_SEAT, TIER1_TOLL_FREE_SEAT, MILLION_MESSAGES, MESSAGE, WEEKLY, PHONE_NUMBER,
  GUEST, REVISION_SAFE_DATAROOM, GROUP_SESSION, MAILBOX_AD_SYNC, PHONE_SUPPORT, EXTRA_10TB,
  EXTRA_50TB, EXTRA_200TB, MAP_VIEW, SVM, CHANNEL, NUMBER_PRINTER_TABLET, NUMBER_ONSITE_SERVER,
  NUMBER_VISITS, ONSITE_TECHNICIAN_PC, ONSITE_TECHNICIAN_SERVER, SHORTER_REACTION_TIMES,
  E_COMMERCE_INTEGRATION, LOCATION, TRAINING_SESSION, GIGABYTES_PER_HOUR, FINANCIAL_PLANNING,
  ONSITE_WORKPLACE, INTERNAL_TOOLS_ACCESS, DUTY_SERVICE, TERABYTE, HOST_UNIT_HOURS,
  WEB_CHECKS, ACTIVE_USERS, ACTIVE_EMPLOYEE, PC_OF_NET_RECURRING_FEE, ACTIVE_VENDOR,
  ADVERTISEMENT, ADVERTISER_SPENDS, ANNUAL_FUNDRAISING_INCOME, ANNUAL_SUBSCRIPTION,
  APPLIANCE, ASSET, ASSETS_UNDER_MANAGEMENT, BUSINESS_PARTNERS, CASH_FLOWS, COMPONENT,
  CONNECTED_SYSTEMS, CONTRACTS, COSTS, DATA_STREAMS, DATABASE_SIZE, EXTERNAL_SERVICE_CALLS,
  FILE, FIXED, FLAT, FLAT_FEE_BASED_ON_ASSETS, FLEET_PLANNING_ORDERS, FORMS, GIGABYTE_DATABASE_SIZES,
  INSTALLATION, INSTALLED_CAPACITY, JOB_POSTING, LEARNER, LOGON, MANAGED_SYSTEM, MASTER_DATA_OBJECT'
- Ensure necessary scopes are configured for API access.
- Requires correct configuration of OAuth2 for token retrieval.
- Requires channel admin access to update subscriptions through API
- Uses JSON and XML formats for requests and responses.
- Uses a secure token system for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in app_direct
- Uses XML and JSON for requests and responses
- Requires setup of connected app for OAuth.
- Ensure proper user roles are assigned for API access.
- Uses OAuth1 for authentication with HMAC-SHA1
- Responses are returned in XML format.
- Filters subscriptions by various criteria including date ranges, status, and currency.
- The API allows for the creation and management of subscriptions and discounts.
- You must configure the second discount to be retainable to keep it if you change
  the payment plan or edition.
- Use test marketplace initially.
- Ensure that the products required for purchase are already set up in the marketplace.
- Use the checkoutSettings query to fetch marketplace settings.
- Use the activeCartOfUser query to fetch the active cart of a user.
- Use the finalizeCart mutation to finalize a purchase.
- The system supports gated & open signup experiences.
- JWT token has a short expiration time.
- Access token needs to be stored in environment variable ACCESS_TOKEN
- The payload includes additional attributes not found in REST API documentation.
- Uses OAuth2 with client credentials
- We recommend that you enable delayed invoicing for products configured for metered
  usage if you (the vendor) will be.
- Requires setup of authentication roles for access
- API responses are in JSON format
- The GraphQL Explorer uses your live data (including the Preview endpoint). Ensure
  that changes you make do not disrupt your business.
- Inventory for a physical product edition is optional.
- To publish a product, you must provide an Overview image in the Profile.
- Requires setup of roles for access control
- Requires proper authorization for various roles.
- Requires setup of roles for access control.
- Some endpoints may require specific roles for access.
- Requires specific roles for access to certain endpoints.
- Filters available for startDateFrom, startDateTo, status, currency, type, frequency,
  orderReferenceCode, applicationIds, fromCreationDate, toCreationDate.
- 'Accept-Language header with Locale format required. For example: en-US.'
- Requires setup of roles for access.
- Requires setup of connected app in marketplace
- Some endpoints require specific authorization roles
- Accept-Language header required in Locale format, e.g., en-US
- Requires ROLE_CHANNEL_ADMIN for access
- Various endpoints for segment management
- Filters results using various criteria including startDateFrom, startDateTo, status,
  currency, type, frequency, orderReferenceCode, applicationIds, fromCreationDate,
  toCreationDate, and count.
- Requires setup of connected app in appdirect
- Uses OAuth2 with header authorization
- The API supports pagination with page and size parameters.
- Some endpoints require specific company IDs or contexts
- Requires setup with API credentials for email templates.
- If you created a theme using custom components that used toolkit version 4.x.x or
  earlier upgrading the UI library to version 0.0.352+ still means the 3rd Scenario
  applies to you!
- The label text for the multi-line plain-text field is 'Description'.
- The placeholder text for multi-line plain-text field is 'Description'.
- The default value text for multi-line plain-text field is 'Description'.
- The schema component type is TEXTAREA.
- The error validation message text is 'This field is invalid'.
- Some discounts may have specific redemption rules
- API uses OAuth2 for authentication.
- Access token is returned directly in the response.
- The access token must be included in the Authorization header as a bearer token.
- 'Requires specific roles for access: ROLE_RESELLER, ROLE_REFERRAL, ROLE_DEVELOPER,
  ROLE_RESELLER_MANAGER'
- Uses Resource Owner Password Credentials grant type for authentication
- Access tokens expire after 12 hours
- All requests use the POST method, even if you are simply retrieving data.
- The AppDirect GraphQL API currently has limitations and is in Early Availability
  status.
- Requires proper OAuth setup to assign users to subscriptions.
- 'Accept-Language header required with Locale format. For example: en-US'
- 'Accept-Language header is required for all requests, format: ''en-US'''
- Changing to a recurring subscription requires specifying paymentPlanId and orderLines.
- Changing a subscription to add a discount
- Changing a subscription to Microsoft products
- Requires ROLE_CHANNEL_ADMIN for certain actions.
- Use appropriate content type for requests.
- Uses JSON format for requests
- Consider API rate limits
- Creating a recurring flat rate subscription with set up fees.
- 'Required Scopes: ROLE_RESELLER, ROLE_RESELLER_MANAGER'
- Creating a recurring subscription with taxes
- API requires a valid partner code in the header for shopping cart operations.
- You can only have one discount on an edition at a time.
- Discounts apply to the subscription created when a product is purchased.
- Ensure to replace {shoppingCartId} and {itemId} with actual IDs in the endpoint
  paths.
- 'Fetch the access token is included in the header section of each query and mutation
  as Authorization: Bearer access_token'
- Use the checkoutSettings query to fetch certain marketplace settings that can be
  leveraged during the Checkout process.
- Use the activeCartOfUser query to fetch the active cart of a user in a marketplace.
- Use the finalizeCart mutation to finalize a purchase and place an order.
- The system provides Marketplace managers the ability to view and filter developer
  leads.
- You can download the list of applicants as a CSV file.
- Uses HubSpot API SDK
- Pagination is based on count and start parameters.
- Some APIs may return results in XML format.
- Inventory for a physical product edition is optional, physical products on a marketplace
  are not required to have an associated Inventory.
- 'Important: This part of the GraphQL API is currently in Preview status.'
- 'Important: This feature is currently in Early Availability (EA) status.'
- Product APIs are in the Early Availability release status
- Product publication is not supported
- Payload matches the REST API Order definition for the order.
- Each Order includes one or more Order lines.
- The developer mode will be enabled for 8 hours and for this user only.
- Requires setup of roles and permissions based on context.
- Content type must be application/json for all requests.
- Ensure the correct content type is set for requests.
- Some discounts may have restrictions based on usage.
- Some discounts may require specific conditions to be applied.
- Requires various roles for access control depending on endpoint.
- Requires ROLE_CHANNEL_ADMIN for accessing certain endpoints.
- Response format is application/xml for certain endpoints.
- Some endpoints require specific headers or parameters to be set.
- Proper authorization roles are required to access certain endpoints.
- Filters available for order status, currency, type, frequency, and creation dates.
- Dynamic segments require specific filters for creation.
- Requires setup of connected app in the marketplace
- Requires ROLE_CHANNEL_ADMIN to access endpoints.
- Requires valid shoppingCartId and itemId for certain operations
- Carts must be validated before finalization.
- Use variables to build dynamic paths to custom resources.
- Uses sfb-toolkit for storefront customization
- Ensure that you include https:// in the URL for marketplace
- If you created a theme using custom components that used toolkit version 4.x.x or
  earlier upgrading the UI library to version 0.0.352+ still means the 3rd Scenario
  described previously applies to you.
- Some attributes are optional and have default values.
- Use the appropriate roles for API access.
- A subscription represents a customer's entitlement to a product and determines their
  access to that product.
- You cannot perform any subscription management operations on cancelled subscriptions.
- AppDirect supports an OAuth-authenticated REST interface.
- Limited support for bulk data operations
- Optional parameters include code, sortField, sortOrder, start, and count.
- If the payment instrument exists for the given user and company pair, a 409 Conflict
  response will be returned.
- Uses a flat rate pricing model for subscriptions.
- Recurring subscriptions can have user-based pricing.
- Uses a REST API to manage subscriptions.
- Uses a subscription model for recurring billing
- Ensure to handle different response formats (JSON, XML)
- The AppDirect API allows for various subscription types including free trials and
  discounted subscriptions.
- The retainable property has no effect if you change only the number of units in
  an edition.
- All fields in the payment method information are required.
- 'Required Accept-Language header with Locale format. For example: en-US'
- Ensure that the products required for purchase are set up in the marketplace.
- Ensure proper OAuth setup to access GraphQL endpoints.
- Check specific user errors during cart finalization.
- The GraphQL API is currently in Early Availability status.
- The secure token is a JWT that represents the user's session in the marketplace.
- Uses OAuth2 access token for authentication
- Environment variables must be used to store the access token
- Filters results by various parameters like startDateFrom, startDateTo, status, currency,
  type, frequency, etc.
- Requires OAuth2 setup with appropriate scopes.
- The GraphQL API includes a query and two mutations that allow users to view and
  modify notification templates.
- Product APIs are in Early Availability release status.
- You must have Developer role to access the API.
- You can configure a product's categories and attributes using the REST APIs if you
  have the ROLE_CHANNEL_ADMIN scope.
- Currently, ROLE_PARTNER scope is not supported.
- The physical goods product category is in Early Availability status.
- We recommend that you enable delayed invoicing for products configured for metered
  usage.
- Ensure the appropriate roles are assigned for access.
- Localization files must be added to the themes/themeName/translations folder.
- Each theme must include its own list of localization files.
- Ensure that the checkout process works properly with the theme integration.
- The base layout (base.html file) contains the meta tags for your storefront.
- If your custom theme does not have blocks in your base layout (base.html file),
  you must manually add the blocks.
- Some objects like CONTACTS_100 may return nulls in deeply nested fields
- Usage can be submitted retroactively to correct usage for billing periods that are
  already invoiced.
- Requires various roles for access such as ROLE_SYS_ADMIN, ROLE_CHANNEL_ADMIN, etc.
- Some responses may include additional fields not documented
- Uses OAuth2 with refresh token — requires setup of connected app in discount api
- Accept-Language header is required with a locale format
- Description is required and must be at least 4 characters, but no longer than 255
  characters.
- PricingUnit Enum includes various units like USER, GIGABYTE, MEGABYTE, HOUR, MINUTE,
  INVOICE, and others.
- Uses Accept-Language header with Locale format.
- Payment instruments are linked with user and company IDs.
- Requires authorization for access to payment methods.
- Default pagination is set to 250 results per request.
- Filters results by various parameters including dates, status, and order types.
- Accept-Language header with Locale format required for certain endpoints.
- This API requires a valid OAuth2 token for authentication.
- Requires setup of OAuth2 authentication for the application
- Ensure user has appropriate roles for accessing endpoints.
- Requires OAuth2 authentication
- Shopping cart ID is required for most endpoints
- Ensure that you include `https://` in the URL when updating marketplace URL.
- The API requires specific path parameters for operations on shopping carts.
- Your marketplace may be configured to support different languages for localization.
  If this ability has been enabled, you can prepare and deploy translations for your
  storefront by creating YAML locale files in the theme /translations folder.
- You can use a YAML file to override some labels.
- TEXTAREA types display a multi-line plain-text editing control.
- DROPDOWN types display a control that provides a menu of options through a dropdown
  list. One option can be selected.
- Certain files are required as the minimum for any theme in order to present the
  storefront correctly.
- All API requests must be made over HTTPS. Any calls made over HTTP will fail.
- Store API keys as securely as possible to protect your data.
- Uses OAuth2 with password grant type — requires user credentials for access
- 'The following objects were added: SubscriptionCancellationIdInvalidError, SubscriptionCancellationServerError,
  SubscriptionCancellationReasonIdValidationError.'
- The object InvoiceLine was updated to include additional fields.
- The mutation ProductSearchManagement was removed.
- The object Payment was updated to include new fields.
- API rate limits apply
- HTML and CSS are encapsulated---Every rule is encapsulated post processing, and
  you cannot use any styles that come from your base theme.
- Deprecated attributes include transactionMode and referenceCode.
- You cannot use this combined pricing model method for usage for products configured
  with volume pricing.
- Status code 200 indicates success.
- Once a subscription has been created, you may change the subscription through the
  AppDirect API.
- The unique identifier for the payment instrument will be returned in the response
  when created.
- Uses XML and JSON formats for requests and responses
- 'Status Code: 201 Created indicates successful creation of a subscription.'
- Creating a subscription requires a company, user, and payment instrument to be set
  up first.
- Discount management is available via a dedicated API.
- You must configure the discount code to use the retainable property.
- The retainable property has no effect if you change only the number of units.
- Only credit cards are supported for payment methods.
- 'Authorization: Bearer <access_token> must be included in the header for all queries.'
- Ensure proper setup of API clients and scope configuration.
- fullfillmentUuid & shippingQuoteId can be retrieved from the api response of fetching
  or saving shipping address
- Requires appropriate role scopes for access.
- Some endpoints require specific parameters to function correctly.
- Use the checkoutSettings query to fetch certain marketplace settings.
- 'Validations can be performed at two levels: PRE_FINALIZE and PREVENT_FINALIZE.'
- Currently in Early Availability (EA) status.
- Uses OAuth2 for authentication — requires access token
- GraphQL Explorer uses live data; ensure changes do not disrupt business.
- This API is currently in Preview status.
- Roles required include ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN, ROLE_RESELLER_MANAGER,
  ROLE_PARTNER.
- Product APIs are in the Early Availability release status.
- For more information, see GraphQL API policy.
- The authentication credentials are for a product. Developer accounts are not associated
  with any particular product.
- Ensure to provide the required scopes for authorization.
- Check for nulls in the API responses for deeply nested fields.
- Requires specific roles for authorization depending on the endpoint.
- User must have the appropriate roles to access specific endpoints.
- Requires setup of OAuth2 for authentication.
- Ensure required roles are assigned to users for access.
- Notification template types include ACCOUNT_ACTIVATION.
- The API requires specific headers for requests.
- DiscountType
- PricingUnit
- This API allows Resellers to manage subscriptions.
- Some operations require specific roles for access.
- Ensure marketplace supports localization to use YAML locale files.
- Cart preview component must be included in the theme header.
- The Add to Cart button requires configuration in Billing Settings.
- Product configurator customization requires building the UI for edition and add-on
  listings.
- REST API versioning policy
- Accept-Language header with Locale format is required, e.g., en-US
- Requires a public developer key for some endpoints.
- Authorization roles like ROLE_PARTNER and ROLE_USER are required for various operations.
- Default number of results is 250 for pagination.
- The default sort field is 'PAYMENT_ID' and the default sort order is 'ASC'.
- Uses multipart/form-data for file uploads.
- Requires shoppingCartId in the path for most endpoints.
- Requires proper setup of partner code for marketplace.
- Requires various roles for access to different endpoints.
- Requires user authentication and specific roles for access.
- Requires various roles for access such as ROLE_PARTNER, ROLE_CORPORATE_ADMIN, etc.
- The settings.json file can be used to set default components.
- Components can be dynamically added in the Theme Editor.
- Ensure valid OAuth2 token is used for API calls.
- YAML files must use the format <language>-<country>.yml
- Overrides must be declared in the i18n.overrides section of the YAML file
- Requires setup of developer key for certain endpoints.
- The following changes were made on various dates from February 26, 2025 to May 21,
  2025.
- 'The following objects were added: InvoicePaymentTerms, InvoiceBillingCharge, InvoiceRecordedBillingCharge.'
- The following changes were made to data types in the Invoice object.
- The following changes were made to data types in the InvoiceLine object.
- The following changes were made to data types in the TaxDetail object.
- 'The following objects were added: Party, UserInfo, RecordedUser, RecordedAddressPair,
  RecordedAddress, AccountInfo, RecordedAccount, SubscriptionInfo, EditionInfo, Edition,
  PricingPlan, PaymentIntent.'
- The below objects were renamed.
- The object PaymentMethod was updated to include new fields.
- Includes various input objects and mutations related to commission events
- Filters can be applied to the orders based on various parameters like startDateFrom,
  startDateTo, status, currency, type, frequency, etc.
- Uses OAuth2 with password grant type — requires setup of connected app in appdirect
- 'Requires Accept-Language header with Locale format, for example: en-US'
- Requires setup of authorization for reseller and channel admin roles.
- If a payment instrument exists for the user and company pair, a 409 Conflict response
  will be returned.
- A subscription is created through the UI when a user purchases a product through
  an AppDirect-powered marketplace.
- Requires OAuth2 for authentication
- Some fields may return null values
- API supports both JSON and XML format for requests and responses.
- Uses XML format for requests and responses.
- Response includes detailed subscription and order information
- Endpoint for creating subscriptions is being deprecated.
- Requires ROLE_RESELLER or ROLE_RESELLER_MANAGER for access.
- Requires OAuth2 for authentication.
- Test the library using your test marketplace.
- Requires API Client setup in AppDirect Marketplace
- Access token must be included in headers for each request
- shippingQuoteId can be retrieved from the response of fetching shipping details.
- Global information such as current user locale and specific information such as
  FAQ information is available for developers to view.
- The format of the file name must include language and country codes.
- The feature is currently in Early Availability (EA) status.
- It becomes your responsibility to keep both the UI library and your custom components
  code compliant each time the platform evolves.
- Older theme custom components often import internal modules directly from sfb-theme-components.
- Log statements in the code appear in the console and can be viewed in AppDirect’s
  UI for troubleshooting.
- Notifications API is currently in Preview status.
- Product API is currently in Early Availability (EA) status.
- This feature is currently in Early Availability (EA) status
- If there is no error, an empty HTTP response with an HTTP status code 202 (Accepted)
  is sent.
- Description of discount is required and must be at least 4 characters long.
- Requires authorization based on roles.
- Requires various roles for different endpoints to access data.
- Requires proper authorization roles to access different resources
- Requires various roles for access including ROLE_SYS_ADMIN and ROLE_CHANNEL_ADMIN.
- Requires valid companyId and userId for payment instrument endpoints.
- Required Accept-Language header with Locale format.
- Accept-Language header required in requests.
- Requires setup of public developer key for certain endpoints.
- Default values for count is 250, sortField is 'DATE', sortOrder is 'ASC', and start
  is 0.
- Some endpoints may require specific user roles for access
- Requires setup of connected app in Marketplace.
- Accept-Language header required with Locale format, e.g., en-US
- API requires authentication
- Shopping cart ID is required for most operations
- AppDirect provides LLM-friendly documentation so AI tools can understand and work
  with the AppDirect Developer Portal content.
- Layout management enables dynamic component addition in the Theme Editor.
- The `meta` section includes information used for meta tags, which helps with search
  engine optimization (SEO).
- Different product lists appear depending on the page you are viewing.
- Requires various roles for access to different endpoints
- Uses React components library for building themes.
- 'The schema component type: TOGGLE.'
- The label text for the radio button group field is specified as 'Size'.
- The field value is required.
- To override labels, add an 'i18n.overrides' section to your YAML file.
- Requires OAuth2 authentication to access API endpoints.
- Uses OAuth2 with client credentials — requires setup of client ID and secret
- 'The following changes were made on the respective dates: May 21, 2025; May 16,
  2025; May 15, 2025; May 14, 2025; May 13, 2025; May 12, 2025; April 30, 2025; April
  29, 2025; April 28, 2025; April 24, 2025; April 22, 2025; April 9, 2025; April 8,
  2025; April 7, 2025; April 3, 2025; March 27, 2025; March 26, 2025; March 25, 2025;
  March 24, 2025; March 18, 2025; March 17, 2025; March 14, 2025; March 10, 2025;
  February 28, 2025; February 27, 2025; February 26, 2025.'
- The object Invoice was updated to include new fields.
- The user cancelling the subscription does not necessarily have to be the original
  purchaser of the product.
- Uses standard HTTP methods for API interaction
- Requires proper roles for access, such as ROLE_BILLING_ADMIN and ROLE_CHANNEL_ADMIN.
- Requires correct setup of payment plans and user accounts
- Uses XML and JSON formats for requests and responses.
- AppDirect supports only credit cards as payment methods.
- Access token is included in the header section of each query and mutation.
- The checkoutSettings query fetches marketplace settings relevant to the checkout
  process.
- The activeCartOfUser query fetches the active cart of a user.
- The finalizeCart mutation finalizes a purchase and places an order.
- Use the cartFields query to fetch definitions of attributes related to cart.
- The removeItemsFromCart mutation requires cartId and itemId as input parameters.
- Uses OAuth2 with access token — requires setup of environment variables in AppDirect
- 'Required Scopes for access: ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN,
  ROLE_RESELLER_MANAGER'
- GraphQL Explorer is a browser-based tool that lets Marketplace Managers work with
  their marketplace data to build queries and mutations.
- You can report usage as often as necessary during a billing period, with one usage
  event per call.
- After the end of the final billing period, any attempts to report usage for a canceled
  subscription are rejected and not invoiced.
- Submit usage with associated date for correct billing period
- Ensure proper query parameters are provided for API calls.
- Requires product-scoped OAuth2 authentication setup
- The label text for the input field is 'Slider Title'.
- The placeholder text for the input field is 'Slider title'.
- The default value text for the input field is 'Slider title'.
- The schema component type is INPUT.
- The input field value is required.
- The regex expression to validate the input field value is /^[a-zA-Z0-9 ]+$/gm.
- Description of discount is required and must be at least 4 characters.
- Requires specific roles for access to endpoints.
- The discount is applied to all eligible products. However, redemption limits apply.
- Requires userId and companyId for all operations.
- Requires proper authorization for accessing payment-related data.
- Uses OAuth2 — requires setup of connected app in api
- Requires setup of appropriate roles for access.
- Requires authentication to access shopping cart details.
- The partner code is required for all requests
- Filters subscriptions by various parameters including date ranges and status.
- Default result count is 250.
- This API allows for operations related to subscriptions and user assignments.
- User must be active and specified password must meet user's company password policy.
- Dynamic component management in Theme Editor via PageOrderableContainer.
- Ensure you have the toolkit installed and accessible in your terminal.
- The platform allows customization of labels through YAML files.
- Ensure that you include https:// in the URL.
- Custom components require ongoing maintenance for accessibility compliance.
- The label text for the input field is 'Slider Title'
- The placeholder text for the input field is 'Slider title'
- The default value text for the input field is 'Slider title'
- The input field is required
- API supports OAuth2 authentication for secure access.
- Use OAuth 2.0 for secure data access.
- OAuth2 is required for authentication.
- Access token is returned in the response.
- Include the access token in the Authorization header as a bearer token.
- The union TriggerSubscriptionCancellationProcessError was updated with new error
  types.
- Schema changes may affect the structure of the Invoice and InvoiceLine objects.
- Meta tags are used for SEO to help customers find products.
- Open Graph and Twitter Cards markup can be added for better content sharing.
- New enums and mutations have been added related to commission events.
- Although you can use either the Preview or Production endpoints in the Explorer,
  both affect your live marketplace data.
- Uses OAuth2 with authorization code flow.
- Some objects like Subscription may return nulls in deeply nested fields
- Request and response formats support both JSON and XML
- Requires channel admin access for subscription changes.
- If no payment instrument exists yet for the user and company pair, a payment instrument
  will be created and set to be the default.
- If the payment instrument exists for the given user and company pair, a 409 Conflict
  response will be received.
- Some subscriptions may have specific requirements for payment plans
- The retainable property has no effect on changing only the number of units in an
  edition.
- API supports multipart/form-data for catalog updates and creation.
- Description is a required field and must be at least 4 characters, but no longer
  than 255 characters.
- Checkout process uses GraphQL queries and mutations for fetching and finalizing
  cart details.
- Currently in Early Availability status.
- Ensure to retrieve the price book ID after creation.
- 'Requires specific roles for access: ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN,
  etc.'
- Ensure to include required parameters in the requests.
- Requires Accept-Language header with Locale format, e.g. en-US
- Ensure proper authorization based on roles
- GraphQL Explorer allows building and testing queries and mutations against live
  marketplace data.
- GraphQL API is currently in Preview status
- Product API feature is currently in Early Availability (EA) status
- Marketplaces use the metered usage V1 API, metered usage V2 API, or both, to support
  metered usage billing.
- To report usage, POST an XML document to the endpoint URL.
- Max file size for uploads is 4.5Mb.
- Requires setup of roles and permissions for accessing data.
- Uses `settings.json` to define default components for storefront pages.
- Requires setup of product-scoped OAuth2 authentication
- If this ability has been enabled, you can prepare and deploy translations for your
  storefront by creating YAML locale files in the theme /translations folder.
- You can also use a YAML file to override some labels.
- 'The schema component type: TEXTAREA.'
- Specifies whether the dropdown list field value is required.
- The product list curated type is manual or dynamic.
- Expiration date must be in the future.
- OAuth 2.0 is recommended for secure data access.
- Uses OAuth2 with password grant type — requires user credentials.
- The following changes were made
- 'The object InvoiceLine was updated to include the below fields: billingCharge,
  buyer, cost, costPeriod, description, discount, edition, period, pricingPlan, product,
  provider, quantity, subscription, total, type, unitPrice, orderRef, orderLineId.'
- 'The below objects were added: InvoicePaymentTerms, InvoiceBillingCharge, InvoiceRecordedBillingCharge,
  InvoiceConnection, TaxReport, TaxReportDetail, TaxReportSummary, InvoiceListItem.'
- Some API methods may require specific roles for access.
- Subscription assignment requires the password or authorization code OAuth 2.0 grant
  type.
- Some objects may return additional metadata not specified in the response
- The retainable property must be set to true to keep the discount if payment plans
  change.
- All of the fields in the following tables are required.
- The checkoutSettings query fetches marketplace settings for checkout.
- Requires setup of roles for Marketplace Manager.
- Use correct partner code in headers for shopping cart operations
- The auth token can be included in requests via the `MP-Authorization` header.
- JWT is used for authenticating the platform extension with your API server.
- Uses access token for authentication — define ACCESS_TOKEN environment variable
- Endpoints require 'shoppingCartId' and 'itemId' as path parameters.
- Requires partner code in header for all requests
- The Product GraphQL APIs are currently in Early Availability (EA) status.
- You must complete the following prerequisites before you can send a user's metered
  usage to a marketplace.
- Refresh tokens are not supported.
- The state parameter is returned untouched.
- Uses OAuth2 with password grant type — requires username and password for token
  exchange.
- Default values for page size and sorting are applied to requests.
- Specify whether the dropdown list field value is required.
- Some endpoints may require specific roles.
- Client secret must be kept secure.
- The application must be authenticated using the client ID and secret.
- Some fields in the Invoice object changed data types.
- Includes various payment processing events and their statuses.
- Schema changes are frequent, check for updates regularly.
- Uses OAuth2 with authorization code — requires setup of connected app in api
- All calls to the Billing API occur under its endpoint URL
- Requires appropriate roles for access to various endpoints.
- Requires channel admin access to update subscriptions.
- A 409 Conflict response indicates the payment instrument already exists.
- Uses both JSON and XML formats for requests and responses
- Uses JSON/XML format for requests and responses
- Creation of subscription may involve multiple order lines including taxes.
- Several parameters are passed in using the parameters attribute of the order field.
- User must have a valid payment instrument in the database.
- Discounts can be retained when payment plans change if retainable property is set
  to true.
- Authorization header must include the access token in the format 'Bearer <access_token>'
- Requires setup of public developer key for some operations
- Content type for responses is application/xml or application/json depending on the
  endpoint.
- Filters results based on various parameters such as start date, status, currency,
  type, frequency, and more.
- Throttling may apply on the API usage
- The GraphQL API is currently in Preview status.
- Product publication is in Early Availability (EA) status.
- Use the correct partner parameter to access specific channel settings.
- Requires shoppingCartId to be specified in the path.
- The main identifier for the order is generated by the marketplace.
- Finds all locked carts in ACTIVE status and sends approval request notifications
  for each one.
- Subscription status may include values such as INITIALIZED, FAILED, ACTIVE, SUSPENDED,
  CANCELLED.
- Requires configuration of product-scoped OAuth2 authentication.
- AppDirect provides LLM-friendly documentation.
- YAML locale files are intended for localization.
- You can override labels using the i18n.overrides section.
- Review ARIA roles & labels, Keyboard navigation, Color & contrast after every library
  upgrade.
- OAuth 2.0 recommended for secure data access
- Uses OAuth2 with client credentials flow
- Uses OAuth2 with password flow
- APIs should perform well for the selected customers and at limited transactional
  volume for the targeted use cases.
- Requires setup of roles and permissions for accessing endpoints.
- The description of discount is a required field and must be at least 4 characters,
  but no longer than 255 characters.
- Filters subscriptions by various parameters like startDateFrom, status, currency,
  type, and frequency.
- Requires scopes for various roles for different actions.
- Requires setup of user-based token for search content.
- Some endpoints may require specific role authorizations.
- Ensure correct companyUuid and other path parameters are provided
- Requires a valid shopping cart ID for all operations.
- Requires setup of roles for accessing the API.
- Requires proper authorization scopes to access various endpoints.
- Filters results to include subscriptions created within specified dates.
- Endpoints for subscription management are being deprecated.
- Requires various roles for access control.
- Some endpoints may return null if data is not found
- Requires ROLE_CHANNEL_ADMIN for various operations.
- The Data Viewer includes configurations such as currency, locale, and logo.
- Marketplace may support different languages for localization.
- The .yml file must contain translations in the specified format.
- If you have recently upgraded your Toolkit to version 4.0 from an earlier version,
  you may receive warnings and error messages when you start it. For instructions
  on how to resolve these warnings and errors, see Upgrading to 4.0 and later.
- Responses typically return application/xml content type.
- Accept-Language header with Locale format is required for some endpoints.
- Use appropriate partner code for API requests.
- Responses contain detailed item information and associated metadata
- Uses Client Credentials grant type for authorization
- Refresh tokens expire after 30 days
- 'The following changes were made: The objects InvoiceLine and CreditMemoLine were
  updated with the fields balance and billToType.'
- The mutation freeTrialExtensionRequestEligibility was added.
- Breaking changes to preview APIs can be introduced throughout the preview program
  so it is strongly recommended that these APIs not be used in production deployments.
- API supports XML format.
- Default pagination is set to return 250 items.
- Free trials can be upgraded to paid subscriptions.
- When you use the vanilla Plaza theme (without custom components), you automatically
  receive every accessibility fix and enhancement.
- If no payment instrument exists for the user and company pair, a new one will be
  created.
- A 409 Conflict response indicates that the payment instrument already exists.
- Creates a subscription for a recurring flat rate edition with USER as a price per
  unit.
- OAuth 2.0 authentication requires an API client to exchange keys and secrets.
- You must configure the retainable property to true when creating or updating discounts.
- Fetch the access token and include it in the Authorization header.
- Fetch checkout settings using the checkoutSettings query.
- Use the activeCartOfUser query to fetch the active cart of a user during checkout.
- Finalize a purchase using the finalizeCart mutation.
- Mutations modify and return data.
- GraphQL uses a single endpoint for all requests.
- Requires setup of connected app in discount API
- Requires setup of roles for different API access levels.
- 'Accept-Language header required with Locale format: ''en-US'''
- Templates must be created in the UI before using the GraphQL APIs.
- Product APIs are in Early Availability status and have limitations.
- API client must use OAuth 2.0 with ROLE_DEVELOPER scope.
- Requires public developer key for certain operations.
- GraphQL APIs may not include detailed user error messages in the response unless
  specifically requested.
- Requires partner code in headers for all requests.
- Various endpoints require specific roles for access.
- Access requires specific roles depending on the operation.
- Localization files must use the format '<language>-<country>.yml'.
- Overrides section must identify the item according to its Data scheme.
- Requires different roles for different endpoints such as ROLE_RESELLER and ROLE_CHANNEL_ADMIN.
- All operations require Accept-Language header
- Multiple roles may be required for different endpoints
- The objects and mutations are based on the defined schema changes.
- All other functions for company, user, order, lead, purchase, and subscription custom
  attributes must be done through the UI.
- Response content type is application/xml for most endpoints.
- Requires setup of roles like ROLE_RESELLER for access
- The API requires proper authorization scopes for different operations.
- Some discounts may have restrictions on redemption.
- Ensure discount codes are validated before use.
- Some objects may return nulls in deeply nested fields.
- The .yml file must contain translations in a specified format.
- Custom resources must be added to the theme for specific use cases.
- AppDirect’s Storefront UI library is built and maintained to meet WCAG 2.1 AA.
- Uses OAuth2 with password flow — requires setup of connected app in api
- The access token expires after 12 hours.
- The object BalanceTransaction was updated to include a new field source.
- The enum DownloadEntityType was updated to include new fields.
- Requires setup of developer key for public access.
- OAuth2 setup is required
- Default limit for results is 250.
- Ensure to handle pagination for large datasets
- Requires setup of connected app in APPDIRECT
- Some responses may return 204 for successful operations
- Uses OAuth2 — requires setup of connected app in AppDirect.
- Uses XML format for requests and responses
- Handles both recurring and one-time subscriptions with various fees and taxes.
- You must configure the discount to be retainable if you want to keep it when payment
  plans change.
- Use test marketplace for initial testing.
- Authorization header must contain 'Bearer <access_token>'
- Uses GraphQL queries to fetch and mutate data related to checkout process
- Token has a short expiration time to reduce the impact of token theft or misuse.
- Access token must be passed as an environment variable ACCESS_TOKEN.
- Ensure that the `sfb-theme-components` library version is fixed.
- Ensure that your account representative has configured your marketplace to support
  different languages.
- If you have recently upgraded your Toolkit to version **4.0** from an earlier version,
  you may receive warnings and error messages when you start it. For instructions
  on how to resolve these warnings and errors, see Upgrading to 4.0 and later.
- If you created a theme using custom components that used toolkit version 4.x.x or
  earlier upgrading the UI library to version 0.0.352+ still means the 3rd Scenario
  applies.
- The default option text to display when no options were selected.
- 'The product list curated type: manual or dynamic.'
- 'The schema component type: PRODUCTS_LIST.'
- APIs use OAuth2 for authentication.
- OAuth 2.0 should be used for secure data access.
- The following changes were made to the API.
- The enum InvoiceLineType was added.
- New fields were added for various objects in the schema.
- A new input object WebhookConfigurationFilter has been added to filter webhook configurations.
- API supports OAuth2 for authentication.
- 'Status Code: 200 OK indicates a successful response'
- User updating the subscription must have channel admin access.
- Some parameters are optional and may be omitted.
- Response includes various user and company details.
- GraphQL Explorer uses your live data (including the Preview endpoint). Ensure that
  changes you make do not disrupt your business.
- 'HTTP Status Codes: 204 No Content subscription deleted, 404 Not Found if subscription
  is not present in the system'
- 'HTTP Status Codes: 200 OK on success'
- You must complete prerequisites before sending metered usage.
- You can create a discount through the API with the specified endpoint.
- The retainable property must be set in the API request to keep the discount when
  payment plans change.
- Some objects like MeteredUsage may return nulls in deeply nested fields
- Webhooks provide real-time notifications for system events.
- Requires setup of proper roles for access.
- User must have the appropriate roles to access membership data.
- Certain roles cannot be assigned through the API.
- Unexpected error can occur.
- Description of discount is required and must be at least 4 characters but no longer
  than 255 characters.
- Accept-Language header is required for all requests
- Accept-Language header with Locale format is required for all requests
- Requires ROLE_CHANNEL_ADMIN for access to certain endpoints.
- The API does not require authentication.
- The API supports XML response format.
- Filters results by various parameters including date ranges and status.
- Default sort field is 'PAYMENT_ID'.
- Default sort order is 'ASC'.
- Default start index is 0.
- Rate limit uses leaky bucket algorithm.
- Dynamic segments can be created and managed through the API.
- Channel settings can be retrieved and updated via the API.
- Shopping carts can be listed, created, and managed through the API.
- Responses include common status codes like 200, 204, 401.
- Requires ROLE_RESELLER authorization.
- User must provide consumer key and secret from the applications profile.
- Localization files must follow the naming convention of <language>-<country>.yml
- Use the r() function to reference assets in theme templates
- HTML and CSS are encapsulated, and you cannot use any styles that come from your
  base theme.
- Ensure that you test your changes thoroughly when modifying header or footer position.
- The schema component type is LOGO.
- Default selected logo type can be 'lightLogo', 'darkLogo', or 'noLogo'.
- The default switch option.
- API requires OAuth authentication for secure data access.
- Uses Client Credentials grant type — requires client ID and secret.
- Schema changes may affect the integration over time.
- Uses OAuth 2.0 for API authentication
- 'All preview schemas are accessible through the following endpoint: https://<marketplaceHost>/api/graphql/preview'
- 'The official GA GraphQL schema is accessible through the following endpoint: https://<marketplaceHost>/api/graphql'
- Users can be assigned to subscriptions through OAuth authenticated API.
- Ensure to handle rate limits as per the leaky bucket algorithm.
- Uses OAuth2 with client credentials — requires setup of API client
- 'The below objects were added: SubscriptionCancellationIdInvalidError, SubscriptionCancellationServerError,
  SubscriptionCancellationReasonIdValidationError.'
- 'The union TriggerSubscriptionCancellationProcessError was udpated with the following
  types: SubscriptionCancellationRequestDateRequiredError, SubscriptionCancellationIdInvalidError,
  SubscriptionCancellationServerError.'
- 'The union SubscriptionCancellationReasonErrors was updated with the following types:
  SubscriptionCancellationReasonIdValidationError, SubscriptionCancellationReasonDoesNotExist.'
- The queries and mutations related to pricing plans were updated to allow null values
  in certain fields.
- Payment instruments must be created for users before creating subscriptions.
- All calls to the Billing API occur under its endpoint URL.
- Uses OAuth2 with refresh token — requires setup of connected app in app_direct_api
- Response includes both JSON and XML formats.
- 'Status Code: 201 Created indicates successful creation of a subscription'
- If a payment instrument exists for the given user and company pair, a 409 Conflict
  response is received.
- Responses may vary based on the subscription type and parameters used.
- Uses JSON and XML formats for API requests and responses.
- You can create, update, retrieve, list, and delete discounts.
- Requires setup of API clients in AppDirect Marketplace.
- If a discount is created with retainable set to true, it will be retained when payment
  plans change.
- The access token is included in the header section of each query and mutation.
- Fulfillment UUID and shipping quote ID can be retrieved from the API response of
  fetching or saving shipping address.
- Ensure to handle user errors for finalizeCart mutation.
- The `@hubspot/api-client` package is at version 13.0.0.
- Custom pricing feature is currently in Early Availability (EA) status.
- Marketplace Managers can track bulk action status with setMarketplacePricesProcess.
- The application status can be tracked through the onboarding process.
- The auth token can be included in your extension app request.
- The HubSpot access token is available via an ACCESS_TOKEN environment variable.
- Important features are in Early Availability (EA) status.
- Important features are currently in Early Availability status.
- Must complete prerequisites before sending usage data.
- Delayed invoicing is recommended for metered usage.
- Delayed invoicing is recommended for usage products.
- The base URL is identified in the marketplace events.
- Ensure all prerequisites are completed before posting usage data.
- A single edition cannot be configured for both preconfigured and custom metered
  usage.
- The Search API is currently in Early Availability status.
- The GraphQL Search API for feed queries is currently in Early Availability status
  for customers on the AWS-US cluster.
- You cannot use the combined pricing model method for usage for products configured
  with volume pricing.
- This integration guide supports physical goods.
- This integration guide supports physical goods. The physical goods product category
  is in Early Availability status. Features in Early Availability status are only
  available in production to a limited number of customers based on fit with specific
  use cases.
- Uses Client Credentials grant type with ROLE_PARTNER and ROLE_PARTNER_READ scopes.
- You must create a company membership before creating a company.
- A user is deleted when all company memberships are removed from a user.
- Webhook notifications for subscriptions and orders are sent during various actions.
- User and company management functionalities available.
- API requires authentication via API Key.
- Requires specific roles for accessing different endpoints
- Requires OAuth2 authentication for all endpoints.
- Anonymous context can be used to create a PRODUCT or COMPANY lead without authentication.
- Requires appropriate roles for accessing different endpoints.
- Default count for pagination is 250
- Sort field defaults to PAYMENT_ID and sort order defaults to ASC
- Response content type is application/xml for most endpoints
- Default pagination count is 250.
- Uses specific version of sfb-theme-components as part of your theme.
- Ensure to check compatibility of custom components with latest UI library.
- The radio button group field value is required.
- Ensure API keys are securely stored and managed.
- API supports both REST and GraphQL interfaces.
- API requests without authentication will fail.
- CHECKBOX types display a control that provides a menu of options through checkboxes
  group.
- Access tokens must be included in every API request
- Requires setup of client credentials for authorization
- Refresh tokens can be used to obtain new access tokens.
- The user updating the subscription does not necessarily have to be the original
  purchaser of the product.
- All preview schemas are accessible through the https://<marketplaceHost>/api/graphql/preview
  endpoint.
- GraphQL uses a single endpoint for all requests, instead of unique endpoints for
  each request.
- Uses OAuth2 for authentication — requires setup of connected app in AppDirect
- Requires a valid user account ID and company ID for accessing subscription details
- Response format may vary between JSON and XML
- Handles subscription details including user and company information.
- AppDirect’s Checkout APIs can be leveraged to build transactional flows.
- If no payment instrument exists, one will be created and set as default.
- 409 Conflict response if the payment instrument already exists.
- Authorization token must be included in the header of each request.
- Fulfillment status can be UNFULFILLED
- Shipping quotes may include multiple options
- Creation of subscriptions requires specific payment plan and order lines structure.
- Supports various operations related to cart management.
- Uses OAuth2
- Uses OAuth2 — requires setup of connected app in appdirect
- Supports both JSON and XML request formats
- The unique identifier for your new subscription will be returned in the response.
- Company and user identifiers must be obtained via API.
- Usage can be submitted retroactively
- Discount management allows for the creation and management of discount codes
- You can create a discount through the API.
- Includes both GraphQL and REST APIs for various functionalities.
- This API supports fetching and finalizing cart details.
- Description of discount. Required field. Must be at least 4 characters, but no longer
  than 255 characters.
- Some of our REST APIs require a CSRF token to be passed in the header.
- Description of discount is required and must be between 4 and 255 characters.
- 'Product publication is a two-step process: publishing and adding to the marketplace.'
- Product publication involves capturing a snapshot of a product at a particular time
  period.
- Ensure you are using a locale that is compatible with your marketplace.
- Follow the IETF BCP 47 standard for language tags.
- You cannot submit historic adjustments for volume pricing usage.
- Required headers must include Accept-Language with Locale format (e.g., en-US)
- If the shipper does not support address validation, the validate_address endpoint
  must return HTTP 501.
- The Shipping Connector API is not enabled by default.
- Physical goods product category is in Early Availability status.
- Credentials are OAuth2 Client Credentials with fine-grained permissions.
- Requires various roles for accessing opportunities like ROLE_RESELLER, ROLE_SALES_SUPPORT,
  etc.
- Users must be associated with at least one company.
- You cannot delete a user directly; must delete their last company membership.
- Users cannot be deleted directly; they are deleted when their last company memberships
  are removed.
- User information can be updated using both GraphQL and REST APIs.
- Webhook notifications are sent for order and invoice events.
- Verify that the webhook URL is correctly configured in the AppDirect Developer Portal.
- Check the server logs for any incoming requests from AppDirect.
- Ensure that the server hosting the webhook is accessible from the internet and is
  not blocked by firewalls or security settings.
- Ensure the webhook URL is using the correct HTTP method (e.g., POST) and supports
  HTTPS if required.
- Check the payload of the webhook request to ensure that all the necessary fields
  and data are present.
- Verify that you have subscribed to the correct events in the Developer Portal.
- Compare the received payload with the documentation to ensure you're parsing the
  data correctly.
- Ensure that missing fields, if any, are optional.
- Validate the signature included in the webhook request to ensure its authenticity.
- Check if you are using the correct secret or key to verify the signature.
- Ensure that the webhook endpoint is secured and only AppDirect requests are accepted.
- Verify that the access token is valid and has sufficient permissions if you are
  using OAuth-based authentication.
- Check the response codes and error messages returned by the webhook endpoint.
- Review the documentation to understand the possible error scenarios and their corresponding
  resolutions.
- Test the webhook endpoint using tools like cURL or Postman to reproduce and troubleshoot
  the issue locally.
- Reach out to AppDirect support for further assistance if the issue persists.
- Confirm that your webhook endpoint is always available and responsive.
- Monitor the network and server infrastructure for any connectivity or performance
  issues.
- Consider implementing a retry mechanism for failed webhook requests to ensure event
  delivery.
- Check for any delays on the AppDirect side and contact support for clarification
  if events continue to be delayed.
- Ensure OAuth credentials are correctly set up
- Requires ROLE_CHANNEL_ADMIN for access to Marketplace Manager functionalities.
- Use the correct partner code for accessing shopping cart.
- Ensure proper authorization setup for accessing settings.
- Default page size is 20.
- Default page number is 0.
- Requires multiple roles for different actions.
- SPACER types display a vertical space of 24px.
- Uses OAuth2 with client credentials — requires setup of connected app in AppDirect
- Uses OAuth2 with password grant type — requires setup of client ID and secret.
- Both Preview and Production endpoints affect live marketplace data.
- Uses subscription API to manage user subscriptions
- Filters can be applied based on various parameters like startDateFrom, startDateTo,
  status, etc.
- Default pagination is set to 250 results per page.
- 'HTTP Status Codes: 200 OK on success; 404 Not Found if no product with the specified
  productId exists in the system.'
- The API supports creating and managing subscriptions.
- Responses may be in JSON or XML format
- Uses JSON format for requests.
- Endpoints require valid shoppingCartId and itemId parameters.
- Responses include various types of cart data based on the endpoint.
- The unique discount identifier in the response is required for any further API calls
  to manage the discount.
- Uses OAuth2 and requires setup of client credentials.
- Allows fetching checkout settings, active cart, and finalizing a cart.
- Requires setup of connected app in appReseller.
- The API supports localization, and YAML locale files must be created for different
  languages.
- The YAML locale files are primarily intended for localization, so you can translate
  the strings and labels of your theme into different languages.
- You can override labels in the YAML file for both Plaza and Classic themes.
- HTML and CSS are encapsulated and cannot use styles from the base theme.
- Ensure to test changes thoroughly when modifying header or footer position.
- The label text for the input field.
- The placeholder text for the input field.
- The default value text for the input field.
- 'The schema component type: INPUT.'
- Specify whether the input field value is required.
- The regex expression to validate the input field value.
- The error validation message text.
- The label text for the multi-line plain-text field.
- The placeholder text for multi-line plain-text field.
- Requires setup of roles for proper access
- Some endpoints return paginated results
- AppDirect recommends using OAuth 2.0.
- Uses Client Credentials grant type for authentication.
- Some objects were added recently, including InvoicePaymentTerms.
- Once a subscription has been created, you may cancel the subscription through the
  API.
- Changing a subscription to a one time edition requires a valid payment plan ID.
- API requires setup of connected app in api
- The API supports features for managing user groups and invitations.
- Response includes details about the subscription, order, and pricing
- Requires Accept-Language header in 'en-US' format
- The checkout process allows fetching settings, active cart details, and finalizing
  a cart.
- Authentication requires setup of API client with specified scopes.
- Requires ROLE_CHANNEL_ADMIN for accessing transfer platform configurations.
- The only purpose of the JWT token is to authenticate the platform extension with
  your API server.
- Filters available for subscriptions include startDateFrom, startDateTo, status,
  currency, type, frequency, orderReferenceCode, applicationIds, fromCreationDate,
  toCreationDate.
- You must complete prerequisites before creating products using GraphQL APIs.
- Use proper partner code in headers for requests related to shopping carts.
- You must complete the prerequisites before you can send a user's metered usage to
  a marketplace.
- 'Avoid usage and invoice adjustments: Delayed invoicing is recommended for usage
  products.'
- Usage for products configured with volume pricing must not be sent in API requests
  with usage configured for other pricing models.
- This integration guide supports physical goods. The physical goods product category
  is in Early Availability status.
- Contact your AppDirect technical representative for enabling features.
- Price Change API supports authentication with fine-grained permissions.
- You can update the entire user profile at once (PUT) or do a partial update (PATCH).
- Webhook integration may require specific configurations.
- AppDirect webhook events are retained for a maximum of 90 days after creation.
- Webhook endpoint listeners have a maximum of 30 seconds to reply with an HTTP 200
  OK status.
- AppDirect webhooks are designed to handle delivery failures with an automatic retry
  mechanism based on an exponential backoff strategy.
- Ensure correct scopes are assigned for OAuth
- HTML and CSS are encapsulated and cannot use styles from base theme.
- The header and footer have their own components that cannot be modified.
- To create a custom page, enter the path without the .html extension.
- Requires specific roles for access based on the context (Reseller or Reseller Manager).
- Marketplace Manager role cannot be set through the API.
- Temporary passwords are emailed to recipients specified in user creation.
- DROPDOWN type is used for the height selection.
- Read notification common elements successfully.
- Store API keys securely.
- Requires proper vendor setup before fetching discounts.
- Ensure that OAuth scopes include 'discount_read'.
- Default value for autoApply is true.
- Description is a required field and must be at least 4 characters.
- DiscountType is required.
- PricingUnit is an enum with several predefined values.
- 'The following changes were made: The objects InvoiceLine and CreditMemoLine were
  updated with the fields balance and billToType. The enum BillToType was added.'
- OAuth scopes required for various endpoints.
- Rate limits may apply to API calls.
- 'Caution: Changes affect live marketplace data.'
- Users of the GraphQL API will be notified at least six months before schema fields
  and operations are retired.
- The unique identifier for the subscription can be obtained from the response when
  the subscription is created or by listing subscriptions.
- Changing and managing subscriptions is handled via REST API
- Status codes may vary based on request success or failure
- Creating a payment instrument is required for paid products.
- Must create a payment instrument before creating subscriptions via the Billing API.
- Uses OAuth2 with a connected app setup in appdirect
- Uses XML and JSON format for requests and responses
- You can create a discount through the API with the required properties.
- The retainable property is set to true to keep discounts when payment plans change.
- Supports metered usage V1 API for billing purposes.
- Requires Marketplace Manager role to access and manage API clients.
- Access token must be included in the Authorization header.
- activeCartOfUser query can be used to fetch the active cart of a user.
- finalizeCart mutation is used to finalize a purchase.
- The validateCart mutation triggers validations for cart items.
- AppDirect Functions can only be invoked as webhook listeners.
- API supports filtering subscriptions by various parameters such as status and creation
  date.
- Must configure product-scoped OAuth2 authentication.
- Requires setup of roles for API access
- Use OAuth2 with refresh token — requires setup of connected app in AppDirect
- A YAML locale file is a .yml file that contains a set of translations for the text
  strings used in a theme template file.
- The YAML locale files are primarily intended for localization, so you can translate
  the strings and labels of your theme into different languages
- You can also use a YAML file to override some labels, as determined by your base
  theme
- SLIDES types display a control that manages slides for the Carousel component.
- The application must be authenticated using basic authentication with client ID
  and secret.
- Requires appropriate roles for access to certain endpoints.
- Schema changes occur regularly, check for updates.
- New input and output objects are frequently added.
- 'Caution: Both Preview and Production endpoints affect live marketplace data.'
- Rate limits apply based on the leaky bucket algorithm
- Subscription status may vary based on account configuration
- Max users limit is 11.
- Active subscriptions can be downgraded.
- 'Accept-Language header is required in the format: ''en-US'''
- More than one discount can be applied to an opportunity, but only one per call.
- If a payment instrument already exists for the user and company pair, a 409 Conflict
  response will be returned.
- Uses no authentication
- You can create a discount through the API with the provided endpoint.
- Filters available for subscription queries include startDateFrom, startDateTo, status,
  currency, type, frequency, orderReferenceCode, applicationIds, fromCreationDate,
  toCreationDate, sortField, sortOrder, and start.
- Use your test marketplace initially.
- Authorization:Bearer access_token must be included in the header.
- Access token needs to be passed as an environment variable (ACCESS_TOKEN).
- API requires partner code for some endpoints
- Requires the partner code in the header for certain operations.
- You must complete prerequisites before sending usage.
- Invoicing for metered usage is delayed by a configured number of days when delayed
  invoicing is enabled.
- A shipping connector can serve multiple marketplaces.
- Users must be part of at least one company (account).
- You cannot delete a company directly using an API.
- REST API endpoints refer to the term ‘company’ whereas GraphQL APIs use ‘account.’
- Webhook endpoints should be configured in such a way that responses are received
  as quickly as possible with a 2XX status code.
- For REMOVED or DELETED events, the deleted resource is not included in the payload
  because AppDirect does not guarantee that the resource exists after deletion.
- AppDirect REST and GraphQL APIs use an OAuth-authenticated interface.
- Uses OAuth2 password flow
- The following changes were made on May 21, 2025.
- All requests use the POST method.
- Ensure proper authorization scopes are set.
- A valid JSON or XML object with payment instrument data is required for creating
  or updating payment instruments.
- If a payment instrument already exists for the specified user and company, a 409
  Conflict response will be returned.
- OrderLines can have multiple types including ITEM, DISCOUNT, and TAX.
- Creating a tiered recurring subscription with price per unit
- Creating a recurring flat rate subscription with set up fees
- Requires user and company IDs in the request
- All responses are in JSON format
- We recommend that you use your test marketplace initially.
- Filters can be applied to subscriptions based on various parameters such as start
  date, status, and currency.
- Ensure to pass correct userId and accountId when querying activeCartOfUser.
- FinalizeCart mutation requires agreeing to terms.
- Accept-Language header with Locale format is required for certain operations.
- Requires ROLE_CHANNEL_ADMIN access for all operations.
- Ensure partner information is included in the requests.
- CORS needs to be enabled on your API server for external requests.
- Access token must be passed as an environment variable
- Webhook payload properties are accessed through the event parameter
- Ensure correct subscriptionUuid and userUuid are provided.
- API requires specific roles to access different endpoints.
- Use the developer tool to view data and configurations.
- To view the execution logs for the function, check the Function's page for the last
  invocation.
- Ensure your account representative has configured your marketplace to support different
  languages.
- 'The schema component type: CHECKBOX.'
- The label text for the slider field.
- The default value of the slider field.
- To publish a product, provide an Overview image in the Profile.
- When you want to modify a theme, make changes in the SASS files. Do not make changes
  directly in the CSS files.
- Uses OAuth2 with password grant type for authorization.
- 'The union TriggerSubscriptionCancellationProcessError was updated with the following
  types: SubscriptionCancellationRequestDateRequiredError, SubscriptionCancellationIdInvalidError,
  SubscriptionCancellationServerError.'
- 'The following objects were added: InvoicePaymentTerms, InvoiceBillingCharge, InvoiceRecordedBillingCharge,
  InvoiceConnection, TaxReport, TaxReportDetail, TaxReportSummary, InvoiceListItem.'
- Schema changes have been documented on various dates, detailing updates to objects,
  enums, mutations, and input objects.
- Be careful if you are making any changes and consider using a test environment if
  you have one.
- Requires setup of roles like ROLE_RESELLER and ROLE_RESELLER_MANAGER to access various
  endpoints.
- The base currency filter is optional.
- The counter currency filter is optional.
- Requires channel admin access to update subscription.
- 'Status Code: 201 Created indicates successful creation of subscription.'
- Beyond the most basic case of creating a subscription, it is possible to create
  several types of subscriptions, depending on the product and its available editions.
- Additionally, subscription creation may take place through reseller management rather
  than through the marketplace.
- You can create, update, delete, and retrieve discounts through the API.
- Use validateCart mutation for individual or collective item validations.
- Polling can be done for pending validations.
- A new HubSpot company ID is returned to indicate successful creation.
- For REST API references, refer to Marketplace Product API.
- Features in Early Availability status are only available in production to a limited
  number of customers.
- Contact your AppDirect technical representative for more information.
- Uses OAuth2 with Client Credentials — requires setup of API Client with appropriate
  roles.
- Companies can be enabled or disabled but cannot be deleted.
- Users must be associated with at least one account.
- The first user of a new company must be created when the company is created.
- Webhook URL must be correctly configured in the AppDirect Developer Portal.
- Ensure the server hosting the webhook is accessible from the internet.
- If more time is needed to process a request, it should be done asynchronously after
  a response has been returned.
- Webhook notifications are sent via HTTP POST requests in JSON format.
- The default value of a webhook authentication type is None.
- The payload includes additional attributes that do not appear in the REST API documentation.
- Requires valid companyId and userId parameters for all requests.
- Ensure mor object is correctly populated for all calls.
- Responses are in XML format.
- Success responses return application/json
- Marketplace Managers require ROLE_CHANNEL_ADMIN for access.
- Requires shopping cart ID for most operations.
- Responses vary by operation and may include specific error codes.
- Uses specific headers for requests related to shopping carts
- Requires setup of OAuth2 configuration for authentication.
- When using custom components, automatic updates are not received.
- DROPDOWN type supports required and defaultValue properties
- Currently, the conditional type is `isDisabled` or `isVisible`.
- API uses OAuth2 authentication.
- Ensure to handle token expiration properly.
- Rate limit is 20 requests per minute with a leak rate of 4 requests per second.
- Changing a subscription with price per unit - upgrade
- If a payment instrument already exists for the user and company, a 409 Conflict
  response will be returned.
- Some objects may have nested structures that require special handling
- Creating a recurring subscription requires paymentPlanId
- Uses XML for request and response format
- OAuth1 authentication using HMAC-SHA1
- The retainable property must be set to true to keep the discount when payment plans
  change.
- Obtain a new access token or use one that is already generated.
- Authorization header should be set as 'Bearer <access_token>'
- Use checkoutSettings query to fetch marketplace settings.
- Use activeCartOfUser query to fetch the active cart of a user.
- Use finalizeCart mutation to finalize a purchase.
- Some operations may require specific roles such as Marketplace Manager.
- Webhook payload properties must be extracted by navigating the object structure.
- Define the ACCESS_TOKEN environment variable with your real HubSpot access token
  value.
- The GraphQL API for Notifications is currently in Preview status.
- Requires appropriate roles for access to each endpoint.
- Requires OAuth2 authentication with proper roles for access
- Endpoints may require additional query parameters based on context
- Filters subscriptions by various fields including dates, status, and currency.
- Requires valid shoppingCartId for all endpoints.
- Responses may vary based on the shopping cart's state.
- Subscription statuses include INITIALIZED, FAILED, FREE_TRIAL, FREE_TRIAL_EXPIRED,
  ACTIVE, SUSPENDED, or CANCELLED.
- This API requires specific roles such as ROLE_RESELLER and ROLE_RESELLER_MANAGER
  for access.
- Localization files must be named using language and country codes.
- Static assets are linked through a CDN after theme upload.
- OAuth 2.0 is recommended for authentication.
- The access token and, optionally, the refresh token are returned.
- Uses OAuth2 with password grant type — requires setup of connected app in AppDirect
- If a payment instrument exists for the given user and company pair, a 409 Conflict
  response will be received.
- Uses XML for subscription details
- Response includes various details about the subscription, such as user and company
  information.
- Use valid JSON or XML object containing subscription data for creating or updating
  subscriptions.
- Each discount has a unique identifier.
- 'The access token is included in the header section of each query and mutation as
  Authorization: Bearer <access_token>.'
- The HubSpot access token must be retrieved from environment variables.
- Currently in Preview status for the Notifications API and Early Availability for
  Product API.
- If you're creating a product within a partner role, you'll be required to include
  a vendor ID to identify which company the product will be associated with.
- The physical goods product category is in Early Availability status. Features in
  Early Availability status are only available in production to a limited number of
  customers based on fit with specific use cases.
- Ensure to use the correct content type when sending requests.
- Requires specific role scopes for authorization.
- Requires specific roles such as ROLE_SYS_ADMIN for access.
- Some endpoints may require query parameters.
- Filters results based on various parameters including start and end dates, statuses,
  and types.
- Shopping carts can be filtered by various parameters.
- Dynamic segments require specific configurations.
- Requires shoppingCartId for operations
- Responses include purchaseId for finalizing
- This API requires proper OAuth2 setup to access subscription data.
- Localization files must use two-letter ISO 639-1 and ISO 3166-1 codes with .yml
  extension.
- You can override meta tags as described in the documentation.
- Open Graph tags for Facebook can be added to control how content appears on Facebook.
- Cards markup for Twitter can be added to control how content appears on Twitter.
- Uses custom components — requires manual compliance checks after updates.
- The client credentials grant type should be used to obtain access tokens.
- The input object AccountDetailsInput was updated with the field firstbaseAccountDetailsInput.
- The queries transferUnitEligibleSubscriptions and transferUnitEligibleEditions were
  updated with the scope billing.subscription.read.instance.
- API supports multiple versions for different services
- Uses OAuth2 with bearer token for authentication.
- User canceling the subscription does not need to be the original purchaser.
- If a payment instrument already exists, a 409 Conflict response will be received.
- The AppDirect Discount API allows creating and managing discount codes.
- The retainable property has no effect if the discount is still in effect for the
  product.
- All fields in the required tables are mandatory.
- The auth token is a JWT that represents the user's session in the marketplace.
- The @hubspot/api-client package is at version 13.0.0.
- Environment variables should be used to store secret configuration values.
- The product provider must have an API client with Developer access.
- Feature is currently in Early Availability (EA) status.
- Requires scopes ROLE_RESELLER or ROLE_RESELLER_MANAGER for access.
- Some endpoints require specific roles to access various functionalities.
- Requires proper authorization with user roles.
- Filters are dynamic and require specific parameters to function correctly.
- Some endpoints may require specific query parameters.
- Responses may vary based on the subscription status.
- Requires setup of product-scoped OAuth2 authentication for the application.
- Rate limits apply to API calls.
- Various schema changes have been made to objects and enums.
- New objects such as InvoicePaymentTerms and InvoiceBillingCharge were added.
- Creating a payment instrument is required if you are creating a subscription for
  a paid product.
- If a payment instrument already exists, a 409 Conflict response is returned.
- The API supports both JSON and XML formats for requests and responses.
- Test the library using your test marketplace before deploying to production.
- Use a valid access token in the Authorization header as 'Bearer <access_token>'
- Ensure to handle errors related to invalid discount codes or request validation
  issues.
- JWT token has a short expiration time to reduce the impact of token theft or misuse.
- The '@hubspot/api-client' package is at version 13.0.0.
- The Inventory for a physical product edition is optional.
- An empty HTTP response with an HTTP status code 202 (Accepted) is sent if there
  is no error.
- API requires various roles for access depending on the operation.
- Request payload requires 'content', 'directSales', 'enabled', 'id', 'locale', and
  'type' fields.
- Filters for various parameters such as startDateFrom, startDateTo, status, currency,
  etc.
- Requires setup of Marketplace Manager roles.
- Application UUID = Product UUID
- Supports localization through YAML files.
- Product IDs may differ by environment.
- You must add custom images for each product in the livechat list.
- The Storefront Toolkit supports Open Graph tags to control how content appears on
  Facebook.
- The developer tool supports Cards markup for Twitter to control how content appears
  on Twitter.
- 'For additional details about how to build pages, see the following topics: Page
  structure, Templating language features, Customized data'
- The label text for the dropdown list field is configurable.
- The dropdown list field value is optional.
- Ensure to include correct scopes for API access
- The following changes were made on various dates in 2025.
- The union TriggerSubscriptionCancellationProcessError was updated.
- The object ScheduledAdobeOrderResponse was updated.
- Enhancements and bug fixes will be available through the schema on the production
  endpoint.
- Rate limits define the maximum number of requests that are allowed by a client application
  per minute, using a leaky bucket algorithm.
- Uses XML for requests and responses
- Use the test marketplace for implementation testing
- GraphQL API is in Early Availability status, usage may change.
- CORS needs to be enabled on your API server
- JWT is used to authenticate the platform extension with your API server
- The access token should be defined in environment variables and accessed via process.env.ACCESS_TOKEN.
- GraphQL Explorer uses your live data.
- Required parameters include company name, contact email, lead type, and partner.
- Endpoint for submitting usage data is /integration/v1/billing/usage
- For billing usage V2, use /integration/v2/billing/usage
- Filters and pagination parameters are available for API queries.
- Requires setup of connected app for OAuth2
- Requires setup of Marketplace Manager role.
- 'Localization files must be in the format <page>: <string>: <string value>'
- Overrides require an 'i18n.overrides' section in the YAML file
- HTML and CSS are encapsulated — you cannot use any styles that come from your base
  theme.
- Custom components will not inherit new fixes after installation.
- Review ARIA roles & labels, keyboard navigation, color & contrast after upgrades.
- New features of the AppDirect GraphQL API might be made available as preview product
  offerings.
- The user updating the subscription does not necessarily have to be the original
  purchaser.
- If no payment instrument exists, a new one will be created.
- If a payment instrument exists with a different method, it will be created with
  is_default setting.
- The subscription service supports both JSON and XML formats.
- Responses include a variety of data fields related to subscriptions
- You can create a discount by setting retainable to true.
- You can only have one discount per edition at a time.
- Requires Marketplace Manager user role for API access
- Access token is included in the header of each request
- The checkoutSettings query fetches various settings relevant to the Checkout process.
- The activeCartOfUser query retrieves the user's active cart.
- The finalizeCart mutation finalizes the purchase.
- 'Important: Some APIs are in Early Availability status.'
- The auth token can be included in the request header.
- The access token is available via an ACCESS_TOKEN environment variable.
- This feature is currently in Early Availability (EA) status. For more information,
  see GraphQL API policy.
- To enable Company Sync, contact your AppDirect technical representative.
- Supports sending preconfigured and custom metered usage.
- Requires authorization for most endpoints.
- Ensure CSV files are in the correct format for uploads.
- Some discount fields may return null values
- Requires role-based access for various endpoints.
- Accept-Language header is required
- Some vendors may exclude required fields from the response
- Accept-Language header is required for all endpoints.
- Requires setup of connected app in the AppDirect platform.
- Backup and branch before upgrading components.
- OAuth 2.0 client authentication requires a client ID and secret.
- Refer to the latest schema changes for updated field definitions.
- 'Rate limits: 20 requests per minute with a leak rate of 4 requests per second.'
- Subscription management requires channel admin access.
- Responses may be in JSON or XML format.
- Requires specific payment plan setup for subscriptions
- Creating a subscription requires specific parameters including paymentPlanId and
  orderLines.
- Access token is required for HubSpot APIs.
- Environment variables should be used for sensitive information.
- Requires setup of OAuth roles for access.
- Required header Accept-Language must be formatted as 'en-US'.
- 'Requires specific roles for access: ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN,
  ROLE_RESELLER_MANAGER, ROLE_PARTNER'
- Requires setup of developer key for tokenizing payment methods.
- Filters results by various order attributes such as startDateFrom, status, currency,
  etc.
- Some responses may contain nulls in certain fields
- Localization support requires YAML locale files in the theme /translations folder.
- You can override some labels, as determined by your base theme.
- The union TriggerSubscriptionCancellationProcessError was updated with specific
  error types.
- 'The following changes were made to the Invoice object: data types of various fields
  were changed.'
- Multiple objects and enums have been added as part of schema changes.
- Uses OAuth2 with password grant type for authentication.
- Handles subscriptions with varying user counts and pricing structures.
- Uses both JSON and XML formats for requests and responses.
- If a payment instrument exists for the given user and company pair, a 409 Conflict
  response will be returned.
- Uses OAuth2 with refresh token.
- The API allows various subscription types including free trials and discounted subscriptions.
- The retainable property has no effect when changing only the number of units in
  an edition.
- Access token must be included in the Authorization header as 'Bearer access_token'.
- Use the specified payload format for requests.
- The activeCartOfUser query fetches the active cart of a user in a marketplace.
- The finalizeCart mutation is used to finalize a purchase and place an order.
- Webhook payload properties can be extracted by navigating the object structure
- Not all the settings might apply to your product, as marketplace configuration,
  product type, and product configuration determine which settings apply.
- Some usage events may be subject to specific product configurations.
- Some discounts may have additional restrictions on usage.
- Ensure proper roles and permissions are assigned
- Required scopes include ROLE_RESELLER, ROLE_SALES_SUPPORT, ROLE_CHANNEL_ADMIN, ROLE_RESELLER_MANAGER,
  and ROLE_PARTNER.
- Requires valid companyId and userId for operations.
- Filters can be applied to refine the results based on various criteria.
- Authorization requires specific roles such as ROLE_RESELLER for accessing transfers.
- Requires valid shopping cart ID for all operations.
- Responses may vary based on the shopping cart state.
- Ensure to handle pagination for large result sets.
- Authentication must be handled before making API calls.
- Localization files must be added for different languages.
- The YAML locale files must use the language and country codes with the .yml extension.
- HTML and CSS are encapsulated — Every rule is encapsulated post processing, and
  you cannot use any styles that come from your base theme.
- Only use HTML, CSS, or JavaScript — Template utilities (macros, filters, and so
  on) are not available.
- Use caution when modifying header or footer position or display properties, because
  such changes can interact with page elements across the platform beyond the storefront.
- When Custom Components are installed using the sfb-toolkit components command a
  specific version of our UI library is being installed.
- If new features/Custom Components are added that reuse/build on top of our UI library,
  those customizations will not be at risk of breaking due to interdependencies when
  a new version of our UI library is released.
- OAuth 2.0 is recommended and OAuth 1.0 was deprecated on 1 December 2020.
- 'The below objects were added: SubscriptionCancellationIdInvalidError, SubscriptionCancellationServerError,
  SubscriptionCancellationReasonIdValidationError'
- The union TriggerSubscriptionCancellationProcessError was updated with SubscriptionCancellationRequestDateRequiredError,
  SubscriptionCancellationIdInvalidError, SubscriptionCancellationServerError
- The union SubscriptionCancellationReasonErrors was updated with SubscriptionCancellationReasonIdValidationError,
  SubscriptionCancellationReasonDoesNotExist
- Be careful when making changes in the GraphQL Explorer as it affects live marketplace
  data.
- Once you have a created valid subscription, you can cancel that subscription through
  the API.
- Uses XML format for both requests and responses.
- Requires specific setup of connected app in the API
- Creating a recurring subscription requires specifying order details including payment
  plan and order lines.
- Authorization requires OAuth1 with specific parameters.
- Use this API to create and manage subscriptions.
- 'Authorization: Bearer <access_token> is required for each query and mutation.'
- Fetch the details of an active cart using the activeCartOfUser query.
- Finalize a cart using the finalizeCart mutation.
- When adjusting prices on the marketplace, the marketplace owner bears responsibility
  for meeting financial obligations.
- Access token must be provided via environment variable ACCESS_TOKEN
- GraphQL tools must be enabled to access the Explorer and Introspection features.
- GraphQL API is currently in Preview status.
- 'Avoid usage and invoice adjustments: We recommend that delayed invoicing is enabled
  for usage products.'
- Marketplaces use the Metered usage V1 API, Metered usage V2 API, or both, to support
  metered usage billing.
- Requires appropriate role-based access for various endpoints.
- Requires various roles for access depending on the operation.
- Custom components will not inherit new fixes after upgrade.
- Validation pattern is /^[a-zA-Z0-9 ]+$/gm.
- The API requires OAuth authentication for secure access.
- Ensure that all API requests are properly scoped.
- Requires setup of client credentials for access token
- Uses OAuth2 with password — requires setup of connected app in api
- Uses Resource Owner Password Credentials grant type for authentication.
- Some queries may require additional permissions based on user roles.
- Schema introspection is not currently supported in the Preview release of the AppDirect
  GraphQL API.
- 'Rate limits: 20 requests per minute, with a leak rate of 4 requests per second.'
- Supports OAuth-authenticated REST interface
- The API returns data in both JSON and XML formats.
- Status codes indicate success with 200 OK
- You can create a discount with the required properties.
- Only credit cards are supported as payment method types.
- Marketplace owner bears responsibility for meeting financial obligations.
- The JWT token has a short expiration time to reduce the impact of token theft or
  misuse.
- Uses HubSpot API client with access token — requires environment variable ACCESS_TOKEN
- The API and Development Tools Access window with GraphQL Explorer, GraphQL Mutations,
  and GraphQL Introspection enabled.
- The Product API is currently in Early Availability (EA) status.
- Volume pricing adjustments are not supported.
- Cannot use combined pricing model for usage for products configured with volume
  pricing.
- The Price Change API’s Authentication uses the Client Credentials grant type with
  ROLE_PARTNER and ROLE_PARTNER_READ scopes.
- Companies cannot be deleted but can be disabled.
- Users must be part of at least one company.
- User accounts are deleted when their last company memberships are deleted.
- A security feature checks that the `dtsmp_consider_allow_create_membership_setting`
  flag is enabled in conjunction with the `Allow User Creation and Invitations` property
  for any user to invite new users.
- Technically, there can only be one company with a verified domain.
- To use the User Sync endpoints, certain prerequisites must be met.
- Ensure to replace placeholders in the URL with actual values.
- Default number of results to fetch is 250
- Default sort field is 'DATE'
- Default sort order is 'ASC'
- First result index for paging starts at 0
- Requires setup of authorization based on roles such as ROLE_RESELLER, ROLE_SALES_SUPPORT.
- Requires setup of appropriate roles for access
- Requires `ROLE_APPLICATION` for most operations.
- Requires setup of OAuth authentication for access.
- Requires authentication for all requests
- Layout management allows dynamic component addition in Theme Editor.
- Ensure to regularly audit your custom components for compliance.
- Uses OAuth2 Client Credentials flow
- The input object HighGrowthOfferInput was updated with the field locale.
- Several new objects were added related to invoicing and billing.
- 'Important: This part of the GraphQL API is currently in Early Availability status.'
- Requires OAuth 2.0 authentication.
- 'Rate limits apply: 20 requests per minute.'
- AppDirect supports an OAuth-authenticated REST interface that allows API users to
  read, create, edit, and delete marketplace records.
- Uses OAuth2 authentication
- Subscription related information is returned in XML format
- Channel admin access is required to update subscriptions.
- Changing a subscription to an identical one returns a 409 Conflict.
- If a payment instrument exists for the given user and company pair, you will receive
  a 409 Conflict response.
- Contract termination fee may apply based on subscription type.
- Authorization header must include the access token as 'Bearer <access_token>'
- Extensions can access these APIs without requiring OAuth clients, as they are rendered
  within the context of a logged-in user on the marketplace.
- Uses OAuth2 with access token for authentication — requires setup of access token
  in environment variables
- Ensure you have the Developer role and the ROLE_DEVELOPER scope.
- Product publication is an asynchronous process.
- 'Volume pricing: Historic adjustments for volume pricing usage are not supported.'
- This API is not enabled by default and requires configuration by AppDirect.
- Features in Early Availability status are only available to a limited number of
  customers.
- Price Change endpoints currently support authentication with fine-grained permissions,
  limited to ROLE_PARTNER (Read-Write) and ROLE_PARTNER_READ (Read).
- Users must be part of at least one company to access the marketplace.
- Companies can be enabled or disabled, but cannot be deleted.
- Users must be linked to at least one company to be created.
- Account memberships are required to associate users with accounts.
- Ensure that both 'dtsmp_consider_allow_create_membership_setting' flag and 'Allow
  User Creation and Invitations' property are enabled to invite users.
- Webhook notifications must be correctly set up to receive updates.
- If a webhook is not receiving events correctly, verify that the webhook URL is correctly
  configured in the AppDirect Developer Portal.
- If the webhook endpoints return error codes, check the response codes and error
  messages returned by the webhook endpoint.
- Ensure to handle token expiration and refresh appropriately.
- Certain roles cannot be set through the API.
- Invitations require specific roles and authorization.
- Requires various roles for different operations
- Lead ID and company ID are required for most endpoints
- The discount code can be a combination of letters, numbers, and special characters.
- Requires setup of Marketplace Manager role for access.
- Localization files must be in the themes/themeName/translations folder.
- Custom images must follow the naming convention of productID-slider-image.jpg.
- Uses sfb-toolkit for theme management and customization
- Specify whether the input field value is required. true or false.
- The field is required.
- Conditional rendering based on other settings.
- OAuth 2.0 is recommended over OAuth 1.0.
- Uses OAuth2 with client credentials grant type
- Uses OAuth2 Password flow — requires setup of connected app in api
- The input object HighGrowthOfferInput was updated with a new field.
- Cancellation of a subscription requires the unique subscription identifier.
- Changing subscriptions may require different parameters based on the type of change.
- Requires channel admin access to change subscriptions
- Creating a payment instrument is required for paid products
- Some subscriptions may return nulls in deeply nested fields
- The API requires setup of a subscription to create a contract termination fee.
- You must configure the retainable property when creating a discount.
- 'Use Authorization: Bearer <access_token> in headers for all API calls.'
- CORS needs to be enabled on your API server to allow requests from the marketplace
- The token has a short expiration time to reduce the impact of token theft or misuse
- Uses access token for authentication — must be set as an environment variable.
- The GraphQL API offers one query for retrieving notification templates and two mutations
  for modifying them.
- Publishing a product requires an Overview image in the Profile.
- The base URL for the AppDirect-powered marketplace must be located in the <marketplace>
  element in events.
- The Shipping Connector API is not enabled by default. AppDirect must enable the
  features on your marketplace.
- You cannot delete a user directly using an API; instead, delete their last company
  membership.
- Users must be linked to a company to be created.
- Uses REST and GraphQL APIs for managing account memberships and user updates.
- Companies are inactive by default until activated by the user.
- Ensure the webhook URL is correctly configured in the AppDirect Developer Portal.
- Check server logs for incoming requests from AppDirect.
- If you observe a delay in the delivery of webhook events, confirm that your webhook
  endpoint is always available and responsive.
- AppDirect webhooks are designed to handle delivery failures with an automatic retry
  mechanism.
- Description of discount is a required field. Must be at least 4 characters, but
  no longer than 255 characters.
- Percentage value cannot exceed two decimal places (for example, 10.15).
- Titles include various categories and metrics.
- Visibility of opportunities depends on user roles.
- Required headers include Accept-Language for some endpoints.
- All endpoints require ROLE_CHANNEL_ADMIN permission
- Default page size for listing webhooks is 10.
- Webhooks require authentication token.
- You can also use a YAML file to override some labels, as determined by your base
  theme.
- Specify whether the dropdown list field value is required. true or false.
- The menu of options for the dropdown list.
- Store API keys as securely as possible.
- The access token is returned in the response body.
- Refresh tokens are not supported in the Implicit flow.
- OAuth 2.0 Password flow
- Uses OAuth2 with password grant type — requires username and password for access
  token.
- The union TriggerSubscriptionCancellationProcessError was updated with types related
  to subscription cancellation.
- The query activeCart and the input object ActiveCartOfUserInput were updated with
  the field isPreviewCheckout.
- New objects were added, including InvoicePaymentTerms and TaxReport.
- The API is rate-limited to 20 requests per minute.
- Some fields may contain null values
- Payment plans can have different frequencies and pricing structures.
- The API returns a 201 Created status code upon successful creation of a subscription.
- You can create a discount with required properties using POST request.
- You can update a discount with required properties using PUT request.
- You can delete a discount using DELETE request.
- Generate a client ID and secret to fetch the access token.
- Use the access token in the Authorization header for all API requests.
- Validations can be triggered asynchronously and may need to be polled for completion.
- User accounts are linked to company memberships.
- You cannot delete user accounts directly.
- Company creation requires valid UUID for identity provider.
- Sorting defaults to 'NAME' in descending order.
- Requires valid company IDs for some operations
- Percentage value for discount cannot exceed two decimal places.
- Requires various roles for access, such as ROLE_BILLING_ADMIN and ROLE_CHANNEL_ADMIN.
- The opportunity ID must be valid
- Requires ROLE_CHANNEL_ADMIN to access various endpoints
- Requires shoppingCartId and itemId for specific operations.
- Use the CLI to upgrade the library, then audit & fix your custom code.
- Upgrade cautiously; expect deep testing and refactors.
- 'Specify whether the product list is required: true or false.'
- Uses OAuth 2.0 authentication for secure data access.
- The application initiates authorization by sending a POST request to the token endpoint
  to exchange the client's credentials for an access token.
- Call an AppDirect API and include the access token in the Authorization header as
  a bearer token.
- Uses OAuth2 with password grant type for initial token acquisition.
- 'The following changes were made in the Invoice object: data types were changed.'
- 'All preview schemas are accessible through the endpoint: https://<marketplaceHost>/api/graphql/preview'
- As the GA GraphQL schema is enhanced and new functionality is released, AppDirect
  might deprecate and subsequently retire obsolete or outmoded functionality.
- After API functionality is retired, AppDirect reserves the right to decommission
  it.
- Users of the GraphQL API will be notified at least six months before an API decommission
  goes into effect.
- Some fields may return nulls in specific cases
- If payment instrument exists for the given user and company pair, a 409 Conflict
  response will be returned.
- The AppDirect Discount API is designed to provide the same options that are available
  through the user interface.
- For the addItemsToCart mutation, a new cart is created if no active carts are available.
- The validateCart mutation triggers different validations for the cart.
- GraphQL Explorer is a browser-based IDE tool that allows you to build and execute
  GraphQL APIs using live marketplace data.
- Product APIs are currently in Early Availability (EA) status.
- Publishing products is not supported
- Follow the IETF BCP 47 standard for language tags, incorporating the appropriate
  regional subtag (e.g., 'en-US', 'fr-FR').
- When delayed invoicing is enabled, invoicing for all charges except metered usage
  continues on the day after the billing period ends.
- Users must be linked to at least one company.
- Company memberships allow users to access company resources.
- Some resources may return nulls in deeply nested fields.
- Webhook events may not be received correctly due to incorrect URL configuration.
- Ensure your server logs incoming requests from AppDirect to troubleshoot.
- Webhooks can be authenticated using a secret token or OAuth2.
- The default authentication type is None, meaning no authentication information will
  be attached to webhooks.
- The webhook object includes an ID and timestamp.
- The resource object contains the resource type and URL.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 204 Webhook deleted successfully.
- '204: Webhook deleted successfully.'
- '204: Webhook deleted successfully'
- '200: Successful request.'
- '400: Bad request.'
- '401: Unauthorized.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401: Unauthorized access.'
- '401: Unauthorized - Check your authorization.'
- '404: Opportunity or item not found.'
- '401: Unauthorized access, check credentials.'
- '401: Unauthorized - check permissions or access token'
- '400: Bad request - Invalid input parameters'
- '401: Unauthorized - Check authentication credentials'
- '401: Unauthorized access, check your authorization'
- 204 Webhook deleted successfully
- '403: Forbidden access, check your roles and permissions'
- 'USAGE_READER_NOT_FOUND: Check if the reader exists'
- 'INVALID_READER_INPUT: Verify input parameters'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Invalid credentials or missing authorization'
- '401: Unauthorized access - check roles and permissions.'
- '404: Resource not found.'
- '204 No Content: Successfully processed the request.'
- '401 Unauthorized: Invalid authentication token or insufficient permissions.'
- Webhook deleted successfully.
- '403 Forbidden: The user is not authorized to perform this action.'
- '404 Not Found: The specified resource does not exist.'
- '500 Internal Server Error: An internal error occurred.'
- 500 Internal Server Error
- 403 Forbidden, the user is not authorized to perform this action.
- 404 Not Found, the specified data source ID does not exist.
- 404 Company not found
- '401 Unauthorized: Check your credentials and permissions.'
- '409 Conflict: A conflict occurred while processing your request.'
- 404 Company/User/Membership not found
- 400 Bad request
- 401 Unauthorized
- 404 Company/User not found
- 409 Application already purchased
- '400: Bad request - Invalid file format or entity type'
- '401: Unauthorized'
- '500: Internal server error'
- 404 Not Found
- 400 Bad Request
- 409 Conflict
- '401 Unauthorized: Check authentication credentials'
- '404 Not Found: Check if the company or resource exists'
- '400: Invitee is already an active user, first/last names are missing or a user
  already exists with the same external id'
- '403: Role hierarchy violation. The user making the request cannot change the password
  of a user with a higher role than their own.'
- '404: Invitation not found'
- '400: Error attempting to create the lead (missing required data)'
- '404: Not Found'
- '404 Not Found: Verify lead ID or resource existence'
- '400: Bad request parameters'
- '409 Conflict: Check lead status conflicts'
- '400: Error attempting to request approval (for example, approval has already been
  requested)'
- '400: Bad Request'
- '500: Internal Server Error'
- 403 Forbidden
- '401 Unauthorized: The user does not have access to the opportunity'
- '403 Forbidden: The user does not have permission to execute the action'
- '404 Not Found: Invalid opportunity ID or item ID'
- '401 Unauthorized: Check user permissions.'
- '403 Forbidden: User access denied.'
- '404 Not Found: Invalid opportunity ID.'
- '400: Missing or invalid required parameter'
- '403: The user does not have permission to execute the action.'
- '404: Invalid opportunity ID'
- '409: The discount could not be applied because the redemption limits have exceeded'
- '410: The discount has expired'
- '403: User does not have access'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Verify the resource IDs'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your credentials or scopes.'
- '404 Not Found: The requested resource was not found.'
- '500 Internal Server Error: An unknown error occurred.'
- '404: Application or question not found'
- '400: Error creating the review.'
- '404: Application not found.'
- '429: Too many requests.'
- '401 Unauthorized: Invalid authentication'
- '404 Not found: Resource not found'
- '400 Bad Request: Typically bad query parameters'
- '403 Forbidden: Invalid authorization'
- '503 Service unavailable: Service is down'
- '400 Bad request: Check your request parameters.'
- '401 NOT AUTHORIZED: Verify authentication credentials.'
- '409 The segment already exists: Ensure unique segment codes.'
- 401 NOT AUTHORIZED
- '401 NOT AUTHORIZED: Check authentication credentials.'
- '400 BAD REQUEST: Validate request parameters.'
- 'PRICING_PLAN_NOT_FOUND: Pricing plan with ID not found.'
- '404: Subscription, user or assignment not found'
- '409: Conflict'
- 404 Not found
- 409 Subscription already created
- '403: Forbidden'
- '429: Too Many Requests'
- '502: Internal Server Error'
- 404 User not found
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Endpoint does not exist'
- '403 Forbidden: User is not authorized to perform this action.'
- '404 Not Found: AI or chat ID not found.'
- '401 Unauthorized: Check your access token or credentials.'
- '404 Company not found: Ensure the companyUuid is correct.'
- '404 Not found: Ensure the resource exists'
- '401 Unauthorized: Check authentication and roles.'
- '404 Not Found: Ensure the company or user UUID is correct.'
- '409 Conflict: Active subscriptions may prevent deletion.'
- '401 Unauthorized: Recheck scopes or token expiration'
- 404 Company or group not found
- '400: Invitee is already an active user'
- '403: Role hierarchy violation'
- '204: Lead created'
- '409: Duplicate email address'
- '401 Unauthorized: The user does not have permission to execute the action'
- '400 Bad Request: The request was invalid'
- '404 Not Found: Invalid opportunity ID'
- '403: The user does not have access to the opportunity or the opportunity status
  does not allow the action'
- '403: The user does not have access to the opportunity'
- '404 Not Found: The specified user or company could not be found.'
- '400 Bad Request: Check request body and parameters'
- '404 Not Found: Verify endpoint and resource identifiers'
- '500 Internal Server Error: Retry the request or check service status'
- '502 Bad Gateway: Service is temporarily unavailable'
- '504 Gateway Timeout: Request timed out'
- '401 Unauthorized: Verify authorization.'
- '404 Not Found: Check resource existence.'
- '404 Not Found: The specified resource could not be found.'
- '404 Not Found: Check if the endpoint is correct'
- 409 The segment already exists
- '400 Bad Request: Invalid input'
- '401 NOT AUTHORIZED: Check authentication'
- '500 Unknown error: Contact support'
- '401: NOT AUTHORIZED'
- 404 Subscription, user or assignment not found
- 502 Error occurred
- '401 Unauthorized: Check your authentication.'
- '404 Not Found: Verify the subscription ID.'
- '409 Conflict: Subscription has pending events.'
- '401 Unauthorized: User not authorized'
- '404 Not Found: The specified AI or chat ID does not exist.'
- '500 Internal Server Error: An internal server error occurred.'
- '401 Unauthorized: Missing or invalid authentication'
- '403 Forbidden: User does not have permission to access this resource'
- '404 Not Found: Resource not found'
- '404 Not found: Resource does not exist'
- '409 Conflict: Conflict in request parameters'
- '401 Unauthorized: Invalid credentials'
- 409 Active subscriptions found
- '400: Bad request'
- '404: Not found'
- '204: Success'
- '404 Not Found: Check the currencyExchangeRateUuid or endpoint URL.'
- 400 Bad request - Invalid file format or entity type
- 500 Internal server error
- 'INVALID_REQUEST: Check request parameters'
- 'UNAUTHORIZED: Verify API key or token'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Ensure correct authentication'
- '404 Not Found: Verify resource existence'
- '404 Not Found: Company or requested resource not found'
- '400: Error attempting to request approval'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '403 Forbidden: User does not have permission for this action.'
- 403 The user does not have access to the opportunity
- 404 Invalid opportunity ID
- '401 Unauthorized: Requires proper authorization.'
- '404 Not Found: Resource not found.'
- '404: Application, question or answer not found.'
- '400: Bad Request - Invalid parameters'
- '401: Unauthorized - Authentication required'
- '403: Forbidden - Insufficient permissions'
- '404 Not Found: Ensure the endpoint and parameters are correct.'
- '401 Unauthorized: Check if the user has the required role.'
- '404 Not Found: Ensure the resource exists.'
- '409: The segment folder name already exists for the partner'
- '400 Bad request: Check request parameters.'
- '401 NOT AUTHORIZED: Verify authentication.'
- '401 NOT AUTHORIZED: Recheck OAuth scopes or token expiration'
- 'PRICING_PLAN_NOT_FOUND: Pricing plan with ID e209b620-1fc3-4fe9-bd38-e811e605df8
  not found.'
- '401 Unauthorized: Check user permissions or token validity'
- '404 Not Found: Subscription or user not found'
- 404 Subscription not found
- 204 No Content
- '401 Unauthorized: Check your authorization credentials'
- '409 Subscription already created: The subscription has already been created'
- '404 Not found: The specified resource was not found'
- '204: Subscription not found'
- '409: Subscription has a pending event and can''t be deleted'
- '403 Forbidden: User is not authorized to perform this action'
- '404 Not Found: AI not found with the given identifier'
- '401 Unauthorized: Missing authorization context. User must be authenticated.'
- '400 Bad Request: Input is invalid or malformed'
- '401 Unauthorized: Unauthorized to access this resource'
- '404 Not Found: Company/User not found'
- '401 Unauthorized: Recheck API keys or tokens'
- '404 Not Found: Ensure the company or group UUID is correct'
- '404 Not Found: Ensure the lead ID is correct'
- '409 Conflict: Lead conversion conflict'
- '401 Unauthorized: Access denied due to insufficient permissions'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: The user does not have access to the opportunity or the opportunity
  status does not allow the action'
- '403 Forbidden: Invalid opportunity ID'
- 502 Bad Gateway
- 504 Gateway Timeout
- '401 Unauthorized: Recheck permissions or token'
- '404 Not Found: Check if the resource exists'
- '404: Application not found'
- '204: Question deleted'
- '200: Questions read'
- '401 Unauthorized: Recheck OAuth scopes or authentication credentials'
- '404 Not Found: Verify the endpoint path or resource id'
- 503 Service unavailable
- '401 Unauthorized: Check user roles and permissions.'
- '400 Bad Request: Verify request parameters.'
- '404 Not Found: Resource does not exist.'
- '401 Not Authorized: Ensure correct authentication'
- '401 Unauthorized: Recheck authorization scopes'
- '404 Not Found: Verify subscription ID'
- '409 Conflict: Subscription has a pending event and can''t be updated'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Verify OAuth token.'
- '429 Too Many Requests: Respect API rate limits.'
- '500 Internal Server Error: An error occurred on the server.'
- '401 Unauthorized: Check your authentication credentials.'
- '409 Conflict: Conflict occurred during the operation.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure you have the necessary permissions.'
- '404 Not Found: Verify the requested resource exists.'
- '404 Not Found: Company, group, or invitation not found'
- '401 Unauthorized: The user does not have access to the opportunity.'
- '403 Forbidden: The user does not have permissions to execute the action.'
- '403: The user does not have permission to execute the action'
- '204: Question deleted.'
- '200: Questions read.'
- '404 Not Found: Check if the resource exists.'
- '401 Unauthorized: Invalid authentication.'
- '404 Not found: Resource does not exist.'
- '403 Forbidden: Access is denied.'
- '401 Not Authorized: Check authentication credentials'
- '400 Bad Request: Check parameters and request body.'
- '401 NOT AUTHORIZED: Ensure valid authentication token.'
- '400 Bad Request: Ensure correct parameters are provided'
- '404 Not Found: Check shopping cart ID'
- '500 Internal Server Error: Retry the request'
- 500 Subscription not found
- '404 Not Found: Subscription not found'
- '409 Conflict: Subscription has a pending event and can''t be updated.'
- '403: Sync is disabled or Forbidden'
- '429: Too many requests'
- '401 Unauthorized: Invalid authentication token'
- '404 User not found: Check the user UUID'
- 404 Resource does not exist.
- '409 Conflict: Check for existing associations.'
- '200: Read notification common elements successfully.'
- 'default: Unexpected error.'
- 404 Company or company group not found
- '401 Unauthorized: Check API key or OAuth token.'
- '404 Not Found: Verify the leadId or resource path.'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid or expired access token'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Opportunity ID does not exist'
- '403 Forbidden: The user does not have access to the opportunity or the opportunity
  status does not allow the action'
- '401 Unauthorized: User does not have permission'
- '403 Forbidden: User does not have access to the opportunity'
- '403: The user does not have permission'
- '403: User does not have access to the opportunity'
- '400 Bad Request: Check the request parameters.'
- '401 NOT AUTHORIZED: Recheck authentication credentials.'
- '401 NOT AUTHORIZED: Check your authentication credentials'
- '401 Unauthorized: Recheck permissions'
- '404 Not Found: Verify the subscription or company ID'
- '409 Conflict: Subscription already exists or invalid state'
- 409 Subscription has a pending event and can't be updated
- '401 Unauthorized: Request cannot be authenticated'
- 409 Subscription has a pending event and can't be deleted
- '401 Unauthorized: Check OAuth scopes or token expiration'
- 404 Company not found.
- '409 Conflict: Resource already exists'
- '404 Not Found: The specified resource could not be found'
- '200: Read notification common elements successfully'
- 'default: Unexpected error'
- '401 Unauthorized: Check authentication and permissions.'
- '404 Not Found: Ensure the company or resource exists.'
- '401 Unauthorized: Requires valid authentication'
- '403 Forbidden: Insufficient permissions for the operation'
- '401 Unauthorized: Recheck permissions or authorization'
- '401 Unauthorized: Verify your access rights'
- '404 Not Found: Check the resource existence'
- '500 Internal Server Error: An unexpected error occurred.'
- '200: OK'
- '401 Unauthorized: Recheck credentials or permissions'
- '404 Not Found: Verify endpoint path or resource ID'
- '503 Service unavailable: Service is currently unavailable'
- '401 Unauthorized: Check credentials and permissions'
- '404 Not Found: Verify the resource ID or path'
- '503 Service Unavailable: Retry the request later'
- '204: The operation was successfully completed'
- '409: The resource already exists'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '404 Not Found: User or webhook not found.'
- '404 Not Found: AI not found with the given identifier.'
- '401 Unauthorized: Check API key or token.'
- '404 Not Found: Resource does not exist'
- '409 Conflict: Conflict in creating associations'
- '401 Unauthorized: Check your authorization headers.'
- '404 Not Found: Ensure the company or user identifiers are correct.'
- '409 Conflict: Active subscriptions found for the user.'
- '404 Not Found: Verify the company or resource exists.'
- 400 Error attempting to discard a lead that cannot be deleted or disqualified
- 403 The user does not have permission to execute the action
- '401 Unauthorized: Recheck your access rights'
- '403 Forbidden: Insufficient permissions for the requested action'
- '404 Not Found: Invalid opportunity or item ID'
- '401 Unauthorized: Check authentication and permissions'
- '403 Forbidden: Check user permissions for the opportunity'
- '400 Bad Request: Invalid input parameters'
- '401 Unauthorized: Invalid or missing authentication'
- '404 Not Found: Endpoint not found or invalid resource ID'
- '401 Unauthorized: Recheck authorization'
- '500 Internal Server Error: Indicates an unknown internal error'
- '401 Unauthorized: Check authorization scopes.'
- '404 Not Found: Requested resource does not exist.'
- '401 Unauthorized: Check authorization rules and required scopes.'
- '404 Not Found: Ensure the resource ID is correct.'
- '400 Bad Request: Review the request parameters for validity.'
- '400 Bad Request: Invalid input.'
- '409 Conflict: Resource already exists.'
- '409: The segment already exists'
- '401 NOT AUTHORIZED: Check authentication credentials'
- '500: Unknown error'
- '404 Not Found: Verify the subscription ID'
- '204 No Content: Subscription cancellation executed successfully'
- '400 Bad Request: Invalid parameters or request body.'
- '401 Unauthorized: Invalid authentication credentials.'
- '404 Not Found: The specified subscription does not exist.'
- '409 Conflict: The subscription has a pending event and can''t be updated.'
- '502: Bad Gateway'
- '401 Unauthorized: User is not authorized to access this resource.'
- '404 User not found: The specified user does not exist.'
- 'FILE_NOT_FOUND: Check the file path and name.'
- 'INVALID_FORMAT: Ensure the YAML format is correct.'
- 'Processing Failed: If your theme was not uploaded successfully, a *Processing Failed*
  message appears in the Actions column.'
- '401 Unauthorized: Company not found'
- '400: Input is invalid or malformed'
- '401: Unauthorized to publish this event'
- '500: An internal error occurred during event processing'
- '401 Unauthorized: Check API credentials.'
- '404 Not Found: Verify the resource exists.'
- '404: Company or inviter not found'
- '400: Error attempting to request approval.'
- '404: Not Found.'
- '401 Unauthorized: Check your permissions'
- '403 Forbidden: You do not have access'
- '401 Unauthorized: The user does not have access'
- '403 Forbidden: The opportunity status does not allow the action'
- '401 Unauthorized: User does not have access.'
- '403 Forbidden: User does not have permission.'
- '504: Gateway Timeout'
- '404 Not Found: Check the endpoint and parameters provided.'
- '404 Not Found: Ensure the order ID is correct'
- '200'
- '400 Bad Request: Check input parameters'
- '204: The operation was successful'
- 500 Unknown error
- '400 Bad Request: Check request parameters and body format.'
- '409 Subscription already created: Subscription ID already exists'
- '409 Subscription has a pending event and can''t be updated: Pending actions must
  be resolved first'
- '401 Unauthorized: Ensure valid credentials and scopes.'
- '404 User not found: Check user UUID.'
- '401 Unauthorized: Requires valid authentication.'
- '404 Company/User/Membership not found: Verify the identifiers provided.'
- '409 Active subscriptions found: Cannot delete a user with active subscriptions.'
- '404: Company/User not found'
- '404: Company or company group not found'
- '401 Unauthorized: Check your authentication details'
- '400: Bad request due to missing required data'
- '401 Unauthorized: HTTP 401 Unauthorized'
- '403 Forbidden: The user does not have access to the opportunity'
- '404 Not Found: Resource may not exist.'
- '404 Not found: Check if the resource exists'
- '400 Bad Request: Check query parameters'
- '400 Bad Request: Invalid input data'
- '401 NOT AUTHORIZED: Authentication required'
- '500 Unknown error: An unexpected error occurred'
- '401 NOT AUTHORIZED: Check API credentials and permissions.'
- '409 Subscription already created: Ensure the subscription does not exist.'
- '401 Unauthorized: Check API token or permissions'
- '404 Company not found: Verify companyUuid parameter'
- '401 Unauthorized: Recheck your authentication or roles'
- '404 Not found: Verify the resource ID'
- '409 Conflict: Check for unique constraints'
- '401 Unauthorized: Check API credentials and scopes.'
- '404 Not Found: Verify the company or user ID.'
- '404: Company/User/Membership/Application not found'
- '409: Application already purchased'
- '404: Company, inviter or invitation not found'
- '400 Bad Request: The owner''s or customer''s company membership is invalid'
- '401 Unauthorized: Required scopes not satisfied'
- '403 Forbidden: The user does not have access or permission to execute the action'
- '403: User does not have permission'
- '409: Discount could not be applied due to redemption limits'
- '410: Discount has expired'
- '404: Application or resource not found'
- '404 Not Found: Check if the companyId or userId is correct.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the resource exists'
- '400 Bad Request: Review your request parameters'
- '409: Conflict - The segment already exists'
- '400 Bad Request: Check your request parameters'
- '401 NOT AUTHORIZED: Ensure valid authentication'
- '500 Unknown error: Try again later'
- '401 Unauthorized: Subscription or user not found'
- 204 Account not found
- 400 Assignment application not enabled for usage
- '404 Not Found: The specified resource does not exist'
- '401 Unauthorized: Access token may be invalid or expired.'
- '404 Company not found: Check the company UUID.'
- 404 Company, inviter or invitation not found
- '400: Error attempting to convert the lead'
- '403: User does not have access or permission'
- '409: Redemption limits exceeded'
- '403: Access denied'
- '401 Unauthorized: Verify authentication'
- '401 Unauthorized: Recheck permissions or API token'
- '404 Not Found: Check the resource ID'
- '200: Success'
- '404 Not Found: Check if the resource exists or if the path is correct.'
- '401 Unauthorized: Check your permissions or authentication tokens'
- '404 Not Found: Verify the order ID or endpoint path'
- '204: Successfully completed'
- '409: Conflict error'
- '404 Not Found: Check subscription or user ID'
- '500 Internal Server Error: Subscription not found'
- 'Bad Request: Subscription has been already assigned to the user'
- 'Not Found: CompanyEntitlement with UUID not found.'
- '400 Bad Request: The subscription was previously deleted.'
- '404 Not Found: The specified subscription was not found.'
- 'FREE_TRIAL_EDITION_NOT_AVAILABLE: Company has already purchased an edition with
  free trial.'
- 'DISCOUNT_NOT_VALID: Discount cannot apply to this order.'
- 'INVALID_PARAMETER: Subscription ID does not match.'
- '409: Already subscribed to this edition.'
- '409 Conflict: A subscription with identical attributes already exists for the specified
  company.'
- 'CREDIT_CARD_MISSING: Credit Card is missing.'
- 'Bad Request: Unexpected character (''"'' (code 34)): was expecting comma to separate
  OBJECT entries'
- '201 Created: The payment instrument was created.'
- '400 Bad Request: Some required fields were not received.'
- '404 Not Found: The specified company or user was not found.'
- '409 Conflict: The specified payment instrument already exists for the specified
  company and user.'
- '201 Created: Subscription successfully created'
- '400 Bad Request: Check request format or missing parameters'
- '201 Created: Successful subscription creation'
- '400 Bad Request: Check request structure and parameters'
- 'PAYMENT_PLAN_ID_MISSING: Payment plan ID is missing.'
- 'APP_ALREADY_EXISTS: Company has already purchased the application.'
- 'BAD_REQUEST: Input Format Errors'
- 'GRAPHQL_VALIDATION_FAILED: Graphql syntax errors'
- 'NOT_FOUND: Entity not found'
- 'UNAUTHORIZED: Authentication or authorization issues'
- 'FORBIDDEN: Client has insufficient authorization permissions'
- 'RESOURCE_LIMIT_EXCEEDED: Query cost limit exceeded'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded'
- 'INTERNAL_SERVER_ERROR: Server errors'
- 'InvalidDiscountCodeError: Discount RANDOM_DISCOUNT does not exist or is expired.'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field ''UserPrincipleName'' has failed
  validation'
- 'SUBSCRIPTION_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: The details of the subscription
  custom attributes are invalid.'
- 'PURCHASE_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: The details of the purchase custom
  attributes are invalid.'
- 'INVALID_ITEM_QUANTITIES: The unit quantity value is invalid.'
- 'DAILY_SPEND_LIMIT_EXHAUSTED: The daily spend limit is exceeded.'
- 'THIRTY_DAYS_SPEND_LIMIT_EXHAUSTED: The monthly spend limit is exceeded.'
- 'DEFAULT_PAYMENT_METHOD_NOT_FOUND: A default payment method is required but is missing.'
- 'PURCHASE_PRE_AUTH_FAILED: The Payment Authorization failed.'
- '401 Unauthorized: No token provided'
- '401 Unauthorized: Invalid auth token'
- '400 BAD REQUEST: Too many sets of information were received.'
- '401 UNAUTHORIZED: The authentication credentials are invalid.'
- '403 FORBIDDEN: Company Synchronization is disabled for the marketplace, or for
  the developer.'
- '404 Not found: AI or chat session not found with the given identifier.'
- '401 Unauthorized: Ensure correct scopes and permissions.'
- '401 Unauthorized: Check your API key or authentication method'
- '400: Bad Request: Check required parameters and data format'
- '401 Unauthorized: Check permissions and authorization.'
- '403 Forbidden: User does not have access.'
- '403: The user does not have access to the opportunity, or the user does not have
  permission to execute the action'
- '404: Invalid opportunity ID or Not Found'
- '400 Bad Request: Invalid input data.'
- '401 Unauthorized: Invalid or missing credentials.'
- '500 Internal Server Error: Unexpected server error.'
- '404: Application or resource not found.'
- '400: Bad Request - Invalid parameters.'
- '401: Unauthorized - Authentication required.'
- '404 Not Found: Check the orderId or endpoint path'
- '400 Bad request: Check request payload.'
- '409 The segment already exists: Ensure unique segment code.'
- '401 NOT AUTHORIZED: Validate API key and permissions.'
- '401 Not Authorized: Check credentials or permissions'
- '400 Bad request: Check request parameters'
- '401 NOT AUTHORIZED: Recheck OAuth credentials'
- '401 Unauthorized: Unauthorized or subscription/user not found'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Subscription ID does not exist.'
- '404: Subscription not found'
- '412: The subscription cannot be updated'
- 'Processing Failed: View error messages for details.'
- '401 Unauthorized: Recheck client ID or secret'
- '400 Bad Request: Check the request format and data.'
- '401 Unauthorized: Verify OAuth credentials.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 404 Resource does not exist
- '401 Unauthorized: Check your authorization roles.'
- '404 Not found: Resource not found.'
- '403 Forbidden: Invalid authorization.'
- '401 Not Authorized: Authentication required'
- '500 Internal Server Error: An unexpected error occurred'
- 204 NO CONTENT
- '404 Not Found: The requested resource wasn''t found.'
- '404 User not found: Verify user UUID'
- '401 Unauthorized: Ensure the correct OAuth2 token is provided.'
- '404 User not found: Verify the userUuid provided in the request.'
- 'Processing Failed: View error messages if the theme was not uploaded successfully'
- 'Not Found: No user entitlement found.'
- 'Not Found: CompanyEntitlement with UUID=07db2f71-8e24-48ba-acd6-49210aee0692 not
  found.'
- '401 Unauthorized: Unauthorized to publish this event'
- '500 Internal Error: An internal error occurred during event processing'
- '401 Unauthorized: Check permissions and roles'
- '404 Not Found: Check if the company or group exists'
- '403 Forbidden: The user does not have permission to execute the action.'
- '404: Opportunity ID not found'
- '401 Unauthorized: Authentication failed.'
- '500 Internal Server Error: Server encountered an error'
- '404 Not Found: Verify the order ID or user ID.'
- '500 Internal Server Error: Try again later.'
- '503 Service unavailable: Service currently unavailable'
- '401 NOT AUTHORIZED: Check API key or authentication method'
- 'PRICING_PLAN_NOT_FOUND: Pricing plan not found.'
- '404 Not Found: Subscription or assignments not found'
- '403 Forbidden: Request is authenticated but does not have permission to access
  the resource(s)'
- '404 Not Found: The application and/or user were not found'
- '429 Too Many Requests: Inputs are valid, but this user and handle are already connected
  to the service'
- '502 Internal Server Error: Internal services are unavailable'
- '404 Not Found: Subscription not found with id {subscriptionId}.'
- '400 Bad Request: Subscription has been already assigned to the user.'
- '404 Not Found: No user entitlement found.'
- '400 Bad Request: Check the request parameters and body.'
- '401 Unauthorized: Check permissions'
- '404 Company not found: Verify companyUuid'
- '401 Unauthorized: Check API key and permissions'
- '409 Conflict: Resource already exists or cannot be created'
- '401 Unauthorized: Missing or invalid authentication.'
- 404 Company/User/Membership not found.
- '409 Active subscriptions found: Cannot delete membership with active subscriptions.'
- '401 Unauthorized: Check authentication.'
- 200 Success
- '403: Role hierarchy violation.'
- '404 Not Found: Ensure leadId is valid'
- '400 Bad Request: Validate request parameters'
- '404: Application or question not found.'
- '404 Not Found: Check the resource ID or URL'
- '404 Not Found: Check the order ID or URL'
- '503 Service unavailable: Service is temporarily unavailable'
- '403 Unauthorized: The user identified by the incoming credentials cannot be resolved.'
- '404 Not Found: The specified resource was not found.'
- '500 Unknown error: Retry the request'
- '409 Conflict: Assignment already exists'
- '401 Unauthorized: Check authorization credentials'
- '404 User not found: Verify user identifier'
- '400 Bad Request: Check input payload format.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '400 Bad Request: Cannot cancel a subscription in CANCELLED status or with pending
  null'
- '404 Not Found: Subscription not found with the specified id.'
- '400 Bad Request: Company has already purchased an edition with free trial.'
- '200 OK: Successfully changed subscription.'
- '200 OK: Successful request'
- '400 Bad Request: Invalid request format or parameters'
- '404 Not Found: Ensure the discount ID is correct.'
- '409 Conflict: Indicates the user is trying to change to an identical subscription.'
- '204 No Content: Payment instrument removed'
- '404 Not Found: Payment instrument not present in the system'
- '201 Created: Subscription has been created successfully'
- '201 Created: Subscription successfully created.'
- '201 Created: Subscription created successfully'
- '401 Unauthorized: Invalid authentication credentials'
- '201 Created: Successful request'
- '201 Created: The subscription was created.'
- '409 Conflict: A subscription already exists for the specified company.'
- '204 No Content: Successfully deleted discount.'
- '401 Unauthorized: Ensure the correct authorization token is provided.'
- '404 Company not found: Check the companyUuid provided in the request.'
- '401 Unauthorized: Check your access roles.'
- '404 Not Found: Ensure the company or user exists.'
- '404: Company not found'
- 'INVALID_DISCOUNT_CODE: Check the discount code for accuracy'
- 'DISCOUNT_EXPIRED: Verify the expiration date of the discount'
- '401 Unauthorized: Check token or permissions'
- '404 Not Found: Ensure company or resource exists'
- '404: Product not found'
- '401 Unauthorized: Check your permissions.'
- '403 Forbidden: You do not have access to this opportunity.'
- '404 Not Found: Opportunity ID is invalid.'
- '401 Unauthorized: Recheck authorization scopes.'
- '404 Not Found: Check the resource ID.'
- '404 Not Found: Check the URL or ID provided.'
- '400 Bad Request: Invalid query parameters'
- '403 Forbidden: Insufficient permissions'
- '400 Bad Request: Invalid parameters.'
- '204 No Content: Successful operation.'
- '400 Bad Request: Verify request parameters'
- '400: Assignment application not enabled for usage'
- '204: Account not found'
- '401 Unauthorized: Check client ID and secret'
- 'SubscriptionCancellationRequestDateRequiredError: This error occurs when the request
  date is not provided.'
- '404 Not Found: The requested resource does not exist'
- '204 No Content: The subscription was successfully deleted.'
- 'Bad Request: Unexpected end-of-input: expected close marker for OBJECT'
- '404 Not Found: The specified company, user, or subscription was not found.'
- 404 Not Found if no product with the specified productId exists in the system.
- 'Bad Request: HTTP 400 Bad Request'
- '204 No Content: Successful deletion of discount.'
- '404 Not Found: Discount not found.'
- 'BAD_REQUEST: Input Format Errors - Example: An empty string is provided as an input
  for `cartId`'
- 'GRAPHQL_VALIDATION_FAILED: Graphql syntax errors - Example: Sub-fields of an object
  are not provided for a query/mutation'
- 'NOT_FOUND: Entity not found - Example: The client lacks valid authentication credentials
  but requests a field which at a minimum requires authentication'
- 'UNAUTHORIZED: Authentication or authorization issues - Example: The client lacks
  valid authentication credentials but requests a field which at a minimum requires
  authentication'
- 'FORBIDDEN: Client has insufficient authorization permissions to perform an action
  - Example: The bearer token provided in the authorization header doesn’t have necessary
  permissions to perform a action'
- 'RESOURCE_LIMIT_EXCEEDED: Query cost limit exceeded - Example: The client has exceeded
  the allowed limit for a single request'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded - The client has exceeded the allowed
  limit for multiple requests during a given period of time'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field ''UserPrincipleName'' has failed
  validation: The specified username is not valid (contains invalid characters, is
  ''admin'' or is unavailable).'
- 'SUBSCRIPTION_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: This error occurs if the details
  of the subscription custom attributes are invalid.'
- 'PURCHASE_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: This error occurs if the details of
  the purchase custom attributes are invalid.'
- 'INVALID_ITEM_QUANTITIES: This error occurs if the unit quantity value is invalid.'
- 'DAILY_SPEND_LIMIT_EXHAUSTED: This error occurs if the daily spend limit is enabled
  and the cart value exceeds the limit.'
- 'THIRTY_DAYS_SPEND_LIMIT_EXHAUSTED: This error occurs if the monthly spend limit
  is enabled and the cart value exceeds the limit for the month.'
- 'DEFAULT_PAYMENT_METHOD_NOT_FOUND: These errors occur if a default payment method
  is required but is missing.'
- 'PURCHASE_PRE_AUTH_FAILED: This error occurs if the Payment Authorization fails.'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field ''firstName'' has failed validation:
  Missing information'
- '500: Error fetching public key'
- '500: Company could not be created'
- '400: BAD REQUEST - Too many sets of information were received.'
- '401: UNAUTHORIZED - The authentication credentials are invalid.'
- '403: FORBIDDEN - Company Synchronization is disabled for the marketplace.'
- 'BAD_DATA: Usage submitted has a timestamp outside of the billing period on the
  Subscription'
- 'BAD_DATA: Usage submitted after 6 PM UTC on the last day of billing period.'
- '404 Not Found: Specified resource does not exist.'
- '404 Company not found: Ensure the company UUID is correct.'
- '404 Not Found: The company was not found.'
- '409 Conflict: Conflict in the request.'
- '401 Unauthorized: Recheck your authentication credentials'
- '404 Not Found: The requested resource could not be found'
- '400 Bad Request: Error attempting to perform operation'
- '400 Bad Request: The request was invalid.'
- '401 Unauthorized: The user does not have permission to execute the action.'
- '403 Forbidden: The user does not have access to the opportunity.'
- 403 The user does not have access to the opportunity or the opportunity status does
  not allow the action
- '401 Unauthorized: Check your access token or permissions'
- '404 Not Found: Verify the resource identifier'
- '500: Internal server error occurred'
- '404 Not Found: Ensure the URL and parameters are correct.'
- '503 Service unavailable: The server is temporarily unable to handle the request.'
- '403 Forbidden: User does not have the authorization to access this resource'
- '500 Internal Server Error: An error occurred on the server'
- '400 Bad Request: Verify the request body and parameters.'
- '500 Unknown error: A server-side issue occurred.'
- '400 Bad Request: Check syntax and required parameters.'
- '403: Request is authenticated but does not have permission to access the resource(s)'
- '200 OK: Success'
- '404 Not Found: If no product with the specified productId exists in the system.'
- '401 Unauthorized: Recheck authentication details'
- '201 Created: Successful creation of resource'
- '400 Bad Request: Check request data format'
- '401 Unauthorized: Authentication failed'
- '404 Not Found: Discount ID not found.'
- 'FORBIDDEN: Insufficient authorization permissions'
- '401 Unauthorized: User is not authorized'
- '500 Internal Server Error: An internal error occurred during event processing'
- '404 Not Found: Customized or default template not found.'
- '401 Unauthorized: Ensure valid authentication.'
- '404: Company or group not found'
- '401 Unauthorized: Check your authentication and authorization'
- '404 Not Found: Ensure the resource IDs are correct'
- '404 Not Found: The requested resource could not be found.'
- '200 OK: Successful request.'
- '404 Not found: Check the endpoint or parameters'
- '503 Service unavailable: Try again later'
- '400 Bad request: Invalid input.'
- '400 Bad request: Check the request payload.'
- '401 NOT AUTHORIZED: Recheck authentication credentials'
- '401 Unauthorized: Unauthorized or subscription not found'
- '409 Conflict: Assignment status not compatible'
- '404: User is not found or Subscription is not found for the Developer'
- '401 Unauthorized: Check OAuth credentials.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Endpoint does not exist.'
- 'INVALID_INPUT: Ensure all required fields are provided.'
- 'NOT_FOUND: Check if the resource exists.'
- '400 Bad Request: Invalid subscription data.'
- 'BAD_REQUEST: Input Format Errors - An empty string is provided as an input for
  `cartId`'
- 'GRAPHQL_VALIDATION_FAILED: Graphql syntax errors - Sub-fields of an object are
  not provided for a query/mutation'
- 'NOT_FOUND: Entity not found - The client lacks valid authentication credentials
  but requests a field which at a minimum requires authentication'
- 'UNAUTHORIZED: Authentication or authorization issues - The client lacks valid authentication
  credentials but requests a field which at a minimum requires authentication'
- 'FORBIDDEN: Client has insufficient authorization permissions to perform an action
  - The bearer token provided in the authorization header doesn’t have necessary permissions
  to perform a action'
- 'RESOURCE_LIMIT_EXCEEDED: Query cost limit exceeded - The client has exceeded the
  allowed limit for a single request'
- 'InvalidDiscountCodeError: Discount does not exist or is expired.'
- 'INVALID_CART_ID: Verify the cart ID supplied.'
- 'TERMS_NOT_ACCEPTED: User must accept terms and conditions to proceed.'
- '401 Unauthorized: Recheck your access permissions.'
- '409 Conflict: Check for existing associations'
- '401 Unauthorized: Recheck OAuth scopes.'
- '404 Not Found: Ensure the lead ID is correct.'
- '403 Forbidden: The user does not have permission to access this resource.'
- '400 Bad request: Ensure the request parameters are valid.'
- '404 Not found: Check if the resource exists.'
- '409: Conflict - resource already exists'
- '401 NOT AUTHORIZED: Verify authentication credentials'
- 404 Token not found
- 'InvalidInputFieldError: Check the input fields provided.'
- 'InvalidInputAmountError: Ensure the amount is valid.'
- 'Not Found: CompanyEntitlement with UUID=07db4f71-8e24-48ba-acd6-49210aee0692 not
  found.'
- '400 Bad Request: Check request format or required fields'
- '404 Not Found: Resource not found or incorrect endpoint'
- '400 Bad Request: Invalid request format.'
- '204 No Content: Successfully deleted the discount.'
- 'DetailedUserError: User errors related to business rules.'
- 'SUBSCRIPTION_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: Invalid subscription custom attributes'
- 'PURCHASE_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR: Invalid purchase custom attributes'
- 'DAILY_SPEND_LIMIT_EXHAUSTED: Daily spend limit exceeded.'
- 'THIRTY_DAYS_SPEND_LIMIT_EXHAUSTED: Monthly spend limit exceeded.'
- 'DEFAULT_PAYMENT_METHOD_NOT_FOUND: Missing default payment method.'
- 'PURCHASE_PRE_AUTH_FAILED: Payment authorization failed.'
- '401 Unauthorized: Requires proper authentication.'
- '409 Conflict: There is a conflict with the current state of the resource.'
- '400 Bad Request: Check request parameters and body.'
- '401 Unauthorized: Ensure the correct roles and permissions.'
- '404 Not Found: Verify the existence of the resource.'
- '404 Not Found: Company or resource not found.'
- '400 Bad Request: Invalid input parameters.'
- '404 Not Found: Verify the order ID'
- '400: Bad Request, typically bad query parameters'
- '503: Service unavailable'
- '409 Conflict: The segment already exists'
- '400 Bad request: Check the request parameters.'
- '401 NOT AUTHORIZED: Ensure valid authentication.'
- '500 Unknown error: Contact support.'
- Invalid shopping cart ID
- Unauthorized access
- '404 Not found: The specified subscription does not exist'
- '404 Token not found: Ensure the activation token is valid'
- '400 Bad Request: Check the request format or parameters.'
- '401 Unauthorized: Verify OAuth token is correct.'
- '404 Not Found: Ensure the requested resource exists.'
- '401 Unauthorized: Recheck your credentials'
- '409 Conflict: Conflict with existing data'
- '401 Unauthorized: Verify authentication credentials'
- 200 OK
- '401 Unauthorized: Invalid or expired token.'
- '400 Bad Request: FREE_TRIAL_EDITION_NOT_AVAILABLE'
- '409 Conflict: Indicates the user is trying to change to an identical subscription'
- '409: The discount could not be applied'
- '400 Bad Request: Check the request payload for errors'
- '404: Application, question or answer not found'
- '404 Not Found: Ensure that the companyId and userId are correct.'
- '401 Unauthorized: Recheck OAuth credentials'
- '204 No Content: Successful deletion of a discount.'
- 500 Service unavailable
- 'BAD_REQUEST: Input format errors.'
- 'GRAPHQL_VALIDATION_FAILED: GraphQL syntax errors.'
- 'NOT_FOUND: Entity not found.'
- 'UNAUTHORIZED: Authentication or authorization issues.'
- 'FORBIDDEN: Insufficient authorization permissions.'
- 'RESOURCE_LIMIT_EXCEEDED: Query cost limit exceeded.'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded.'
- 'INTERNAL_SERVER_ERROR: Server errors.'
- '401 Unauthorized: The user does not have permission.'
- '500 Unknown error: Check server status'
- '404 Not Found: Verify the resource path and parameters'
- '409 Conflict: Resource state conflict'
- '401 Unauthorized: Invalid or expired token'
- '404 Company not found: Ensure the company ID is correct.'
- '401 Unauthorized: Check your access rights'
- '400 Bad Request: Check your query syntax or parameters.'
- '401 Unauthorized: Check your credentials and permissions'
- '404 Company not found: Verify the company ID or external ID'
- '401 Unauthorized: Check the provided credentials and permissions.'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: The specified company or group does not exist.'
- '404 Not Found: Verify resource paths.'
- '401 Unauthorized: Ensure authentication is set up correctly.'
- 400 Error creating the review.
- 404 Application not found.
- 429 Too many requests
- '401 Unauthorized: User does not have access'
- '403 Forbidden: Invalid opportunity ID or action not allowed'
- '404 Not Found: Opportunity or item ID is invalid'
- '404 Not Found: Check the requested resource path.'
- '403 Unauthorized: Check your access rights'
- '404 Not Found: Ensure the resource exists'
- '403: Access denied or insufficient permissions'
- '409: Resource conflict'
- '400 Bad Request: Ensure all required fields are populated.'
- '404 Not Found: Check the endpoint or resource ID'
- '400 Bad Request: Invalid request format'
- '401 Unauthorized: Authentication required'
- '409 Conflict: Resource already exists or invalid data'
- '404 Not Found: Ensure the subscription ID is correct'
- '204 No Content: Subscription cancellation was successful'
- '401 Unauthorized: Check your authentication token'
- '404 User not found: Verify the user UUID'
- '404 Not Found: Check if the endpoint exists.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '400 Bad Request: The request was invalid or cannot be served.'
- '403 Forbidden: Access is denied due to insufficient permissions.'
- '404 Not Found: Subscription or user not found.'
- '403: Access denied due to insufficient permissions'
- '404: Opportunity ID is invalid'
- '400 Bad Request: HTTP 400 Bad Request'
- 'INVALID_PAYMENT_PLAN: Check if paymentPlanId is valid'
- '401 Unauthorized: Recheck API access credentials'
- '404 Not Found: Check the path or parameters'
- '201 Created: Successfully created the subscription'
- '401 Unauthorized: Check if the required scopes are included.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '401 NOT AUTHORIZED: Ensure authentication is valid.'
- '409 The segment already exists: Check for existing segments.'
- '204 No Content: Successful deletion of the discount.'
- Common errors related to invalid data or headers
- User errors when there's a failure in one of the business rules
- '401 Unauthorized: Recheck OAuth scopes or subscription/user not found'
- '400 Bad Request: Ensure query parameters are correctly set.'
- '204 No Content: The subscription cancellation was successful.'
- '400 Bad Request: Invalid order ID or request format.'
- '409 Conflict: Application already purchased'
- 'INVALID_DISCOUNT_CODE: Check the discount code for correctness'
- 'EXPIRED_DISCOUNT: The discount has expired and cannot be applied'
- 'MAX_REDEMPTIONS_REACHED: The maximum number of redemptions has been reached'
- '400 Bad Request: Check the request parameters and try again.'
- '404 Not Found: Verify the discount ID or resource path.'
- '401 Unauthorized: Ensure proper authorization'
- '404 Not Found: Verify endpoint and parameters'
- '409 Conflict: Resource conflict occurred'
- '404 Not Found: Company, inviter or invitation not found'
- '400 Bad Request: Invitee is already an active user, first/last names are missing
  or a user already exists with the same external id'
- '401 Unauthorized: Check credentials'
- '403 Forbidden: Role hierarchy violation'
- '401 Unauthorized: Access requires valid authentication credentials'
- '403 Forbidden: User does not have access or permission'
- '404: Opportunity ID invalid'
- '404 Not Found: The specified company or user does not exist.'
- '401 Unauthorized: Verify authentication.'
- '404 Not Found: The specified payment instrument was not found.'
- '404 Not Found: Resource could not be found'
- '500 Internal Server Error: Indicates an unknown internal error.'
- '404 Not Found: Application or question not found'
- '404 Not Found: Check the endpoint and parameters'
- '503 Service Unavailable: The service is currently unavailable'
- '400 Bad request: Check the request payload and parameters.'
- '409 Conflict: The segment already exists.'
- '403 Forbidden: Ensure proper permissions are set'
- '404 Not Found: Check the resource path or ID'
- '401 NOT AUTHORIZED: Ensure proper authentication'
- '500 Unknown error: Contact support for assistance'
- 'DEPENDENCY_WITH_HEADER: Error indicating dependency when trying to delete components.'
- '401 Unauthorized: Check your API credentials.'
- '409 Conflict: Resource already exists or invalid request'
- '400 Bad Request: Check the request format and required parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the specified company or user exists.'
- '404 Not Found: Customized SMS template or default SMS template not found.'
- '200 OK: SMS template read.'
- 'INVALID_REQUEST: Check the request parameters'
- 'NOT_FOUND: The requested resource does not exist'
- '404 Not Found: No product with the specified productId exists in the system.'
- '400 Bad Request: Check request formatting and required fields'
- '404 Not Found: Ensure the endpoint URL is correct'
- '403 Forbidden: Check API permissions or scopes'
- '400 Bad Request: Validate request parameters and body format'
- '204 No Content: Discount deleted successfully.'
- '400 Bad Request: Invalid request data.'
- '400 Bad Request: The request is malformed or invalid.'
- '401 Unauthorized: User is not authorized to perform this action.'
- '404 Not Found: The specified opportunity ID is invalid.'
- '400 Bad Request: Ensure input data is correctly formatted.'
- '401 Unauthorized: Check OAuth token validity.'
- '404 Not Found: Verify endpoint paths.'
- 'UnitQuantityMinError: Minimum allowed value for unit is below allowed threshold'
- 'UnitQuantityMaxError: Maximum allowed value for unit exceeds limit'
- 'UnitQuantityIncrementError: Quantity must be in allowed increment values'
- '404 Not Found: Check if the endpoint is correct or if the resource exists'
- '404 Not Found: Check if the endpoint path is correct.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Company not found: Ensure the company UUID is correct'
- '401 Unauthorized: Check authentication credentials or permissions'
- '404 Not Found: Check if the subscription/user exists'
- '404 Company not found: Verify the company UUID provided.'
- '401 Unauthorized: Check your API key or token'
- '409 Subscription already created: A subscription with the same ID exists'
- '400 Bad request: Input is invalid or malformed'
- '400 Bad Request: Check request format and required fields.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- 404 Not Found, the specified ID does not exist.
- '404 Company not found: Verify the company ID.'
- '404 Not Found: Product with id not found'
- '400 Bad Request: Ensure all required parameters are included.'
- '404 Not Found: Payment instrument not found.'
- '409 Conflict: Payment instrument already exists.'
- '401 Unauthorized: Ensure correct roles are assigned.'
- '404 Not Found: Check resource paths and IDs.'
- '401 Unauthorized: User does not have access to the opportunity'
- '404 Not found: The requested resource does not exist'
- '503 Service unavailable: The service is temporarily unavailable'
- '204: Successfully processed'
- '409: Resource already exists'
- '400 Bad Request: Invalid shopping cart ID'
- '404 Resource Not Found: Check the resource ID'
- '500: Internal server error.'
- '401 Unauthorized: Recheck authorization roles or scopes'
- '404 Not Found: Subscription does not exist.'
- '502: Internal services are unavailable'
- '401 Unauthorized: Check your authentication token.'
- '404 Not Found: Ensure the user or resource exists.'
- '401 NOT AUTHORIZED: Verify authentication'
- '401 NOT AUTHORIZED: Ensure proper authentication.'
- '404 Not found: Ensure subscriptionId is correct'
- '401 Unauthorized: Check your access token'
- '404 Not Found: The resource does not exist'
- '400 Bad Request: Check the request format and required fields.'
- '404 Not Found: Verify the endpoint URL.'
- '403: Forbidden, the user is not authorized to perform this action.'
- '404: Not Found, the specified resource does not exist.'
- '500: Internal Server Error.'
- '201 Created: Successful creation of a resource'
- '400 Bad Request: Check request parameters for errors'
- '401 Unauthorized: Ensure proper authentication credentials are used'
- 500 Internal error occurred
- '400 Bad Request: Invalid request format or data'
- '401 Unauthorized: Missing or invalid authentication credentials'
- 'BAD_REQUEST: An empty string is provided as an input for `cartId`'
- 'GRAPHQL_VALIDATION_FAILED: Sub-fields of an object are not provided for a query/mutation'
- 'NOT_FOUND: The client lacks valid authentication credentials but requests a field
  which at a minimum requires authentication'
- 'UNAUTHORIZED: The client lacks valid authentication credentials but requests a
  field which at a minimum requires authentication'
- 'FORBIDDEN: The client has insufficient authorization permissions to perform an
  action'
- 'RESOURCE_LIMIT_EXCEEDED: The client has exceeded the allowed limit for a single
  request'
- 'RATE_LIMIT_EXCEEDED: The client has exceeded the allowed limit for multiple requests
  during a given period of time'
- '404 Not Found: Verify resource existence.'
- '401 Unauthorized: Ensure proper authorization.'
- User errors can occur when business rules are not met during finalization.
- 404 Company, group, or user not found
- '400: Missing or invalid required parameter.'
- '403: User does not have access to the opportunity or permission to execute the
  action.'
- '404: Invalid opportunity ID.'
- 'DuplicatePublicationTriggeredError: A publication has already been triggered for
  this product.'
- 'EditionIdMismatchError: The provided edition ID does not match the product''s edition.'
- '400 BAD REQUEST: No tenant information was provided.'
- '400 DEVELOPER IDENTIFIER INVALID: You did not provide a valid developer identifier.'
- '500: Indicates an unknown internal error'
- 500 Internal Server Error.
- '404 Not Found: Application or question not found.'
- '204 No Content: Question deleted.'
- '401 Unauthorized: Check permissions and authentication'
- '401 Unauthorized: Check your authorization token and scopes.'
- '404 Not Found: Verify the Company UUID in the request.'
- '400 Bad Request: Ensure the request payload is correctly formatted.'
- '404 Not Found: The resource you are looking for does not exist.'
- '401 Unauthorized: Invalid credentials provided'
- '401 Unauthorized: unauthorized access'
- '404 Not Found: subscription not found'
- '400 Bad Request: Ensure the request parameters are correct.'
- '401 Unauthorized: Check credentials and required roles.'
- '401 Unauthorized: Ensure proper authorization is provided.'
- '404 Not Found: Verify that the company or resource identifiers are correct.'
- '401 Unauthorized: Invalid credentials or insufficient permissions.'
- '404 Not found: The subscription requested does not exist.'
- 409 Subscription has a pending event and can't be updated.
- '409 Conflict: Inputs are valid, but this user and handle are already connected
  to the service'
- '429 Too Many Requests: Maximum request limit reached'
- '502 Bad Gateway: Internal services are unavailable'
- '401 Unauthorized: User not found'
- '404 Company not found: Verify the company UUID'
- '409 Conflict: Resource already exists or action cannot be completed.'
- '404 Not Found: Ensure the specified resource exists.'
- 401 Not Authorized
- '401 NOT AUTHORIZED: Recheck API key and permissions.'
- '409 Conflict: Assignment status not compatible.'
- '404 Not found: Subscription ID does not exist.'
- '401 Unauthorized: Check if the user has sufficient permissions'
- '401 Unauthorized: User not authorized, check token.'
- '404 User not found: Ensure userUuid is correct.'
- '401 Unauthorized: Recheck authentication and permissions'
- '403 Forbidden: Check user access rights'
- '404 Not Found: Verify opportunity or item ID'
- 'CostPriceNotAllowedError: Cost price not allowed.'
- 'FeesMissingOnPricingPlanError: Fees missing on pricing plan.'
- '401 Unauthorized: Recheck your credentials.'
- '404 Not Found: Verify the endpoint.'
- '404 Not Found: Verify endpoint paths and resource IDs.'
- '400 Bad Request: Ensure query parameters are valid.'
- '409: The segment folder name already exists for the partner.'
- '500 Unknown error: Retry request'
- '400 Bad Request: Check the provided shopping cart ID or request body.'
- '400 Bad Request: Check request format and parameters'
- '401 Unauthorized: Recheck OAuth token and permissions'
- '404 Not Found: Verify endpoint URL and resource existence'
- '401 Unauthorized: Check authorization and permissions'
- '404 Not Found: Verify the existence of the specified subscription or company'
- '400 Bad Request: Validate request parameters and body'
- '404 Not Found: The subscription was not found.'
- '409 Conflict: Subscription already created or has a pending event.'
- '401: Request cannot be authenticated'
- '404: The application and/or user were not found'
- '409: Inputs are valid, but this user and handle are already connected to the service'
- '401 Unauthorized: Ensure valid authentication token.'
- '404 User not found: Check userUuid provided.'
- 'NOT_FOUND: The client lacks valid authentication credentials'
- 'UNAUTHORIZED: The client lacks valid authentication credentials'
- 'FORBIDDEN: The bearer token provided doesn’t have necessary permissions'
- 'RATE_LIMIT_EXCEEDED: The client has exceeded the allowed limit for multiple requests'
- '500: company could not be created'
- Error message with the corresponding HTTP status code is sent.
- '403 Forbidden: User is not authorized'
- '401 Unauthorized: Unauthorized'
- '404 Company not found: Company not found'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Ensure proper authentication and authorization'
- '401 Unauthorized: Missing or invalid credentials'
- '409 Conflict: Request conflicts with the current state'
- '404 Not Found: Resource could not be located.'
- '204 No Content: Successful delete operation.'
- '404 Not Found: Company or resource not found'
- '401 Unauthorized: Check your access permissions.'
- '403 Forbidden: Check your permissions for the opportunity.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '404 Not Found: Verify the existence of the specified resource.'
- '400'
- '400 Bad Request: Check the payload for required fields.'
- '500 Internal Server Error: Retry the request.'
- '404 Not Found: Check the provided companyId or userId.'
- '401 Unauthorized: Recheck your permissions.'
- '404 Not Found: Ensure the endpoint is correct'
- '201: Review created.'
- '200: Reviews read.'
- '401 Unauthorized: Check user roles and permissions'
- 204 The segment folder was successfully updated
- 409 The segment folder name already exists for the partner
- '400 Bad Request: Invalid input provided'
- '401 Unauthorized: subscription/user not found'
- '429 Too Many Requests: Maximum global requests exceeded'
- '404 User not found: Check the userUuid provided'
- '401 Unauthorized: Check authorization token'
- '403 Forbidden: the user is not authorized to perform this action.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the API endpoint.'
- '401 Unauthorized: Unauthorized to perform this action'
- '400 Bad Request: Check the request body and parameters.'
- '401 Unauthorized: Verify API key or authentication method.'
- '409 Conflict: Duplicate resource or request.'
- '404 Not Found: Company or company group not found'
- '401 Unauthorized: Ensure authentication is valid'
- '404 Not Found: Verify the resource path'
- '201 Created: Resource successfully created'
- '201 Created: Successful request.'
- '400 Bad Request: Invalid request format or data.'
- '401 Unauthorized: Authentication failure.'
- '401 Unauthorized: User does not have permission to execute the action'
- '204 No Content: Successful delete operation'
- 'BAD_REQUEST: Input format errors'
- 'GRAPHQL_VALIDATION_FAILED: GraphQL syntax errors'
- 'UNAUTHORIZED: Authentication issues'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field ''UserPrincipleName'' has failed
  validation.'
- '404 Not Found: Check the endpoint path'
- 'Important: This feature is currently in Early Availability (EA) status.'
- '401 Unauthorized: Check permissions or token validity'
- '404 Company not found: Verify company ID or external ID'
- '401 Unauthorized: Check authorization roles or tokens.'
- '409 Conflict: Resource already exists or invalid request.'
- '401 Unauthorized: Access is denied due to invalid credentials'
- '404 Not found: The requested resource could not be found'
- '409 Conflict: Subscription already created or has a pending event'
- '401 Unauthorized: Required scopes missing'
- '400 Bad Request: Check the required fields.'
- 'INVALID_DISCOUNT_CODE: Ensure the code is valid and meets length requirements.'
- 'EXPIRED_DISCOUNT: Check the expiration date of the discount.'
- '404 Not Found: Check the lead ID or endpoint path'
- '400 Bad Request: The owner''s or customer''s company membership is invalid.'
- '401 Unauthorized: Recheck your authorization credentials.'
- '404 Not found: Resource could not be found'
- '403 Forbidden: The opportunity status does not allow the action.'
- '204: No content'
- '401 NOT AUTHORIZED: Auth token may be expired or invalid.'
- '401 Unauthorized: Access denied due to invalid credentials'
- 'Invalid shoppingCartId: Ensure the shoppingCartId is correctly formatted.'
- '401 Unauthorized: Authentication failed or invalid token'
- '404 Not Found: Ensure the companyId and userId are correct.'
- '404 Not Found: Check if the endpoint is correct.'
- '401 Unauthorized: Ensure proper authentication credentials.'
- '401 Unauthorized: Requires valid reseller credentials.'
- '409 Subscription already created: Indicates the subscription already exists.'
- '403 Forbidden: Check authorization'
- '404 User not found: Verify user ID'
- '409 Conflict: Resource conflict encountered.'
- '401 Unauthorized: Check your authorization.'
- '404 Not found: Subscription ID may be incorrect.'
- '409 Subscription already created: The subscription has already been created.'
- '401 Unauthorized: Check your credentials and OAuth token.'
- '404 User not found: Check user UUID or external ID'
- '401 Unauthorized: Invalid authorization token'
- 'INVALID_FIELD: Check the field names in the request.'
- 'NOT_FOUND: Ensure the resource exists.'
- 'INVALID_INPUT: Check the input provided for the mutation.'
- 'NOT_FOUND: The specified resource could not be found.'
- '400 Bad Request: Check request parameters and payload structure'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Check token or permissions.'
- 'UserInputError: Invalid input data provided.'
- 'Unauthorized: Invalid or expired authentication token.'
- code: REQUIRED_FIELD_VALIDATION_ERROR
  message: 'Required field ''UserPrincipleName'' has failed validation: The specified
    username is not valid (contains invalid characters, is ''admin'' or is unavailable).'
- code: SUBSCRIPTION_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR
  description: This error occurs if the details of the subscription custom attributes
    are invalid.
- code: PURCHASE_CUSTOM_ATTRIBUTE_VALIDATIONS_ERROR
  description: This error occurs if the details of the purchase custom attributes
    are invalid.
- code: INVALID_ITEM_QUANTITIES
  description: This error occurs if the unit quantity value is invalid.
- code: DAILY_SPEND_LIMIT_EXHAUSTED
  description: This error occurs if the daily spend limit is enabled and the cart
    value exceeds the limit.
- code: THIRTY_DAYS_SPEND_LIMIT_EXHAUSTED
  description: This error occurs if the monthly spend limit is enabled and the cart
    value exceeds the limit for the month.
- code: DEFAULT_PAYMENT_METHOD_NOT_FOUND
  description: These errors occur if a default payment method is required but is missing.
- code: PURCHASE_PRE_AUTH_FAILED
  description: This error occurs if the Payment Authorization fails.
- '400 Error attempting to convert the lead: Ensure all required parameters are provided'
- '401 Unauthorized: Access denied due to insufficient permissions.'
- '400 Bad Request: Invalid parameters or request format'
- 'MAX_TENANT_COUNT_EXCEEDED: Tenant count cannot be more than 1'
- 'NO_TENANT_PROVIDED: No tenant provided'
- 'INVALID_TENANTS_FOUND: Invalid tenants found'
- 'INVALID_DEVELOPER_IDENTIFIER: Developer company does not exist'
- '401 Unauthorized: The authentication credentials are invalid.'
- 'SYNC_DISABLED: Sync is disabled'
- '429 Too Many Requests: Inputs are valid, but the rate limit has been exceeded'
- '401 Unauthorized: Recheck authorization credentials'
- '404 User not found: Ensure the userUuid is correct'
- '401 Unauthorized: Ensure correct roles and permissions.'
- '404 Resource not found: Verify endpoint and parameters.'
- '409 Conflict: Check for existing associations or records.'
- '401: Unauthorized to access resource'
- '500: An internal error occurred during processing'
- '401 Unauthorized: Check API credentials or permissions'
- '404 Not Found: Verify the company or group identifiers'
- 'Bad Request: Subscription has been already assigned to the user.'
- 'Not Found: CompanyEntitlement not found.'
- '400 Bad Request: FREE_TRIAL_EDITION_NOT_AVAILABLE: Company has already purchased
  an edition with free trial.'
- '400 Bad Request: Error attempting to request approval (for example, approval has
  already been requested)'
- '404 Not Found: Product not found'
- '400 Bad Request: The request is invalid.'
- '409 Conflict: User is trying to change to an identical subscription.'
- '400 Bad Request: Invalid parameters provided'
- '404 Not Found: Specified resource not found'
- '409 Conflict: Resource already exists or is in an invalid state'
- '400 Bad Request: Invalid request, check required attributes.'
- 'BAD_REQUEST: An empty string is provided as an input for cartId'
- 'FORBIDDEN: Client has insufficient authorization permissions to perform an action'
- '400 Bad Request: Check input parameters for required fields.'
- '400 Bad request: Check your request parameters'
- '401 NOT AUTHORIZED: Ensure authentication is correct'
- '409 The segment already exists: Check for existing segments before creating'
- '401 NOT AUTHORIZED: Authentication failed'
- '204 NO CONTENT: Successful operation without content.'
- '500: Subscription not found'
- '401 Unauthorized: Ensure valid authentication token'
- '404 User not found: Check user UUID'
- '401 Unauthorized: Recheck roles and permissions.'
- '401 Unauthorized: Ensure proper scopes are granted.'
- '404 Company not found: Check the provided company ID.'
- '404 Not found: Ensure the requested resource exists.'
- 'INVALID_INPUT: Check the input parameters and their types.'
- 'UNAUTHORIZED: Ensure you have the correct permissions.'
- 'NOT_FOUND: The requested resource could not be found.'
- '400 Bad Request: Ensure the request payload is valid.'
- 'Status Code: 201 Created'
- '404 Not Found: Check the lead ID or company ID'
- '400: Error attempting to update a lead (for example, it is not possible to modify
  the lead)'
- '409 Conflict: The lead cannot be converted due to existing constraints'
- '201 Created: Successful request for creating a subscription'
- '404 Not Found: The discount ID does not exist.'
- 'PURCHASE_PRE_AUTH_FAILED: Payment Authorization failed.'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field has failed validation'
- 'INVALID_INPUT: The provided input is invalid'
- 'AUTHORIZATION_ERROR: Invalid access token'
- '401 Unauthorized: Check authorization.'
- '500 Internal Server Error: Server error occurred.'
- '404 Not Found: Verify the provided company ID and user ID.'
- '200 OK: Successful retrieval of data.'
- '404 Not Found: Check the resource ID or endpoint'
- '401 Unauthorized: Check authorization headers.'
- '409: Conflict - Resource already exists'
- 'Unauthorized: Check API keys and permissions.'
- 'Invalid request: Ensure request format matches API expectations.'
- '400 Bad request: Check the request format and parameters.'
- '409 The segment already exists: Verify if the segment is already created.'
- 'DuplicatePublicationTriggeredError: Publication has already been triggered.'
- 'EditionIdMismatchError: The provided edition ID does not match the expected edition.'
- '400 Bad Request: Check request parameters and body'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Verify the resource ID or endpoint path.'
- 'Invalid Order ID: Ensure the order_id is correctly specified.'
- '500 Internal Server Error: Unknown error occurred.'
- '400 Bad Request: Check the request parameters for validity.'
- '503 Service unavailable: The service is currently unavailable'
- '401 Unauthorized: Check your credentials or authorization roles.'
- '401 Unauthorized: Check authorization'
- '204 NO CONTENT: Successful deletion of shopping cart'
- '401 Unauthorized: Authentication required.'
- '500 Unknown error: An unexpected error occurred.'
- '404 Not Found: Check the lead ID or endpoint.'
- '400 Bad Request: Check required parameters and request body.'
- '401 Unauthorized: Check your authorization credentials.'
- '404 Not Found: Subscription or assignment not found.'
- '400 Bad Request: Check the parameters for the request.'
- '404 Not Found: The subscription ID provided does not exist.'
- '401 Unauthorized: Required scopes not provided.'
- '404 Not Found: Subscription not found.'
- 204 Subscription not found
- '401 Unauthorized: Check authentication token or permissions'
- '404 Not found: Ensure the requested resource exists'
- '503 Service unavailable: Retry the request later'
- '401 NOT AUTHORIZED: Ensure valid authentication token'
- 'Not Found: No user entitement found.'
- '409 Conflict: Indicates that the user is trying to change to an identical subscription.'
- '201 Created: Successfully created the resource.'
- '204 No Content: Successful deletion of discount'
- '400 Bad Request: Check the format of the request'
- '404 Not Found: Discount ID does not exist'
- '201 Created: Operation was successful.'
- 'BAD_DATA: Usage submitted after 6 PM UTC on the last day of billing period. Cut
  off to submit usage for Volume based rating is breached.'
- '404 Not Found: Check the endpoint and parameters.'
- '500 Internal Server Error: Indicates a problem on the server side.'
- '404 Not found: Resource not available'
- '400 Bad Request: Bad query parameters'
- '401 Unauthorized: Ensure you have the correct roles and permissions.'
- '404 Company not found: Verify the company UUID.'
- '401 Unauthorized: Check your permissions or token'
- '404 Not found: Company or user identifier is incorrect'
- '409 Conflict: Resource already exists or action cannot be completed'
- 'PRICING_PLAN_NOT_FOUND: Pricing plan with specified ID not found.'
- '409 Subscription already created: The subscription cannot be created again'
- '400 Bad Request: Check your request syntax.'
- '401 Unauthorized: Recheck authentication credentials'
- '404 Not Found: Ensure the company or group identifiers are correct'
- '401 Unauthorized: Verify authentication and permissions'
- '404 Not Found: Ensure opportunity ID and item ID are valid'
- '404 Not Found: Check the resource path or parameters'
- '500 Internal Server Error: Unknown error occurred'
- '404 Not Found: Subscription not found with id.'
- '400 Bad Request: Check required parameters.'
- '404 Not Found: Verify the applicationId.'
- '404 Not Found: Specified resource not found.'
- '404 Not found: Check the resource ID or path'
- '400 Bad Request: Verify query parameters'
- '401 Unauthorized: Check your authorization and permissions.'
- '404 Not found: Verify the endpoint and parameters.'
- '409 Conflict: The request could not be completed due to a conflict.'
- 500 An internal error occurred during event processing
- 'INVALID_DISCOUNT_CODE: Check if the discount code is correct.'
- 'DISCOUNT_EXPIRED: The discount has expired.'
- 'MAX_REDEMPTIONS_REACHED: The maximum number of redemptions for this discount has
  been reached.'
- '401 Unauthorized: Check authorization and roles.'
- '400: Bad Request - Check request format'
- '404: Subscription not found - Verify subscription ID'
- '409: Subscription already created - Ensure no duplicates'
- '400 Bad Request: Check request formatting.'
- '401 Unauthorized: Check authorization credentials.'
- '401 Unauthorized: Insufficient permissions or invalid authentication'
- '404 Not Found: Company or specified resource does not exist'
- '404: Product with id 10 not found.'
- '401 Unauthorized: Invalid credentials or insufficient permissions'
- '403 Forbidden: User does not have permission to execute the action'
- '404 Not Found: Opportunity not found'
- '401 Unauthorized: API requests without authentication will fail.'
- '403 Forbidden: User does not have access to the opportunity or opportunity status
  does not allow the action'
- 'InvalidInputAmountError: Check the input amount for correctness.'
- 'InvalidInputFieldError: Verify input fields and their types.'
- '400 Bad Request: Ensure all required fields are provided.'
- 'SUBSCRIPTION_NOT_EDITABLE: Cannot cancel a subscription in CANCELLED status or
  with pending null'
- 'Not Found: Subscription not found with id {subscriptionId}'
- '500: Indicates an unknown internal error that prevents the server from processing
  the request'
- '401 Unauthorized: Check the authorization header'
- '404 Not Found: Verify the endpoint URL'
- '409 Conflict: The user is trying to change to an identical subscription.'
- '404 Not Found: Verify endpoint path and parameters'
- '409: Conflict - Segment already exists'
- '204 No Content: Successful deletion of the discount'
- '400 Bad Request: Check the request parameters and structure'
- '401 Unauthorized: Check roles or permissions'
- '409 Conflict: Check assignment status'
- Compatibility issues may arise with custom components after UI library updates.
- 'CostPriceNotAllowedError: Check pricing plan configuration.'
- 'InvalidInputFieldError: Ensure all required fields are included.'
- 'InvalidInputAmountError: Check the amount provided in the request.'
- '400 Bad Request: Free trial edition not available'
- '200 OK: Subscription updated successfully'
- '400 Bad Request: Check the request format and data'
- '404 Not Found: Verify the endpoint and resource ids'
- '201 Created: Subscription created successfully.'
- '201 Created: Successful creation'
- Currently, the sample data supports all production API queries except Visualization
  queries, which return empty API responses.
- '202: EVENT ACCEPTED'
- '400: BAD REQUEST'
- '401: UNAUTHORIZED'
- '403: FORBIDDEN'
- 'BAD_DATA: Usage Submitted has a timestamp outside of the billing period on the
  Subscription'
- '404 Not Found: The specified discount does not exist.'
- '400: VALIDATION_ERROR: Missing required parameters'
- '404 Not Found: AI or chat not found with the given identifier.'
- '409 Conflict: Attempting to create an association that already exists'
- '404 Company/User/Membership not found: Ensure the identifiers are correct.'
- 'INVALID_CODE: Check discount code format.'
- 'EXPIRED_DISCOUNT: Discount has expired and cannot be redeemed.'
- 'MAX_REDEMPTIONS_EXCEEDED: Maximum number of redemptions has been reached.'
- '401 Unauthorized: Recheck your permissions or tokens'
- '400 Bad Request: Invalid parameters or request body'
- '404 Not Found: The specified user or company ID was not found.'
- '401 Unauthorized: Check your authentication'
- '404 Not Found: The specified user or company does not exist.'
- '500 Internal Server Error: Indicates an unknown error.'
- '400 Bad Request: Ensure required parameters are provided.'
- '404 Not Found: Check the order ID or company ID.'
- '404 Not Found: Check the endpoint or parameters.'
- '200 OK: Successful response.'
- '401 NOT AUTHORIZED: Ensure valid credentials are provided.'
- '409 The segment already exists: Check if the segment name is unique.'
- 'RECURRING_FLAT: Indicates a recurring flat fee.'
- '401 NOT AUTHORIZED: Check your authentication credentials.'
- '409 Conflict: Check assignment status compatibility'
- '401 Unauthorized: Requires valid authorization'
- '404 Not found: Subscription ID does not exist'
- '404 User not found: Verify userUuid'
- '401 Unauthorized: Requires valid authorization.'
- '401 Unauthorized: Verify your OAuth token and scopes.'
- '404 Not Found: Check the requested endpoint path.'
- '500 Internal Server Error: Try again later or contact support.'
- '400 Bad Request: Invalid input, check the parameters.'
- 'Bad Request: Unexpected character'
- '400 Bad Request: Check request format and required fields'
- '201 Created: Subscription was created successfully'
- 'InvalidDiscountCodeError: Discount code does not exist or is expired.'
- 'Invalid input: Ensure all required fields are provided.'
- 'User not found: Check the user ID.'
- 'Cart not found: Verify the cart ID.'
- 'USER_ERROR: Check the input parameters for the mutation.'
- 'INVALID_ITEM_QUANTITIES: Unit quantity value is invalid'
- 'DAILY_SPEND_LIMIT_EXHAUSTED: Cart value exceeds daily spend limit'
- 'THIRTY_DAYS_SPEND_LIMIT_EXHAUSTED: Cart value exceeds monthly spend limit'
- 'DEFAULT_PAYMENT_METHOD_NOT_FOUND: Default payment method is missing'
- 'PURCHASE_PRE_AUTH_FAILED: Payment Authorization failed'
- 'DuplicatePublicationTriggeredError: Publication process already triggered.'
- 'EditionIdMismatchError: The edition ID does not match the expected ID.'
- 'DuplicatePublicationTriggeredError: Publication process has already been triggered.'
- 'EditionIdMismatchError: The edition ID does not match.'
- 'Invalid accountIdentifier: Ensure the account ID is correct.'
- 'Invalid quantity: Ensure the quantity is a positive number.'
- 'Invalid price: Ensure the price is a valid number.'
- '400 Bad Request: Check mandatory parameters in the request.'
- '401 Unauthorized: Verify authorization credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'Other errors: Validation issues related to business rules may occur.'
- '400: INVALID TYPE'
- '400: INVALID OPERATION'
- '400: ACCOUNT IDENTIFIER MISSING'
- '400: DEVELOPER IDENTIFIER MISSING'
- '400: USER IDENTIFIER MISSING'
- '403: USER SYNC DISABLED'
- '404: SUBSCRIPTION NOT FOUND'
- '429: No message is displayed. An empty response is sent.'
- 401 Authentication failed
- 400 Bad request data—such as missing data
- 500 Unexpected error
- '400 VALIDATION_ERROR: subscriptionId=%s contract auto-renews to a different pricing
  plan and can''t be subject to a price change'
- '400 VALIDATION_ERROR: Contract must exist and contract must auto-extend to the
  same pricingPlan %d'
- '400 DISABLED_FEATURE: END_OF_CONTRACT price change feature is disabled for partner
  %s'
- '400 VALIDATION_ERROR: No valid billing event date for order=%s'
- '400 VALIDATION_ERROR: Cannot find company entitlement with subscriptionId=%s'
- '400 VALIDATION_ERROR: subscriptionId=%s is not active and can''t be subject to
  a price change'
- '400 VALIDATION_ERROR: subscriptionId=%s is imported and can''t be subject to a
  price change'
- '400 VALIDATION_ERROR: subscriptionId=%s has a pending event and can''t be subject
  to a price change'
- '400 Bad Request: Check request parameters and body for errors.'
- '404 Not Found: Ensure the companyUuid and userUuid are correct.'
- '403 Forbidden: Verify permissions and access rights.'
- '404 Not Found: Check endpoint path or resource identifier'
- '400 Bad Request: Check request parameters and payload.'
- '401 Unauthorized: Ensure valid authorization.'
- '404 Not Found: Verify resource identifiers are correct.'
- '404 Not Found: Verify the resource identifiers.'
- '401 Unauthorized: Check authorization and scopes.'
- '401 Unauthorized: Check OAuth scopes'
- '500 Internal Server Error: Retry request'
- '401 Unauthorized: Access token is missing or invalid'
- '404: Not Found: Verify endpoint path and parameters'
- '400: Bad Request: Check request body format'
- '500: Internal Server Error: Retry the request'
- '401 Unauthorized: Recheck OAuth scopes or permissions'
- '403 Forbidden: User does not have access or permissions'
- '404 Not Found: Check the endpoint path or parameters'
- '404 Not Found: The specified user or company does not exist'
- '401 Unauthorized: Verify OAuth token'
- '404 Not Found: Verify the endpoint or resource ID'
- '400 Bad Request: Check query parameters for correctness'
- '404 Not Found: Verify subscription or company ID'
- '409 Conflict: Check subscription status and user permissions'
- '409 Subscription already created: Handle existing subscriptions.'
- '404 User not found: Check user identifier'
- '401 Unauthorized: Check your OAuth tokens.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Recheck client ID and secret.'
- '401 Unauthorized: Check the API key or authentication'
- 'INVALID_REQUEST: Check the request format and parameters'
- '201 Created: Payment instrument successfully created.'
- '400 Bad Request: Required fields are missing.'
- '404 Not Found: Company or user not found.'
- '201 Created: Successfully created subscription'
- 'UnitQuantityMinError: Minimum allowed value for unit is not met.'
- 'UnitQuantityMaxError: Maximum allowed value for unit is exceeded.'
- 'UnitQuantityIncrementError: Value does not meet increment requirements.'
- '201 Created: Successful creation of subscription'
- '401 Unauthorized: Recheck authorization credentials.'
- '204 No Content: Successfully deleted.'
- '401 Unauthorized: Recheck API credentials or scopes'
- '404 Not found: Verify the resource exists'
- 'USER_NOT_FOUND: Ensure the user ID is correct.'
- 'CART_NOT_FOUND: Verify the cart ID provided.'
- 'INVALID_INPUT: Check input data for the finalizeCart mutation.'
- '401 Unauthorized: Access is denied due to invalid credentials.'
- '400 Bad Request: Check if the required fields are provided correctly.'
- '401 Unauthorized: Recheck API key or OAuth token'
- 'Invalid OAuth Token: Check the token and try again.'
- 'Product not found: Verify the product ID.'
- 'EditionIdMismatchError: Edition ID does not match.'
- '400: Bad request data—such as missing data'
- '401: Authentication failed'
- '422: Invalid address'
- '500: Unexpected error'
- '502: Unexpected response from shipper API'
- '504: Network error with Shipper API'
- '400: Bad request data'
- '404: Fulfillment or shipment not found'
- '400: VALIDATION_ERROR: subscriptionId=%s contract auto-renews to a different pricing
  plan and can''t be subject to a price change'
- '400: VALIDATION_ERROR: Contract must exist and contract must auto-extend to the
  same pricingPlan %d'
- '400: VALIDATION_ERROR: No valid billing event date for order=%s'
- '400: VALIDATION_ERROR: Cannot find company entitlement with subscriptionId=%s'
- 'USER_NOT_FOUND: The specified user does not exist.'
- 'COMPANY_NOT_FOUND: The specified company does not exist.'
- '404 Not Found: Verify resource identifiers'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Ensure the user ID is correct.'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Check the order ID or endpoint path.'
- '401 Unauthorized: Ensure proper authentication.'
- '404 Company not found: Ensure the companyUuid is correct'
- '401 Unauthorized: Recheck OAuth token or scopes'
- '400 Bad request: Ensure all required parameters are included.'
- '401 Unauthorized: User not authenticated or subscription not found'
- '502: Error occurred'
- 'INVALID_DISCOUNT_CODE: Ensure the discount code meets length requirements'
- 'EXPIRED_DISCOUNT: Check expiration date of the discount'
- '401 Unauthorized: Recheck credentials'
- '409 Subscription already created: Subscription cannot be created again'
- '404 Not Found: Company or group not found'
- '404 User not found: Check if the user ID is correct'
- '401 Unauthorized: Recheck authorization and permissions'
- '403 Forbidden: Check if user has access to the opportunity'
- '404 Not Found: Verify opportunity ID'
- '400 Bad Request: Check the request format and required fields'
- '401 Unauthorized: Verify the authentication credentials'
- '404 Not Found: Check if the specified order ID or company/user ID is correct.'
- '404 Not Found: Check the requested resource'
- '503 Service unavailable: Server is currently unable to handle the request'
- '403 Unauthorized: User does not have permission'
- '201 Created: Successfully created the subscription.'
- 'BAD_REQUEST: Input format errors, such as an empty string provided as an input.'
- '202: Accepted for creating developer account'
- 'Processing Failed: Click Processing Failed to view error messages.'
- '404 Not found: Check the resource ID or endpoint path'
- '409 Conflict: Resource already exists or in conflict state'
- '409 Conflict: User is trying to change to an identical subscription'
- '401 Unauthorized: Recheck authentication credentials.'
- '201 Created: Successful creation of a resource.'
- '400 Bad Request: Check the request format or parameters'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '401 Unauthorized: Recheck OAuth scopes or user permissions'
- 'FORBIDDEN: Insufficient permissions'
- '409: Discount could not be applied due to limits exceeded'
- Common errors related to invalid requests may occur.
- 'USER_NOT_AUTHORIZED: The user is not authorized to perform this action'
- '401 Unauthorized: Recheck permissions or token expiration'
- '404 Resource Not Found: Check the provided ID'
- '401 Unauthorized: Ensure API client credentials are correct.'
- '400 Bad Request: Check the input data format and required fields.'
- 'DuplicatePublicationTriggeredError: A publication process was already triggered
  for this product.'
- 'EditionIdMismatchError: The edition ID provided does not match the expected edition.'
- '409 The segment already exists: Ensure the segment does not already exist.'
- 'BAD_DATA: Usage submitted after 6 PM UTC on the last day of billing period. Cut
  off to submit usage for Volume based rating is breached. Usage submitted for this
  request is discarded.'
- '401 Unauthorized: Ensure that the necessary flags are enabled and set to True.'
- '404 Not found: Verify subscription ID'
- '404 Not Found: Check if the endpoint URL is correct'
- '500 Internal Server Error: Check server logs for more details'
- Webhook is considered to have failed if the webhook endpoint returned an HTTP code
  that is not in the 2XX range.
- Webhook is considered to have failed if the OAuth2 handshake resulted in an error.
- Webhook is considered to have failed if the webhook endpoint did not respond within
  the maximum timeout of 30 seconds.
- '401 Unauthorized: Check OAuth credentials'
- '500 Internal Server Error: Please try again later.'
- '400 Bad Request: Check request format and parameters.'
- '404 Not Found: Ensure the company or resource exists'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Check user permissions'
- '403 Forbidden: Access denied'
- 404 Resource Not Found
- '404 Not Found: Discount ID does not exist.'
- 'BAD_REQUEST: An empty string is provided as an input for required fields.'
- 'GRAPHQL_VALIDATION_FAILED: Sub-fields of an object are not provided for a query/mutation.'
- 'NOT_FOUND: Entity not found when authentication credentials are invalid.'
- 'UNAUTHORIZED: Lacks valid authentication credentials.'
- 'INTERNAL_SERVER_ERROR: General server errors.'
- '404 Not Found: Ensure the orderId is correct'
- '400 Bad Request: Check input parameters.'
- '401 Unauthorized: Verify authentication token.'
- '404 Not Found: Ensure the endpoint exists.'
- 404 Subscription, user or assignment not found.
- '401 Unauthorized: Check authorization rules and scopes.'
- '404 Not Found: Ensure the subscription or company/user ID is correct.'
- '409 Conflict: Check if the subscription can be updated.'
- '400 Bad Request: Check query parameters.'
- '404 Not Found: Subscription ID may be invalid.'
- '409 Conflict: Check for existing associations or unique constraints'
- '401 Unauthorized: Check your roles or authentication.'
- 'NOT_FOUND: Resource does not exist'
- '400 Bad Request: Check the request body for correct parameters'
- '401 Unauthorized: Recheck OAuth token'
- '400 Bad Request: Check request structure and parameters.'
- '404 Not Found: Ensure the subscription ID exists.'
- '201 Created: The request was successful, and a new resource was created'
- '201 Created: Successfully created the resource'
- '404 Not Found: Resource may not exist or ID is incorrect.'
- 'Status Code: 200 OK: Successful retrieval of the discount.'
- '404 Not Found: Check if the order ID is valid'
- '400 Bad Request: Validation failed for the shopping cart.'
- 'UNAUTHORIZED: The authentication credentials are invalid.'
- '409 Conflict: Check subscription status or assignment'
- '401 Unauthorized: Check API credentials'
- '400: - INVALID TYPE<br />- INVALID OPERATION<br />- ACCOUNT IDENTIFIER MISSING<br
  />- DEVELOPER IDENTIFIER MISSING<br />- USER IDENTIFIER MISSING'
- '401: UNAUTHORIZED<br />The authentication credentials are invalid.'
- '403: USER SYNC DISABLED<br />The User Synchronization feature is disabled for the
  marketplace.'
- '404: SUBSCRIPTION NOT FOUND<br />The subscription does not exist in the marketplace.'
- '400 VALIDATION_ERROR: Discount with discountId = 5d0d26b5-3481-11e9-8e1f-02bf2c74dd2d,
  partner = VFZA, not applicable to productUUID = 1ab962b0-4257-44b8-bee1-71746e4bf25f,
  editionUUID = 97c67eb4-b536-4800-8c2c-f806df9bfa92, pricingPlanUUID = fe30d98e-f9b6-4960-b1e8-1c9f28740a0a'
- '400 Bad Request: Check the request body for required fields.'
- '404 Not Found: Verify if the company or user exists.'
- '401 Unauthorized: Ensure proper permissions and settings are enabled.'
- '401 Unauthorized: Check your access tokens and scopes.'
- '404 Company not found: Ensure the company UUID is valid.'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_INPUT: Check the input parameters provided.'
- 'UNAUTHORIZED: Ensure you have the necessary permissions.'
- '404 Not Found: Verify resource identifiers.'
- 'Bad Request: Unexpected end-of-input: expected close marker for OBJECT.'
- '409 Conflict: Already subscribed to this edition.'
- '403 Forbidden: The user does not have permissions to execute the action'
- '400 Bad Request: Check the request parameters and body'
- '401 Unauthorized: Ensure proper authentication'
- '201 Created: The request was successful and a new resource was created.'
- '204 No Content: Successfully deleted discount'
- 'FORBIDDEN: The bearer token provided in the authorization header doesn’t have necessary
  permissions to perform an action'
- '404 Not Found: Check the URL and parameters provided.'
- 'BLOCKING_ERROR: Check itemId for specific issue.'
- 'INVALID_INPUT: Ensure all required fields are populated.'
- 401 Invalid authentication
- '401 NOT AUTHORIZED: Ensure you are authenticated.'
- '409 The segment already exists: Use a unique segment code.'
- '404 Not Found: Verify provided identifiers.'
- '409 Conflict: Ensure request does not create conflicting assignments.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '404 User not found: Ensure the user UUID is correct.'
- '401 Unauthorized: Recheck your authentication credentials.'
- '409 Conflict: Check for existing associations or data'
- '400 Bad Request: Invalid request payload'
- 200 OK on success
- 404 Not Found if no product with the specified productId exists in the system
- 'BAD_REQUEST: Input Format Errors - Example: An empty string is provided as an input
  for cartId'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Missing required field information'
- '400: VALIDATION_ERROR: subscriptionId=%s is not active and can''t be subject to
  a price change'
- Verify the signature included in the webhook request for authenticity.
- Ensure the webhook endpoint is secured and only AppDirect requests are accepted.
- '403 Forbidden: Access denied for the specified role.'
- '404 Not Found: The requested opportunity ID is invalid.'
- '400 Bad Request: Check the request body for validation errors.'
- '404 Not Found: Ensure the payment instrument ID exists.'
- '500 Internal Server Error: Retry the request later.'
- '500 Internal Server Error: Server encountered an error.'
- '401 Not Authorized: Authentication failed.'
- '500 Internal Server Error: Server issue, try again later.'
- '201 Created: Successful creation of the subscription'
- 'USER_NOT_FOUND: Ensure the user ID is valid.'
- 'CART_NOT_FOUND: Verify the cart ID.'
- 'INVALID_INPUT: Check the input parameters.'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required fields are missing.'
- 'AUTHORIZATION_ERROR: Check your OAuth token and permissions.'
- 'VALIDATION_ERROR: Ensure all input parameters meet required specifications.'
- This feature is currently in Early Availability (EA) status.
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Invalid access token.'
- '403 Forbidden: Insufficient permissions for the action.'
- '400 Bad Request: Check the provided shoppingCartId or itemId.'
- '500 Unknown error: Retry the request or contact support.'
- '404 Not found: Verify the subscription ID.'
- '401 Unauthorized: Check your access permissions'
- '404 User not found: Verify the user identifier'
- '404 User not found: Check the user UUID provided'
- 'Invalid cart ID: Ensure the cart ID exists'
- 'User not authorized: Check user permissions'
- 'Invalid input: Validate input parameters'
- 'Unauthorized: Check your client credentials or token.'
- 'UNAUTHORIZED: The authentication credentials are invalid'
- '401: Missing authorization context. User must be authenticated.'
- 204 Lead created
- 409 Duplicate email address
- '409 Conflict: Resource conflict'
- '500 Unknown error: Handle gracefully.'
- 202 Accepted
- 403 Sync is disabled or Forbidden
- 'Bad Request: Unexpected character (" (code 34)): was expecting comma to separate
  OBJECT entries'
- '400 Bad Request: Invalid request format or missing parameters'
- '204 No Content: Indicates successful deletion of the discount.'
- Specific user errors when there's a failure in one of the business rules
- '404 Not found: The requested resource could not be found.'
- '401 Unauthorized: Check the provided tokens and scopes.'
- '401 Unauthorized: Check API keys or permissions.'
- 403 Forbidden to delete invitation of an active user
- '404 Not Found: Verify the lead ID or endpoint path'
- '400: Check required parameters for the request'
- '404 Not Found: Ensure the correct endpoint and parameters are used.'
- '204: Successfully updated'
- '400 Bad request: Check request parameters for validity.'
- '401 NOT AUTHORIZED: Ensure correct authentication credentials are used.'
- '409 The segment already exists: Check for existing segments before creation.'
- '401 NOT AUTHORIZED: Ensure valid authentication credentials'
- '500 Unknown error: Retry after some time'
- '401 Unauthorized: Check your permissions or authentication'
- '404 Not Found: Check the subscription ID or the endpoint path.'
- '404 Not Found: if no product with the specified productId exists in the system'
- '400: BAD REQUEST: Too many sets of information were received.'
- '400: BAD REQUEST: No tenant information was provided.'
- '400: DEVELOPER IDENTIFIER INVALID: You did not provide a valid developer identifier.'
- '401: UNAUTHORIZED: The authentication credentials are invalid.'
- '403: FORBIDDEN: Company Synchronization is disabled for the marketplace, or for
  the developer.'
- '404 Not Found: AI or chat ID does not exist.'
- '404 Company not found: Verify company UUID'
- '401 Unauthorized: Recheck roles and permissions for the API.'
- '404 Company/User/Membership not found: Verify identifiers.'
- '409 Active subscriptions found: Cannot delete a user with active entitlements.'
- '404 Not Found: Verify the company or group UUID'
- '401 Unauthorized: Authentication is required'
- '403 Forbidden: User permission issues'
- '403: The user does not have access'
- '409: The discount could not be applied due to redemption limits'
- '401 Unauthorized: Ensure valid authorization credentials.'
- '404 Not Found: Check if the endpoint and parameters are correct.'
- '503 Service unavailable: Service is not available'
- '429 Too Many Requests: Maximum of global requests of 20 per 2 seconds'
- 'INVOICE_NOT_FOUND: Check the invoice ID.'
- 'INVALID_INVOICE_DATA: Ensure all required fields are populated.'
- '401 Unauthorized: Invalid token'
- 'USER_NOT_AUTHORIZED: Check your permissions'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Missing required fields'
- '400: BAD REQUEST - No tenant information was provided.'
- '400: DEVELOPER IDENTIFIER INVALID - You did not provide a valid developer identifier.'
- '403: FORBIDDEN - Company Synchronization is disabled for the marketplace, or for
  the developer.'
- 404 Not Found, the specified resource does not exist.
- '403: The user does not have access to the opportunity or permission to execute
  the action'
- '404 Not Found: Check if the endpoint path and parameters are correct.'
- '503 Service unavailable: Service unavailable'
- '403 Forbidden: User does not have authorization to access the resource'
- Runtime errors or visual regressions may occur after upgrading from pre-v0.0.352.
- '400 Bad Request: Subscription not editable or previously deleted.'
- '409 Conflict: The specified payment instrument already exists.'
- '404 Not Found: Ensure the discountId is valid.'
- '400 Bad Request: Check the body of the request for required fields.'
- '400 Bad Request: Check the input parameters for errors.'
- '401 Unauthorized: Ensure valid authentication credentials are provided.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required field ''firstName'' has failed validation.'
- '400: Error attempting to create the lead (missing required data, for example)'
- '404 Not Found: Check the resource path and IDs'
- 'INVALID_INPUT: Check input structure and required fields.'
- 'AUTHORIZATION_ERROR: Ensure proper permissions for the API.'
- '400 Bad Request: Check the request body for correctness'
- '400 Bad Request: Invalid discount parameters.'
- Ensure that changes you make do not disrupt your business.
- 'DuplicatePublicationTriggeredError: Publication already triggered.'
- 'INVALID_DISCOUNT_CODE: Ensure the code is at least 4 characters long.'
- '204: No Content'
- '403: Permission denied'
- '400 Bad Request: Check request body or parameters.'
- '401 Unauthorized: Ensure correct authentication.'
- '404 Not Found: Verify endpoint and resource IDs.'
- '401 Unauthorized: Access denied due to missing or invalid authentication'
- '404 Not Found: Shopping cart not found.'
- '409 Subscription already created: Check if the subscription exists'
- '404 User not found: Verify the user UUID or path'
- '401 Unauthorized: Check OAuth token and permissions'
- '404 Not Found: Verify the endpoint path'
- '429 Too Many Requests: Reduce the request rate'
- '404 Not Found: Check the endpoint path or resource availability.'
- 'INVALID_REQUEST: Check the request parameters for validity.'
- 'UNAUTHORIZED: Verify your authentication credentials.'
- 'NOT_FOUND: Ensure the requested resource exists.'
- Common errors related to checkout process.
- 'DuplicatePublicationTriggeredError: A publication process has already been triggered
  for this product.'
- 'EditionIdMismatchError: The edition ID provided does not match the product''s edition.'
- 'INVALID_DISCOUNT_CODE: Check the discount code for errors.'
- 'DISCOUNT_EXPIRED: Ensure the discount is still valid.'
- '401 Unauthorized: Check your access token and scopes.'
- '404 Not Found: Verify company or group identifiers.'
- '400 Error attempting to convert the lead: Check lead status or data'
- '401 Unauthorized: Access denied due to invalid credentials.'
- '403 Forbidden: User lacks permission'
- '403 Forbidden: User does not have access or permission to execute the action'
- '401 Unauthorized: Ensure proper authentication is provided.'
- '204 No Content: Subscription cancellation was successful.'
- '404 Not Found: Check the subscription ID'
- '409 Subscription already created: A subscription with this ID already exists'
- '429 Too Many Requests: Input is valid, but too many requests have been made'
- 'InvalidCreateOrUpdatePriceBookVersionInputError: Represents an error when provided
  input for creating or updating price book version is not valid.'
- 'Bad Request: Unexpected character (''"'' (code 34)): was expecting comma to separate
  OBJECT entries.'
- '400 BAD_REQUEST: The request was invalid.'
- '401 UNAUTHORIZED: Authentication failed.'
- '404 NOT_FOUND: The requested resource was not found.'
- 401 Unauthorized - Missing or invalid authentication
- 403 Forbidden - User does not have permission to access this resource
- '401 Unauthorized: Recheck access permissions.'
- '401 Unauthorized: Recheck OAuth scopes or credentials'
- '404 Not Found: Check the requested resource or parameters'
- '404: Vendor not found.'
- '401: Invalid authentication'
- '403: Invalid authorization'
- '400 Bad request: Invalid input'
- '400 Bad Request: Check the request parameters and payload.'
- '401 Unauthorized: Ensure valid OAuth token is provided.'
- 'NOT_FOUND: Resource not found'
- 'BAD_REQUEST: Invalid request parameters'
- '400 Bad Request: Check request parameters and data structure.'
- '404 Not Found: Ensure the endpoint and resource exist.'
- 'Bad Request: Unexpected end-of-input: expected close marker for OBJECT (from [Source:
  org.apache.cxf.transport.http.AbstractHTTPDestination$1@41e290f5; line: 1, column:
  0])'
- '201 Created: Successfully created a subscription.'
- '404 Not Found: Discount not found'
- 'UserError: Required field ''firstName'' has failed validation: Missing information'
- 'REJECTED: Usage event rejected due to cancellation status.'
- 'ACCEPTED: Usage event accepted and will be invoiced.'
- 'Unauthorized: Recheck API credentials or permissions'
- '500: Unexpected'
- '501: Not implemented. The shipping partner does not support address validation.'
- '400: VALIDATION_ERROR - subscriptionId=%s contract auto-renews to a different pricing
  plan and can''t be subject to a price change'
- '400: VALIDATION_ERROR - Contract must exist and contract must auto-extend to the
  same pricingPlan %d'
- '401 Unauthorized: Ensure that both of these are enabled and set to True to be able
  to invite users.'
- '400 Bad Request: Check if the request is correctly formatted.'
- '401 Unauthorized: Check your permissions or authentication token'
- '404 Not Found: Ensure the company UUID is correct'
- '404: Product with id not found.'
- '404 Not Found: Check if the order ID or user ID is correct'
- '200 OK: Successful retrieval of data'
- '401 Unauthorized: Recheck user permissions.'
- '403 Forbidden: User does not have access to the requested resource.'
- '409: Conflict in request'
- '401 NOT AUTHORIZED: Check API key or permissions'
- 'Unauthorized: Check client credentials or token expiration'
- '401 Unauthorized: Recheck OAuth credentials or scopes'
- '400 Bad Request: Invalid parameters in the request'
- '400 Bad Request: Check for missing required parameters'
- '404 Not Found: Verify endpoint and resource'
- 'EditionIdMismatchError: The product''s edition ID does not match the expected value.'
- 'USAGE_SUBMISSION_CUTOFF: Usage submitted after the cutoff time on the last day
  of billing period.'
- 400 - INVALID TYPE
- 400 - INVALID OPERATION
- 400 - ACCOUNT IDENTIFIER MISSING
- 400 - DEVELOPER IDENTIFIER MISSING
- 400 - USER IDENTIFIER MISSING
- 401 - UNAUTHORIZED
- 403 - USER SYNC DISABLED
- 404 - SUBSCRIPTION NOT FOUND
- 429 - No message is displayed. An empty response is sent.
- '403: No permission'
- '404: No fulfillment record found'
- '401 Unauthorized: Check your API credentials or token.'
- '404 Not Found: Ensure the zone UUID is correct.'
- '400: DISABLED_FEATURE: END_OF_CONTRACT price change feature is disabled for partner
  %s'
- 'USER_NOT_FOUND: Check if the user exists.'
- 'COMPANY_NOT_FOUND: Check if the company ID is correct.'
- 'INVALID_EMAIL: Ensure the email address is valid.'
- '401 Unauthorized: Check that the necessary flags are enabled for user creation
  and invitations.'
- '400 Bad Request: Check the request payload for errors.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '500 Internal Server Error: Retry the request or contact support.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '404 Not Found: Verify the endpoint and resource existence.'
- '409 Conflict: Active subscriptions found.'
- '401 Unauthorized: Unauthorized to access the resource'
- '404 Not Found: Verify lead or resource existence'
- '400 Bad Request: Check provided data and parameters'
- '403 Forbidden: Access to the opportunity is denied'
- '401 Unauthorized: The user does not have the required permissions.'
- '500 Internal Server Error: Server issues'
- '404 Not Found: Verify the endpoint and parameters'
- '400 Bad request: Check request parameters and body.'
- 404 Subscription or assignments not found.
- '404 Not Found: Check subscription ID or company ID'
- 'FILE_FORMAT_ERROR: Ensure localization files have the correct .yml extension.'
- 'IMAGE_NOT_FOUND: Verify that images are uploaded to the correct path.'
- This field is invalid
- 'Unauthorized: Check client ID and secret'
- '401 Unauthorized: Authentication required to access this endpoint'
- 'Invalid input: Check the input parameters'
- 'Unauthorized: Check your authentication token'
- 'Invalid OAuth credentials: Check clientId and clientSecret.'
- 'Product publication not supported: Ensure product type is valid.'
- Usage submitted after 6 PM UTC on the last day of billing period. Cut off to submit
  usage for Volume based rating is breached.
- '200: An updated fulfillment record returned'
- '409: Conflict—For example, items listed in the shipmentRecord are not in the shipmentRequest'
- 'VALIDATION_ERROR: subscriptionId=%s contract auto-renews to a different pricing
  plan and can''t be subject to a price change'
- 'VALIDATION_ERROR: Contract must exist and contract must auto-extend to the same
  pricingPlan %d'
- 'DISABLED_FEATURE: END_OF_CONTRACT price change feature is disabled for partner
  %s'
- 'VALIDATION_ERROR: No valid billing event date for order=%s'
- 'VALIDATION_ERROR: Cannot find company entitlement with subscriptionId=%s'
- 'VALIDATION_ERROR: subscriptionId=%s is not active and can''t be subject to a price
  change'
- 'VALIDATION_ERROR: subscriptionId=%s is imported and can''t be subject to a price
  change'
- 'VALIDATION_ERROR: subscriptionId=%s has a pending event and can''t be subject to
  a price change'
- 'VALIDATION_ERROR: Discount with discountId = 5d0d26b5-3481-11e9-8e1f-02bf2c74dd2d,
  partner = VFZA, not applicable to productUUID = 1ab962b0-4257-44b8-bee1-71746e4bf25f,
  editionUUID = 97c67eb4-b536-4800-8c2c-f806df9bfa92, pricingPlanUUID = fe30d98e-f9b6-4960-b1e8-1c9f28740a0a'
- '400 Bad Request: Check request parameters for validity.'
- '404 Not Found: Verify the company or user UUID provided.'
- '401 Unauthorized: Confirm OAuth token is valid and has the necessary scopes.'
- '401 Unauthorized: Ensure necessary permissions and flags are enabled for user invitations
  and updates.'
- '401 Unauthorized: Verify the access token and permissions.'
- Webhook considered failed if the endpoint returned an HTTP code not in the 2XX range.
- Webhook considered failed if the OAuth2 handshake resulted in an error.
- Webhook considered failed if the endpoint did not respond within the maximum timeout
  of 30 seconds.
- '404 Company not found: Verify the companyUuid'
- '201: Created'
- '403 Forbidden: User does not have access to opportunity'
- '404 Not Found: Verify the endpoint or resource may not exist.'
- '503 Service unavailable: Service is temporarily down'
- '400 Bad Request: Verify the parameters.'
- '204: No content returned'
- '409: Conflict with existing resource'
- '404 User not found: Check the webhook UUID.'
- 'InternalServerUnpublicationError: Error occurred during unpublication process.'
- 'InvalidUnpublicationError: Unpublication operation failed due to invalid parameters.'
- 'Bad Request: The request is invalid.'
- 'Not Found: The requested resource does not exist.'
- 'Status Code: 200 OK'
- '204 No Content: Successful delete of a discount'
- '400 Bad Request: Invalid request made to the API'
- '404 Not Found: The requested discount does not exist'
- 'VALIDATION_ERROR: Missing required parameters'
- 'REQUIRED_FIELD_VALIDATION_ERROR: Required fields must be provided in the input.'
- '400: - INVALID TYPE - INVALID OPERATION - ACCOUNT IDENTIFIER MISSING - DEVELOPER
  IDENTIFIER MISSING - USER IDENTIFIER MISSING'
- '403: USER SYNC DISABLED - The User Synchronization feature is disabled for the
  marketplace.'
- '404: SUBSCRIPTION NOT FOUND - The subscription does not exist in the marketplace.'
- '422: Invalid address or problem with address'
- The webhook endpoint returned an HTTP code that is not in the 2XX range.
- The webhook endpoint is configured with OAuth2 credentials, but the OAuth2 handshake
  resulted in an error.
- The webhook endpoint did not respond within the maximum timeout of 30 seconds.
- 403 Forbidden, the user is not authorized to perform this action
- 404 Not Found, the specified resource does not exist
- '409 Conflict: Conflict with current state of the resource'
- '401 Unauthorized: Ensure valid credentials.'
- '403 Forbidden: Role hierarchy violation. The user making the request cannot change
  the password of a user with a higher role than their own.'
- '404 Not Found: Invitation not found'
- '404 Not Found: Verify that the lead ID exists'
- '400 Bad Request: Ensure all required parameters are included'
- '404 Not Found: Check the provided IDs'
- '409 Conflict: Resource already exists or cannot be modified'
- '401 Unauthorized: Check your credentials or permissions'
- '404 Not found: The requested resource was not found'
- '500 Unknown error: Retry the request.'
- '404 Not Found: Check subscription or developer account existence'
- Calculated cost = number of requests + total number of nodes returned
- Request limits define the number of points that are allowed by a single GraphQL
  request made by a client application. The current limit is 1000 points.
- Rate limits define the maximum number of points that are allowed by a client application
  per minute.
- '400 Bad Request: Check request parameters and structure'
- '401 Unauthorized: Authentication failed or token expired'
- '400: INVALID TYPE

  INVALID OPERATION

  ACCOUNT IDENTIFIER MISSING

  DEVELOPER IDENTIFIER MISSING

  USER IDENTIFIER MISSING'
- '401: UNAUTHORIZED

  The authentication credentials are invalid.'
- '403: USER SYNC DISABLED

  The User Synchronization feature is disabled for the marketplace.'
- '404: SUBSCRIPTION NOT FOUND

  The subscription does not exist in the marketplace.'
- '200: OK—An empty JSON object is returned'
- '400: Bad request data—for example, missing data'
- 'VALIDATION_ERROR: Discount not applicable to productUUID = 1ab962b0-4257-44b8-bee1-71746e4bf25f'
- '400 Bad Request: Check request parameters and body for correctness'
- '404 Not Found: Ensure the company or user UUID exists'
- '400 Bad Request: Verify the payload structure matches API expectations.'
- '401 Unauthorized: Check your access token and permissions.'
- '404 Not Found: Ensure the webhook URL is correct.'
- '401 Unauthorized: The header value does not match the token value.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ROLE_USER
  - ROLE_RESELLER
  - ROLE_SALES_SUPPORT
  - ROLE_CHANNEL_SUPPORT
  - ROLE_CHANNEL_ADMIN
  - ROLE_CORPORATE_ADMIN
  - ROLE_PARTNER_READ
  - ROLE_RESELLER_MANAGER
  - ROLE_SYS_ADMIN
  - ROLE_PARTNER
  - oauth2Config
  - consumer key
  - consumer secret
  - ProductIntegrationSingleSignOnConfiguration
  - ApiKeyAuth
  - ROLE_REFERRAL
  - ROLE_DEVELOPER
  - AccountInfo
  - AddonInstanceInfo
  - UsageItemBean
  - ROLE_BILLING_ADMIN
  - ROLE_CHANNEL_PRODUCT_SUPPORT
  - ROLE_APPLICATION
  - AD-ShoppingCart-Partner
  - DiscountToken
  - DiscountProvider
  - OAuthToken
  - OAuth2
  - paymentMethod
  - paymentInstrument
  - OAuth
  - UserCompanyMembershipAccountV2
  - UserAccountV2
  - OAuth 2.0
  - API clients
  - API client
  - access tokens
  - scopes
  - grant types
  - UpdateCartCustomAttributesInput
  - CartValidationInput
  - RemoveItemsInput
  - UpdateCartItemsInput
  - refresh tokens
  - UserError
  - AsynchronousProcess
  - CreatePriceBookInput
  - CreatePriceBookConditionInput
  - CreatePriceBookEntryInput
  - ClientCredentials
  - AuthorizationCode
  - jwt
  - jwks-rsa
  - authorization code
  - oauth_version
  - oauth_signature_method
  - oauth_nonce
  - oauth_timestamp
  - oauth_consumer_key
  - oauth_signature
  - accountIdentifier
  - vendor
  - jsonwebtoken
  - oauth2
  - CartValidationRequest
  - access_token
  - Client Id
  - Client Secret
  - JWT
  - XSRF-TOKEN
  - PaymentInstrument
  - PaymentMethod
  - OAuth2 API client
  - OAuth2 Token
  - API Client
  - OAuthSignatureMethod
  - OAuth2 Client Credentials
  - User
  - access token
  - refresh token
  - Access tokens
  - Scopes
  - serviceAuthToken
  - PsaMorInput
  - PsaConnectorType
  - CommissionEventConnection
  - CommissionEventErrorSummary
  - TriggerCommissionImportProcessInput
  - Marketplace Manager
  - Reseller Manager
  - PriceBookInput
client:
  base_url: https://marketplace.appdirect.com/api
  headers:
    Content-Type: application/json
  paginator:
    page_size_param: count
    default_page_size: 250
source_metadata: null
