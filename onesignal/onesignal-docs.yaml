resources:
- name: message_event
  endpoint:
    path: /messages
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: push_notifications
  endpoint:
    path: /reference/create-message
    method: POST
    data_selector: data
- name: analytics
  endpoint:
    path: /reference/view-messages
    method: GET
    data_selector: analytics
- name: email_campaigns
  endpoint:
    path: /api/v1/send_email_campaign
    method: POST
    data_selector: email_campaign_data
- name: create_message
  endpoint:
    path: /reference/create-message
    method: POST
- name: view_messages
  endpoint:
    path: /reference/view-messages
    method: GET
- name: create_segment
  endpoint:
    path: /segments
    method: POST
    data_selector: segment
    params: {}
- name: delete_segment
  endpoint:
    path: /segments/{id}
    method: DELETE
    data_selector: segment
    params: {}
- name: users
  endpoint:
    path: /docs/users
    method: GET
- name: subscriptions
  endpoint:
    path: /docs/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /reference/create-subscription
    method: POST
    data_selector: data
    params: {}
- name: delete_users
  endpoint:
    path: /docs/delete-users
    method: DELETE
    data_selector: data
    params: {}
- name: deep_linking
  endpoint:
    path: /docs/deep-linking
    method: GET
    data_selector: content
    params: {}
- name: custom_outcomes
  endpoint:
    path: /outcomes
    method: POST
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: delete_player_record
  endpoint:
    path: /api/v1/players/{player_id}
    method: DELETE
    params:
      app_id: '{app_id}'
      player_id: '{player_id}'
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: id
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
    params:
      idempotency_key: uuid
- name: push_notification
  endpoint:
    path: /create/message
    method: POST
    data_selector: message
    params: {}
- name: push_notification
  endpoint:
    path: /notifications?c=push
    method: POST
    data_selector: id
- name: email_notifications
  endpoint:
    path: /notifications?c=email
    method: POST
    data_selector: id
- name: sms_notification
  endpoint:
    path: /notifications?c=sms
    method: POST
    data_selector: id
- name: view_message
  endpoint:
    path: /notifications/{message_id}
    method: GET
    data_selector: response
    params:
      app_id: YOUR_APP_ID
- name: view_messages
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params:
      app_id: YOUR_APP_ID
      limit: 50
      offset: 0
- name: cancel_message
  endpoint:
    path: /notifications/{message_id}
    method: DELETE
    params:
      app_id: '{app_id}'
- name: message_history
  endpoint:
    path: /notifications/{message_id}/history
    method: POST
    data_selector: success
    params:
      app_id: YOUR_APP_ID
      events: sent
      email: <string>
- name: transactional_messages
  endpoint:
    path: /docs/transactional-messages
    method: POST
    data_selector: messages
    params: {}
- name: aliases
  endpoint:
    path: /aliases
    method: POST
    data_selector: aliases
    params: {}
- name: location_based_messages
  endpoint:
    path: /location-based-messages
    method: GET
    data_selector: messages
    params: {}
- name: create_template
  endpoint:
    path: /reference/create-template
    method: POST
- name: view_templates
  endpoint:
    path: /reference/view-templates
    method: GET
- name: update_template
  endpoint:
    path: /reference/update-template
    method: PUT
- name: delete_template
  endpoint:
    path: /reference/delete-template
    method: DELETE
- name: copy_template_to_another_app
  endpoint:
    path: /reference/copy-template-to-another-app
    method: POST
- name: push_notifications
  endpoint:
    path: /create-notification
    method: POST
    data_selector: notification
    params:
      throttle_rate_per_minute: ''
- name: start_live_activity
  endpoint:
    path: /apps/{app_id}/activities/activity/{activity_type}
    method: POST
    data_selector: notification_id
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
    params:
      incremental: app_id
- name: template
  endpoint:
    path: /templates
    method: POST
    data_selector: null
    params: {}
- name: update_template
  endpoint:
    path: /templates/{template_id}
    method: PATCH
    data_selector: id
    params:
      app_id: '{app_id}'
- name: view_template
  endpoint:
    path: /templates/{template_id}
    method: GET
    params:
      app_id: YOUR_APP_ID
- name: delete_template
  endpoint:
    path: /templates/{template_id}
    method: DELETE
    params:
      app_id: '{app_id}'
- name: copy_template
  endpoint:
    path: /templates/{template_id}/copy_to_app
    method: POST
    data_selector: success
    params:
      app_id: '{app_id}'
      target_app_id: YOUR_OTHER_APP_ID
- name: create_message
  endpoint:
    path: /create-message
    method: POST
    data_selector: data
    params: {}
- name: create_user
  endpoint:
    path: /create-user
    method: POST
    data_selector: data
    params: {}
- name: view_user
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}
    method: GET
    data_selector: properties
    params: {}
- name: create_user
  endpoint:
    path: /apps/{app_id}/users
    method: POST
    data_selector: properties
    params: {}
- name: update_user
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}
    method: PATCH
    data_selector: properties
    params: {}
- name: delete_user
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}
    method: DELETE
    data_selector: identity
- name: view_user_identity
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}/identity
    method: GET
    data_selector: identity
- name: view_user_identity_by_subscription
  endpoint:
    path: /apps/{app_id}/subscriptions/{subscription_id}/user/identity
    method: GET
    data_selector: identity
    params: {}
- name: create_or_update_alias
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}/identity
    method: PATCH
    data_selector: identity
- name: create_alias_by_subscription
  endpoint:
    path: /apps/{app_id}/subscriptions/{subscription_id}/user/identity
    method: PATCH
- name: remove_alias
  endpoint:
    path: /apps/{app_id}/users/by/{alias_label}/{alias_id}/identity/{alias_label_to_delete}
    method: DELETE
- name: export_audience_activity_csv
  endpoint:
    path: /notifications/{message_id}/export_events
    method: POST
    data_selector: csv_file_url
    params:
      app_id: YOUR_APP_ID
- name: export_subscriptions_csv
  endpoint:
    path: /players/csv_export
    method: POST
    data_selector: csv_file_url
- name: outcomes
  endpoint:
    path: /apps/{app_id}/outcomes
    method: GET
    data_selector: outcomes
    params:
      outcome_names: os__click.count
      outcome_time_range: 1h
      outcome_platforms: 0,1,2,5,8,11,14,17
      outcome_attribution: total
- name: custom_events
  endpoint:
    path: /apps/{app_id}/integrations/custom_events
    method: POST
    data_selector: events
- name: users
  endpoint:
    path: /create-user
    method: POST
- name: subscriptions
  endpoint:
    path: /create-subscription
    method: POST
- name: team_members
  endpoint:
    path: /team_members
    method: GET
    data_selector: members
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: web_push_notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: email_setup
  endpoint:
    path: /email/setup
    method: POST
    data_selector: email_setup
    params: {}
- name: sms_setup
  endpoint:
    path: /sms/setup
    method: POST
    data_selector: setup_status
    params: {}
- name: send_test_sms
  endpoint:
    path: /sms/send_test
    method: POST
    data_selector: test_sms_status
    params: {}
- name: create_notification
  endpoint:
    path: /reference/create-message
    method: POST
    data_selector: parameters
    params:
      ios_interruption_level: '"active", "time-sensitive", "passive", or "critical"'
      ios_relevance_score: numeric value from 0 to 1
- name: Relevance Score for push notifications
  endpoint:
    path: /push/relevance-score
    method: POST
    data_selector: data
- name: Relevance Score for Live Activities
  endpoint:
    path: /live-activities/relevance-score
    method: POST
    data_selector: data
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: create_user
  endpoint:
    path: /apps/YOUR_VOIP_APP_ID/users
    method: POST
    data_selector: null
    params: {}
- name: create_notification
  endpoint:
    path: /notifications
    method: POST
    data_selector: null
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: ''
    params: {}
- name: create_user
  endpoint:
    path: /reference/create-user
    method: POST
- name: view_user
  endpoint:
    path: /reference/view-user
    method: GET
- name: update_user
  endpoint:
    path: /reference/update-user
    method: PUT
- name: delete_user
  endpoint:
    path: /reference/delete-user
    method: DELETE
- name: view_user_identity
  endpoint:
    path: /reference/fetch-aliases
    method: GET
- name: create_alias
  endpoint:
    path: /reference/create-alias
    method: POST
- name: delete_alias
  endpoint:
    path: /reference/delete-alias
    method: DELETE
- name: create_subscription
  endpoint:
    path: /reference/create-subscription
    method: POST
- name: update_subscription
  endpoint:
    path: /reference/update-subscription
    method: PUT
- name: init
  endpoint:
    path: /init
    method: POST
    data_selector: records
- name: track_event
  endpoint:
    path: /trackEvent
    method: POST
    data_selector: properties
- name: add_tag
  endpoint:
    path: /addTag
    method: POST
    data_selector: tags
- name: remove_tag
  endpoint:
    path: /removeTag
    method: POST
    data_selector: tags
- name: get_tags
  endpoint:
    path: /getTags
    method: GET
    data_selector: tags
- name: set_consent_required
  endpoint:
    path: /setConsentRequired
    method: POST
    data_selector: consent
- name: set_consent_given
  endpoint:
    path: /setConsentGiven
    method: POST
    data_selector: consent
- name: request_permission
  endpoint:
    path: /requestPermission
    method: GET
    data_selector: permission
- name: is_push_supported
  endpoint:
    path: /isPushSupported
    method: GET
    data_selector: support
- name: start_live_activity
  endpoint:
    path: /apps/YOUR_APP_ID/activities/activity/OneSignalWidgetAttributes
    method: POST
    data_selector: event
    params: {}
- name: update_live_activity
  endpoint:
    path: /apps/YOUR_APP_ID/live_activities/push-to-start/notifications
    method: POST
    data_selector: event
    params: {}
- name: end_live_activity
  endpoint:
    path: /apps/YOUR_APP_ID/live_activities/my_activity_id/notifications
    method: POST
    data_selector: event
    params: {}
- name: activities
  endpoint:
    path: /apps/YOUR_APP_ID/activities/activity/DefaultLiveActivityAttributes
    method: POST
    data_selector: null
    params: {}
- name: live_notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: create_user
  endpoint:
    path: /api/v1/players
    method: POST
    data_selector: id
    params: {}
- name: create_notification
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: id
    params: {}
- name: Add a device
  endpoint:
    path: /reference/add-a-device
    method: POST
    data_selector: required_parameters
    params:
      identifier: APNs push token
      device_type: '0'
      external_user_id: Unique identifier for the user
- name: os_notification_opened
  endpoint:
    path: /events/os_notification_opened
    method: POST
    data_selector: parameters
- name: os_notification_received
  endpoint:
    path: /events/os_notification_received
    method: POST
    data_selector: parameters
- name: os_notification_influence_open
  endpoint:
    path: /events/os_notification_influence_open
    method: POST
    data_selector: parameters
- name: create_segment
  endpoint:
    path: /apps/{app_id}/segments
    method: POST
    data_selector: success
    params: {}
- name: segments
  endpoint:
    path: /apps/{app_id}/segments
    method: GET
    data_selector: segments
    params:
      offset: 0
      limit: 300
- name: delete_segment
  endpoint:
    path: /apps/{app_id}/segments/{segment_id}
    method: DELETE
    data_selector: success
    params: {}
- name: delete_user
  endpoint:
    path: /reference/delete-user
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /reference/delete-subscription
    method: DELETE
- name: create_app
  endpoint:
    path: /apps
    method: POST
    data_selector: id
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: '[]'
- name: view_app
  endpoint:
    path: /apps/{app_id}
    method: GET
    data_selector: id
    params: {}
- name: update_app
  endpoint:
    path: /apps/{app_id}
    method: PUT
    data_selector: response
    params: {}
- name: view_api_keys
  endpoint:
    path: /apps/{app_id}/auth/tokens
    method: GET
    data_selector: tokens
- name: create_api_key
  endpoint:
    path: /apps/{app_id}/auth/tokens
    method: POST
    data_selector: token_id
    params: {}
- name: delete_api_key
  endpoint:
    path: /apps/{app_id}/auth/tokens/{token_id}
    method: DELETE
- name: update_api_key
  endpoint:
    path: /apps/{app_id}/auth/tokens/{token_id}
    method: PATCH
- name: rotate_api_key
  endpoint:
    path: /apps/{app_id}/auth/tokens/{token_id}/rotate
    method: POST
- name: APNs
  endpoint:
    path: /settings/push/ios
    method: POST
notes:
- All API requests must use HTTPS with TLS 1.2 or higher, on port 443.
- Clients must respect OneSignal’s DNS TTL of 300 seconds to avoid stale IP resolution.
- Users are identified by the External ID and can have multiple subscriptions.
- All features may not be available on free plans.
- API supports various push notification functionalities.
- Push notifications can be sent from the dashboard or API.
- Good deliverability ensures your emails reach the inbox instead of spam.
- Proper consent and registration are required before sending SMS or MMS messages.
- You must have the OneSignal SDK installed in your app to use In-App Messages.
- Live Activities are available on all plans except Free plans with more than 10,000
  opted-in subscribers.
- Journeys allow you to automate lifecycle messaging based on user behavior, time
  delays, or profile attributes.
- A/B testing is only available when sending through the dashboard. It is not available
  with the API.
- Analytics overview provides several ways to track, analyze, and export message and
  user behavior data.
- All Tag values must be strings.
- Segments update automatically as users interact with your app or site—no extra tracking
  required.
- Users start as anonymous until you assign an External ID.
- Do not use placeholder values like NA, NULL, 0, -1, all, or 00000000-0000-0000-0000-000000000000
  for External IDs.
- Phone numbers are unique per app.
- Re-adding after deletion creates a new Subscription ID.
- It is recommended to include the external_id when creating SMS subscriptions to
  link them to a User.
- Users can have multiple subscriptions across different channels.
- A maximum of 20 subscriptions per user is allowed.
- A user can have a maximum of 20 Subscriptions.
- If a 21st is added, OneSignal removes the External ID from the oldest Subscription.
- Subscriptions can be deleted for data privacy and cleaning up inactive records.
- Subscriptions with no activity for 18+ months are automatically deleted on Free
  plans.
- Personalizing messages helps users connect deeper with your app, potentially increasing
  engagement and revenue.
- Properties are not available in In-App Messages or Live activities.
- The dashboard editor uses a standard HTML field. Special characters like % may cause
  display issues in RTL languages.
- Confirmed Delivery is only available on paid plans.
- Requires both the Notification Service Extension (NSE) and correct App Group configuration
  to confirm receipt.
- Custom Outcomes are available on the Professional and Enterprise plans.
- 'Outcomes support two key metrics: Count and Sum.'
- OneSignal does not provide encryption services
- Ensure API can handle real-time data flows.
- API rate limit breaches result in temporary throttling (429), but apps are not disabled.
- Users of the Free plan can continue creating segments within the OneSignal Dashboard.
- Outcomes are stored on servers for 30 days.
- Send notifications to specific segments or users based on various targeting methods.
- Your OneSignal App ID in UUID v4 format is required.
- Ensure your SMS setup is complete.
- Messages sent through the API are only accessible 30 days after creation; however,
  messages sent using the OneSignal dashboard are accessible for the app’s lifetime.
- Messages sent through the API are only accessible 30 days after creation.
- Pagination using limit and offset can suffer from poor latency.
- Requests must be made within seven days of sending the notification.
- Notifications sent to fewer than 1,000 recipients will not record a 'received' event.
- Some setup tasks may require developer access to push, email, or SMS credentials.
- Always test your messages before launching campaigns.
- Use Liquid Syntax to personalize your messages.
- Always set the external_id before assigning any aliases.
- Avoid using sensitive information such as email addresses or phone numbers as alias
  values.
- Time Elapsed operators are only available on paid plans.
- OneSignal does not natively detect city or area codes.
- Template content data is stored for the lifetime of the template until it is deleted.
- Throttling must be enabled at the global settings level to be available for use.
- Throttling is not supported for Journeys and Automated Messages.
- The action to perform on the Live Activity only supports start.
- Ensure that the activity_id is unique and consistently used for each Live Activity
  to avoid conflicts.
- This endpoint does not return full template content such as message bodies, channel
  properties, or delivery configuration.
- Templates streamline and standardize message content across push, email, and SMS
  channels.
- Changes apply immediately across dashboard and API usage via the template_id reference.
- You must use your Organization API key, not an app-level REST API key.
- Your user must have admin-level access to both the source and target apps.
- App API keys can only be viewed once created.
- Treat App API Keys like a password. Do not share it.
- The onesignal_id alias cannot be deleted. Only secondary aliases (like email, external_id,
  etc.) are removable.
- The CSV download URL is valid for 3 days after creation.
- Only one concurrent export is allowed per OneSignal account.
- Only one export per OneSignal account can run at a time.
- Messages sent via the API are retained for ~30 days.
- If Click Tracking is enabled but click events are low, check for browser-level blocking
  (e.g., Brave or Firefox).
- Messages sent from the OneSignal API or Automated Messages are only saved for about
  30 days.
- Capping applies to all push messages, regardless of source (API, Journeys, or manual
  sends).
- Messages blocked due to capping are dropped, not queued for later.
- Migrating your current email sending domain to OneSignal simply requires updating
  the DNS records.
- If your sending domain has an established sending reputation then warm-up is not
  required unless you have a dedicated IP address.
- Custom events are currently in Early Access.
- Supports email, SMS, tags, and more for seamless user onboarding or migration.
- Assign the minimum role needed—don’t give full Admin access if View or Edit is enough.
- Use org-level roles for users who need access across many apps (like analysts or
  leadership).
- Limit API key access to trusted technical users with Admin roles.
- Free plans only support Admins—upgrade to add Viewers and Editors.
- Push notifications have platform-specific requirements that our SDKs handle for
  you.
- Web push notifications let you send real-time updates, reminders, and personalized
  messages to your users.
- Web push does not work on HTTP or in incognito/private modes.
- For optimal deliverability, use a subdomain (e.g., mail.yourdomain.com) rather than
  your root domain.
- Each unique phone number is treated as a separate SMS subscription.
- Use E.164 format for phone numbers.
- OneSignal Mobile SDK version 5.0.0 or higher is required
- FCM is expiring tokens for devices that have been inactive for more than 270 days.
- You cannot send more than 10x your subscriber count in messages within a 15-minute
  window.
- Using Android asset studio to generate icons is recommended.
- If you’ve very recently added an icon resource to your app, you may want to wait
  a few days before sending notifications using the icon.
- OneSignal enforces a 5MB upload limit and does not support audio or video uploads.
- Hosted images expire after 33 days.
- Custom sounds are a way to provide a more unique, branded experience for your app.
- Currently OneSignal does not log the resource incorrect issues, we’re working on
  adding this to your logs.
- 'To ensure badge counts increment correctly on iOS, you must configure: The `OneSignalNotificationServiceExtension`
  and App Groups.'
- By default, the OneSignal SDK will clear the app icon badge when the app is opened.
- Users often need to expand the notification to see buttons (e.g., long press on
  iOS, swipe + View on some Android OEMs).
- Reserve a score of 1.0 for the most critical messages.
- Overusing high scores will cause the system to ignore the distinction.
- Web push only works on secure sites with a valid SSL certificate
- Users cannot subscribe while in Incognito or private browsing mode
- iOS devices require additional setup
- If your server experiences slowdowns or becomes unreachable after sending notifications,
  it is often due to increased load from notification assets or limited server resources.
- Avoid self-hosting images used in notifications.
- 'Subscribed users only: The OneSignal SDK sends data notifications only to subscribed
  users by default.'
- Force-closed apps can’t receive background pushes.
- Users must grant permission to receive notifications.
- Each device creates a separate subscription.
- iOS only allows the permission prompt once.
- Android allows it twice.
- Provisional notifications can be sent without user permission.
- Application can still request regular push notification permissions.
- OneSignal’s Android notification categories work for Google Android, Huawei Android,
  and Amazon FireOS.
- If you always send push notifications with a custom category, the 'Miscellaneous'
  channel won’t appear on user devices.
- VoIP notifications are not tracked for confirmed deliveries.
- Requires setup of connected app in OneSignal
- For push and in-app messages, in most cases, you can setup a URL Scheme and deep
  link using the protocol x://.
- Push notifications you send from OneSignal must first go to the different push services
  (e.g., FCM, APNS, HMS).
- Using the SDK `setLogLevel` method with `WARN` or `VERBOSE` logging can show specific
  errors related to image downloading.
- Apple acknowledged a bug in iOS 17 that caused duplicates. This was fixed in iOS
  17.3.
- If you’re using OneSignal Android SDK versions 4.4.1 – 4.6.2, update to the latest
  version to avoid known issues.
- Notification Service Extensions let you intercept and modify push notifications
  before it’s displayed to the user.
- Make sure to replace YOUR_API_KEY with your actual API key.
- Make sure to replace YOUR_APP_ID with your actual App ID.
- Enable Token Identity Verification in the dashboard.
- App Clips use a different bundle identifier from the main app.
- 'Ephemeral permission duration: Only lasts 8 hours. To send notifications beyond
  this, request full push permission.'
- 'No Notification Service Extension support: No rich media (images, videos, etc.),
  No custom action buttons (only predefined categories allowed).'
- 'Location access is limited: App Clips cannot request Always location access. They
  can request When In Use, which expires at 4:00 a.m. the next day.'
- Regular updates help improve UX and boost engagement.
- Outdated SDKs increase technical debt, introduce bugs, and delay access to new capabilities.
- The OneSignal SDK is loaded with the defer attribute on your page.
- Init options only work with Custom Code Setup.
- OneSignal currently supports UWP apps only
- Channel URIs can expire and change
- Recommended to upgrade to our latest version 5 SDKs for User Model APIs.
- Highly recommend enabling identity verification for apps and websites that use setting
  external_user_ids and/or Email Messaging.
- OneSignal was built to be compliant with GDPR, CCPA and all your data privacy needs,
  even on our Free Plan!
- This integration does not support UTM parameters to the launch URL.
- Firebase click event os_notification_opened and received event os_notification_received
  may not work if the Firebase library has not initialized in time.
- This endpoint creates segments only. It does not support editing existing segments.
- You can have unlimited apps (free to create)
- Multiple organizations (free or paid)
- You must be an Organization Admin to view billing information.
- Enterprise Plans please contact ar@onesignal.com for billing inquiries.
- Use your Organization API Key to authenticate.
- This API is limited to return a maximum of 1000 Apps.
- Your Organization API key with prefix Key is required for authentication.
- Requires your Organization API Key and the token’s unique ID, not the token value
  itself.
- Use your Organization API key found in Organizations > Keys & IDs
- Rotating a key revokes the current token and generates a new one under the same
  configuration.
- This guide should not be used for Web Push.
- Google began deprecating legacy FCM APIs in July 2024. Migration is strongly recommended.
- Uses token-based authentication with .p8 key.
- .p12 Certificates expire after one year. If you don’t want to manage the renewal
  of this certificate, you can create a .p8 key instead, which does not expire.
- This is not recommended because you must renew it annually.
errors:
- 'HTTP 429 (Too Many Requests): Wait for the duration specified in the Retry-After
  header before retrying.'
- 'HTTP 5xx (Server Errors): Retry the request using exponential backoff.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key'
- '404 Not Found: Ensure the endpoint is correct'
- '404 Not Found: Check the endpoint or resource ID'
- '403 Forbidden: Verify API key permissions'
- '400 Bad Request: Review request payload structure'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- Apple does not provide a fixed limit for high-priority updates, but they do enforce
  a dynamic system-level budget.
- 'invalid_identifier: true means unsubscribed'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check API key and permissions.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'Request failed: Ensure your API is able to handle the volume of events.'
- API rate limit exceeded.
- '401 Unauthorized: Recheck API key'
- '400 Bad Request: Check your request parameters for correctness.'
- '401 Unauthorized: Ensure your API key is valid and included.'
- '400: Invalid request'
- '200: Successful request'
- '400: Bad Request'
- '200: Message Sent'
- '400 Bad Request: Invalid parameters or request body.'
- '429 Too Many Requests: Throttle API calls'
- 400 Bad Request
- '200'
- '403: Retry fetching the file after a short period; it only means we’re still generating
  the report.'
- '400: Bad Request - Check your request parameters.'
- '401: Unauthorized - Check the Authorization header.'
- '401: Unauthorized'
- '404: Not Found'
- '422: Unprocessable Entity'
- '200: Success'
- '429: Too Many Requests'
- '400: Permission denied - check admin access for both apps.'
- '409: Conflict'
- '202'
- '400'
- '401'
- '409'
- '429'
- '404'
- 404 Not Found
- 429 Too Many Requests
- 409 Conflict
- '404: The specified key does not exist.'
- '404: File not ready (CSV file may not be available yet)'
- '400 Bad Request: Invalid parameters'
- '403 Forbidden: Access denied'
- '401 Unauthorized: Web push server gave an unclear 401 error. Retry cautiously —
  it may cause duplicate sends.'
- '404 Not Found: Invalid push subscription endpoint (bad token).'
- 'AuthenticationError: Migrate to the latest FCM v1 API.'
- 'DeviceTokenNotForTopic: Token’s Bundle ID does not match your APNs key or certificate.
  Fix in p8 token or p12 setup.'
- 'Expired Certificate: Your p12 certificate has expired.'
- 'FcmV1InvalidToken / Not Found: Invalid push token. Check Firebase credentials.
  Devices must reopen app to refresh tokens.'
- 'None / Missing: Firebase Cloud Messaging API may not be enabled in your project.
  Activate in the Firebase Console and retry.'
- 'Permission Denied: Check the full error message for which permission is missing.
  Update the permission for the Service Account file and re-upload it to OneSignal.'
- 'SenderIdMismatch: FCM v1 Sender ID mismatch. Verify Firebase credentials. Users
  must reopen the app for updated tokens.'
- 'TopicDisallowed: APNs token mismatch. Check your Team ID, Key ID, and Bundle ID
  in p8 config.'
- Misspelled or non-existent domains (e.g. @gmial.com)
- Email addresses already on your ESP’s suppression list
- Previously bounced addresses
- Inboxes throttling un-warmed sender domains
- Your app will be automatically disabled if the message threshold is exceeded.
- '401 Unauthorized: Recheck API key or token expiration'
- 'SdkInitError: OneSignal: This web push config can only be used on … Your current
  origin is …'
- 'PushPermissionNotGrantedError: The user dismissed the permission prompt.'
- The OneSignal web SDK can only be initialized once.
- 'Incorrect initialization: Make sure OneSignal is initialized in the Application
  class, not an Activity.'
- Could not download image!
- 'Encountered an error while attempting to download file with URL:'
- OneSignal encountered an exception while downloading file
- 'Unauthorized: Recheck API key or permissions'
- '400: Over the subscriber limit'
- '404: Not found'
- 'API integration issues: Validate your OneSignal App ID is correct'
- 'Users not receiving notifications: Confirm the OneSignal user record was created
  successfully'
- If your credit card failed, please make sure to update it.
- '401 Unauthorized: Ensure the Organization API key is correctly set.'
- '401 Unauthorized: Check your Organization API key'
- 'This configuration is for a different Firebase Project…: Use the original Firebase
  project’s JSON file.'
- 'Can I change my Sender ID?: No. The Sender ID is locked once your app surpasses
  100 Android users.'
- The uploaded file is not in .p12 format.
- Password was entered incorrectly or not set.
- Certificate was imported but not paired with a private key.
- Incorrect App ID, or Provisioning Profile missing capabilities.
- .p12 certificate is no longer valid.
auth_info:
  mentioned_objects:
  - Authorization Header
  - Basic Token
  - Bearer Token
  - ApiKey
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.onesignal.com
  auth:
    type: apikey
  headers:
    Accept: application/json
source_metadata: null
