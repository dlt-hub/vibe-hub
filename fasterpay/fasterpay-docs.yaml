resources:
- name: cancel_subscription
  endpoint:
    path: /api/subscription/<subscription-id>/cancel
    method: POST
- name: payment_form
  endpoint:
    path: /payment/form
    method: POST
- name: refund_payment
  endpoint:
    path: /payment/<order-id>/refund
    method: POST
- name: pingback
  endpoint:
    path: /api/pingback
    method: POST
- name: refund
  endpoint:
    path: /payment/<order-id>/refund
    method: POST
    params:
      amount: required
- name: cancel_subscription
  endpoint:
    path: /api/subscription/<subscription-id>/cancel
    method: POST
- name: pingback
  endpoint:
    path: /pingback
    method: POST
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: event
    params: {}
- name: payment_order
  endpoint:
    path: /payment_orders
    method: GET
    data_selector: payment_order
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: user
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/subscription/<subscription-id>/cancel
    method: POST
- name: delivery_confirmation
  endpoint:
    path: /api/v1/deliveries
    method: POST
- name: subscriptions
  endpoint:
    path: /payment/form
    method: POST
    data_selector: payment_order
    params:
      recurring_name: recurring_name
      recurring_sku_id: recurring_sku_id
      recurring_period: recurring_period
      recurring_trial_amount: recurring_trial_amount
      recurring_trial_period: recurring_trial_period
      recurring_duration: recurring_duration
- name: payment_form
  endpoint:
    path: /payment/form
    method: POST
    data_selector: null
    params: {}
- name: refund
  endpoint:
    path: /payment/<order-id>/refund
    method: POST
    data_selector: response
    params: {}
- name: payment_form
  endpoint:
    path: /payment/form
    method: POST
    data_selector: response
    params: {}
- name: payment_form
  endpoint:
    path: /payment/form
    method: POST
    data_selector: event
    params: {}
- name: cancel_subscription
  endpoint:
    path: /api/subscription/<subscription-id>/cancel
    method: POST
    data_selector: event
    params: {}
- name: delivery_confirmation
  endpoint:
    path: /api/v1/deliveries
    method: POST
    data_selector: event
    params: {}
- name: deliveries
  endpoint:
    path: /api/v1/deliveries
    method: POST
    data_selector: response
- name: Create Invoice
  endpoint:
    path: /api/external/invoices
    method: POST
    data_selector: data
- name: Payout Details
  endpoint:
    path: /api/external/payouts/{id}
    method: GET
    data_selector: data
- name: create_invoice
  endpoint:
    path: /api/external/invoices
    method: POST
- name: create_invoice
  endpoint:
    path: /invoices
    method: POST
    data_selector: data
    params: {}
- name: invoice_list
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params: {}
- name: invoice_details
  endpoint:
    path: /invoices/{invoice_id}
    method: GET
    data_selector: data
    params: {}
- name: payouts
  endpoint:
    path: /api/external/payouts
    method: GET
    data_selector: data
- name: address_fields
  endpoint:
    path: /api/external/address/fields/US
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/external/contacts
    method: GET
    data_selector: data.data
- name: create_contact
  endpoint:
    path: /api/external/contacts
    method: POST
    data_selector: data
- name: contact_details
  endpoint:
    path: /api/external/contacts/CT-250527-AZARCIJE
    method: GET
    data_selector: data
- name: update_contact
  endpoint:
    path: /api/external/contacts/CT-250527-AZARCIJE
    method: PUT
    data_selector: data
- name: delete_contact
  endpoint:
    path: /api/external/contacts/CT-250527-AZARCIJE
    method: DELETE
- name: update_invoice
  endpoint:
    path: /invoices/FPBIV-250615-NNUA
    method: PUT
    data_selector: data
    params: {}
- name: update_invoice_status
  endpoint:
    path: /invoices/FPBIV-250615-NNUA/status
    method: PUT
    data_selector: data
    params: {}
- name: preview_invoice
  endpoint:
    path: /invoices/FPBIV-250615-NNUA/pdf
    method: GET
    data_selector: data
    params: {}
- name: send_invoice
  endpoint:
    path: /invoices/FPBIV-250615-NNUA/send
    method: POST
    data_selector: data
    params: {}
- name: create_invoice_template
  endpoint:
    path: /invoices/templates
    method: POST
    data_selector: data
    params: {}
- name: invoice_template_list
  endpoint:
    path: /invoices/templates
    method: GET
    data_selector: data
    params: {}
- name: invoice_template
  endpoint:
    path: /invoices/templates/IT-250615-Q3CN
    method: GET
    data_selector: data
- name: update_invoice_template
  endpoint:
    path: /invoices/templates/IT-250615-Q3CN
    method: PUT
    data_selector: data
- name: delete_invoice_template
  endpoint:
    path: /invoices/templates/IT-250615-Q3CN
    method: DELETE
    data_selector: data
- name: create_invoice_product
  endpoint:
    path: /invoices/products
    method: POST
    data_selector: data
- name: invoice_product_list
  endpoint:
    path: /invoices/products
    method: GET
    data_selector: data
- name: invoice_product_details
  endpoint:
    path: /invoices/products/PD-250528-L5CC
    method: GET
    data_selector: data
- name: update_invoice_product
  endpoint:
    path: /invoices/products/PD-250528-L5CC
    method: PUT
    data_selector: data
- name: delete_invoice_product
  endpoint:
    path: /invoices/products/PD-250528-L5CC
    method: DELETE
    data_selector: data
- name: create_invoice_tax
  endpoint:
    path: /invoices/taxes
    method: POST
    data_selector: data
- name: invoice_tax_list
  endpoint:
    path: /invoices/taxes
    method: GET
    data_selector: data
- name: invoice_tax_details
  endpoint:
    path: /invoices/taxes/TX-250527-2E9N
    method: GET
    data_selector: data
- name: update_invoice_tax
  endpoint:
    path: /invoices/taxes/TX-250527-2E9N
    method: PUT
    data_selector: data
- name: delete_invoice_tax
  endpoint:
    path: /invoices/taxes/TX-250527-2E9N
    method: DELETE
    data_selector: data
- name: create_invoice_discount
  endpoint:
    path: /invoices/discounts
    method: POST
    data_selector: data
- name: invoice_discount_list
  endpoint:
    path: /invoices/discounts
    method: GET
    data_selector: data
- name: invoice_discount_details
  endpoint:
    path: /invoices/discounts/DC-250527-WZX0
    method: GET
    data_selector: data
- name: update_invoice_discount
  endpoint:
    path: /invoices/discounts/DC-250527-WZX0
    method: PUT
    data_selector: data
- name: delete_invoice_discount
  endpoint:
    path: /invoices/discounts/DC-250527-WZX0
    method: DELETE
    data_selector: data
- name: checkout_page
  endpoint:
    path: /payment/form
    method: POST
    data_selector: payment
    params: {}
- name: pingback
  endpoint:
    path: /pingback
    method: POST
    data_selector: pingbackData
    params: {}
- name: pingback
  endpoint:
    path: /pingback
    method: POST
    data_selector: transaction_details
- name: subscriptions
  endpoint:
    path: /payment/form
    method: POST
    data_selector: null
    params: {}
- name: pingback
  endpoint:
    path: /pingback
    method: POST
    data_selector: null
    params: {}
notes:
- Pingbacks should be validated by calculating signature on the merchant end.
- Pay Button integration does not require hash parameter.
- Pingbacks should be validated by calculating signature on the merchant end and comparing
  it with headers `X-FasterPay-Signature`.
- '[Deprecated] Version 1: Pingbacks should be validated using the `X-ApiKey` header
  value which is the Private Key used to initiate the requests.'
- Trial price for trial period subscription can vary.
- If recurring_duration is set to 0, the subscription will run until cancelled.
- Request header must include Accept and request parameter must include payment_flow.
- Refunds are initiated by sending a POST request to the refund endpoint.
- Pingbacks should be validated using the X-FasterPay-Signature header.
- Use 1 for Test Method in gateway setup
- Uses API key for authentication
- 'Required header: X-ApiKey:your_private_key'
- FasterPay’s Delivery Confirmation API only uses v2 signature version.
- 'FasterPay expects the following response: Response Status: 200, Response Body:
  ok'
- If a different response is received, FasterPay will resend Pingbacks every 30 minutes
  for up to 10 times.
- Test Mode allows businesses to integrate and test the payment flow without being
  in the live environment.
- The secret key header to be verified is 'X-FasterPay-Signature'.
- Response body should be 'ok' to acknowledge the pingback.
- Pay Button integration does not require hash parameter to be sent in the API request.
- If you are using FasterPay’s plugins in your E-Commerce stores, please refer to
  respective plugin documentation on configuring Delivery Confirmation.
- Use Test Mode before going live
- Set Live mode pingback URL to https://integration-hub.fasterpay.com/api/fasterpay/pingback/wix
- Find the Private Key and Public Key in the Integration > API Configuration which
  is accessible on the FasterPay Business dashboard.
- FasterPay Checkout Page API requires a Signature hash to be calculated and sent
  along with the other request parameters for merchant verification and protection
  against forged requests.
errors:
- 'NOK: Invalid request or validation failure.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check API key'
- '404 Not Found: Verify the order ID'
- '500 Internal Server Error: Contact support'
- 'Cancellation failed: Check subscription ID and private key'
- '00: Success'
- '01: This payment order does not exist or not belong to your account or not success
  payment.'
- '02: Invalid signature.'
- '03: Delivery is complete.'
- '04: Failed validation.'
- '05: Empty tracking data sent.'
- '06: Empty Physical parameters sent when change from digital to physical.'
- '07: Update wrong status for physical or digital goods.'
- '99: Other errors. Please send an email to integration@fasterpay.com with the error
  information.'
- '400 Bad Request: Check your request parameters and data.'
- '404 Not Found: Ensure the invoice ID is correct.'
- '401 Unauthorized: Verify API authentication.'
- 'NOK: Invalid Pingback'
auth_info:
  mentioned_objects: []
client:
  base_url: https://pay.fasterpay.com
  auth:
    type: apikey
    location: header
    header_name: X-ApiKey
source_metadata: null
