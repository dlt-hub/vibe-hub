resources:
- name: getAccountInfo
  endpoint:
    path: /getAccountInfo
    method: POST
    data_selector: result
    params: {}
- name: getBalance
  endpoint:
    path: /getBalance
    method: POST
    data_selector: result
    params: {}
- name: getBlock
  endpoint:
    path: /getBlock
    method: POST
    data_selector: result
    params: {}
- name: getBlocks
  endpoint:
    path: /getBlocks
    method: POST
    data_selector: result
    params: {}
- name: getLatestBlockhash
  endpoint:
    path: /getLatestBlockhash
    method: POST
    data_selector: result
    params: {}
- name: getSignatureStatuses
  endpoint:
    path: /getSignatureStatuses
    method: POST
    data_selector: result
    params: {}
- name: getTokenAccountBalance
  endpoint:
    path: /getTokenAccountBalance
    method: POST
    data_selector: result
    params: {}
- name: getTokenSupply
  endpoint:
    path: /getTokenSupply
    method: POST
    data_selector: result
    params: {}
- name: getTransaction
  endpoint:
    path: /getTransaction
    method: POST
    data_selector: result
    params: {}
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: result
    params: {}
- name: getAccountInfo
  endpoint:
    path: /getAccountInfo
    method: POST
    data_selector: result
    params: {}
- name: getBalance
  endpoint:
    path: /getBalance
    method: POST
    data_selector: result
    params: {}
- name: getBlock
  endpoint:
    path: /getBlock
    method: POST
    data_selector: result
    params: {}
- name: getBlocks
  endpoint:
    path: /getBlocks
    method: POST
    data_selector: result
    params: {}
- name: getLatestBlockhash
  endpoint:
    path: /getLatestBlockhash
    method: POST
    data_selector: result
    params: {}
- name: getSignatureStatuses
  endpoint:
    path: /getSignatureStatuses
    method: POST
    data_selector: result
    params: {}
- name: getTokenAccountBalance
  endpoint:
    path: /getTokenAccountBalance
    method: POST
    data_selector: result
    params: {}
- name: getTokenSupply
  endpoint:
    path: /getTokenSupply
    method: POST
    data_selector: result
    params: {}
- name: getTransaction
  endpoint:
    path: /getTransaction
    method: POST
    data_selector: result
    params: {}
- name: sendTransaction
  endpoint:
    path: /sendTransaction
    method: POST
    data_selector: result
    params: {}
- name: sendTransaction
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: sendTransaction
  endpoint:
    path: ''
    method: POST
    data_selector: data
    params: {}
- name: Solayer InfiniSVM Litepaper
  endpoint:
    path: /whitepapers/solayer_infinisvm_litepaper.pdf
    method: GET
- name: Solayer Ecosystem Litepaper for sSOL
  endpoint:
    path: /whitepapers/solayer-litepaper-v0.pdf
    method: GET
- name: Solayer USD Litepaper
  endpoint:
    path: /whitepapers/solayer-USD-litepaper-v0.pdf
    method: GET
- name: Solayer InfiniSVM Litepaper
  endpoint:
    path: /solayer/infinisvm/litepaper
    method: GET
    data_selector: content
- name: Solayer Ecosystem Litepaper for sSOL
  endpoint:
    path: /solayer/ssol/litepaper
    method: GET
    data_selector: content
- name: Solayer USD (sUSD) Litepaper
  endpoint:
    path: /solayer/susd/litepaper
    method: GET
    data_selector: content
- name: airdrop
  endpoint:
    path: /airdrop
    method: POST
    data_selector: result
    params: {}
- name: validator_details
  endpoint:
    path: /validator/details
    method: GET
    data_selector: validator_info
    params: {}
- name: stake_delegation
  endpoint:
    path: /stake/delegate
    method: POST
    data_selector: delegate_info
    params: {}
- name: validator_details
  endpoint:
    path: /validator/details
    method: GET
    data_selector: validator_info
    params: {}
- name: Emerald Card Benefits
  endpoint:
    path: /documentation/Emerald-Card/point
    method: GET
- name: Nubit Genesis Emerald Rewards
  endpoint:
    path: /documentation/Emerald-Card/nubit-genesis-emerald-rewards
    method: GET
- name: restricted_us_states
  endpoint:
    path: /documentation/emerald-card/restricted-us-states
    method: GET
    data_selector: states
    params: {}
- name: restricted_countries
  endpoint:
    path: /documentation/emerald-card/restricted-countries
    method: GET
    data_selector: countries
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation_codes
    method: GET
    data_selector: records
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation_codes
    method: GET
    data_selector: records
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation/codes
    method: GET
    data_selector: codes
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation-codes
    method: GET
    data_selector: records
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation-codes
    method: GET
    data_selector: titles
    params: {}
- name: occupation_codes
  endpoint:
    path: /occupation/codes
    method: GET
    data_selector: codes
    params: {}
notes:
- Methods marked as deprecated are still functional but may not provide meaningful
  information due to Solayer’s architectural differences from Solana.
- 'Built-in OAuth Support: Simplified authentication and user onboarding.'
- Performance historical returns to the Solayer sSOL stake pool.
- 0% commission with 100% MEV kickback.
- Instantly mint/redeem sUSD (no lockups, no minimums)
- No centralized custodians
- Located in a key data center in Ashburn, VA, near subsea fiber cables.
- Optimized validator node code to maximize leader block rewards.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Emerald Points will soon be redeemable for partner perks, future airdrops, and other
  exclusive utilities.
- Free activation and waived application fee for Community Sale participants.
- Requires KYC verification for card application
- Application approval takes 3–5 business days
- Uses OAuth2 with refresh token — requires setup of connected app in Solayer
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://devnet-rpc.solayer.org
source_metadata: null
