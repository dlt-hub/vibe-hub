resources:
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
- name: upload_image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: asset_management
  endpoint:
    path: /services/data/vXX.X/sobjects/AssetManagement
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /services/data/vXX.X/sobjects/Upload
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/ImageTransformations
    method: GET
    data_selector: records
    params: {}
- name: video_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoTransformations
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /:resource_type/upload
    method: POST
- name: download_backup
  endpoint:
    path: /download_backup
    method: GET
- name: explicit
  endpoint:
    path: /:resource_type/explicit
    method: POST
- name: rename
  endpoint:
    path: /:resource_type/rename
    method: POST
- name: rename
  endpoint:
    path: /v1_1/cld-docs/image/rename
    method: POST
    data_selector: result
    params: {}
- name: destroy
  endpoint:
    path: /:resource_type/destroy
    method: POST
    data_selector: result
    params: {}
- name: download_backup
  endpoint:
    path: /download_backup
    method: GET
    data_selector: url
    params: {}
- name: context
  endpoint:
    path: /:resource_type/context
    method: POST
    data_selector: public_ids
    params: {}
- name: metadata
  endpoint:
    path: /:resource_type/metadata
    method: POST
    data_selector: metadata
    params: {}
- name: metadata
  endpoint:
    path: /v1_1/demo/image/metadata
    method: POST
    data_selector: public_ids
    params: {}
- name: tags
  endpoint:
    path: /v1_1/demo/image/tags
    method: POST
    data_selector: public_ids
    params: {}
- name: create_collage
  endpoint:
    path: /v1_1/demo/image/create_collage
    method: POST
    data_selector: public_ids
    params: {}
- name: explode
  endpoint:
    path: /v1_1/demo/image/explode
    method: POST
    data_selector: public_ids
    params: {}
- name: text
  endpoint:
    path: /image/text
    method: POST
- name: sprite
  endpoint:
    path: /image/sprite
    method: POST
- name: multi
  endpoint:
    path: /image/multi
    method: POST
- name: generate_archive
  endpoint:
    path: /v1_1/:resource_type/generate_archive
    method: POST
    data_selector: assets
    params:
      tags: lion
      resource_type: image
      timestamp: '173719931'
      api_key: '614335564976464'
      signature: a788d68f86a6f868af
- name: multi
  endpoint:
    path: /image/multi
    method: POST
    data_selector: assets
    params:
      tag: sample
      signature: a788d68f86a6f868af
- name: sample_text_image
  endpoint:
    path: /v1719322344/sample_text_image.png
    method: GET
    data_selector: asset_id
- name: image
  endpoint:
    path: /resources/image/upload
    method: POST
    data_selector: resource
- name: video
  endpoint:
    path: /resources/video/upload
    method: POST
    data_selector: resource
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: transformation
  endpoint:
    path: /transformations
    method: GET
    data_selector: transformations
    params: {}
- name: asset_management
  endpoint:
    path: /v1_1/<cloud_name>/resources
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: Assets
  endpoint:
    path: /documentation/dam_apis
    method: GET
- name: assets
  endpoint:
    path: /assets
    method: GET
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
- name: moderate_assets
  endpoint:
    path: /image/upload
    method: POST
    data_selector: moderation
    params: {}
- name: explicit_moderation
  endpoint:
    path: /image/explicit
    method: POST
    data_selector: moderation
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: resources
    params:
      moderation: webpurify
- name: resources_by_moderation
  endpoint:
    path: /resources_by_moderation
    method: GET
    data_selector: resources
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/asset_management
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /v2/assets
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
    params: {}
- name: image
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: resources
- name: video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: resources
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: cloudinary_image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: resources
    params: {}
- name: cloudinary_video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: video_url
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: image
  endpoint:
    path: /images
    method: GET
    data_selector: assets
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: assets
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: moderation
  endpoint:
    path: /uploader/upload
    method: POST
    data_selector: results
    params:
      moderation: manual
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
    params: {}
- name: media_assets
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/<cloudname>/upload
    method: POST
    data_selector: url
    params:
      upload_preset: <preset_name>
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/auto-tag
    method: POST
    data_selector: tags
    params:
      categorization: google_tagging
      auto_tagging: 0.6
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{{cloud_name}}/upload
    method: POST
    data_selector: response
    params: {}
- name: videos
  endpoint:
    path: /upload/videos
    method: POST
    data_selector: resources
- name: images
  endpoint:
    path: /upload/images
    method: POST
    data_selector: resources
- name: upload_small_video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: response
    params:
      resource_type: video
- name: upload_large_video
  endpoint:
    path: /v1_1/{cloud_name}/video/upload_large
    method: POST
    data_selector: response
    params:
      resource_type: video
      chunk_size: 6000000
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_image
  endpoint:
    path: /v1_1/{{ import.meta.env.VITE_CLOUDINARY_CLOUD_NAME }}/image/upload
    method: POST
    data_selector: url
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: upload_widget
  endpoint:
    path: /api/sign-cloudinary-params
    method: POST
    data_selector: result
    params: {}
- name: background_removal
  endpoint:
    path: /v1/background_removal
    method: POST
    data_selector: notification
    params: {}
- name: image
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /services/assets
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: cloudinary_sdk
  endpoint:
    path: /cloudinary/flutter_sdk
    method: GET
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: result
    params: {}
- name: transformations
  endpoint:
    path: /v1_1/{cloud_name}/image/transformation
    method: GET
    data_selector: result
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: public_id
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/asset_management
    method: GET
- name: upload
  endpoint:
    path: /documentation/upload_images
    method: GET
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /search
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: result
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: result
- name: image
  endpoint:
    path: /images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1_1/{cloud_name}/resources
    method: GET
    data_selector: resources
    params: {}
- name: CldImage
  endpoint:
    path: /CldImage
    method: GET
    data_selector: images
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: image_transformations
  endpoint:
    path: /image/transformation
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /video/transformation
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: transformations
  endpoint:
    path: /v1/transformations
    method: GET
    data_selector: resources
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: result
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
- name: Product Gallery
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductGallery
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/resources/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /video/cooking-stirfry
    method: GET
    data_selector: video
    params: {}
- name: image_transformations
  endpoint:
    path: /image/upload
    method: POST
    data_selector: resource
    params: {}
- name: video_transformations
  endpoint:
    path: /video/upload
    method: POST
    data_selector: resource
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: CldVideoPlayer
  endpoint:
    path: /cldvideoplayer/basic-usage
    method: GET
    data_selector: video
    params: {}
- name: media
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/media
    method: GET
    data_selector: resources
    params: {}
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /v1/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/auto/upload
    method: POST
    data_selector: response
    params: {}
- name: asset_management
  endpoint:
    path: /documentation/managing_assets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformations
  endpoint:
    path: /v1/image_transformations
    method: GET
    data_selector: transformations
- name: video_transformations
  endpoint:
    path: /v1/video_transformations
    method: GET
    data_selector: transformations
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: results
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_trim
  endpoint:
    path: /video/trim
    method: POST
    data_selector: url
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
    params: {}
- name: video_splice
  endpoint:
    path: /video/splice
    method: POST
    data_selector: videoUrl
    params: {}
- name: image_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/ImageTransformations
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoTransformations
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /video/upload
    method: POST
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: image
  endpoint:
    path: /services/data/vXX.X/sobjects/Image
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: data
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: data
- name: video
  endpoint:
    path: /video/upload
    method: POST
    data_selector: video
    params: {}
- name: assets
  endpoint:
    path: /services/data/vXX.X/assets
    method: GET
    data_selector: records
    params: {}
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: image_transformation
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: url
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: records
- name: background_removal
  endpoint:
    path: /backgroundRemoval
    method: POST
    data_selector: records
    params: {}
- name: drop_shadow
  endpoint:
    path: /dropShadow
    method: POST
    data_selector: records
    params: {}
- name: image_upload
  endpoint:
    path: /image/upload
    method: POST
    data_selector: data
    params: {}
- name: video_upload
  endpoint:
    path: /video/upload
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: accessibility_analysis
  endpoint:
    path: /v1/accessibility_analysis
    method: POST
    data_selector: result
    params:
      accessibility_analysis: 'true'
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /v1_1/{cloud_name}/upload
    method: POST
    data_selector: resource
    params: {}
- name: asset
  endpoint:
    path: /v1_1/{cloud_name}/resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: CldOgImage
  endpoint:
    path: /cldogimage
    method: GET
- name: assets
  endpoint:
    path: /v1/resources
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: video_trimming
  endpoint:
    path: /video/upload
    method: GET
    data_selector: trimming
- name: video_concatenation
  endpoint:
    path: /video/upload
    method: GET
    data_selector: concatenation
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: concatenate_videos_with_images
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
    params: {}
- name: cross_fade_transitions
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
    params: {}
- name: custom_transitions
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
    params: {}
- name: concatenating_authenticated_or_private_assets
  endpoint:
    path: /video/upload
    method: GET
    data_selector: records
    params: {}
- name: media
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/media
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: upload_from_local
  endpoint:
    path: /upload-from-local
    method: POST
    data_selector: uploadResult
    params: {}
- name: upload_large_from_local
  endpoint:
    path: /upload-large-from-local
    method: POST
    data_selector: uploadResult
    params: {}
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/video
    method: GET
    data_selector: records
- name: video_transformations
  endpoint:
    path: /video/upload
    method: GET
    data_selector: transformations
    params: {}
- name: video_transformation_example_1
  endpoint:
    path: /video/transformation/example_1
    method: POST
    data_selector: transformation
    params: {}
- name: video_transformation_example_2
  endpoint:
    path: /video/transformation/example_2
    method: POST
    data_selector: transformation
    params: {}
- name: video_transformation_example_3
  endpoint:
    path: /video/transformation/example_3
    method: POST
    data_selector: transformation
    params: {}
- name: video_transformation_example_4
  endpoint:
    path: /video/transformation/example_4
    method: POST
    data_selector: transformation
    params: {}
- name: video_transformation_example_5
  endpoint:
    path: /video/transformation/example_5
    method: POST
    data_selector: transformation
    params: {}
notes:
- Ensure to configure OAuth2 correctly for authentication.
- Uses OAuth2 with refresh token - requires setup of connected app in Cloudinary
- Requires setup of cloudinary account and app
- Uses OAuth2 with refresh token â€” requires setup of connected app in Cloudinary
- Some objects may return nulls in deeply nested fields
- To support large file uploads, the Cloudinary SDKs include the upload_large method,
  which offers a degree of tolerance for network issues by uploading files to your
  product environment in chunks.
- Not relevant for product environments using the legacy fixed folder mode.
- This parameter is given as a string of comma-separated single characters (separated
  with a slash for chained transformations).
- Supports a hash of transformation parameters (or an array of hashes for chained
  transformations).
- The public ID value for images and videos should not include a file extension. Include
  the file extension for raw files only.
- After running the rename method on an asset, the asset's existing URL and its associated
  derived assets are no longer valid.
- To bypass the CDN caching, you can include the invalidate parameter in your POST
  request.
- Uses API Key for authentication
- CDN cached copies may still be accessible after asset deletion unless invalidated
- Supports maps for metadata
- The signature parameter is required for signed REST API calls
- Free accounts are blocked from delivering files in PDF format for security reasons.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Cloudinary
- The api_secret should never be exposed in client-side code.
- It's considered best practice to validate and sanitize any user-provided input before
  including it in Cloudinary API calls.
- Root API keys designated as root key for new product environments created after
  June 5, 2025.
- Root user retains full administrative control on all product environments in the
  account.
- Uses OAuth2 with refresh token
- Assets may return nulls in some fields
- Enterprise accounts can manage keys from the Account API keys section in Console
  Settings.
- The interface and core workflows remain consistent across plans.
- Cloudinary MCP Servers and LLM-friendly docs make building with AI faster, smarter,
  and more accessible to developers and builders.
- For Enterprise customers, you must have an Assets plan to use the Media Library
  widget.
- The Cloudinary Assets product provides a single source of truth for storing and
  collaborating on all of your organization's rich media files.
- API rate limits apply
- Uses OAuth2 with refresh token — requires setup of connected app in Cloudinary
- By default, assets that are marked for moderation are deliverable and available
  via the Media Library.
- If you'd like the assets marked for moderation to be blocked (until approved), contact
  support.
- Requires setup of connected app in api
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- WebPurify automatically rejects images with no image format extension, images with
  the image format written in CAPS and any images in the PDF format.
- Requires setup of CLOUDINARY_URL environment variable
- Use the latest version for enhanced security and functionality
- Cloudinary is committed to protecting your information security.
- Uses OAuth2 with refresh token – requires setup of connected app in API
- Specify the configuration parameters in camelCase, for example cloudName.
- Ensure to configure your Cloudinary account properly for API access.
- Cloudinary APIs use OAuth2 for authentication.
- The Cloudinary class is the main entry point for using the library.
- Your cloud_name is required to create an instance of this class.
- Transformation effects can be chained when generating URLs
- Requires OAuth2 with refresh token setup.
- Make sure you always know when we publish new release notes with the Programmable
  Media release notes RSS feed
- Define your folder and URL prefix in the Auto upload mapping section.
- Requires setup of connected app in API
- Moderation can be set to manual or aws_rek
- Default threshold for AWS Rekognition is 0.5
- Requires setup of connected app in Cloudinary.
- Replace <cloudname> with your specific cloud name.
- Replace <preset_name> with the name of the unsigned preset.
- OAuth2 requires setup of connected app in API
- Auto-tagging is helpful when searching for an asset by a characteristic that's not
  revealed through its public ID.
- The Google Auto Tagging add-on allows for 50 monthly categorizations on the Free
  plan.
- OAuth2 with refresh token is required for API access.
- Some endpoints may have usage limits
- Uses OAuth2 for authentication.
- If you're uploading a large number of images, consider using a different upload
  method like p-limit.
- Setup required for OAuth2 authentication.
- Requires setup of Cloudinary account and API keys
- The upload method only supports files up to 100 megabytes.
- Requires valid credentials for API access
- Data may be subject to rate limits
- In your Cloudinary Console, navigate to Settings > Upload > Upload presets to create
  a new unsigned upload preset.
- Ensure proper OAuth setup and token management.
- Use unsigned uploads for testing purposes, though signed uploads are recommended
  for production.
- API supports multiple SDKs for various frameworks.
- Create an unsigned upload preset in Cloudinary Console.
- Requires setup of a Cloudinary account
- Some API responses may include nested fields
- Some responses may vary based on the request parameters
- Requires setup of Cloudinary account and API credentials
- Never share or expose your API key and secret, or commit them to GitHub, to avoid
  compromising your account.
- Ensure to configure your Cloudinary account for API access.
- Replace `ddjmx10sp` with your cloud name from Cloudinary Dashboard.
- Cloudinary requires authentication for all API calls.
- Configure Cloudinary by passing your cloud name.
- Use the image method with the asset's public ID.
- Uses OAuth2 for authentication
- Ensure proper configuration of the Node.js SDK for optimal performance.
- Requires setup of Cloudinary account and app credentials
- Ensure to replace {cloud_name} with your actual cloud name in the base URL.
- Cloudinary provides various media transformation capabilities.
- Some objects may have additional requirements for authentication.
- Requires setup in the Cloudinary dashboard.
- Check for network issues if authentication fails.
- Ensure to replace YOUR_CLOUD_NAME with your actual Cloudinary cloud name.
- Uses OAuth2 with refresh token.
- Be cautious of rate limits for API calls
- Use the Cloudinary Node.js SDK for searching images.
- Ensure to handle rate limits as per the API guidelines.
- Lazy loading minimizes loading times, helping retain visitors on your website.
- To avoid layout shifts when images load, it's best to define the width and height
  of images either through CSS or inline attributes.
- Requires configuration of Cloudinary account for API access.
- Ensure to handle rate limits appropriately.
- Requires setup of Cloudinary account and valid credentials
- Uses API key for authentication.
- Automatically generates captions for images with the 'captioning' detection parameter.
- Some API calls may return nested fields
- Uses API key for authentication
- Requires an account with Cloudinary.
- Token refresh will require correct configuration of OAuth2.
- MCP servers and LLM tools (Beta) available
- Cloudinary API requires valid cloud name.
- Ensure to replace YOUR_CLOUD_NAME with actual cloud name.
- Uses OAuth2 with refresh token – requires setup of connected app in Cloudinary
- Ensure to replace 'YOUR_CLOUD_NAME' with your actual Cloudinary cloud name.
- The `CldVideoPlayer` component allows you to embed videos for optimized delivery.
- Requires setup of a Cloudinary account and API keys.
- Some media may not be immediately available after upload.
- Some endpoints may have rate limits
- Some operations may have rate limits
- Instructions to serve images directly from Cloudinary work only for Next.js 12 and
  below due to Next.js 13 deprecating global loaders.
- Ensure API key and secret are securely stored.
- Rate limits may apply based on account type.
- Requires setup of Cloudinary account and connected app.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Ensure to check rate limits for API calls.
- Requires configuration of Cloudinary Node.js SDK
- Requires configuration of API keys for authentication
- Supports video uploads and transformations.
- Ensure that the cloud name is correctly set in the base URL.
- Some endpoints may have different requirements for file types
- Use `autoGravity` and `autoFocus` parameters for AI capabilities.
- Cloudinary requires OAuth2 for authentication.
- You can remove image backgrounds using the backgroundRemoval function.
- You can add drop shadows to images using the dropShadow function.
- You can configure drop shadows by setting azimuth, elevation, and spread.
- Some responses may include null values in nested fields
- Some API responses may vary based on user permissions
- Requires setup of Cloudinary account and API keys.
- Requires API key for authentication
- Requires setup of connected app in Cloudinary for OAuth2.
- The Cloudinary Video Player is a comprehensive solution for delivering a great video
  experience to your users.
- Assets spliced together or concatenated with a custom transition must be the same
  width and height.
- MCP servers and LLM tools (Beta) available.
- Sample projects demonstrate best practices for integrating Cloudinary into Node.js.
- Ensure to have the correct permissions set for the API keys.
- Video files are created dynamically when first accessed by your users.
- Configuration parameters override any that you have set globally.
errors:
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200: OK | Success'
- '400: Bad request'
- '401: Authorization required'
- '403: Not allowed'
- '404: Not found'
- '409: Already exists'
- signature is required for signed REST API calls
- 'INVALID_SIGNATURE: Ensure the signature is correctly generated'
- 'ASSET_NOT_FOUND: Verify the public ID or asset ID provided'
- 'INVALID_CREDENTIALS: Check if the provided credentials are correct'
- 'RESOURCE_NOT_FOUND: Ensure the resource ID is valid'
- 'RESOURCE_NOT_FOUND: Check the resource ID'
- 'INVALID_CREDENTIALS: Verify your client ID and secret'
- 'RATE_LIMIT_EXCEEDED: Throttle your requests'
- '401 Unauthorized: Check your credentials'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check the moderation parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- 'moderation_response: approved'
- 'moderation_response: rejected'
- '400 Bad Request: Check your request parameters'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'RESOURCE_NOT_FOUND: Verify the resource path.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- '400 Bad Request: Check your parameters'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Verify the resource path'
- '401 Unauthorized: Check your credentials or token expiration'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure your credentials are valid.'
- '401 Unauthorized: Check your API key and secret.'
- '404 Not Found: Resource not found.'
- '400 Bad Request: Check request parameters or payload.'
- '401 Unauthorized: Verify client credentials.'
- '404 Not Found: Resource does not exist.'
- 'UPLOAD_ERROR: Check your file format and size.'
- 'AUTHENTICATION_FAILED: Ensure your credentials are correct.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource could not be found'
- 'REQUEST_LIMIT_EXCEEDED: Reduce the number of concurrent requests'
- '401 Unauthorized: Check your API credentials and permissions'
- '401 Unauthorized: Check your credentials and token.'
- '401 Unauthorized: Check credentials or token expiration'
- '403 Forbidden: You don''t have permission to access this resource'
- '401 Unauthorized: Check your credentials and permissions'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Ensure the resource exists.'
- '500 Internal Server Error: Retry the request or check the service status.'
- 'INVALID_CREDENTIALS: Check provided client_id and client_secret'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of API calls'
- 'INVALID_CLOUD_NAME: Check your cloud name.'
- 'AUTHENTICATION_ERROR: Verify your API key and secret.'
- '404 Not Found: Ensure the endpoint exists'
- '429 Too Many Requests: Throttle API calls'
- '404 Not Found: Verify the resource path.'
- '401 Unauthorized: Check authentication credentials.'
- '429 Too Many Requests: Implement exponential backoff for retries.'
- 'RESOURCE_NOT_FOUND: Verify the resource path used in the request.'
- 'AUTHENTICATION_ERROR: Check your credentials'
- 'RESOURCE_NOT_FOUND: Verify the resource ID'
- 'RATE_LIMIT_EXCEEDED: Slow down your requests'
- '400 Bad Request: Check parameters and request format.'
- '401 Unauthorized: Verify API key and permissions.'
- 'INVALID_API_KEY: Check your API key and try again.'
- 'UPLOAD_ERROR: Verify the upload parameters are correct.'
- '401 Unauthorized: Recheck API key or permissions'
- '403 Forbidden: Check your authentication parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'INVALID_CREDENTIALS: Check your API key/secret.'
- 'RESOURCE_NOT_FOUND: Ensure the resource ID is correct.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'INVALID_CREDENTIALS: Check your API keys and OAuth configuration.'
- 'NOT_FOUND: The requested resource does not exist.'
- 'RESOURCE_NOT_FOUND: Verify resource ID is correct.'
- 'INVALID_SIGNATURE: Check your API key and secret.'
- '401 Unauthorized: Recheck OAuth credentials.'
- 'INVALID_CREDENTIALS: Check your API key and secret'
- 'RESOURCE_NOT_FOUND: Verify the resource identifier'
- '401 Unauthorized: Check your API key and secret'
- 'RESOURCE_NOT_FOUND: Check the resource ID or URL.'
- 'INVALID_AUTH: Ensure correct credentials are being used.'
- 'QUOTA_EXCEEDED: Upgrade your plan or wait for quota reset.'
- '403 Forbidden: Check your permissions or API key is correct.'
- '404 Not Found: Verify the endpoint path is correct.'
- '404 Not Found: Verify the endpoint URL'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Check the endpoint path and parameters.'
- '401 Unauthorized: Verify OAuth token and permissions.'
- 'INVALID_CREDENTIALS: Check your client_id and client_secret'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Verify credentials and tokens.'
- '404 Not Found: Check resource identifiers.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check parameters.'
- '401 Unauthorized: Check the validity of the API keys.'
- '429 Too Many Requests: Rate limit exceeded.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - signature
  - public_id
  - asset_id
  - OAuthToken
  - CloudinaryContext
  - Cloudinary
  - Transformation
  - Client
  - Credential
  - OAuth
  - Token
  - oauth2
  - cloud_name
  - OAuth2Token
  - CloudinaryAuthProvider
  - CloudinaryImage
client:
  base_url: https://api.cloudinary.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.cloudinary.com/oauth/token
    client_id: '{{ dlt.secrets[''cloudinary_client_id''] }}'
    client_secret: '{{ dlt.secrets[''cloudinary_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''cloudinary_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
