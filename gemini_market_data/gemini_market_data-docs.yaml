resources:
- name: list_candles
  endpoint:
    path: /v2/candles/{symbol}/{time_frame}
    method: GET
    data_selector: Candle
    params: {}
- name: list_derivative_candles
  endpoint:
    path: /v2/derivatives/candles/{symbol}/{time_frame}
    method: GET
    data_selector: Candle
    params: {}
- name: fx_rate
  endpoint:
    path: /v2/fxrate/{symbol}/{timestamp}
    method: GET
    data_selector: fxPair
    params: {}
- name: list_symbols
  endpoint:
    path: /v1/symbols
    method: GET
    data_selector: symbols
- name: get_symbol_details
  endpoint:
    path: /v1/symbols/details/{symbol}
    method: GET
    data_selector: symbol
- name: get_network
  endpoint:
    path: /v1/network/{token}
    method: GET
    data_selector: network
- name: get_ticker
  endpoint:
    path: /v1/pubticker/{symbol}
    method: GET
    data_selector: ticker
- name: list_fee_promos
  endpoint:
    path: /v1/feepromos
    method: GET
    data_selector: symbols
- name: get_current_order_book
  endpoint:
    path: /v1/book/{symbol}
    method: GET
    data_selector: order_book
- name: list_trades
  endpoint:
    path: /v1/trades/{symbol}
    method: GET
    data_selector: trades
- name: list_prices
  endpoint:
    path: /v1/pricefeed
    method: GET
    data_selector: prices
- name: get_funding_amount
  endpoint:
    path: /v1/fundingamount/{symbol}
    method: GET
    data_selector: funding_amount
- name: get_funding_amount_report_file
  endpoint:
    path: /v1/fundingamountreport/records.xlsx
    method: GET
    data_selector: funding_report
- name: get_ticker_v2
  endpoint:
    path: /v2/ticker/{symbol}
    method: GET
    data_selector: ticker_v2
- name: list_candles
  endpoint:
    path: /v2/candles/{symbol}/{time_frame}
    method: GET
    data_selector: candles
- name: market_data
  endpoint:
    path: /rest/market-data
    method: GET
- name: account_management
  endpoint:
    path: /rest/manage-accounts
    method: GET
- name: market_data
  endpoint:
    path: /rest/market-data
    method: GET
- name: manage_accounts
  endpoint:
    path: /rest/manage-accounts
    method: GET
- name: balances
  endpoint:
    path: /v1/balances
    method: GET
    data_selector: balances
- name: List Past Trades
  endpoint:
    path: /rest/orders#list-past-trades
    method: GET
- name: List Approved Addresses
  endpoint:
    path: /rest/fund-management#list-approved-addresses
    method: POST
- name: Symbol Details
  endpoint:
    path: /rest/market-data#get-symbol-details
    method: GET
- name: Order Status
  endpoint:
    path: /rest/orders#get-order-status
    method: GET
- name: Adding a Bank
  endpoint:
    path: /rest/fund-management#add-bank
    method: POST
- name: Viewing Payment Methods
  endpoint:
    path: /rest/fund-management#list-payment-methods
    method: GET
- name: Account Detail
  endpoint:
    path: /rest/account-administration#get-account-detail
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create New Order
  endpoint:
    path: /v1/order/new
    method: POST
- name: Cancel Order
  endpoint:
    path: /v1/order/cancel
    method: POST
- name: Get Active Orders
  endpoint:
    path: /v1/orders
    method: GET
- name: Get Available Balances
  endpoint:
    path: /v1/balances
    method: GET
- name: Get Accounts
  endpoint:
    path: /v1/account/list
    method: GET
- name: account_detail
  endpoint:
    path: /account/admin/account-detail
    method: GET
- name: roles
  endpoint:
    path: /account/admin/roles
    method: GET
- name: fxrate
  endpoint:
    path: /v2/fxrate/EURUSD/2025-04-16T23:07:27.189Z
    method: GET
- name: fxrate
  endpoint:
    path: /v2/fxrate/EURUSD/2025-04-16T23:07:27.189Z
    method: GET
- name: fxrate
  endpoint:
    path: /v2/fxrate/EURUSD
    method: GET
    data_selector: none
    params: {}
- name: fxrate
  endpoint:
    path: /v2/fxrate/EURUSD
    method: GET
- name: fxrate
  endpoint:
    path: /v2/fxrate/EURUSD/2025-04-16T23:07:27.189Z
    method: GET
- name: create_order
  endpoint:
    path: /v1/order/new
    method: POST
- name: cancel_order
  endpoint:
    path: /v1/order/cancel
    method: POST
- name: cancel_all_active_orders
  endpoint:
    path: /v1/order/cancel/all
    method: POST
- name: cancel_all_session_orders
  endpoint:
    path: /v1/order/cancel/session
    method: POST
- name: cancel_all_session_orders
  endpoint:
    path: /v1/order/cancel/session
    method: POST
    data_selector: result
    params: {}
- name: get_order_status
  endpoint:
    path: /v1/order/status
    method: POST
    data_selector: order_id
    params: {}
- name: list_active_orders
  endpoint:
    path: /v1/orders
    method: POST
    data_selector: order_id
    params: {}
- name: list_past_orders
  endpoint:
    path: /v1/orders/history
    method: POST
    data_selector: order_id
    params: {}
- name: list_past_trades
  endpoint:
    path: /v1/mytrades
    method: POST
    data_selector: price
    params: {}
- name: get_trading_volume
  endpoint:
    path: /v1/tradevolume
    method: POST
    data_selector: volume
    params: {}
- name: trading_volume
  endpoint:
    path: /v1/tradevolume
    method: POST
- name: notional_trading_volume
  endpoint:
    path: /v1/notionalvolume
    method: POST
- name: wrap_order
  endpoint:
    path: /v1/wrap/{symbol}
    method: POST
- name: available_balances
  endpoint:
    path: /v1/balances
    method: POST
    data_selector: records
- name: notional_balances
  endpoint:
    path: /v1/notionalbalances/{currency}
    method: POST
    data_selector: records
- name: deposit_addresses
  endpoint:
    path: /v1/addresses/{network}
    method: POST
    data_selector: records
- name: past_transfers
  endpoint:
    path: /v1/transfers
    method: POST
    data_selector: records
- name: custody_fee_transfers
  endpoint:
    path: /v1/custodyaccountfees
    method: POST
    data_selector: records
- name: withdraw_crypto_funds
  endpoint:
    path: /v1/withdraw/{currency}
    method: POST
    data_selector: records
- name: gas_fee_estimation
  endpoint:
    path: /v1/withdraw/{currencyCodeLowerCase}/feeEstimate
    method: POST
    data_selector: records
- name: add_bank
  endpoint:
    path: /v1/payments/addbank
    method: POST
    data_selector: records
- name: add_bank_cad
  endpoint:
    path: /v1/payments/addbank/cad
    method: POST
    data_selector: records
- name: list_payment_methods
  endpoint:
    path: /v1/payments/methods
    method: POST
    data_selector: records
- name: approved_addresses
  endpoint:
    path: /v1/approvedAddresses/account/{network}
    method: POST
    data_selector: records
- name: remove_approved_address
  endpoint:
    path: /v1/approvedAddresses/{network}/remove
    method: POST
    data_selector: records
- name: remove_approved_address
  endpoint:
    path: /v1/approvedAddresses/{network}/remove
    method: POST
- name: transfer_between_accounts
  endpoint:
    path: /v1/account/transfer/{currency}
    method: POST
- name: get_transaction_history
  endpoint:
    path: /v1/transactions
    method: POST
- name: heartbeat
  endpoint:
    path: /v1/heartbeat
    method: POST
    data_selector: result
    params: {}
- name: list_clearing_trades
  endpoint:
    path: /v1/clearing/trades
    method: POST
    data_selector: results
- name: create_new_broker_order
  endpoint:
    path: /v1/clearing/broker/new
    method: POST
    data_selector: result
- name: create_new_clearing_order
  endpoint:
    path: /v1/clearing/new
    method: POST
    data_selector: result
    params: {}
- name: get_clearing_order
  endpoint:
    path: /v1/clearing/status
    method: POST
    data_selector: result
    params: {}
- name: cancel_clearing_order
  endpoint:
    path: /v1/clearing/cancel
    method: POST
    data_selector: result
    params: {}
- name: confirm_clearing_order
  endpoint:
    path: /v1/clearing/confirm
    method: POST
    data_selector: result
    params: {}
- name: list_clearing_orders
  endpoint:
    path: /v1/clearing/list
    method: POST
    data_selector: result
    params: {}
- name: list_clearing_brokers
  endpoint:
    path: /v1/clearing/broker/list
    method: POST
    data_selector: result
    params: {}
- name: create_new_broker_order
  endpoint:
    path: /v1/clearing/broker/new
    method: POST
    data_selector: result
    params: {}
- name: instant_quote
  endpoint:
    path: /v1/instant/quote
    method: POST
    data_selector: ''
    params: {}
- name: execute_instant_order
  endpoint:
    path: /v1/instant/execute
    method: POST
    data_selector: ''
    params: {}
- name: account_detail
  endpoint:
    path: /v1/account
    method: POST
    data_selector: account
    params: {}
- name: create_account
  endpoint:
    path: /v1/account/create
    method: POST
    data_selector: account
    params: {}
- name: rename_account
  endpoint:
    path: /v1/account/rename
    method: POST
    data_selector: name
    params: {}
- name: list_accounts
  endpoint:
    path: /v1/account/list
    method: POST
    data_selector: name
    params:
      limit_accounts: 500
- name: roles
  endpoint:
    path: /v1/roles
    method: POST
    data_selector: isAuditor
    params: {}
- name: revoke_oauth_token
  endpoint:
    path: /v1/oauth/revokeByToken
    method: POST
    data_selector: message
    params: {}
- name: unstake_crypto_funds
  endpoint:
    path: /v1/staking/unstake
    method: POST
- name: list_staking_balances
  endpoint:
    path: /v1/balances/staking
    method: POST
    data_selector: balances
    params: {}
- name: stake_crypto_funds
  endpoint:
    path: /v1/staking/stake
    method: POST
    data_selector: transactionId
    params: {}
- name: list_staking_event_history
  endpoint:
    path: /v1/staking/history
    method: POST
    data_selector: transactions
    params: {}
- name: list_staking_rates
  endpoint:
    path: /v1/staking/rates
    method: GET
    data_selector: provider_uuid
    params: {}
- name: list_staking_rewards
  endpoint:
    path: /v1/staking/rewards
    method: POST
    data_selector: provider_uuid
    params: {}
- name: unstake_crypto_funds
  endpoint:
    path: /v1/staking/unstake
    method: POST
    data_selector: transactionId
    params: {}
- name: risk_stats
  endpoint:
    path: /v1/riskstats/{symbol}
    method: GET
    data_selector: responses
    params: {}
- name: get_account_margin
  endpoint:
    path: /v1/margin
    method: POST
    data_selector: response
    params: {}
- name: list_funding_payments
  endpoint:
    path: /v1/perpetuals/fundingPayment
    method: POST
    data_selector: response
    params: {}
- name: get_funding_payment_report_file
  endpoint:
    path: /v1/perpetuals/fundingpaymentreport/records.xlsx
    method: GET
    data_selector: response
    params: {}
- name: get_funding_payment_report_json
  endpoint:
    path: /v1/perpetuals/fundingpaymentreport/records.json
    method: POST
    data_selector: response
    params: {}
- name: get_open_positions
  endpoint:
    path: /v1/positions
    method: POST
    data_selector: response
    params: {}
- name: order_events
  endpoint:
    path: /v1/order/events
    method: GET
    params:
      symbolFilter: string
      apiSessionFilter: string
      eventTypeFilter: string
      heartbeat: boolean
- name: order_events
  endpoint:
    path: /websocket/order-events
    method: GET
    data_selector: order_events
- name: order_events
  endpoint:
    path: /websocket/order-events
    method: GET
    data_selector: events
notes:
- The API key you use to access this endpoint must have the Auditor role assigned.
- Updated /v1/balances to reflect new response fields pendingWithdrawal and pendingDeposit
- Only seven calendar days of data will be available through public API endpoints
  at Trade History and Auction History.
- Gemini's sandbox site does not support either depositing or withdrawing your test
  funds, which can only be used to trade on the sandbox exchange.
- Two factor authentication (2FA) is enabled by default for all sandbox accounts.
- Uses OAuth2 for authentication
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- To prevent abuse, Gemini imposes rate limits on incoming requests.
- For public API entry points, limit requests to 120 requests per minute.
- For private API entry points, limit requests to 600 requests per minute.
- Please use our Sandbox environment to develop and test your code.
- All requests must contain a nonce.
- If using a time based nonce, it must be within +/- 30 seconds of Unix Epoch timestamp.
- Nonce must be increasing with respect to the session.
- Requires HMAC SHA-384 signature for requests.
- Polling endpoints may be subject to rate limiting.
- The API key must have the Trader role assigned.
- This endpoint is currently restricted further than our standard rate limiting to
  a rate of 1 request per 2 seconds per subaccount.
- Polling this endpoint may be subject to rate limiting.
- Historical data for transactions can only be returned for dates after August 1st,
  2022.
- The API key you use to access this endpoint must have the Trader role assigned.
- The OAuth scope must have clearing:read assigned to access this endpoint.
- The OAuth scope must have `clearing:read` assigned.
- The API key you use to access these endpoints must have the Trader role assigned.
- The OAuth scope must have `orders:create` assigned to access these endpoints.
- The API key must be a Master level key for certain endpoints.
- The API key must have the Trader, Fund Manager or Trader role assigned.
- Using a Master scoped API key receives event data for all accounts in the group.
- Real-time updates via WebSocket for order events.
- Gemini sends a heartbeat every five seconds to keep the WebSocket connection active.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403: MissingRole'
- '401: Unauthorized'
- '400: Market not open, or the request was malformed; in the case of a private API
  request, missing or malformed Gemini private API authentication headers'
- '403: The API key is missing the role necessary to access this private API endpoint'
- '404: Unknown API entry point or Order not found'
- '406: Insufficient Funds'
- '429: Rate Limiting was applied'
- '500: The server encountered an error'
- '502: Technical issues are preventing the request from being satisfied'
- '503: The exchange is down for maintenance'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Recheck API key or secret'
- '401 Unauthorized: Recheck API key or signature'
- '200: Success'
- '400: Bad Request'
- '403: Forbidden'
- '404: Not Found'
- '401 Unauthorized: Recheck API key or permissions'
- '200: Successful request'
- '400: Bad request'
- '404: Not found'
- '429: Too many requests'
- '500: Internal server error'
- '200: ok'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '200'
- '400'
- '401'
- '403'
- '404'
- '429'
- '500'
- '200: Successful operation'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 'OrderNotFound: The order you tried to cancel can''t be found.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - GEMINI_API_SECRET
  - GEMINI_API_KEY
  - Trader
  - Trader role
  - OAuth scopes
  - API key
  - Fund Manager
  - Auditor
  - OAuth scope
client:
  base_url: https://api.gemini.com
  headers:
    X-GEMINI-APIKEY: required
    X-GEMINI-SIGNATURE: required
    X-GEMINI-PAYLOAD: required
    Content-Type: text/plain
    Cache-Control: no-cache
source_metadata: null
