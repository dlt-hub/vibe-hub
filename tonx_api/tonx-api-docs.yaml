resources:
- name: estimate_fee
  endpoint:
    path: /reference/estimate-fee
    method: GET
- name: get_message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: send_message
  endpoint:
    path: /reference/send-message
    method: POST
- name: get_account_balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: get_address_information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: get_block_header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: get_nft_items
  endpoint:
    path: /reference/get-nft-items
    method: GET
- name: get_jetton_transfers
  endpoint:
    path: /reference/get-jetton-transfers
    method: GET
- name: get_trace_of_transactions
  endpoint:
    path: /reference/get-trace-of-transactions
    method: GET
- name: get_message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: get_account_balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: get_nft_items
  endpoint:
    path: /reference/get-nft-items
    method: GET
- name: get_jetton_transfers
  endpoint:
    path: /reference/get-jetton-transfers
    method: GET
- name: Get Message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: Send Message
  endpoint:
    path: /reference/send-message
    method: POST
- name: Get Account Balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: Get Address Information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: Get Block Header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: Get NFT Collections
  endpoint:
    path: /reference/get-nft-collections
    method: GET
- name: Get TON Transactions
  endpoint:
    path: /reference/get-ton-transactions
    method: GET
- name: Get Account Balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: Get Address Information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: Get Block Transactions
  endpoint:
    path: /reference/get-block-transactions
    method: GET
- name: Get NFT Transfers
  endpoint:
    path: /reference/get-nft-transfers
    method: GET
- name: getJettonWallets
  endpoint:
    path: /getJettonWallets
    method: POST
    data_selector: wallets
- name: jetton_wallets
  endpoint:
    path: /getJettonWallets
    method: POST
    data_selector: wallets
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: nft_transfers
  endpoint:
    path: /get-nft-transfers
    method: GET
    data_selector: transfers
- name: Get BoC Status
  endpoint:
    path: /reference/getbocstatus
    method: POST
- name: Verify BoC
  endpoint:
    path: /reference/verifyboc
    method: POST
- name: Radix Conversion
  endpoint:
    path: /reference/radix-conversion
    method: POST
- name: Binary Conversion
  endpoint:
    path: /reference/binary-conversion
    method: POST
- name: Detect Address
  endpoint:
    path: /reference/detect-address
    method: POST
- name: Get Account Balance
  endpoint:
    path: /accounts/get-account-balance
    method: POST
- name: Get Address Information
  endpoint:
    path: /accounts/get-address-information
    method: POST
- name: Get NFT Transfers
  endpoint:
    path: /nfts/get-nft-transfers
    method: POST
- name: Get tgBTC Balance
  endpoint:
    path: /tgbtc/get-tgbtc-balance
    method: POST
- name: getAccountBalance
  endpoint:
    path: /json-rpc
    method: POST
    data_selector: result
    params:
      method: getAccountBalance
- name: getJettonWallets
  endpoint:
    path: /json-rpc
    method: POST
    data_selector: result
    params:
      method: getJettonWallets
- name: getTransactions
  endpoint:
    path: /json-rpc
    method: POST
    data_selector: result
    params:
      method: getTransactions
- name: getJettonTransfers
  endpoint:
    path: /json-rpc
    method: POST
    data_selector: result
    params:
      method: getJettonTransfers
- name: getAccountBalance
  endpoint:
    path: /v2/json-rpc
    method: POST
    data_selector: result
    params:
      method: getAccountBalance
- name: getJettonWallets
  endpoint:
    path: /v2/json-rpc
    method: POST
    data_selector: result
    params:
      method: getJettonWallets
- name: getTransactions
  endpoint:
    path: /v2/json-rpc
    method: POST
    data_selector: result
    params:
      method: getTransactions
- name: getJettonTransfers
  endpoint:
    path: /v2/json-rpc
    method: POST
    data_selector: result
    params:
      method: getJettonTransfers
- name: accounts
  endpoint:
    path: /reference/accounts
    method: GET
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: jettons
  endpoint:
    path: /reference/jettons-api
    method: GET
- name: send_message
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: result
    params: {}
- name: get_subwallet_id
  endpoint:
    path: /runGetMethod
    method: POST
    data_selector: result
    params:
      method: get_subwallet_id
- name: seqno
  endpoint:
    path: /runGetMethod
    method: POST
    data_selector: result
    params:
      method: seqno
- name: Accounts
  endpoint:
    path: /accounts
    method: GET
- name: Blocks
  endpoint:
    path: /blocks
    method: GET
- name: NFTs
  endpoint:
    path: /nfts
    method: GET
- name: Transactions
  endpoint:
    path: /transactions
    method: GET
- name: Accounts
  endpoint:
    path: /reference/accounts
    method: GET
- name: Blocks
  endpoint:
    path: /reference/blocks
    method: GET
- name: NFTs
  endpoint:
    path: /reference/nfts
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: Jettons
  endpoint:
    path: /reference/jettons-api
    method: GET
- name: tgBTC Balance
  endpoint:
    path: /getTgBTCBalance
    method: GET
    data_selector: balance
    params: {}
- name: tgBTC Transfers
  endpoint:
    path: /getTgBTCTransfers
    method: GET
    data_selector: transfers
    params: {}
- name: tgBTC Transfer Payload
  endpoint:
    path: /getTgBTCJettonTransferPayload
    method: GET
    data_selector: payload
    params: {}
- name: tgBTC Wallet Address
  endpoint:
    path: /getTgBTCJettonWalletAddress
    method: GET
    data_selector: address
    params: {}
- name: tgBTC Transfers
  endpoint:
    path: /getTgBTCTransfers
    method: POST
    data_selector: transfers
- name: tgBTC Balance
  endpoint:
    path: /getTgBTCBalance
    method: POST
    data_selector: balance
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /getTgBTCJettonWalletAddress
    method: POST
    data_selector: jettonWallet
- name: tgBTC Transfer Payload
  endpoint:
    path: /getTgBTCTransferPayload
    method: POST
    data_selector: payload
- name: BoC Parsing Tools
  endpoint:
    path: /reference/verifyboc
    method: GET
- name: BoC Status API
  endpoint:
    path: /reference/getbocstatus
    method: GET
- name: Get BoC Status
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: Get BoC Status
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: verifyBoc
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: Verify BoC
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: verifyBoc
- name: radix_conversion
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: radix_conversion
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: radixConversion
      params: {}
- name: binary_conversion
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: detect_address
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: binary_conversion
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: binaryConversion
      params: {}
- name: Estimate Fee
  endpoint:
    path: /reference/estimate-fee
    method: GET
- name: Get Message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: Send Message
  endpoint:
    path: /reference/send-message
    method: POST
- name: detect_address
  endpoint:
    path: /v2/labs/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: estimate_fee
  endpoint:
    path: /reference/estimate-fee
    method: GET
- name: get_message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: send_message
  endpoint:
    path: /reference/send-message
    method: POST
- name: estimate_fee
  endpoint:
    path: /estimate-fee
    method: POST
    data_selector: result
    params:
      API_KEY: 3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
- name: estimate_fee
  endpoint:
    path: /estimateFee
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: estimateFee
      params: {}
- name: getMessages
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMessages
      params:
        limit: 256
- name: send_message
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: getMessages
  endpoint:
    path: /get-messages
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMessages
      params:
        limit: 256
- name: get_account_balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: get_address_information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: get_address_state
  endpoint:
    path: /reference/get-address-state
    method: GET
- name: get_extended_address_information
  endpoint:
    path: /reference/get-extended-address-information
    method: GET
- name: send_message
  endpoint:
    path: /send-message
    method: POST
    data_selector: result
    params: {}
- name: get_account_balance
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountBalance
      params: {}
- name: Get Account Balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: Get Address Information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: Get Address State
  endpoint:
    path: /reference/get-address-state
    method: GET
- name: Get Extended Address Information
  endpoint:
    path: /reference/get-extended-address-information
    method: GET
- name: getAddressInformation
  endpoint:
    path: /getAddressInformation
    method: POST
    data_selector: result
    params: {}
- name: get_account_balance
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountBalance
      params: {}
- name: getAddressState
  endpoint:
    path: /{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAddressState
      params:
        address: EQChncuh-0UAJcmcX7D4gmanDovwNNQXkKnv6tlpBZQ9nHek
- name: getAddressInformation
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAddressInformation
      params: {}
- name: getAddressState
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      address: EQChncuh-0UAJcmcX7D4gmanDovwNNQXkKnv6tlpBZQ9nHek
- name: get_extended_address_information
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getExtendedAddressInformation
      params: {}
- name: get_extended_address_information
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getExtendedAddressInformation
      params:
        address: EQChncuh-0UAJcmcX7D4gmanDovwNNQXkKnv6tlpBZQ9nHek
- name: account_reverse_dns_resolution
  endpoint:
    path: /account-reverse-dns-resolution
    method: POST
    data_selector: result.domains
    params:
      id: '1'
      jsonrpc: '2.0'
      method: accountDnsBackResolve
      params:
        account_id: EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs
- name: emulate_message_to_account_event
  endpoint:
    path: /emulate-message-to-account-event
    method: POST
    data_selector: result
    params: {}
- name: account_reverse_dns_resolution
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.domains
    params:
      id: 1
      jsonrpc: '2.0'
      method: accountDnsBackResolve
- name: get_account_information
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccount
      params: {}
- name: emulate_message_to_account_event
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: get_account_difference
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: get_account_information
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccount
      params: {}
- name: getAccountDnsExpiring
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.items
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: getAccountDiff
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountDiff
      params: {}
- name: get_account_event
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: getAccountDnsExpiring
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.items
    params: {}
- name: account_events
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.events
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
      limit: 100
- name: get_account_event
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: get_account_jetton_balance
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
      jetton_id: EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs
- name: account_events
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.events
    params:
      method: getAccountEvents
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
        limit: 100
- name: getAccountJettonHistoryByID
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountJettonHistoryByID
      params: {}
- name: get_account_jetton_balance
  endpoint:
    path: /getAccountJettonBalance
    method: POST
    data_selector: result
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
      jetton_id: EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs
- name: get_account_all_jettons_balances
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.balances
    params: {}
- name: get_account_jetton_history_by_id
  endpoint:
    path: /get-account-jetton-history-by-id
    method: POST
    data_selector: result
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
      jetton_id: EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs
      limit: 100
- name: account_jettons_history
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.events
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountJettonsHistory
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
        limit: 100
- name: getAccountJettonsBalances
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: balances
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountJettonsBalances
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: get_account_multisigs
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.multisigs
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountMultisigs
      params:
        account_id: EQDTEsTxswk10ugJkpzI4hZrKVMA-jdpPWYE7BkeltMuqEHJ
- name: get_account_nft_history
  endpoint:
    path: /getAccountNftHistory
    method: POST
    data_selector: result.events
    params: {}
- name: get_account_jettons_history
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.events
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountJettonsHistory
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
        limit: 100
- name: get_account_nft_items
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.nft_items
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountNftItems
      params: {}
- name: account_multisigs
  endpoint:
    path: /getAccountMultisigs
    method: POST
    data_selector: result.multisigs
    params:
      account_id: EQDTEsTxswk10ugJkpzI4hZrKVMA-jdpPWYE7BkeltMuqEHJ
- name: getAccountNominatorsPools
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.pools
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountNominatorsPools
- name: getAccountNftHistory
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.events
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountNftHistory
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
        limit: 100
- name: getAccountPublicKey
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountPublicKey
      params: {}
- name: getAccountNftItems
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.nft_items
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: account_subscriptions
  endpoint:
    path: /getAccountSubscriptions
    method: POST
    data_selector: result.subscriptions
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: getAccountNominatorsPools
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.pools
    params:
      id: 1
      jsonrpc: '2.0'
      method: getAccountNominatorsPools
      params:
        account_id: EQBLwLBhcODVAATdPihSbNRzAo03649UJR9BoaIrgISqa9I0
- name: get_account_traces
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.traces
    params:
      account_id: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
- name: get_account_public_key
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: get_several_account_information
  endpoint:
    path: /get-several-account-information
    method: POST
- name: account_subscriptions
  endpoint:
    path: /getAccountSubscriptions
    method: POST
    data_selector: result.subscriptions
- name: reindex_account
  endpoint:
    path: /re-index-account-information
    method: POST
    data_selector: result
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: search_accounts
  endpoint:
    path: /search-accounts
    method: POST
    data_selector: result.addresses
    params:
      method: searchAccounts
- name: account_traces
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.traces
    params:
      account_id: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
- name: Get Several Account Information
  endpoint:
    path: /get-several-account-information
    method: POST
- name: block_header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: block_transactions
  endpoint:
    path: /reference/get-block-transactions
    method: GET
- name: consensus_block
  endpoint:
    path: /reference/get-consensus-block
    method: GET
- name: masterchain_block_signatures
  endpoint:
    path: /reference/get-masterchain-block-signatures
    method: GET
- name: masterchain_info
  endpoint:
    path: /reference/get-masterchain-info
    method: GET
- name: reindex_account
  endpoint:
    path: /re-index-account-information
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: reindexAccount
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: get_block_header
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: search_accounts
  endpoint:
    path: /search-accounts
    method: POST
    data_selector: result.addresses
    params: {}
- name: get_block_transactions
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.transactions
    params:
      id: 1
      jsonrpc: '2.0'
      method: getBlockTransactions
      params: {}
- name: blocks
  endpoint:
    path: /reference/blocks
    method: GET
- name: get_block_header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: get_block_transactions
  endpoint:
    path: /reference/get-block-transactions
    method: GET
- name: get_consensus_block
  endpoint:
    path: /reference/get-consensus-block
    method: GET
- name: get_masterchain_block_signatures
  endpoint:
    path: /reference/get-masterchain-block-signatures
    method: GET
- name: get_masterchain_info
  endpoint:
    path: /reference/get-masterchain-info
    method: GET
- name: getConsensusBlock
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: getBlockHeader
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getBlockHeader
      params: {}
- name: getMasterchainBlockSignatures
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.signatures
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMasterchainBlockSignatures
      params: {}
- name: getBlockTransactions
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.transactions
    params: {}
- name: getMasterchainInfo
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMasterchainInfo
- name: getConsensusBlock
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: Get NFT Collections
  endpoint:
    path: /reference/get-nft-collections
    method: GET
- name: Get NFT Items
  endpoint:
    path: /reference/get-nft-items
    method: GET
- name: Get NFT Transfers
  endpoint:
    path: /reference/get-nft-transfers
    method: GET
- name: get_masterchain_block_signatures
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.signatures
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMasterchainBlockSignatures
      params: {}
- name: nft_collections
  endpoint:
    path: /getNftCollections
    method: POST
    data_selector: result
    params:
      limit: 1
- name: getMasterchainInfo
  endpoint:
    path: /getMasterchainInfo
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getMasterchainInfo
- name: nft_items
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      method: getNftItems
      id: 1
      jsonrpc: '2.0'
- name: Get NFT Collections
  endpoint:
    path: /reference/get-nft-collections
    method: GET
- name: Get NFT Items
  endpoint:
    path: /reference/get-nft-items
    method: GET
- name: Get NFT Transfers
  endpoint:
    path: /reference/get-nft-transfers
    method: GET
- name: get_nft_transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getNftTransfers
      params: {}
- name: Get TON Transactions
  endpoint:
    path: /reference/get-ton-transactions
    method: GET
- name: nft_collections
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getNftCollections
      params:
        limit: 1
- name: ton_transactions
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: nft_items
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getNftItems
      params: {}
- name: Get Jetton Masters
  endpoint:
    path: /reference/get-jetton-masters
    method: GET
- name: Get Jetton Transfers
  endpoint:
    path: /reference/get-jetton-transfers
    method: GET
- name: Get Jetton Wallets
  endpoint:
    path: /reference/get-jetton-wallets
    method: GET
- name: Get Jetton Burns
  endpoint:
    path: /reference/get-jetton-burns
    method: GET
- name: nft_transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getNftTransfers
      params: {}
- name: jetton_burns
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getJettonBurns
      params: {}
- name: transactions
  endpoint:
    path: /reference/get-ton-transactions
    method: GET
- name: transactions
  endpoint:
    path: /get-ton-transactions
    method: POST
    data_selector: result
    params: {}
- name: jetton_masters
  endpoint:
    path: /getJettonMasters
    method: POST
    data_selector: result
- name: jetton_transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: Get Jetton Masters
  endpoint:
    path: /reference/get-jetton-masters
    method: GET
- name: Get Jetton Transfers
  endpoint:
    path: /reference/get-jetton-transfers
    method: GET
- name: Get Jetton Wallets
  endpoint:
    path: /reference/get-jetton-wallets
    method: GET
- name: Get Jetton Burns
  endpoint:
    path: /reference/get-jetton-burns
    method: GET
- name: jetton_burns
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getJettonBurns
      params: {}
- name: jetton_wallets
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      method: getJettonWallets
      id: 1
      jsonrpc: '2.0'
- name: Get Jetton Wallets
  endpoint:
    path: /reference/get-jetton-wallets
    method: GET
- name: Get Token Data
  endpoint:
    path: /reference/get-token-data
    method: GET
- name: jetton_masters
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getJettonMasters
      params: {}
- name: getTokenData
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: jetton_transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getJettonTransfers
      params: {}
- name: run_get_method
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: get_jetton_wallets
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getJettonWallets
      params: {}
- name: emulate_message_to_trace
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: getTokenData
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTokenData
      params: {}
- name: get_trace_of_transactions
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTrace
      params: {}
- name: runGetMethod
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: tgBTC Transfers
  endpoint:
    path: /reference/get-tgbtc-transfers
    method: GET
- name: tgBTC MetaData
  endpoint:
    path: /reference/get-tgbtc-metadata
    method: GET
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /reference/get-tgbtc-jetton-wallet-address
    method: GET
- name: tgBTC Balance
  endpoint:
    path: /reference/get-tgbtc-balance
    method: GET
- name: tgBTC Holders
  endpoint:
    path: /reference/get-tgbtc-holders
    method: GET
- name: emulate_message_to_trace
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
- name: tgBTC Balance
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCBalance
      params: {}
- name: tgBTC Config
  endpoint:
    path: /getTgBTCConfig
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCConfig
- name: get_trace_of_transactions
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTrace
      params:
        trace_id: 9utoRS97Pnv1wZEVTEC0zCuiNcbFTZF8NBgTNfIEx4Y=
- name: tgBTC_holders
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.holders
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCHolders
- name: tgBTC Transfers
  endpoint:
    path: /reference/get-tgbtc-transfers
    method: GET
- name: tgBTC MetaData
  endpoint:
    path: /reference/get-tgbtc-metadata
    method: GET
- name: tgBTC Transfer Payload
  endpoint:
    path: /reference/get-tgbtc-jetton-transfer-payload
    method: GET
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /reference/get-tgbtc-jetton-wallet-address
    method: GET
- name: tgBTC Balance
  endpoint:
    path: /reference/get-tgbtc-balance
    method: GET
- name: tgBTC Master Addresses
  endpoint:
    path: /reference/get-tgbtc-master-addresses
    method: GET
- name: tgBTC Holders
  endpoint:
    path: /reference/get-tgbtc-holders
    method: GET
- name: get_tgBTC_jetton_master_address
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: tgBTC Balance
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: tgBTC MetaData
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: '1'
      jsonrpc: '2.0'
      method: getTgBTCMetaData
- name: getTgBTCConfig
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCConfig
- name: tgBTC Jetton Transfer Payload
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: tgBTC_holders
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.holders
    params: {}
- name: tgBTC Transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCTransfers
      params:
        address: kQArvBIUJpWFbkvc2Wn8umW3heMxNSNk2-ny3Ras79MP9d3K
- name: tgBTC Jetton Master Address
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCMasterAddress
      params: {}
- name: tgBTC MetaData
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCMetaData
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCWalletAddressByOwner
      params:
        owner_address: kQCyuq99EWfbGKRDM-WSmVSIvT9Tsc4XI_GRVucMigyRo9QD
- name: tgBTC Jetton Transfer Payload
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCTransferPayload
      params: {}
- name: tgBTC Burns
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCBurns
      params: {}
- name: Get Jetton Wallets
  endpoint:
    path: /reference/get-jetton-wallets
    method: POST
- name: Get Jetton Transfers
  endpoint:
    path: /reference/get-jetton-transfers
    method: POST
- name: Get Jetton Masters
  endpoint:
    path: /reference/get-jetton-masters
    method: POST
- name: Get Jetton Burns
  endpoint:
    path: /reference/get-jetton-burns
    method: POST
- name: tgBTC Transfers
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCTransfers
      params:
        address: kQArvBIUJpWFbkvc2Wn8umW3heMxNSNk2-ny3Ras79MP9d3K
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /get-tgbtc-jetton-wallet-address
    method: POST
    data_selector: result
    params:
      owner_address: string
- name: account_nft_items
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.nft_items
    params:
      account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: tgBTC Burns
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCBurns
      params: {}
- name: tgBTC Config
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCConfig
- name: Emulate Message To Trace
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: jetton_wallets
  endpoint:
    path: /jetton-wallets
    method: GET
- name: jetton_transfers
  endpoint:
    path: /jetton-transfers
    method: GET
- name: jetton_masters
  endpoint:
    path: /jetton-masters
    method: GET
- name: jetton_burns
  endpoint:
    path: /jetton-burns
    method: GET
- name: account_nft_items
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result.nft_items
    params:
      method: getAccountNftItems
      params:
        account_id: EQAj-peZGPH-cC25EAv4Q-h8cBXszTmkch6ba6wXC8BM4xdo
- name: tgBTC Config
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: getTgBTCConfig
      params: {}
- name: estimate_fee
  endpoint:
    path: /reference/estimate-fee
    method: GET
- name: get_message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: send_message
  endpoint:
    path: /reference/send-message
    method: POST
- name: get_account_balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: get_address_information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: get_block_header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: get_nft_collections
  endpoint:
    path: /reference/get-nft-collections
    method: GET
- name: get_jetton_masters
  endpoint:
    path: /reference/get-jetton-masters
    method: GET
- name: get_tgbtc_balance
  endpoint:
    path: /reference/get-tgbtc-balance
    method: GET
- name: emulate_message_to_trace
  endpoint:
    path: /v2/json-rpc/{API_KEY}
    method: POST
    data_selector: result
    params: {}
- name: tgBTC Transfers
  endpoint:
    path: /reference/get-tgbtc-transfers
    method: GET
- name: tgBTC MetaData
  endpoint:
    path: /reference/get-tgbtc-metadata
    method: GET
- name: tgBTC Transfer Payload
  endpoint:
    path: /reference/get-tgbtc-jetton-transfer-payload
    method: GET
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /reference/get-tgbtc-jetton-wallet-address
    method: GET
- name: tgBTC Balance
  endpoint:
    path: /reference/get-tgbtc-balance
    method: GET
- name: tgBTC Master Addresses
  endpoint:
    path: /reference/get-tgbtc-master-addresses
    method: GET
- name: tgBTC Holders
  endpoint:
    path: /reference/get-tgbtc-holders
    method: GET
- name: Estimate Fee
  endpoint:
    path: /reference/estimate-fee
    method: GET
- name: Get Message
  endpoint:
    path: /reference/get-messages
    method: GET
- name: Send Message
  endpoint:
    path: /reference/send-message
    method: POST
- name: Get Account Balance
  endpoint:
    path: /reference/get-account-balance
    method: GET
- name: Get Address Information
  endpoint:
    path: /reference/get-address-information
    method: GET
- name: Get Block Header
  endpoint:
    path: /reference/get-block-header
    method: GET
- name: Get NFT Collections
  endpoint:
    path: /reference/get-nft-collections
    method: GET
- name: Get TON Transactions
  endpoint:
    path: /reference/get-ton-transactions
    method: GET
- name: Get Jetton Masters
  endpoint:
    path: /reference/get-jetton-masters
    method: GET
- name: tgBTC Transfers
  endpoint:
    path: /reference/get-tgbtc-transfers
    method: GET
- name: tgBTC MetaData
  endpoint:
    path: /reference/get-tgbtc-metadata
    method: GET
- name: tgBTC Transfer Payload
  endpoint:
    path: /reference/get-tgbtc-jetton-transfer-payload
    method: GET
- name: tgBTC Jetton Wallet Address
  endpoint:
    path: /reference/get-tgbtc-jetton-wallet-address
    method: GET
- name: tgBTC Balance
  endpoint:
    path: /reference/get-tgbtc-balance
    method: GET
- name: tgBTC Master Addresses
  endpoint:
    path: /reference/get-tgbtc-master-addresses
    method: GET
- name: tgBTC Holders
  endpoint:
    path: /reference/get-tgbtc-holders
    method: GET
- name: BoC Parsing Tools
  endpoint:
    path: /reference/verifyboc
    method: GET
- name: BoC Status API
  endpoint:
    path: /reference/getbocstatus
    method: GET
- name: Radix Conversion
  endpoint:
    path: /reference/radix-conversion
    method: GET
- name: Binary Conversion
  endpoint:
    path: /reference/binary-conversion
    method: GET
- name: Detect Address
  endpoint:
    path: /reference/detect-address
    method: GET
- name: VerifyBoC
  endpoint:
    path: /v2/labs/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: SendMessage
  endpoint:
    path: /v2/json-rpc/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: GetBoCStatus
  endpoint:
    path: /v2/labs/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: GetMessages
  endpoint:
    path: /v2/json-rpc/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: VerifyBoC
  endpoint:
    path: /v2/labs/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: SendMessage
  endpoint:
    path: /v2/json-rpc/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: GetBoCStatus
  endpoint:
    path: /v2/labs/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
- name: GetMessages
  endpoint:
    path: /v2/json-rpc/3eadfde7-6e4e-4dcd-ac8c-776dcd1ec73e
    method: POST
    data_selector: result
    params: {}
notes:
- The Messages /Accounts / Blocks api are direct api, which retrieving your data directly
  through the TON peer-to-peer network.
- Please be aware of the property of Direct API , it could only obtain data within
  24 hours.
- To use TONX API's services, you need an API key to authenticate your requests.
- All requests to TONX API must have a valid TON API key appended to the request URL
  or they will fail.
- 'Secure TON API Keys: Use environment variables or secret management tools to store
  sensitive information like API keys.'
- Use a Testnet API key for development.
- Never commit API keys to version control
- Validate wallet addresses before querying
- Handle API errors appropriately
- Use a testnet API key
- Uses testnet for development
- Always use environment variables for sensitive data
- Verify you're using a testnet API key
- Requires API Key for authentication.
- Requires API Key for authentication
- Check the network version compatibility for API key usage
- Uses API key for authentication — requires setup of API account.
- Requires TONX API Key for authentication
- TONX API provides a stable and scalable environment tailored to your needs.
- TONX API connects your dApp to the TON ecosystem.
- TONX API is offering free testnet tgBTC to BTCFi hackathon participants.
- Monitor usage, manage API keys, and analyze blockchain activity with ease.
- Currently, we only allow each TONX API account to submit an application once every
  12 hours.
- TONX API is on the highest standard of the TON API ecosystem, bringing industry-leading
  Web3 infrastructure that delivers unparalleled stability with 99.99 uptime, precise
  indexing, and ultra-low latency for high-performance TON Dapp worldwide.
- If an API key has no allowlists, all requests are accepted.
- If an API key has an allowlist, all requests must pass it.
- Each API key has a maximum of 5 allowlist for IPs and domains.
- If an API key contains both restriction for IPs and Domains, the relation for restriction
  IPs and restriction for domains is “or”.
- On Testnet, test tokens are employed instead of real cryptocurrencies.
- Refill available every 12 hours! Claim free TON testnet tokens easily with just
  an email verification.
- Testnet funds have no monetary value.
- If an API key contains both restriction for IPs and Domains, the relation for restriction
  IPs and restriction for domains is 'or'.
- TONX API V1 endpoint is deprecated and will be removed on 2025/3/1.
- Free Plan with 10 RPS
- TONX API does not require running nodes on your own.
- Powered by TONX Supernode, TONX API delivers unparalleled stability with 99.99 uptime.
errors:
- '400: Bad Request -- Your request is invalid. Double-check your JSON-RPC body.'
- '401: Unauthorized -- You must authenticate your request with an API key.'
- '403: Forbidden -- You''ve use wrong key to query specific network(using testent
  key to query mainnet data)'
- '429: Too Many Requests -- You''ve exceeded your concurrent requests capacity.'
- '500: internal Server Error -- We''re unable to process your request right now.
  Get in touch with us if you see this.'
- '503: Service unavailable -- unable to complete the request due to server issues'
- No connection
- Error fetching balance
- Error fetching transaction
- No transaction found
- 'Wallet Not Deployed Error: Ensure your wallet is properly deployed on testnet'
- 'Transfer Failures: Verify Jetton wallet address is correct'
- 'API Key Issues: Verify you''re using a testnet API key'
- 'No connection: Initial state'
- 'Error fetching transaction: When API calls fail'
- 'No transaction found: When no transfers are found'
- '401 Unauthorized: Invalid API key'
- 'INVALID_PARAMS: Check the parameters passed to the API call'
- 'UNAUTHORIZED: Ensure the API key is valid and properly included'
- 'NETWORK_ERROR: Verify network connection and endpoint URL'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Verify endpoint paths'
- '500 Internal Server Error: Contact support'
- '400 Bad Request: Check request parameters or format'
- '500 Internal Server Error: Try again later or check service status'
- '400 Bad Request: Check request parameters'
- '500 Internal Server Error: Try again later'
- '400 Bad Request: Verify input parameters'
- '500 Internal Server Error: Retry request'
- '400 Bad Request: Check parameters'
- '500 Internal Server Error: Server issue'
- '400 Bad Request: Check request body and parameters'
- '500 Internal Server Error: Try again later or contact support'
- '400 Bad Request: Check the request format and parameters'
- 400 Bad Request
- 500 Internal Server Error
- '400 Bad Request: Check request parameters.'
- '500 Internal Server Error: Server encountered an error.'
- '500 Internal Server Error: Retry the request'
- '500 Internal Server Error: Server encountered an error'
- '400 Bad Request: Check parameters and request body'
- '400 Bad Request: Check your request parameters'
- '400 Bad Request: Invalid parameters'
- '500 Internal Server Error: Unexpected server error'
- '400 Bad Request: Check the request parameters'
- '500 Internal Server Error: Check the server status'
- '400 Bad Request: Check parameters in the request body'
- '500 Internal Server Error: Try again later or check server status'
- '400 Bad Request: Check parameters provided in the request'
- '500 Internal Server Error: Server encountered an unexpected condition'
- '400 Bad Request: Check your parameters'
- '400 Bad Request: Check error object for details'
- '500 Internal Server Error: Server issue, try again later'
- '400 Bad Request: Check the request parameters.'
- '500 Internal Server Error: Try again later.'
- '400 Bad Request: Check request parameters and format'
- '500 Internal Server Error: Retry the request or check server status'
- '400 Bad Request: Check parameters for validity'
- '500 Internal Server Error: Check server status'
- '400 Bad Request: Check parameters for correctness'
- '500 Internal Server Error: Server issues, retry later'
- '400 Bad Request: Check parameters and request format'
- '500 Internal Server Error: Try again later or check API status'
- '500 Internal Server Error: An unexpected error occurred.'
- '400 Bad Request: Check parameters and request structure'
- '500 Internal Server Error: Try again later or check the service status'
- '500 Internal Server Error: Retry your request.'
- '500 Internal Server Error: An internal error occurred'
- '400 Bad Request: Check parameters provided'
- '400 Bad Request: Check parameters and their types'
- '500 Internal Server Error: Retry the request later'
- '400 Bad Request: Check parameters or method'
- '500 Internal Server Error: Unable to process request'
- '400 Bad Request: Ensure all required parameters are included and correctly formatted'
- '500 Internal Server Error: Check API status and retry request'
- '400 Bad Request: Check request parameters or API key'
- '400 Bad Request: Ensure required parameters are included'
- '400 Bad Request: Check the parameters sent'
- 404 Not Found
- '400 Bad Request: Check parameters in the request'
- '200: OK. The request succeeded.'
- '500: Internal Server Error The server has encountered a situation it does not know
  how to handle.'
- '403 error: Confirming the domain restriction is working.'
- '403 error: Confirming the IP restriction is working.'
- I get an error that the address is unavailable, what does it mean? We only support
  valid TON wallet addresses as receiving address; please ensure your wallet meets
  the standard.
- The Faucet confirmed that it sent me Testnet coin, but I still have not received
  them. Why? The time needed to receive your Testnet coin may vary due to potential
  network congestion during this period.
auth_info:
  mentioned_objects: []
client:
  base_url: https://network-rpc.tonxapi.com/v2/labs/{API_KEY}
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
