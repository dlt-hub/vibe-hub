resources:
- name: reporting_period
  endpoint:
    path: /reference/reporting-periods
    method: GET
    data_selector: reporting_periods
- name: employee_check
  endpoint:
    path: /reference/employee-checks
    method: GET
    data_selector: employee_checks
- name: company
  endpoint:
    path: /reference/the-company-object
    method: GET
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: employee
  endpoint:
    path: /employees
    method: GET
- name: contractor
  endpoint:
    path: /contractors
    method: GET
- name: customer_account
  endpoint:
    path: /customer_accounts
    method: GET
- name: paycard
  endpoint:
    path: /paycards
    method: GET
- name: employees
  endpoint:
    path: /get-employees
    method: GET
- name: contractors
  endpoint:
    path: /get-contractors
    method: GET
- name: employee_checks
  endpoint:
    path: /employee-checks
    method: GET
    data_selector: records
- name: contractor_payments
  endpoint:
    path: /contractor-payments
    method: GET
    data_selector: records
- name: create_employee_event
  endpoint:
    path: /create-employee-event
    method: POST
    data_selector: The Employee Object
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: employee
  endpoint:
    path: /create-employee
    method: POST
    data_selector: employee
    params: {}
- name: Company Onboarding
  endpoint:
    path: /reference/company-onboarding-event
    method: POST
    data_selector: The Company Object
    params: {}
- name: Company Onboarding
  endpoint:
    path: /employeronboard/{companyID}
    method: POST
    data_selector: data
    params: {}
- name: employee_event
  endpoint:
    path: /create-employee-event
    method: POST
    data_selector: employee_object
    params: {}
- name: employee
  endpoint:
    path: /create-employee
    method: POST
    data_selector: employee
    params: {}
- name: company_event
  endpoint:
    path: /company-event
    method: POST
    data_selector: The Company Object
    params: {}
- name: company_onboarding
  endpoint:
    path: /reference/company-onboarding-event
    method: POST
- name: Company Onboarding
  endpoint:
    path: /employeronboard/{companyID}
    method: POST
- name: Company Onboarding Event
  endpoint:
    path: /reference/company-onboarding-event
    method: POST
- name: Customer Account Onboarding Event
  endpoint:
    path: /reference/customer-account-onboarding-event
    method: POST
- name: Update Company Information
  endpoint:
    path: /reference/update-company-info
    method: PATCH
- name: Get Company Information
  endpoint:
    path: /reference/get-company-information
    method: GET
- name: Get All Company Information
  endpoint:
    path: /reference/get-all-company-information
    method: GET
- name: company
  endpoint:
    path: /reference/the-company-object
    method: POST
    data_selector: The Company Object
- name: Customer Account Object
  endpoint:
    path: /reference/customer-account-object
    method: POST
- name: customer_account
  endpoint:
    path: /reference/the-customer-account-object
    method: POST
- name: customer_account
  endpoint:
    path: /customer-account
    method: POST
    data_selector: customer_account_id
    params: {}
- name: customer_account
  endpoint:
    path: /create-customer-account
    method: POST
    data_selector: customer_account
    params: {}
- name: customer_account_update
  endpoint:
    path: /customer-account-event
    method: POST
    data_selector: customer_account
    params:
      type: update
- name: customer_account
  endpoint:
    path: /customer-account-event
    method: POST
    data_selector: customer_account
    params: {}
- name: employee_onboarding_event
  endpoint:
    path: /reference/employee-onboarding-event
    method: POST
    data_selector: The Employee Object
- name: employee_onboarding
  endpoint:
    path: /employee/onboarding
    method: POST
    data_selector: employee_object
    params: {}
- name: employee_onboarding
  endpoint:
    path: /reference/employee-onboarding-event
    method: GET
    data_selector: records
- name: employee_onboarding
  endpoint:
    path: /employee/onboarding
    method: POST
    data_selector: employee_data
- name: employee_event
  endpoint:
    path: /employee-event
    method: POST
    data_selector: The Employee Object
- name: employee_event
  endpoint:
    path: /employee-event
    method: POST
    data_selector: none
    params: {}
- name: employee_event
  endpoint:
    path: /reference/employee-event-webhook
    method: GET
    data_selector: records
- name: employee_event
  endpoint:
    path: /employee-event
    method: GET
    data_selector: records
- name: contractor_event
  endpoint:
    path: /contractor-event-webhook
    method: POST
    data_selector: Contractor Object
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: POST
    data_selector: Contractor Object
- name: contractor
  endpoint:
    path: /contractor-event-webhook
    method: GET
    data_selector: records
- name: contractor_event
  endpoint:
    path: /reference/contractor-event-webhook
    method: GET
    data_selector: records
- name: employee_check
  endpoint:
    path: /reference/employee-check-object
    method: POST
    data_selector: Employee Check Object
    params: {}
- name: employee_check
  endpoint:
    path: /employee-checks
    method: GET
- name: employee_check
  endpoint:
    path: /reference/employee-check-object
    method: POST
    data_selector: Employee Check Object
    params: {}
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
    data_selector: Contractor Payment Object
    params: {}
- name: employee_check
  endpoint:
    path: /employee-checks
    method: GET
    data_selector: records
    params: {}
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
    data_selector: contractorPayment
    params: {}
- name: shift_event
  endpoint:
    path: /shift-event
    method: POST
    data_selector: pending
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractor-payment-event
    method: POST
    data_selector: contractor_payment
    params: {}
- name: shift_event
  endpoint:
    path: /shift-event
    method: GET
    data_selector: records
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
    data_selector: data
    params: {}
- name: Employer Check
  endpoint:
    path: /reference/employer-check-object
    method: POST
    data_selector: Employer Check Object
    params: {}
- name: shift_event
  endpoint:
    path: /shift-event
    method: POST
    data_selector: Shift Object
    params: {}
- name: employer_check_created
  endpoint:
    path: /employer-check-created
    method: POST
    data_selector: records
- name: shift
  endpoint:
    path: /reference/shift-event
    method: GET
    data_selector: records
    params: {}
- name: employer_check_processed
  endpoint:
    path: /employer/check/processed
    method: POST
    data_selector: processed
    params: {}
- name: employer_check
  endpoint:
    path: /reference/employer-check-object
    method: POST
    data_selector: Employer Check Object
    params: {}
- name: employer_check_processed
  endpoint:
    path: /reference/employer-check-processed
    method: GET
    data_selector: records
- name: employer_check
  endpoint:
    path: /employer-checks
    method: POST
    data_selector: employerCheckID
    params: {}
- name: employer_check
  endpoint:
    path: /reference/employer-check-processed
    method: POST
    data_selector: employee_checks
- name: employer_check_processed
  endpoint:
    path: /employer-check-processed
    method: POST
    data_selector: processedEmployerCheck
    params: {}
- name: employer_check_processed
  endpoint:
    path: /reference/employer-check-processed
    method: GET
    data_selector: processed
    params: {}
- name: employer_check_processed
  endpoint:
    path: /reference/employer-check-processed
    method: GET
    data_selector: test
    params: {}
- name: employer_check_processed
  endpoint:
    path: /employer-check-processed
    method: POST
    data_selector: employee_checks
- name: job_queue_event
  endpoint:
    path: /report-status-change-webhook
    method: POST
    data_selector: job information
    params: {}
- name: employer_check_processed
  endpoint:
    path: /reference/employer-check-processed
    method: GET
    data_selector: records
    params: {}
- name: job_queue_event
  endpoint:
    path: /report-status-change-webhook
    method: GET
    data_selector: job_queue_event
    params: {}
- name: job_queue_event
  endpoint:
    path: /report-status-change-webhook
    method: POST
    data_selector: job
    params: {}
- name: job_queue_event
  endpoint:
    path: /report-status-change-webhook
    method: GET
    data_selector: jobID
- name: I9 Update Event
  endpoint:
    path: /employee-i9-update-event
    method: POST
    data_selector: event
    params: {}
- name: employee_i9_update
  endpoint:
    path: /employee/i9/update
    method: POST
    data_selector: data
    params: {}
- name: employee_i9_update
  endpoint:
    path: /employee/i9/update
    method: POST
    data_selector: records
- name: employee_i9_update
  endpoint:
    path: /employee-i9-update
    method: POST
    data_selector: records
- name: employee_e_verify_update
  endpoint:
    path: /employee-e-verify-update
    method: POST
    data_selector: none
    params: {}
- name: employee_e_verify_update
  endpoint:
    path: /employee/e-verify/update
    method: POST
    data_selector: data
    params: {}
- name: employee_e_verify_update
  endpoint:
    path: /webhook/employee-e-verify-update
    method: POST
    data_selector: test
- name: employee_e_verify
  endpoint:
    path: /webhook/employee-e-verify-update
    method: POST
    data_selector: test
    params: {}
- name: employee_requirement
  endpoint:
    path: /employee-requirements/create
    method: POST
    data_selector: Employee Requirement
    params: {}
- name: employee_requirement
  endpoint:
    path: /employee-requirements/create
    method: POST
    data_selector: Employee Requirement
    params: {}
- name: employeeRequirement
  endpoint:
    path: /employee-requirements
    method: POST
    data_selector: employeeRequirementID
- name: employee_requirements
  endpoint:
    path: /employee-requirements
    method: POST
    data_selector: employeeRequirement
    params: {}
- name: employee_requirement
  endpoint:
    path: /employee-requirements-update
    method: POST
    data_selector: employeeRequirement
    params: {}
- name: employeeRequirement
  endpoint:
    path: /reference/employee-requirements-update-webhook
    method: GET
    data_selector: test
- name: employee_requirement
  endpoint:
    path: /employee-requirements-update
    method: POST
    data_selector: employeeRequirement
    params: {}
- name: paycard_onboarding_status
  endpoint:
    path: /paycard/onboarding/status
    method: POST
    data_selector: payload
- name: employee_requirements
  endpoint:
    path: /employee-requirements-update
    method: POST
    data_selector: test
- name: paycard_onboarding_status
  endpoint:
    path: /reference/paycard-onboarding-status
    method: GET
    data_selector: records
- name: paycard_onboarding_status
  endpoint:
    path: /paycard/onboarding/status
    method: POST
    data_selector: paycard status
    params: {}
- name: wallet_transaction
  endpoint:
    path: /instant-pay-wallet-transaction
    method: POST
- name: paycard_onboarding_status
  endpoint:
    path: /paycard/onboarding/status
    method: GET
    data_selector: records
    params: {}
- name: wallet_transaction
  endpoint:
    path: /get-wallet-transactions
    method: GET
    data_selector: transactions
- name: wallet_transaction
  endpoint:
    path: /wallet/transaction
    method: POST
- name: wallet_transaction
  endpoint:
    path: /get-wallet-transactions
    method: GET
    data_selector: transactions
- name: generate_employee_or_contractor_dashboard_link
  endpoint:
    path: /getAuthLink
    method: POST
    data_selector: data
    params: {}
- name: generate_employee_or_contractor_dashboard_link
  endpoint:
    path: /getAuthLink/
    method: POST
- name: generate_reports_link
  endpoint:
    path: /authLinks/reports
    method: POST
- name: paystub_link
  endpoint:
    path: /paystubLink
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeCheckID: ''
- name: paystub_link
  endpoint:
    path: /paystubLink
    method: GET
- name: paystub_link
  endpoint:
    path: /paystubLink
    method: GET
    data_selector: data
    params:
      companyID: string
      employeeCheckID: string
- name: company
  endpoint:
    path: /reference/the-company-object
    method: GET
- name: customer_account
  endpoint:
    path: /reference/customer-account-object
    method: GET
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: company
  endpoint:
    path: /reference/the-company-object
    method: GET
    data_selector: company
    params: {}
- name: company
  endpoint:
    path: /reference/get-company-information
    method: GET
- name: all_company
  endpoint:
    path: /reference/get-all-company-information
    method: GET
- name: company
  endpoint:
    path: /reference/the-company-object
    method: GET
    data_selector: records
- name: requirement
  endpoint:
    path: /the-requirement-object
    method: GET
    data_selector: attributes
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      partnerID: required
- name: requirement
  endpoint:
    path: /path/to/requirement/endpoint
    method: GET
    data_selector: attributes
- name: company_information
  endpoint:
    path: /companies
    method: GET
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      partnerID: required
- name: company_information
  endpoint:
    path: /companies
    method: GET
- name: create_company_bank_account
  endpoint:
    path: /companies/bank
    method: POST
    data_selector: success
    params:
      companyID: required
      account_number: required
      routing_number: required
- name: create_company_bank_account
  endpoint:
    path: /companies/bank
    method: POST
    data_selector: success
    params: {}
- name: trigger_microdeposits
  endpoint:
    path: /companies/microdeposits/trigger
    method: POST
- name: verify_microdeposit_values
  endpoint:
    path: /verify-microdeposit-values
    method: POST
- name: trigger_micro_deposits
  endpoint:
    path: /companies/microdeposits/trigger
    method: POST
    data_selector: success
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    data_selector: data
    params:
      companyID: string
      document_key: string
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    data_selector: data
    params:
      companyID: ''
      document_key: ''
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    params:
      document_key: '8655'
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    params:
      document_key: '8655'
- name: sign_company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: POST
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: POST
    data_selector: object
    params: {}
- name: company_onboarded_status
  endpoint:
    path: /set-company-status-to-onboarded
    method: POST
    data_selector: object
    params: {}
- name: company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: POST
- name: set_company_onboarded_status
  endpoint:
    path: /set-company-status-to-onboarded
    method: POST
- name: onboard_company
  endpoint:
    path: /companies/onboardCompany
    method: POST
    data_selector: data
    params:
      companyID: string
- name: set_company_onboarded_status
  endpoint:
    path: /companies/onboardCompany
    method: POST
    data_selector: success
    params:
      companyID: string
- name: customer_account
  endpoint:
    path: /reference/customer-account-object
    method: GET
- name: customer_account
  endpoint:
    path: /reference/get-customer-account
    method: GET
- name: all_customer_accounts
  endpoint:
    path: /reference/get-all-customer-accounts
    method: GET
- name: customer_account
  endpoint:
    path: /reference/get-all-customer-accounts
    method: GET
    data_selector: records
    params: {}
- name: customer_account
  endpoint:
    path: /reference/get-all-customer-accounts
    method: GET
    data_selector: customer_accounts
    params: {}
- name: customer_account_onboarding
  endpoint:
    path: /customer-accounts/onboard
    method: POST
    data_selector: data
    params: {}
- name: customer_account_onboarding
  endpoint:
    path: /customer-accounts/onboard
    method: POST
- name: customer_account_onboarded
  endpoint:
    path: /customer-accounts/onboard
    method: POST
- name: customer_accounts
  endpoint:
    path: /customer-accounts/onboard
    method: POST
    data_selector: response
    params: {}
- name: customer_accounts
  endpoint:
    path: /customer-accounts
    method: POST
    data_selector: account_type
- name: funding_sources
  endpoint:
    path: /customer-accounts/id/funding-sources
    method: POST
    data_selector: account_type
- name: trigger_microdeposits
  endpoint:
    path: /customer-accounts/{customerAccountID}/trigger-micro-deposits
    method: POST
- name: trigger_microdeposits
  endpoint:
    path: /customer-accounts/{customerAccountID}/trigger-micro-deposits
    method: POST
- name: trigger_micro_deposits
  endpoint:
    path: /customer-accounts/customerAccountID/trigger-micro-deposits
    method: POST
    data_selector: null
    params: {}
- name: customer_account
  endpoint:
    path: /customer-accounts/customerAccountID/trigger-micro-deposits
    method: POST
- name: customer_account
  endpoint:
    path: /customer-accounts/customerAccountID
    method: GET
- name: all_customer_accounts
  endpoint:
    path: /get-all-customer-accounts
    method: GET
- name: customer_account
  endpoint:
    path: /customer-accounts/{customerAccountID}
    method: GET
    data_selector: data
    params:
      companyID: required
- name: taxable_location
  endpoint:
    path: /reference/taxable-location-object
    method: GET
    data_selector: ''
    params: {}
- name: customer_accounts
  endpoint:
    path: /customer-accounts/customerAccountID
    method: GET
- name: all_customer_accounts
  endpoint:
    path: /get-all-customer-accounts
    method: GET
- name: Taxable Location
  endpoint:
    path: /reference/taxable-location-object
    method: GET
- name: taxable_location
  endpoint:
    path: /reference/taxable-location-object
    method: GET
    data_selector: records
- name: taxable_location
  endpoint:
    path: /reference/taxable-location-object
    method: GET
    data_selector: records
- name: taxable_location
  endpoint:
    path: /taxableLocations
    method: POST
    data_selector: data
    params: {}
- name: Taxable Location by ID
  endpoint:
    path: /reference/retrieve-taxable-location-by-id
    method: GET
    data_selector: object
- name: Get Taxable Location by ID
  endpoint:
    path: /reference/retrieve-taxable-location-by-id
    method: GET
- name: taxable_location
  endpoint:
    path: /taxableLocations
    method: GET
    data_selector: data
    params:
      taxableLocationID: ''
- name: taxable_location
  endpoint:
    path: /taxableLocations
    method: GET
    data_selector: data
    params:
      taxableLocationID: string
- name: taxableLocations
  endpoint:
    path: /taxableLocations
    method: GET
- name: work_location
  endpoint:
    path: /work-location-object
    method: GET
- name: taxable_locations
  endpoint:
    path: /taxableLocations
    method: GET
    data_selector: object
    params: {}
- name: work_location
  endpoint:
    path: /reference/work-location-object
    method: GET
    data_selector: records
- name: work_location
  endpoint:
    path: /reference/work-location-object
    method: GET
- name: work_location
  endpoint:
    path: /reference/work-location-object
    method: GET
    data_selector: records
    params: {}
- name: work_location
  endpoint:
    path: /workLocations
    method: POST
    data_selector: data
- name: work_location
  endpoint:
    path: /workLocations
    method: POST
- name: work_location
  endpoint:
    path: /workLocations
    method: GET
    data_selector: results
- name: work_location
  endpoint:
    path: /workLocations
    method: GET
    data_selector: data
    params:
      companyID: string
      workLocationID: string
      taxableLocationID: string
      state: array of strings
      work_site_id: string
- name: work_locations
  endpoint:
    path: /workLocations
    method: GET
    data_selector: results
- name: work_location
  endpoint:
    path: /workLocations
    method: GET
    data_selector: data
    params:
      companyID: ''
      workLocationID: ''
      taxableLocationID: ''
      state: []
      work_site_id: ''
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: work_locations
  endpoint:
    path: /workLocations
    method: GET
- name: employee
  endpoint:
    path: /employees
    method: GET
    data_selector: records
    params: {}
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: employees
  endpoint:
    path: /reference/get-employees
    method: GET
- name: employee_information
  endpoint:
    path: /reference/retrieve-employee-information
    method: GET
- name: create_employee
  endpoint:
    path: /reference/create-employee
    method: POST
- name: update_employee_information
  endpoint:
    path: /reference/update-employee-information
    method: PATCH
- name: employee
  endpoint:
    path: /get-employees
    method: GET
    data_selector: records
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: POST
- name: employee
  endpoint:
    path: /employees
    method: POST
- name: employee
  endpoint:
    path: /get-employees
    method: GET
    data_selector: records
- name: update_employee_information
  endpoint:
    path: /update-employee-information
    method: PATCH
    data_selector: object
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: employee
  endpoint:
    path: /employees
    method: PATCH
    data_selector: data
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: PATCH
    data_selector: data
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: GET
    data_selector: data
    params:
      companyID: string
      employeeID: string
- name: employee_information
  endpoint:
    path: /employees
    method: GET
    params:
      companyID: string
      employeeID: string
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: object
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: object
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: data
    params:
      companyID: required
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: data
    params:
      companyID: ''
      onboarded: ''
      employment_status: ''
      title: ''
      dob: ''
      start_date: ''
      email: ''
      phone_number: ''
      default_pay_schedule: ''
      is_943: ''
      is_scheduleH: ''
      external_id: ''
      workLocationID: ''
- name: employee
  endpoint:
    path: /employees
    method: GET
    data_selector: results
- name: employee
  endpoint:
    path: /employees
    method: GET
    data_selector: results
    params: {}
- name: Get Employee Requirements
  endpoint:
    path: /reference/get-employee-requirements
    method: GET
- name: employee_requirements
  endpoint:
    path: /reference/get-employee-requirements
    method: GET
    data_selector: records
- name: Get Employee Requirements
  endpoint:
    path: /get-employee-requirements
    method: GET
    data_selector: records
- name: employee_requirements
  endpoint:
    path: /employeeRequirements
    method: GET
    data_selector: data
    params:
      companyID: required
      employeeID: optional
- name: employee_requirements
  endpoint:
    path: /reference/get-employee-requirements
    method: GET
    data_selector: records
    params: {}
- name: employee_requirements
  endpoint:
    path: /employeeRequirements
    method: GET
    data_selector: result
- name: send_employee_onboarding_link
  endpoint:
    path: /sendLink
    method: POST
    data_selector: data
    params:
      companyID: required
- name: employee_requirements
  endpoint:
    path: /employeeRequirements
    method: GET
    data_selector: object
- name: send_employee_onboarding_link
  endpoint:
    path: /sendLink
    method: POST
- name: tax_parameter_definitions
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: data
    params:
      jurisdictions: []
- name: tax_parameter_definitions
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: data
    params:
      jurisdictions:
      - US
- name: set_employee_tax_parameters
  endpoint:
    path: /employees/setTaxParameters
    method: POST
    data_selector: data
    params: {}
- name: employee_tax_parameter_definitions
  endpoint:
    path: /reference/get-employee-tax-parameter-definitions
    method: GET
    data_selector: employeeParameters
    params: {}
- name: employee_tax_parameter_summary
  endpoint:
    path: /reference/get-employee-tax-parameter
    method: GET
    data_selector: employeeTaxParameters
    params: {}
- name: employee_tax_parameters
  endpoint:
    path: /reference/get-employee-tax-parameter
    method: GET
    data_selector: parameters
    params: {}
- name: employee_tax_parameter_summary
  endpoint:
    path: /employees/getTaxParameterSummary
    method: POST
- name: employee_tax_parameter_summary
  endpoint:
    path: /employees/getTaxParameterSummary
    method: POST
    data_selector: data
    params:
      employeeID: string
      companyID: string
      jurisdictions: array
- name: getTaxParameterSummary
  endpoint:
    path: /employees/getTaxParameterSummary
    method: POST
    data_selector: object
    params: {}
- name: set_onboarded_status
  endpoint:
    path: /employees/setOnboardedStatusToTrue
    method: POST
- name: set_onboarded_status
  endpoint:
    path: /employees/setOnboardedStatusToTrue
    method: POST
    data_selector: data
    params: {}
- name: profile_information_collection_link
  endpoint:
    path: /employees/profile_information
    method: POST
    data_selector: data
- name: profile_information_collection_link
  endpoint:
    path: /employees/profile_information
    method: POST
- name: create_account_setup_link
  endpoint:
    path: /employees/account_information
    method: POST
    data_selector: data
    params: {}
- name: create_account_setup_link
  endpoint:
    path: /employees/account_information
    method: POST
    data_selector: data
    params: {}
- name: custom_paperwork
  endpoint:
    path: /employees/custom_paperwork
    method: POST
    data_selector: data
    params:
      companyID: companyID
      employeeID: employeeID
      formTemplateIDs: formTemplateIDs
- name: create_w4_link
  endpoint:
    path: /employees/w4
    method: POST
- name: paycard_enrollment
  endpoint:
    path: /employees/paycard
    method: POST
    data_selector: data
- name: paycard_enrollment_link
  endpoint:
    path: /employees/paycard
    method: POST
    data_selector: data
    params:
      companyID: string
      employeeID: string
      send_to_worker: boolean
- name: instant_pay_employee_enrollment_link
  endpoint:
    path: /employees/instant-pay
    method: POST
    data_selector: data
    params:
      companyID: string
      employeeID: string
      send_to_worker: boolean
- name: instant_pay_employee_enrollment_link
  endpoint:
    path: /employees/instant-pay
    method: POST
    data_selector: data
    params:
      companyID: string
      employeeID: string
      send_to_worker: boolean
- name: bank_account_collection_link
  endpoint:
    path: /employees/bank_information
    method: POST
    data_selector: data
    params: {}
- name: bank_account_collection_link
  endpoint:
    path: /employees/bank_information
    method: POST
    data_selector: data
    params: {}
- name: create_employee_id_upload_link
  endpoint:
    path: /employees/id_upload_link
    method: POST
- name: employee_id_upload_link
  endpoint:
    path: /employees/id_upload_link
    method: POST
- name: get_i9_status
  endpoint:
    path: /i9/status
    method: GET
- name: employee_id_upload_link
  endpoint:
    path: /employees/id_upload_link
    method: POST
- name: i9_status
  endpoint:
    path: /get-i9-status
    method: GET
- name: i9_status
  endpoint:
    path: /employees/getI9Status
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
- name: I9 Status
  endpoint:
    path: /employees/getI9Status
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
- name: get_i9_status
  endpoint:
    path: /employees/getI9Status
    method: GET
- name: bank_account
  endpoint:
    path: /reference/bank-account-object
    method: GET
- name: bank_account
  endpoint:
    path: /reference/bank-account-object
    method: GET
- name: bank_account
  endpoint:
    path: /reference/bank-account-object
    method: GET
    data_selector: records
- name: bank_account
  endpoint:
    path: /reference/bank-account-object
    method: GET
    data_selector: records
- name: bank_account
  endpoint:
    path: /bankaccount
    method: POST
    data_selector: data
- name: bank_account
  endpoint:
    path: /bankaccount
    method: POST
    data_selector: data
- name: bank_account
  endpoint:
    path: /bankaccount
    method: GET
    data_selector: data
    params:
      companyID: required
      bankAccountID: required
- name: bank_account
  endpoint:
    path: /bankaccount
    method: GET
    data_selector: data
    params:
      companyID: string
      bankAccountID: string
- name: attribute
  endpoint:
    path: /reference/custom-attribute-object
    method: GET
    data_selector: attributes
    params: {}
- name: custom_attribute
  endpoint:
    path: /reference/custom-attribute-object
    method: GET
    data_selector: attributes
    params: {}
- name: custom_attribute
  endpoint:
    path: /reference/custom-attribute-object
    method: GET
    data_selector: attributes
    params: {}
- name: Custom Attribute
  endpoint:
    path: /reference/custom-attribute-object
    method: GET
    data_selector: records
    params: {}
- name: Get Attributes
  endpoint:
    path: /reference/get-attributes
    method: GET
    data_selector: records
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: data
    params:
      companyID: required
      employeeID: string
      contractorID: string
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
      contractorID: ''
- name: custom_attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: records
- name: custom_attribute
  endpoint:
    path: /attributes
    method: GET
    data_selector: records
- name: set_attribute_value
  endpoint:
    path: /attributes
    method: PATCH
- name: set_attribute_value
  endpoint:
    path: /attributes
    method: PATCH
- name: attributes
  endpoint:
    path: /attributes
    method: PATCH
- name: paperwork_templates
  endpoint:
    path: /reference/paperwork-template-object
    method: GET
    data_selector: templates
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/paperwork-template-object
    method: GET
    data_selector: paperwork_templates
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/getpaperworktemplates
    method: GET
    data_selector: templates
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/getpaperworktemplates
    method: GET
    data_selector: templates
    params: {}
- name: paperwork_submission
  endpoint:
    path: /reference/getpaperworksubmissions
    method: POST
    data_selector: submissions
    params: {}
- name: paperwork_templates
  endpoint:
    path: /paperwork/templates
    method: POST
    data_selector: data
    params:
      companyID: string
- name: paperwork_templates
  endpoint:
    path: /paperwork/templates
    method: POST
    data_selector: templates
    params:
      companyID: required
- name: paperwork_template
  endpoint:
    path: /paperwork/templates/{templateID}
    method: GET
    data_selector: data
    params:
      templateID: string
- name: paperwork_template
  endpoint:
    path: /paperwork/templates/{templateID}
    method: GET
- name: paperwork_templates
  endpoint:
    path: /paperwork/templates
    method: GET
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: GET
- name: paperwork_submission
  endpoint:
    path: /reference/paperwork-submission-object
    method: GET
    data_selector: submission
    params: {}
- name: paperwork_submissions
  endpoint:
    path: /reference/getpaperworksubmissions
    method: GET
- name: paperwork_submission
  endpoint:
    path: /reference/paperwork-submission-object
    method: GET
    data_selector: records
    params: {}
- name: paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params:
      companyID: string
      jurisdiction_filter: object
      worker_filter: object
- name: paperwork_submission
  endpoint:
    path: /reference/getpaperworksubmissions
    method: GET
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params:
      companyID: required
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
- name: specific_paperwork_submission
  endpoint:
    path: /getpaperworksubmission
    method: GET
- name: paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: PUT
- name: paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: PUT
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: PUT
- name: specific_paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: GET
- name: reporting_period
  endpoint:
    path: /reference/reporting-period-object
    method: GET
    data_selector: reportingPeriods
- name: paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: PUT
    data_selector: object
- name: specific_paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: GET
    data_selector: object
- name: reporting_period
  endpoint:
    path: /reference/reporting-period-object
    method: GET
    data_selector: reportingPeriods
    params: {}
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: data
    params:
      companyID: ''
      reportingPeriodID: ''
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: data
    params:
      companyID: ''
      reportingPeriodID: ''
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: data
    params:
      companyID: string
      reportingPeriodID: string
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: object
    params: {}
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: result
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
- name: reporting_period
  endpoint:
    path: /reportingPeriod/
    method: GET
    data_selector: data
    params:
      companyID: string
      pay_schedule: enum
- name: reporting_period
  endpoint:
    path: /reportingPeriod/
    method: GET
- name: reporting_periods
  endpoint:
    path: /reportingPeriod/
    method: GET
    data_selector: data
    params:
      companyID: string
      pay_schedule: string
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: DELETE
    params:
      companyID: string
      employeeCheckID: string
- name: reporting_period
  endpoint:
    path: /reportingPeriod/
    method: GET
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: DELETE
    params:
      companyID: string
      employeeCheckID: string
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: data
    params:
      companyID: string
      employeeCheckID: string
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
    params:
      companyID: required
      employeeCheckID: required
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: records
- name: reporting_periods
  endpoint:
    path: /reporting-periods
    method: GET
    data_selector: records
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: records
    params: {}
- name: employee_checks_by_employee
  endpoint:
    path: /retrieve-employee-checks-by-employee
    method: GET
    data_selector: records
    params: {}
- name: employee_checks
  endpoint:
    path: /employeeCheck
    method: GET
    params:
      companyID: ''
      employeeID: ''
      status: ''
      reportingPeriodID: ''
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
- name: employee_checks
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
      status: ''
      reportingPeriodID: ''
- name: employee_checks
  endpoint:
    path: /employeeChecks
    method: POST
    data_selector: data
    params: {}
- name: employee_checks
  endpoint:
    path: /employeeChecks
    method: POST
- name: employee_checks
  endpoint:
    path: /employeeChecks
    method: POST
- name: paystub_pdf
  endpoint:
    path: /download-paystub-pdf
    method: GET
- name: employee_checks
  endpoint:
    path: /employeeChecks
    method: POST
- name: deduction_template
  endpoint:
    path: /reference/deduction-template-object
    method: GET
    data_selector: records
- name: Deduction Template
  endpoint:
    path: /reference/deduction-template-object
    method: GET
- name: Deduction Template
  endpoint:
    path: /deduction-template
    method: GET
    data_selector: template
    params: {}
- name: deduction_template
  endpoint:
    path: /deduction-template
    method: GET
    data_selector: records
- name: deduction_template_definition
  endpoint:
    path: /reference/get-deduction-template-definitions
    method: GET
- name: deduction_template
  endpoint:
    path: /reference/get-deduction-template
    method: GET
- name: deduction
  endpoint:
    path: /reference/retrieve-deduction
    method: GET
- name: deduction
  endpoint:
    path: /reference/deductions
    method: POST
    data_selector: deduction
    params: {}
- name: deduction
  endpoint:
    path: /deductions
    method: POST
    data_selector: deduction
    params: {}
- name: employee_checks
  endpoint:
    path: /reference/employee-check-object
    method: GET
- name: deductions
  endpoint:
    path: /reference/deduction-template-definition-object
    method: GET
- name: deductions
  endpoint:
    path: /reference/deduction-template-definition-object
    method: GET
    data_selector: deduction_templates
- name: employee_checks
  endpoint:
    path: /reference/employee-check-object
    method: GET
    data_selector: employee_checks
- name: contractor_payments
  endpoint:
    path: /reference/contractor-payment-object
    method: GET
    data_selector: contractor_payments
- name: deductions
  endpoint:
    path: /reference/deductions
    method: GET
    data_selector: records
    params: {}
- name: deductions
  endpoint:
    path: /reference/deductions
    method: GET
    data_selector: records
    params: {}
- name: deductions
  endpoint:
    path: /reference/deductions
    method: GET
    data_selector: records
    params: {}
- name: deductions
  endpoint:
    path: /reference/deductions
    method: GET
    data_selector: deductions
    params: {}
- name: deduction_template
  endpoint:
    path: /deductionTemplate
    method: POST
    data_selector: data
    params: {}
- name: deduction
  endpoint:
    path: /deductions
    method: POST
- name: deduction
  endpoint:
    path: /deductions
    method: POST
- name: deduction
  endpoint:
    path: /deductions
    method: DELETE
    data_selector: data
    params:
      companyID: ''
      deductionID: ''
      employeeCheckID: ''
- name: deduction
  endpoint:
    path: /deductions
    method: DELETE
    data_selector: data
    params:
      companyID: string
      deductionID: string
      employeeCheckID: string
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: data
    params: {}
- name: update_pending_shifts
  endpoint:
    path: /shifts
    method: PATCH
- name: delete_pending_shifts
  endpoint:
    path: /shifts
    method: DELETE
    params:
      companyID: string
      shiftID: string
- name: delete_pending_shifts
  endpoint:
    path: /shifts
    method: DELETE
    params:
      companyID: string
      shiftID: string
- name: upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params:
      companyID: ''
- name: payroll_regular
  endpoint:
    path: /payroll/regular
    method: GET
- name: paycard
  endpoint:
    path: /reference/paycard-object
    method: GET
- name: upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params:
      companyID: ''
- name: paycard
  endpoint:
    path: /reference/get-paycard
    method: GET
- name: paycard
  endpoint:
    path: /paycard
    method: GET
- name: paycard
  endpoint:
    path: /reference/paycard-object
    method: GET
- name: card
  endpoint:
    path: /reference/card-object
    method: GET
- name: wallet_transaction
  endpoint:
    path: /reference/wallet-transaction-object
    method: GET
- name: paycard
  endpoint:
    path: /reference/get-paycard
    method: GET
- name: paycard
  endpoint:
    path: /reference/get-paycard
    method: GET
    data_selector: records
    params: {}
- name: card
  endpoint:
    path: /reference/card-object
    method: GET
- name: card
  endpoint:
    path: /card
    method: GET
    data_selector: data
    params:
      companyID: required
      employeeID: ''
      contractorID: ''
- name: card
  endpoint:
    path: /card
    method: GET
    params:
      companyID: string
      employeeID: string
      contractorID: string
- name: wallet_transaction
  endpoint:
    path: /wallet-transaction-object
    method: GET
- name: wallet_balance
  endpoint:
    path: /get-wallet-balance
    method: GET
- name: wallet_balance
  endpoint:
    path: /wallet
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
      contractorID: ''
- name: wallet_transaction
  endpoint:
    path: /card
    method: GET
    data_selector: object
- name: wallet_balance
  endpoint:
    path: /get-wallet-balance
    method: GET
    data_selector: object
- name: wallet_balance
  endpoint:
    path: /wallet
    method: GET
    data_selector: data
    params:
      companyID: string
      employeeID: string
      contractorID: string
- name: wallet_transactions
  endpoint:
    path: /wallet/transactions
    method: GET
    data_selector: data
    params:
      companyID: required
      employeeID: optional
      contractorID: optional
      walletTransactionID: optional
- name: wallet_transactions
  endpoint:
    path: /wallet/transactions
    method: GET
- name: wallet_transactions
  endpoint:
    path: /wallet/transactions
    method: GET
    data_selector: data
    params:
      companyID: ''
      employeeID: ''
      contractorID: ''
      walletTransactionID: ''
- name: direct_payment
  endpoint:
    path: /reference/direct-payment-object
    method: GET
- name: wallet_transactions
  endpoint:
    path: /wallet/transactions
    method: GET
- name: direct_payment
  endpoint:
    path: /reference/direct-payment-object
    method: GET
- name: direct_payment
  endpoint:
    path: /reference/get-direct-payment
    method: GET
    data_selector: directPaymentID
    params: {}
- name: create_direct_payment
  endpoint:
    path: /reference/create-direct-payment
    method: POST
    data_selector: directPaymentID
    params: {}
- name: direct_payment
  endpoint:
    path: /directPayments
    method: POST
- name: direct_payment
  endpoint:
    path: /reference/direct-payment-object
    method: GET
    data_selector: records
    params: {}
- name: create_direct_payment
  endpoint:
    path: /reference/create-direct-payment
    method: POST
    data_selector: records
    params: {}
- name: direct_payments
  endpoint:
    path: /directPayments
    method: POST
- name: direct_payment
  endpoint:
    path: /directPayments
    method: POST
    data_selector: data
- name: direct_payments
  endpoint:
    path: /directPayments
    method: POST
    data_selector: object
    params: {}
- name: create_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: POST
    data_selector: data
- name: list_employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: data
- name: update_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: PATCH
    data_selector: data
- name: get_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: data
- name: delete_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: DELETE
    data_selector: data
- name: create_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: POST
    data_selector: data
    params: {}
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: records
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: data
    params:
      limit: 1 to 100
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: data
    params: {}
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates/{deductionTemplateID}
    method: PATCH
    data_selector: data
    params: {}
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/{deductionTemplateID}
    method: GET
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/deductionTemplateID
    method: GET
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/deductionTemplateID
    method: PATCH
- name: list_employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: get_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: update_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: PATCH
- name: create_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: POST
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/{deductionTemplateID}
    method: DELETE
    data_selector: success
    params: {}
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: employer_checks
  endpoint:
    path: /employer-checks
    method: GET
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/deductionTemplateID
    method: GET
- name: employer_check
  endpoint:
    path: /reference/employer-check-object
    method: GET
- name: employer_check_id
  endpoint:
    path: /reference/employer-checkid-object
    method: GET
- name: employee_deduction_template
  endpoint:
    path: /employee-deduction-templates/{deductionTemplateID}
    method: DELETE
    data_selector: success
    params: {}
- name: employer_check
  endpoint:
    path: /retrieve-all-employer-checks
    method: GET
    data_selector: records
    params: {}
- name: employer_check
  endpoint:
    path: /reference/employer-check-object
    method: GET
- name: employer_check
  endpoint:
    path: /reference/employer-check-object
    method: GET
- name: employer_check_by_id
  endpoint:
    path: /reference/retrieve-employer-check-by-id
    method: GET
- name: employer_checks_by_date
  endpoint:
    path: /reference/retrieve-employer-checks-by-dates
    method: GET
- name: all_employer_checks
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
- name: employer_check
  endpoint:
    path: /employer-checks
    method: GET
    data_selector: employer_checks
- name: employer_check
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
- name: employer_check
  endpoint:
    path: /reference/retrieve-employer-check-by-id
    method: GET
    data_selector: Employer Check Object
    params: {}
- name: employer_checks_by_date
  endpoint:
    path: /reference/retrieve-employer-checks-by-dates
    method: GET
    data_selector: Employer Check Object
    params: {}
- name: all_employer_checks
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
    data_selector: Employer Check Object
    params: {}
- name: employer_check
  endpoint:
    path: /reference/retrieve-employer-check-by-id
    method: GET
- name: all_employer_checks
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
- name: employer_checks_by_date
  endpoint:
    path: /reference/retrieve-employer-checks-by-dates
    method: GET
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: data
    params:
      companyID: ''
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: data
    params:
      companyID: string
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: results
- name: employer_checks
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: object
    params: {}
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: data
    params:
      companyID: required
- name: employer_checks
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: data
    params:
      companyID: string
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: result
    params: {}
- name: all_employer_checks
  endpoint:
    path: /employerChecks
    method: GET
    data_selector: result
    params: {}
- name: employer_check
  endpoint:
    path: /employerCheck
    method: GET
    data_selector: results
- name: get_employer_check_by_id
  endpoint:
    path: /retrieve-employer-check-by-id
    method: GET
- name: get_all_employer_checks
  endpoint:
    path: /retrieve-all-employer-checks
    method: GET
- name: employer_checks
  endpoint:
    path: /retrieve-all-employer-checks
    method: GET
- name: preview_payroll_by_check_date
  endpoint:
    path: /preview/payroll/by/check/date
    method: POST
- name: employer_checks
  endpoint:
    path: /retrieve-all-employer-checks
    method: GET
    data_selector: results
    params: {}
- name: preview_check_data
  endpoint:
    path: /preview/checkData
    method: POST
- name: preview_check_data
  endpoint:
    path: /preview/checkData
    method: POST
    data_selector: data
- name: preview_payroll_by_check_date
  endpoint:
    path: /preview/checkData
    method: POST
    data_selector: object
    params: {}
- name: preview_payroll_by_check_date
  endpoint:
    path: /preview/checkData
    method: POST
- name: get_preview
  endpoint:
    path: /get-preview
    method: GET
- name: get_preview
  endpoint:
    path: /preview
    method: GET
    data_selector: data
    params:
      job_id: string
- name: get_preview
  endpoint:
    path: /preview
    method: GET
    data_selector: data
    params:
      job_id: string
- name: next_available_check_pay_date
  endpoint:
    path: /preview/availableDate
    method: GET
    data_selector: data
- name: preview
  endpoint:
    path: /preview/availableDate
    method: GET
- name: preview
  endpoint:
    path: /preview/availableDate
    method: GET
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
    data_selector: data
    params:
      workLocationID: ''
      companyID: ''
      effectiveDate: ''
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
    data_selector: data
    params:
      workLocationID: ''
      companyID: ''
      effectiveDate: ''
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
- name: accrual_policy
  endpoint:
    path: /accrual-policy
    method: GET
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
- name: accrual_policy
  endpoint:
    path: /accrual-policy
    method: GET
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy-object
    method: GET
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy-object
    method: GET
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy
    method: GET
    data_selector: records
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy
    method: GET
    data_selector: records
    params: {}
- name: sick_time_compliance
  endpoint:
    path: /sickTimeCompliance
    method: GET
    data_selector: data
    params:
      state: ''
      city: ''
- name: sick_time_compliance
  endpoint:
    path: /sickTimeCompliance
    method: GET
    data_selector: data
    params:
      state: string
      city: string
- name: accrual_balance
  endpoint:
    path: /accrualBalance
    method: GET
    data_selector: data
    params:
      companyID: string
      policy_code: string
      employeeID: string
      policy_status: string
- name: sick_time_compliance
  endpoint:
    path: /sickTimeCompliance
    method: GET
- name: accrual_balance
  endpoint:
    path: /accrualBalance
    method: GET
- name: accrual_balance
  endpoint:
    path: /accrualBalance
    method: GET
    data_selector: data
    params:
      companyID: string
      policy_code: string
      employeeID: string
      policy_status: string
- name: accrual_balance
  endpoint:
    path: /accrualBalance
    method: GET
- name: accrual_policy_usage
  endpoint:
    path: /accrualPolicy/{policyCode}/usage
    method: POST
- name: accrual_balance_history
  endpoint:
    path: /accrualBalance/history
    method: POST
    data_selector: data
    params:
      companyID: string
      policyCode: string
      employeeIDs: array of strings
      endDate: date
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
    data_selector: records
    params: {}
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
    data_selector: records
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: POST
    data_selector: data
    params: {}
- name: contractors
  endpoint:
    path: /contractors
    method: POST
    data_selector: success
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: POST
    data_selector: data
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: GET
    data_selector: data
    params:
      companyID: required
      contractorID: required
- name: contractors
  endpoint:
    path: /contractors
    method: GET
    data_selector: results
- name: contractor
  endpoint:
    path: /contractors
    method: GET
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
- name: contractors
  endpoint:
    path: /contractors
    method: GET
    data_selector: data
    params:
      companyID: string
      onboarded: boolean
      employment_status: string
      type: string
      email: string
      external_id: string
- name: contractors
  endpoint:
    path: /contractors
    method: GET
    data_selector: records
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: GET
    data_selector: results
- name: contractors
  endpoint:
    path: /contractors
    method: GET
    data_selector: data
    params:
      companyID: string
      onboarded: boolean
      employment_status: string
      type: string
      email: string
      external_id: string
- name: upload_contractor_government_id
  endpoint:
    path: /contractors/id
    method: POST
    data_selector: data
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: GET
    data_selector: results
- name: contractors
  endpoint:
    path: /contractors
    method: GET
- name: upload_contractor_government_id
  endpoint:
    path: /contractors/id
    method: POST
    data_selector: success
    params: {}
- name: contractors
  endpoint:
    path: /contractors
    method: GET
- name: contractor_onboard
  endpoint:
    path: /contractors/onboard
    method: POST
- name: set_onboarded_status
  endpoint:
    path: /set-onboarded-status-to-true
    method: POST
- name: set_onboarded_status
  endpoint:
    path: /contractors/setOnboardedStatusToTrue
    method: POST
- name: generate_contractor_onboarding_link
  endpoint:
    path: /contractors/onboard
    method: POST
- name: upload_contractor_government_id
  endpoint:
    path: /contractors/onboard
    method: POST
    data_selector: success
    params: {}
- name: set_onboarded_status_to_true
  endpoint:
    path: /set-onboarded-status-to-true-c
    method: POST
    data_selector: success
    params: {}
- name: contractor_id_upload_link
  endpoint:
    path: /contractors/id_upload_link
    method: POST
    data_selector: data
    params:
      companyID: string
      contractorID: string
      send_to_worker: boolean
      document_type:
      - government_photo_id
      - passport
      - social_security_card
      - other
- name: set_onboarded_status
  endpoint:
    path: /contractors/setOnboardedStatusToTrue
    method: POST
    data_selector: success
- name: contractor_id_upload_link
  endpoint:
    path: /contractors/id_upload_link
    method: POST
- name: setOnboardedStatusToTrue
  endpoint:
    path: /contractors/setOnboardedStatusToTrue
    method: POST
- name: contractor_id_upload_link
  endpoint:
    path: /contractors/id_upload_link
    method: POST
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
      send_to_worker: false
      document_type: []
- name: instant_pay_contractor_enrollment
  endpoint:
    path: /contractors/instant-pay
    method: POST
- name: contractor_id_upload_link
  endpoint:
    path: /contractors/id_upload_link
    method: POST
    data_selector: null
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractors/instant-pay
    method: POST
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: GET
- name: paycard_enrollment
  endpoint:
    path: /contractors/paycard
    method: POST
    data_selector: data
    params:
      companyID: required
      contractorID: required
      send_to_worker: 'false'
- name: contractor_payment
  endpoint:
    path: /contractor/payment
    method: GET
    data_selector: records
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
    data_selector: contractor_payment_records
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
      approval_required: false
      pay_date: ''
      amount: ''
      disbursement:
        speed: two_day
        type: regular
      customerAccountID: ''
- name: contractor_payment
  endpoint:
    path: /contractors/instant-pay
    method: POST
    data_selector: response
    params: {}
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: post
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: success
    params: {}
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: GET
    data_selector: records
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
- name: contractor_payment
  endpoint:
    path: /contractorPayment/trigger
    method: POST
    data_selector: data
    params:
      companyID: string
      contractorPaymentID: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: data
    params:
      companyID: string
      contractorID: string
      approval_required: boolean
      pay_date: date
      amount: float
      customerAccountID: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: PATCH
    data_selector: data
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: object
    params: {}
- name: trigger_disbursement
  endpoint:
    path: /trigger-disbursement-contractor-payment
    method: POST
    data_selector: object
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: PATCH
    data_selector: success
    params: {}
- name: get_contractor_payment_by_id
  endpoint:
    path: /get-contractor-payment-by-id
    method: GET
    data_selector: success
    params: {}
- name: trigger_disbursement
  endpoint:
    path: /contractorPayment/trigger
    method: POST
    data_selector: data
    params:
      companyID: string
      contractorPaymentID: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment/trigger
    method: POST
    data_selector: object
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: data
    params:
      companyID: string
      contractorID: string
      status: string
      paymentGroupID: string
      start_at: string
      limit: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: PATCH
    data_selector: data
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
      status: ''
      paymentGroupID: ''
      start_at: ''
      limit: ''
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
      status: ''
      paymentGroupID: ''
      start_at: ''
      limit: ''
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: results
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: data
    params:
      companyID: ''
      contractorID: ''
      status: ''
      paymentGroupID: ''
      start_at: ''
      limit: ''
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: DELETE
    data_selector: success
    params:
      companyID: string
      contractorPaymentID: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: results
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: GET
    data_selector: results
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: DELETE
    data_selector: success
    params:
      companyID: string
      contractorPaymentID: string
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: DELETE
- name: payroll_journal_report
  endpoint:
    path: /reports/payroll-journal
    method: POST
    data_selector: data
    params: {}
- name: custom_payroll_journal_report
  endpoint:
    path: /reports/custom-payroll-journal
    method: POST
    data_selector: data
    params:
      companyID: string
      media_type: csv
      start_date: YYYY-MM-DD
      end_date: YYYY-MM-DD
- name: custom_payroll_journal_report
  endpoint:
    path: /reports/custom-payroll-journal
    method: POST
    data_selector: data
    params:
      companyID: string
      media_type: csv/pdf
      start_date: YYYY-MM-DD
      end_date: YYYY-MM-DD
- name: custom_payroll_journal
  endpoint:
    path: /reports/custom-payroll-journal
    method: POST
    data_selector: null
    params: {}
- name: worker_summary
  endpoint:
    path: /reports/worker-summary
    method: POST
    data_selector: null
    params: {}
- name: custom_payroll_journal_report
  endpoint:
    path: /reports/custom-payroll-journal
    method: POST
    data_selector: null
    params: {}
- name: worker_summary_report
  endpoint:
    path: /reports/worker-summary
    method: POST
    data_selector: null
    params: {}
- name: cash_requirements_report
  endpoint:
    path: /reports/cash-requirements
    method: POST
    data_selector: data
    params:
      companyID: string
      check_date: date
      media_type: pdf
      customer_account_ids: array of strings
- name: cash_requirements_report
  endpoint:
    path: /reports/cash-requirements
    method: POST
    data_selector: data
    params:
      companyID: string
      check_date: date
      media_type: pdf
- name: cash_requirements_report
  endpoint:
    path: /reports/cash-requirements
    method: POST
    data_selector: result
    params: {}
- name: cash_requirements_report
  endpoint:
    path: /reports/cash-requirements
    method: POST
    data_selector: result
    params: {}
- name: payment_summary
  endpoint:
    path: /reports/payment-summary
    method: POST
- name: payment_summary
  endpoint:
    path: /reports/payment-summary
    method: POST
    data_selector: success
    params: {}
- name: payment_summary
  endpoint:
    path: /reports/payment-summary
    method: POST
    data_selector: data.job_id
    params:
      pay_start_date: required
      pay_end_date: required
      companyID: required
      media_type: required
      include_intl_contractors: optional
- name: payment_summary
  endpoint:
    path: /reports/payment-summary
    method: POST
    data_selector: results
- name: paystub_report
  endpoint:
    path: /reports/paystub
    method: POST
    data_selector: data
    params:
      companyID: ''
      start_date: ''
      end_date: ''
      media_type: pdf
- name: paystub
  endpoint:
    path: /reports/paystub
    method: POST
    data_selector: null
    params: {}
- name: paystub_report
  endpoint:
    path: /reports/paystub
    method: POST
    data_selector: data.job_id
    params:
      companyID: ''
      start_date: ''
      end_date: ''
      media_type: pdf
- name: paystub
  endpoint:
    path: /reports/paystub
    method: POST
    data_selector: results
    params: {}
- name: year_to_date_report
  endpoint:
    path: /reports/ytd
    method: POST
    data_selector: data
    params: {}
- name: year_to_date_report
  endpoint:
    path: /reports/ytd
    method: POST
    data_selector: data
    params:
      companyID: string
      employeeID: array of strings
      year: string
      media_type: json
      include_migrated: boolean
- name: paystub_report
  endpoint:
    path: /reports/ytd
    method: POST
    data_selector: object
- name: quarter_to_date_report
  endpoint:
    path: /reports/quarter-to-date
    method: POST
    data_selector: object
- name: paystub_report
  endpoint:
    path: /reports/ytd
    method: POST
    data_selector: result
    params: {}
- name: quarter_to_date_report
  endpoint:
    path: /reports/quarter-to-date
    method: POST
    data_selector: result
    params: {}
- name: quarter_to_date_report
  endpoint:
    path: /reports/qtd
    method: POST
    data_selector: data
    params:
      companyID: required
      employeeID: array of strings
      quarter: required
      media_type: required
- name: quarter_to_date_report
  endpoint:
    path: /reports/qtd
    method: POST
    data_selector: data
    params:
      companyID: string
      employeeID: array of strings
      quarter: string
      media_type: string
- name: kyc_summary_report
  endpoint:
    path: /reports/kyc-summary
    method: POST
    data_selector: data
    params:
      companyID: string
      employment_status: string
      kyc_status: string
      media_type: csv
- name: year_to_date_report
  endpoint:
    path: /reports/qtd
    method: POST
    data_selector: results
    params: {}
- name: kyc_summary_report
  endpoint:
    path: /reports/kyc_summary
    method: POST
    data_selector: results
    params: {}
- name: kyc_summary_report
  endpoint:
    path: /reports/kyc-summary
    method: POST
    data_selector: data
    params:
      companyID: string
      employment_status: string
      kyc_status: string
      media_type: string
- name: deduction_summary_report
  endpoint:
    path: /reports/deductions-summary
    method: POST
    data_selector: data
    params:
      companyID: string
      media_type: csv
      start_date: date
      end_date: date
      customer_account_ids: array of strings
- name: kyc_summary
  endpoint:
    path: /reports/kyc-summary
    method: POST
    data_selector: object
    params: {}
- name: deduction_summary
  endpoint:
    path: /reports/create-deduction-summary-report
    method: POST
    data_selector: object
    params: {}
- name: deductions_summary
  endpoint:
    path: /reports/deductions-summary
    method: POST
    data_selector: object
    params: {}
- name: job_status
  endpoint:
    path: /job-status
    method: GET
    data_selector: object
    params: {}
- name: deduction_summary_report
  endpoint:
    path: /reports/deductions-summary
    method: POST
    data_selector: data
    params:
      companyID: string
      media_type: csv
      start_date: date
      end_date: date
      customer_account_ids:
      - string
- name: get_job_status
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params:
      job_id: string
      companyID: string
- name: deductions_summary
  endpoint:
    path: /reports/deductions-summary
    method: POST
    data_selector: results
    params: {}
- name: job_status
  endpoint:
    path: /job-status
    method: GET
    data_selector: status
    params: {}
- name: report_download
  endpoint:
    path: /reports/downloads
    method: GET
    data_selector: data
    params:
      job_id: required
- name: get_job_status
  endpoint:
    path: /reports
    method: GET
    params:
      job_id: string
      companyID: string
- name: company
  endpoint:
    path: /reference/the-company-object
    method: GET
- name: employee
  endpoint:
    path: /reference/the-employee-object
    method: GET
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
- name: report_download
  endpoint:
    path: /reports/downloads
    method: GET
    data_selector: data
    params:
      job_id: string
- name: documents
  endpoint:
    path: /reference/get-documents
    method: GET
    data_selector: documents
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params:
      companyID: required
      id: optional
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: object
    params: {}
- name: documents
  endpoint:
    path: /reference/get-documents
    method: GET
    data_selector: documents
- name: international_contractor
  endpoint:
    path: /reference/international-contractor-object
    method: GET
- name: international_contractor_payment
  endpoint:
    path: /reference/international-contractor-payment-object
    method: POST
- name: international_contractor
  endpoint:
    path: /reference/international-contractor-object
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params:
      companyID: string
      id: string
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: international_contractor
  endpoint:
    path: /reference/international-contractor-object
    method: GET
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: POST
- name: update_international_contractor
  endpoint:
    path: /update-international-contractor
    method: PATCH
- name: get_international_contractor_information
  endpoint:
    path: /get-international-contractor
    method: GET
- name: international_contractor
  endpoint:
    path: /reference/international-contractor-object
    method: GET
    data_selector: records
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: PATCH
    data_selector: data
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: PATCH
    data_selector: object
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: POST
    data_selector: result
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: GET
    data_selector: data
    params:
      companyID: required
      intlContractorID: optional
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: PATCH
    data_selector: data
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: PATCH
    data_selector: object
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: GET
    data_selector: object
    params: {}
- name: international_contractor_onboarding
  endpoint:
    path: /internationalContractors/onboard
    method: POST
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: GET
    data_selector: data
    params:
      companyID: required
      intlContractorID: optional
- name: international_contractor
  endpoint:
    path: /internationalContractors
    method: GET
    data_selector: object
- name: international_contractor
  endpoint:
    path: /internationalContractors/onboard
    method: POST
    data_selector: object
    params: {}
- name: international_contractor_payment
  endpoint:
    path: /internationalContractorPayments
    method: POST
    data_selector: object
    params: {}
- name: international_contractor_payment
  endpoint:
    path: /reference/international-contractor-payment-object
    method: POST
    data_selector: null
    params: {}
- name: get_international_contractor_payments
  endpoint:
    path: /get-international-contractor-payments
    method: GET
    data_selector: null
    params: {}
- name: international_contractor_payment
  endpoint:
    path: /reference/international-contractor-payment-object
    method: POST
    data_selector: records
    params: {}
- name: international_contractor
  endpoint:
    path: /internationalContractors/onboard
    method: POST
    data_selector: object
    params: {}
- name: international_contractor_payment
  endpoint:
    path: /internationalContractorPayment
    method: POST
    data_selector: object
    params: {}
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: POST
    data_selector: data
    params:
      companyID: string
      intlContractorID: string
      pay_date: date
      gross_amount: double
- name: contractor_payment
  endpoint:
    path: /reference/contractor-payment-object
    method: POST
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: POST
- name: international_contractor_payment
  endpoint:
    path: /reference/international-contractor-payment-object
    method: GET
    data_selector: records
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: POST
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: PATCH
    data_selector: data
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: POST
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: PATCH
    data_selector: object
    params: {}
- name: get_international_contractor_payments
  endpoint:
    path: /internationalContractors/payments
    method: GET
    data_selector: object
    params: {}
- name: update_international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: PATCH
    data_selector: data
    params: {}
- name: international_contractor_payments
  endpoint:
    path: /internationalContractors/payment
    method: GET
    data_selector: data
    params:
      companyID: ''
      intlContractorID: ''
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: GET
    data_selector: object
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: PATCH
    data_selector: object
    params: {}
- name: get_international_contractor_payments
  endpoint:
    path: /internationalContractors/payments
    method: GET
    data_selector: object
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/paperwork-template-object
    method: GET
    data_selector: templates
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/paperwork-templates
    method: GET
    data_selector: templates
    params: {}
- name: international_contractor_payments
  endpoint:
    path: /internationalContractors/payment
    method: GET
    data_selector: data
    params:
      companyID: ''
      intlContractorID: ''
- name: paperwork_submission
  endpoint:
    path: /getpaperworksubmissions
    method: POST
    data_selector: submissions
- name: international_contractor_payment
  endpoint:
    path: /internationalContractors/payment
    method: GET
- name: paperwork_submission
  endpoint:
    path: /reference/getpaperworksubmissions
    method: GET
    data_selector: submissions
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/getpaperworktemplate
    method: GET
    data_selector: templates
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/paperwork-template-object
    method: GET
    data_selector: records
    params: {}
- name: reporting_period
  endpoint:
    path: /reference/reporting-period-object
    method: GET
- name: paperwork_template
  endpoint:
    path: /reference/getpaperworktemplates
    method: GET
    data_selector: records
- name: paperwork_template_by_id
  endpoint:
    path: /reference/getpaperworktemplate
    method: GET
    data_selector: records
- name: reporting_periods
  endpoint:
    path: /reference/reporting-periods
    method: GET
    data_selector: records
    params: {}
- name: paperwork_submission
  endpoint:
    path: /reference/paperwork-submission-object
    method: GET
    data_selector: records
- name: employee_check
  endpoint:
    path: /reference/employee-check-object
    method: GET
- name: employer_check
  endpoint:
    path: /reference/employer-check-object
    method: GET
- name: paperwork_submission
  endpoint:
    path: /reference/getpaperworksubmissions
    method: GET
    data_selector: submissions
    params: {}
- name: paperwork_template
  endpoint:
    path: /reference/getpaperworktemplate
    method: GET
    data_selector: template
    params: {}
- name: employee_check
  endpoint:
    path: /employee/checks
    method: GET
    data_selector: records
    params: {}
- name: reporting_period
  endpoint:
    path: /reference/reporting-period-object
    method: GET
- name: reporting_period
  endpoint:
    path: /reference/reporting-periods
    method: GET
    data_selector: reportingPeriods
    params: {}
- name: employee_checks
  endpoint:
    path: /reference/employee-check-object
    method: GET
- name: Get All Reporting Periods
  endpoint:
    path: /reference/get-all-reporting-periods
    method: GET
- name: Create Employee Check
  endpoint:
    path: /reference/create-employee-check
    method: POST
- name: Get Employee Checks by Employee
  endpoint:
    path: /reference/retrieve-employee-checks-by-employee
    method: GET
- name: Get Employee Check by ID
  endpoint:
    path: /reference/retrieve-employee-check-by-id
    method: GET
- name: Delete Employee Check
  endpoint:
    path: /reference/delete-employee-check
    method: DELETE
- name: Update Employee Check
  endpoint:
    path: /reference/update-employee-check
    method: PATCH
- name: Create Bulk Employee Checks
  endpoint:
    path: /reference/create-bulk-employee-checks
    method: POST
- name: employee_check
  endpoint:
    path: /services/data/vXX.X/sobjects/EmployeeCheck
    method: GET
    data_selector: records
    params: {}
- name: Deduction Template Definition
  endpoint:
    path: /reference/get-deduction-template-definitions
    method: GET
    data_selector: deductionTemplateDefinitions
    params: {}
- name: Create Deduction Template
  endpoint:
    path: /reference/create-deduction-template
    method: POST
    data_selector: deductionTemplate
    params: {}
- name: Get Deduction Template
  endpoint:
    path: /reference/get-deduction-template
    method: GET
    data_selector: deductionTemplate
    params: {}
- name: deductions
  endpoint:
    path: /api/v1/deductions
    method: GET
    data_selector: data
    params: {}
- name: reporting_periods
  endpoint:
    path: /reference/get-all-reporting-periods
    method: GET
- name: employee_checks
  endpoint:
    path: /reference/employee-checks
    method: GET
- name: create_employee_check
  endpoint:
    path: /reference/create-employee-check
    method: POST
- name: bulk_employee_checks
  endpoint:
    path: /reference/create-bulk-employee-checks
    method: POST
- name: get_employee_checks_by_employee
  endpoint:
    path: /reference/retrieve-employee-checks-by-employee
    method: GET
- name: get_employee_check_by_id
  endpoint:
    path: /reference/retrieve-employee-check-by-id
    method: GET
- name: delete_employee_check
  endpoint:
    path: /reference/delete-employee-check
    method: DELETE
- name: update_employee_check
  endpoint:
    path: /reference/update-employee-check
    method: PATCH
- name: shift
  endpoint:
    path: /reference/shift-object
    method: GET
- name: Deduction Template Definition
  endpoint:
    path: /reference/get-deduction-template-definitions
    method: GET
    data_selector: deductionTemplateDefinitions
- name: Create Deduction Template
  endpoint:
    path: /reference/create-deduction-template
    method: POST
    data_selector: deductionTemplate
- name: Get Deduction Template
  endpoint:
    path: /reference/get-deduction-template
    method: GET
    data_selector: deductionTemplate
- name: shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: shift
    params: {}
- name: 401k
  endpoint:
    path: /deductions/401k
    method: GET
- name: hsa
  endpoint:
    path: /deductions/hsa
    method: GET
- name: garnishment
  endpoint:
    path: /deductions/garnishment
    method: GET
- name: miscellaneous
  endpoint:
    path: /deductions/miscellaneous
    method: GET
- name: section_125
  endpoint:
    path: /deductions/section_125
    method: GET
- name: roth_401k
  endpoint:
    path: /deductions/roth_401k
    method: GET
- name: 403(b)
  endpoint:
    path: /deductions/403b
    method: GET
- name: simple_ira
  endpoint:
    path: /deductions/simple_ira
    method: GET
- name: roth_ira
  endpoint:
    path: /deductions/roth_ira
    method: GET
- name: calsavers
  endpoint:
    path: /deductions/calsavers
    method: GET
- name: upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params:
      companyID: ''
- name: payroll_regular
  endpoint:
    path: /payroll/regular
    method: GET
- name: shifts
  endpoint:
    path: /reference/shift-object
    method: GET
- name: create_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: POST
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
- name: shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: records
    params: {}
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
    data_selector: data
    params:
      workLocationID: required
      companyID: required
      effectiveDate: optional
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
- name: upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params:
      companyID: string
- name: payroll_regular
  endpoint:
    path: /payroll/regular
    method: GET
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy-object
    method: GET
- name: Accrual Policy
  endpoint:
    path: /reference/create-accrual-policy
    method: POST
    data_selector: records
- name: create_employee_deduction_template
  endpoint:
    path: /employee-deduction-templates
    method: POST
    data_selector: data
    params: {}
- name: preview_overtime_checks
  endpoint:
    path: /preview/checks/ot
    method: POST
- name: employee_deduction_templates
  endpoint:
    path: /employee-deduction-templates
    method: GET
    data_selector: objects
- name: direct_payments
  endpoint:
    path: /direct-payments
    method: GET
    data_selector: objects
- name: accrual_balance_history
  endpoint:
    path: /accrual-balance-history
    method: POST
    data_selector: object
    params: {}
- name: contractor
  endpoint:
    path: /contractor-object
    method: GET
    data_selector: object
    params: {}
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
    data_selector: data
    params:
      workLocationID: ''
      companyID: ''
      effectiveDate: ''
- name: minimum_wage_rules
  endpoint:
    path: /minimumWageRules
    method: GET
    data_selector: object
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy-object
    method: GET
- name: accrual_policy
  endpoint:
    path: /reference/accrual-policy
    method: GET
    data_selector: records
- name: preview_overtime_checks
  endpoint:
    path: /preview/checks/ot
    method: POST
    data_selector: data
    params: {}
- name: accrual_balance_history
  endpoint:
    path: /reference/accrual-balance-history
    method: POST
    data_selector: results
    params: {}
- name: contractor
  endpoint:
    path: /reference/contractor-object
    method: GET
    data_selector: results
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: null
    params: {}
- name: create_company_bank_account
  endpoint:
    path: /companies/bank
    method: POST
    data_selector: null
    params: {}
- name: trigger_microdeposits
  endpoint:
    path: /companies/microdeposits/trigger
    method: POST
    data_selector: null
    params: {}
- name: verify_microdeposit_values
  endpoint:
    path: /companies/microdeposits/verify
    method: POST
    data_selector: null
    params: {}
- name: get_company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    data_selector: null
    params:
      companyID: null
      document_key: all
- name: sign_company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: POST
    data_selector: null
    params: {}
- name: set_company_onboarded_status
  endpoint:
    path: /companies/onboardCompany
    method: POST
    data_selector: null
    params: {}
- name: get_company_onboarding_link
  endpoint:
    path: /companies/onboard
    method: GET
    data_selector: null
    params:
      partnerID: null
- name: taxable_location
  endpoint:
    path: /taxableLocations
    method: POST
    data_selector: ''
    params: {}
- name: work_location
  endpoint:
    path: /create-work-location
    method: POST
    data_selector: ''
    params: {}
- name: create_contractor
  endpoint:
    path: /contractors
    method: POST
    data_selector: new_contractors
    params: {}
- name: get_paperwork_templates
  endpoint:
    path: /paperwork/templates
    method: POST
    data_selector: templates
    params: {}
- name: create_paperwork_submission
  endpoint:
    path: /paperwork/submissions
    method: PUT
    data_selector: ''
    params: {}
- name: get_paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params: {}
- name: create_bank_account
  endpoint:
    path: /bankaccount
    method: POST
    data_selector: ''
    params: {}
- name: set_onboarded_status
  endpoint:
    path: /contractors/setOnboardedStatusToTrue
    method: POST
    data_selector: ''
    params: {}
- name: create_company
  endpoint:
    path: /companies
    method: POST
    data_selector: records
- name: create_company_bank_account
  endpoint:
    path: /companies/bank
    method: POST
    data_selector: records
- name: trigger_microdeposits
  endpoint:
    path: /companies/microdeposits/trigger
    method: POST
    data_selector: records
- name: verify_microdeposit_values
  endpoint:
    path: /companies/microdeposits/verify
    method: POST
    data_selector: records
- name: get_company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: GET
    data_selector: records
- name: sign_company_authorization_documents
  endpoint:
    path: /companies/authorization_documents
    method: POST
    data_selector: records
- name: set_company_onboarded_status
  endpoint:
    path: /companies/onboardCompany
    method: POST
    data_selector: records
- name: get_company_onboarding_link
  endpoint:
    path: /companies/onboard
    method: GET
    data_selector: records
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params:
      companyID: ''
      jurisdiction_filter: ''
      worker_filter: ''
- name: Work Locations
  endpoint:
    path: /docs/work-locations-guide
    method: GET
- name: Employee Onboarding
  endpoint:
    path: /docs/employee-onboarding-guide
    method: GET
- name: Contractor Onboarding
  endpoint:
    path: /docs/contractor-onboarding-guide
    method: GET
- name: earning_components
  endpoint:
    path: /earning-components
    method: GET
    data_selector: components
    params: {}
- name: taxable_location
  endpoint:
    path: /taxableLocations
    method: POST
    data_selector: ''
    params: {}
- name: create_work_location
  endpoint:
    path: /create-work-location
    method: POST
    data_selector: ''
    params: {}
- name: contractor_payments
  endpoint:
    path: /contractor_payments
    method: POST
    data_selector: payments
    params: {}
- name: employee_checks
  endpoint:
    path: /employee_checks
    method: POST
    data_selector: checks
    params: {}
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: records
    params:
      companyID: '{{companyID}}'
      pay_schedule: semimonthly
      searchStart: '2022-01-01'
      searchEnd: '2022-01-15'
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: records
    params: {}
- name: contractor
  endpoint:
    path: /contractors
    method: POST
    data_selector: new_contractors
    params: {}
- name: paperwork_templates
  endpoint:
    path: /paperwork/templates
    method: POST
    data_selector: templates
    params: {}
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params: {}
- name: bank_account
  endpoint:
    path: /bankaccount
    method: POST
    data_selector: ''
    params: {}
- name: set_onboarded_status
  endpoint:
    path: /contractors/setOnboardedStatusToTrue
    method: POST
    data_selector: ''
    params: {}
- name: Regular Payroll Run
  endpoint:
    path: /run_payroll/regular
    method: POST
    data_selector: payroll_run
    params: {}
- name: Off-cycle Payroll Run
  endpoint:
    path: /run_payroll/off_cycle
    method: POST
    data_selector: payroll_run
    params: {}
- name: paperwork_submissions
  endpoint:
    path: /paperwork/submissions
    method: POST
    data_selector: data
    params:
      companyID: ''
      jurisdiction_filter: ''
      worker_filter: ''
- name: deductions
  endpoint:
    path: /docs/deductions-guide
    method: GET
    data_selector: deductions
    params: {}
- name: earning_components
  endpoint:
    path: /docs/earning-components
    method: GET
    data_selector: Earning Components
- name: deduction_template
  endpoint:
    path: /deductionTemplate
    method: POST
    data_selector: ''
    params: {}
- name: deduction_template_definitions
  endpoint:
    path: /deductionTemplateDefinitions
    method: GET
    data_selector: ''
    params: {}
- name: deductions
  endpoint:
    path: /deductions
    method: POST
    data_selector: ''
    params: {}
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: ''
    params: {}
- name: deduction_template_list
  endpoint:
    path: /deductionTemplate
    method: GET
    data_selector: ''
    params: {}
- name: reporting_period
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: ''
    params:
      companyID: '{{companyID}}'
      pay_schedule: semimonthly
      searchStart: '2022-01-01'
      searchEnd: '2022-01-15'
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: ''
    params: {}
- name: payroll_run
  endpoint:
    path: /payroll/runs
    method: GET
    data_selector: payroll_runs
- name: preview_payroll_by_check_date
  endpoint:
    path: /preview/checkDate
    method: POST
    data_selector: data
    params: {}
- name: get_preview
  endpoint:
    path: /preview
    method: GET
    data_selector: data
    params: {}
- name: preview_check_data
  endpoint:
    path: /preview/checkData
    method: POST
    data_selector: data
    params: {}
- name: company
  endpoint:
    path: /companies
    method: PATCH
    data_selector: data
    params: {}
- name: upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params:
      companyID: '{{companyID}}'
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: data
    params: {}
- name: deductionTemplateDefinitions
  endpoint:
    path: /deductionTemplateDefinitions
    method: GET
    data_selector: records
    params:
      deduction_type: 401k
- name: createDeductionTemplate
  endpoint:
    path: /deductionTemplate
    method: POST
    data_selector: records
- name: createDeduction
  endpoint:
    path: /deductions
    method: POST
    data_selector: records
- name: getEmployeeChecks
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: records
    params:
      status: pending
- name: getDeductionTemplates
  endpoint:
    path: /deductionTemplate
    method: GET
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: data.requirements
- name: employer_taxes
  endpoint:
    path: /authLinks/taxes
    method: POST
    data_selector: data
    params: {}
- name: preview_payroll_by_check_date
  endpoint:
    path: /preview/checkDate
    method: POST
    data_selector: data
    params: {}
- name: get_preview
  endpoint:
    path: /preview
    method: GET
    data_selector: data
    params: {}
- name: preview_check_data
  endpoint:
    path: /preview/checkData
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: data.shifts
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: PATCH
    data_selector: data.employee
    params: {}
- name: employeeCheck
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: data
    params: {}
- name: update_company_info
  endpoint:
    path: /companies
    method: PATCH
    data_selector: data
    params: {}
- name: get_upcoming_regular_payroll
  endpoint:
    path: /payroll/regular
    method: GET
    data_selector: data
    params: {}
- name: create_employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: data
    params: {}
- name: accrual_policy
  endpoint:
    path: /accrualPolicy
    method: POST
    data_selector: null
    params: {}
- name: accrual_policy_employees
  endpoint:
    path: /accrualPolicyEmployees
    method: POST
    data_selector: null
    params: {}
- name: accrual_balance
  endpoint:
    path: /accrualBalance
    method: GET
    data_selector: null
    params: {}
- name: accrual_usage
  endpoint:
    path: /accrualPolicy/{{policyCode}}/usage
    method: PATCH
    data_selector: null
    params: {}
- name: company_information
  endpoint:
    path: /companies
    method: GET
    data_selector: data.requirements
- name: generate_employer_taxes_page_link
  endpoint:
    path: /authLinks/taxes
    method: POST
    data_selector: link
- name: create_contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: none
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: data.shifts
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: PATCH
    data_selector: data.employee
    params: {}
- name: employeeCheck
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: data
    params: {}
- name: Create a Customer Account
  endpoint:
    path: /customer-accounts/:id/funding-sources
    method: POST
    data_selector: ''
    params: {}
- name: Trigger Microdeposits
  endpoint:
    path: /customer-accounts/:{customerAccountID}/trigger-micro-deposits
    method: POST
    data_selector: ''
    params: {}
- name: Verify Microdeposits
  endpoint:
    path: /customer-accounts/:{customerAccountID}/verify-micro-deposits
    method: POST
    data_selector: ''
    params: {}
- name: Generate Customer Account Onboarding Link
  endpoint:
    path: /customer-accounts/onboard
    method: POST
    data_selector: ''
    params: {}
- name: paycard
  endpoint:
    path: /paycard
    method: GET
    data_selector: paycardObjects
    params: {}
- name: accrualPolicy
  endpoint:
    path: /accrualPolicy
    method: POST
    data_selector: data
    params: {}
- name: accrualPolicyEmployees
  endpoint:
    path: /accrualPolicyEmployees
    method: POST
    data_selector: data
    params: {}
- name: accrualBalance
  endpoint:
    path: /accrualBalance
    method: GET
    data_selector: data
    params: {}
- name: applyAccrualUsage
  endpoint:
    path: /accrualPolicy/{{policyCode}}/usage
    method: PATCH
    data_selector: data
    params: {}
- name: updateAccrualPolicy
  endpoint:
    path: /accrualPolicy
    method: PATCH
    data_selector: data
    params: {}
- name: contractor_payment
  endpoint:
    path: /contractorPayment
    method: POST
    data_selector: ''
    params: {}
- name: create_funding_source
  endpoint:
    path: /customer-accounts/:{id}/funding-sources
    method: POST
    data_selector: data
    params: {}
- name: trigger_microdeposits
  endpoint:
    path: /customer-accounts/:{customerAccountID}/trigger-micro-deposits
    method: POST
    data_selector: data
    params: {}
- name: verify_microdeposits
  endpoint:
    path: /customer-accounts/:{customerAccountID}/verify-micro-deposits
    method: POST
    data_selector: data
    params: {}
- name: generate_onboarding_link
  endpoint:
    path: /customer-accounts/onboard
    method: POST
    data_selector: data
    params: {}
- name: employee_checks
  endpoint:
    path: /employeeCheck
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeID: '{{employeeID}}'
- name: paystub_link
  endpoint:
    path: /paystubLink
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeCheckID: '{{employeeCheckID}}'
- name: employee_information
  endpoint:
    path: /employees
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeID: '{{employeeID}}'
- name: employee_tax_parameter_summary
  endpoint:
    path: /employees/getTaxParameterSummary
    method: POST
- name: employee_paperwork
  endpoint:
    path: /paperwork/employeePaperwork
    method: POST
- name: bank_account
  endpoint:
    path: /bankaccount
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{employeeID}}'
- name: documents
  endpoint:
    path: /documents
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{employeeID}}'
- name: generate_employee_dashboard_link
  endpoint:
    path: /getAuthLink
    method: POST
- name: employee_onboarding
  endpoint:
    path: /employees/onboard
    method: POST
- name: paycard_enrollment
  endpoint:
    path: /generate-contractor-onboarding-link
    method: POST
    data_selector: paycard
    params:
      paycard: 'true'
- name: paycard_provisioning_status
  endpoint:
    path: /paycard-onboarding-status
    method: GET
    data_selector: status
    params: {}
- name: paycard
  endpoint:
    path: /paycard
    method: GET
- name: contractorPayments
  endpoint:
    path: /contractorPayments
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorID: '{{contractorID}}'
- name: contractorPayment
  endpoint:
    path: /contractorPayment
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorPaymentID: '{{contractorPaymentID}}'
- name: contractorInformation
  endpoint:
    path: /contractors
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorID: '{{contractorID}}'
- name: bankAccount
  endpoint:
    path: /bankaccount
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{contractorID}}'
- name: documents
  endpoint:
    path: /documents
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{contractorID}}'
- name: generateAuthLink
  endpoint:
    path: /getAuthLink
    method: POST
    params: {}
- name: contractorOnboard
  endpoint:
    path: /contractors/onboard
    method: POST
    params: {}
- name: employee_checks
  endpoint:
    path: /employeeCheck
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeID: '{{employeeID}}'
- name: paystub_link
  endpoint:
    path: /paystubLink
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeCheckID: '{{employeeCheckID}}'
- name: employee_information
  endpoint:
    path: /employees
    method: GET
    params:
      companyID: '{{companyID}}'
      employeeID: '{{employeeID}}'
- name: employee_tax_parameter
  endpoint:
    path: /employees/getTaxParameterSummary
    method: POST
- name: employee_paperwork
  endpoint:
    path: /paperwork/employeePaperwork
    method: POST
- name: bank_account
  endpoint:
    path: /bankaccount
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{employeeID}}'
- name: documents
  endpoint:
    path: /documents
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{employeeID}}'
- name: auth_link
  endpoint:
    path: /getAuthLink
    method: POST
- name: employee_onboard
  endpoint:
    path: /employees/onboard
    method: POST
- name: contractor_payments
  endpoint:
    path: /contractorPayments
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorID: '{{contractorID}}'
- name: contractor_payment_by_id
  endpoint:
    path: /contractorPayment
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorPaymentID: '{{contractorPaymentID}}'
- name: contractor_information
  endpoint:
    path: /contractors
    method: GET
    params:
      companyID: '{{companyID}}'
      contractorID: '{{contractorID}}'
- name: bank_account
  endpoint:
    path: /bankaccount
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{contractorID}}'
- name: documents
  endpoint:
    path: /documents
    method: GET
    params:
      companyID: '{{companyID}}'
      id: '{{contractorID}}'
- name: generate_auth_link
  endpoint:
    path: /getAuthLink
    method: POST
    params:
      partnerID: '{{partnerID}}'
      companyID: '{{companyID}}'
      contractorID: '{{contractorID}}'
- name: contractor_onboard
  endpoint:
    path: /contractors/onboard
    method: POST
    params: {}
- name: employer_checks
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
- name: get_employees
  endpoint:
    path: /reference/get-employees
    method: GET
- name: get_contractors
  endpoint:
    path: /reference/get-contractors
    method: GET
- name: create_employee
  endpoint:
    path: /reference/create-employee
    method: POST
- name: create_contractor
  endpoint:
    path: /reference/create-contractor
    method: POST
- name: get_employee_onboarding_link
  endpoint:
    path: /reference/get-employee-onboarding-link
    method: GET
- name: get_contractor_onboarding_link
  endpoint:
    path: /reference/get-contractor-onboarding-link
    method: GET
- name: get_employee_information
  endpoint:
    path: /reference/retrieve-employee-information
    method: GET
- name: get_contractor_information
  endpoint:
    path: /reference/retrieve-contractor-information
    method: GET
- name: get_work_locations
  endpoint:
    path: /reference/get-work-locations
    method: GET
- name: create_work_location
  endpoint:
    path: /reference/create-work-location
    method: POST
- name: create_employee_check
  endpoint:
    path: /reference/create-employee-check
    method: POST
- name: create_contractor_payment
  endpoint:
    path: /reference/create-contractor-payment
    method: POST
- name: get_employee_check_by_id
  endpoint:
    path: /reference/retrieve-employee-check-by-id
    method: GET
- name: get_contractor_payment_by_id
  endpoint:
    path: /reference/get-contractor-payment-by-id
    method: GET
- name: get_employer_checks_by_dates
  endpoint:
    path: /reference/retrieve-employer-checks-by-dates
    method: GET
- name: get_employer_check_by_id
  endpoint:
    path: /reference/retrieve-employer-check-by-id
    method: GET
- name: generate_company_taxes_page_link
  endpoint:
    path: /reference/get-employer-taxes-page-link
    method: GET
- name: get_reports_link
  endpoint:
    path: /reference/get-reports-link
    method: GET
- name: generate_company_login_link
  endpoint:
    path: /reference/retrieve-employer-login-link
    method: POST
- name: payroll_journal_report
  endpoint:
    path: /reports/payroll-journal
    method: POST
    data_selector: null
    params: {}
- name: get_job_status
  endpoint:
    path: /reports
    method: GET
    data_selector: null
    params: {}
- name: generate_reports_link
  endpoint:
    path: /authLinks/reports
    method: POST
    data_selector: null
    params: {}
- name: employer_checks
  endpoint:
    path: /reference/retrieve-all-employer-checks
    method: GET
- name: employees
  endpoint:
    path: /reference/get-employees
    method: GET
- name: contractors
  endpoint:
    path: /reference/get-contractors
    method: GET
- name: employee_information
  endpoint:
    path: /reference/retrieve-employee-information
    method: GET
- name: contractor_information
  endpoint:
    path: /reference/retrieve-contractor-information
    method: GET
- name: work_locations
  endpoint:
    path: /reference/get-work-locations
    method: GET
- name: employer_taxes_page_link
  endpoint:
    path: /reference/get-employer-taxes-page-link
    method: GET
- name: reports_link
  endpoint:
    path: /reference/get-reports-link
    method: GET
- name: employer_login_link
  endpoint:
    path: /reference/retrieve-employer-login-link
    method: POST
- name: employeeCheck
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: employeeCheck
    params:
      companyID: '{{companyID}}'
      employeeCheckID: '{{employeeCheckID}}'
- name: create_payroll_journal_report
  endpoint:
    path: /reports/payroll-journal
    method: POST
    data_selector: null
    params: {}
- name: get_job_status
  endpoint:
    path: /reports
    method: GET
    data_selector: null
    params: {}
- name: generate_reports_link
  endpoint:
    path: /authLinks/reports
    method: POST
    data_selector: null
    params: {}
- name: employer_onboarding
  endpoint:
    path: /docs/employer-onboarding-guide
    method: GET
- name: worker_onboarding
  endpoint:
    path: /docs/worker-onboarding-guides
    method: GET
- name: employer_dashboard
  endpoint:
    path: /docs/admin-employer-dashboard-guides
    method: GET
- name: worker_dashboard
  endpoint:
    path: /docs/worker-dashboards-guides
    method: GET
- name: deductionTemplate
  endpoint:
    path: /deductionTemplate
    method: POST
    data_selector: none
    params: {}
- name: reportingPeriod
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: none
    params:
      companyID: '{{companyID}}'
      pay_schedule: weekly
      searchStart: '2022-01-01'
      searchEnd: '2022-01-07'
- name: employeeCheck
  endpoint:
    path: /employeeCheck
    method: GET
    data_selector: none
    params:
      companyID: '{{companyID}}'
      employeeID: '{{employeeID}}'
      status: pending
      reportingPeriodID: '{{reportingPeriodID}}'
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: none
    params: {}
- name: previewCheckData
  endpoint:
    path: /preview/checkData
    method: POST
    data_selector: none
    params: {}
- name: deductions
  endpoint:
    path: /deductions
    method: POST
    data_selector: none
    params: {}
- name: user
  endpoint:
    path: /api/v1/user
    method: GET
    data_selector: id
- name: employees
  endpoint:
    path: /employees
    method: PATCH
    data_selector: employee
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: POST
    data_selector: new_employees
- name: employee_tax_parameter_definitions
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: ''
- name: set_employee_tax_parameters
  endpoint:
    path: /employees/setTaxParameters
    method: POST
    data_selector: ''
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: ''
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: ''
- name: deductionTemplate
  endpoint:
    path: /deductionTemplate
    method: POST
    data_selector: deductionTemplate
    params: {}
- name: reportingPeriod
  endpoint:
    path: /reportingPeriod
    method: GET
    data_selector: reportingPeriod
    params: {}
- name: employeeCheck
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: employeeCheck
    params:
      disbursement: direct_deposit
- name: deductions
  endpoint:
    path: /deductions
    method: POST
    data_selector: deduction
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: POST
    data_selector: new_employees
- name: employee_tax_parameters
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: jurisdictions
- name: set_employee_tax_parameters
  endpoint:
    path: /employees/setTaxParameters
    method: POST
    data_selector: employeeID
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: shifts
- name: add_shift_to_existing_check
  endpoint:
    path: /shifts
    method: POST
    data_selector: shifts
- name: employer_taxes_page_link
  endpoint:
    path: /authLinks/taxes
    method: POST
    data_selector: partnerID
- name: employees
  endpoint:
    path: /employees
    method: POST
    data_selector: new_employees
    params: {}
- name: tax_parameters
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: ''
    params: {}
- name: set_tax_parameters
  endpoint:
    path: /employees/setTaxParameters
    method: POST
    data_selector: ''
    params: {}
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: POST
    data_selector: ''
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: POST
    data_selector: new_employees
- name: employee_tax_parameters
  endpoint:
    path: /employees/getTaxParameterDefinitions
    method: POST
    data_selector: jurisdictions
- name: set_employee_tax_parameters
  endpoint:
    path: /employees/setTaxParameters
    method: POST
    data_selector: employeeID
- name: employee_check
  endpoint:
    path: /employeeCheck
    method: POST
    data_selector: approval_required
- name: add_shift
  endpoint:
    path: /shifts
    method: POST
    data_selector: companyID
- name: taxes_page_link
  endpoint:
    path: /authLinks/taxes
    method: POST
    data_selector: partnerID
notes:
- The reporting period spans from the start to the end, BOTH dates inclusive.
- 'Different types of reporting periods are supported: daily, weekly, biweekly, semimonthly,
  monthly.'
- Include the API key in the Authentication as a bearer token.
- Include the companyID in the body or query of the request.
- Test mode does not run payroll and does not move money.
- The Zeal API employs rate limiting to help maximize its stability.
- Our rate limiter limits the number of requests to 100 requests to the API per second.
- You can add an Idempotency Key in the request headers (`x-idempotency-key`) to ensure
  that a particular operation is only performed once, regardless of how many times
  the request is made for 24 hours since the original request.
- API is in early access phase.
- Endpoints are marked Early Access and available on a case-by-case basis per partner
  contracts.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Webhooks are the way decisions and events are communicated by Zeal to you.
- Zeal signs the webhook events it sends to your endpoints by including a unique Webhook
  Secret in every request's Puzzl-Signature header.
- Uses webhooks for event notifications
- Example request body is provided in the documentation.
- POSTs a request upon update of a Customer Account object.
- Doesn't return anything but rather POSTs The Customer Account Object to your webhook
  URL
- POSTs a request when an employee check is created, updated, or deleted in the Zeal
  dashboard.
- Zeal POSTs a request containing a Contractor Payment Object when it has been created,
  updated, or deleted.
- Some objects may return nulls in deeply nested fields
- POSTs request when a shift has been created, updated, or deleted in the Zeal dashboard.
- Raw content example includes fields such as shiftID, employeeID, status, and timestamp.
- Zeal POSTs a request containing the processed Employer Check Object.
- POSTs request when an employer check is created from existing pending checks.
- Requires setup of connected app in api
- POSTs a request whenever a report and its corresponding job is created or updated.
- POSTs request when an Employee I9 form has been updated.
- Doesn't return anything but rather POSTs a request with the I9 update to your webhook
  URL.
- Zeal POSTs a request containing the Employee Requirement object.
- This webhook provides information about wallet credit and debit transactions.
- This link can only be generated in production and cannot be generated with a test
  API key.
- This link also expires exactly 7 days after generation.
- The URL for this request expired after 30 days.
- This paystub link expires 24 hours after generation.
- This link can also only be fetched using a production API key.
- Defaults to true
- Set to false by default. If true, Zeal will skip migrating payroll information from
  the company's old payroll provider.
- Adds bank information for a company. This bank account will be used for company
  debits and paying out workers as necessary.
- Zeal will use this bank account for micro-deposit verification as part of the company
  onboarding process.
- This bank account will be used for company debits and paying out workers as necessary.
- Triggers micro-deposit amounts to a company bank account for verification, usually
  appearing in 2-3 business days.
- The company is initially set to a payment_permission_pending state when onboarded.
- The Customer Account Object represents a client under a Company that can workers,
  checks, and shifts can be attributed to.
- Generates a secure onboarding link for a Customer Account in Zeal. This link expires
  after 15 days.
- No authentication required for the API.
- Zeal utilizes a third-party validation tool to ensure a provided address is valid
  and mail-deliverable.
- This request will try to match an existing record with a case-sensitive search.
- Returns boolean indicating success status and work location objects.
- Fields marked with **NOTE** are required under certain conditions
- This employee cannot be included in a payroll run until they are also onboarded.
- If any of the optional residential address fields are specified, the whole address
  must be suitable for taxation.
- Defaults to true for success and error fields.
- Code defaults to 0.
- This applies to W-2 employees. For 1099 contractors, use the Get Contractor Information
  request.
- Effective Date of the tax parameters in this request. Only accepts YYYY-MM-DD date
  format.
- Effective date of the tax parameters in this request defaults to the time of the
  request
- Defaults to 0
- You may only generate this W4 link if the employee has been onboarded.
- This endpoint provides a link for an employee to complete Paycard Enrollment.
- If true, notification email will be sent to employee
- Defaults to false for send_to_worker
- Defaults to true for success and testMode
- Please verify the routing and account numbers before passing them to Zeal (e.g.
  you can use a service such as Plaid).
- Either the employeeID or contractorID is required.
- The Paperwork Template object represents a template for custom paperwork that can
  be utilized during a worker's onboarding process.
- Gets one or more Paperwork Template(s) by companyID or various filters.
- This endpoint has a cap of 100 employee checks.
- A template is used in order to allow employers to have flexibility in creating different
  forms of deductions.
- Deduction Template Object represents a template that can be used to create Deductions.
- Requires setup of connected app in Zeal
- Deduction Object is created using a Deduction Template and is attached to an Employee
  Check.
- Some endpoints are early access and may require special permissions.
- Returns a boolean indicating success status and reporting period details.
- Requires authentication setup
- Employee ID or contractor ID are required.
- This endpoint requires an employeeID, contractorID, or walletTransactionID and returns
  a list of Wallet Transactions.
- Direct Payments can be used to send a payment directly to an employee or contractor.
- A Employer Check Object is created purely based on timing--it could potentially
  encapsulate 2 employee checks that have different reporting periods, but the same
  check date.
- Requires setup of connected app in API
- Requires companyID, employeeID, and reportingPeriodID in the request body
- Creating a check requires a Shift Object that takes in an array of various earning
  components.
- Defaults to true for success and testMode.
- Accrual Policy Object can be used to manage accrual policies.
- Returns boolean indicating success status and a list of rules.
- The accrual balance history endpoint only provides a historical view of items within
  the specific year of an end date (YTD accruals)
- Only applicable for Paycards (Early Access)
- Only applicable for Instant Pay (Early Access)
- This request uses the contractorID attribute to return key information about the
  contractor.
- If passing the onboarding link in a src of an iframe, the allow="camera" flag must
  be passed in order for the iframe to prompt or access a user's camera.
- Some objects like Contact may return nulls in deeply nested fields
- Disbursement status provides up-to-date status of the payment.
- Approval required and approved fields are only relevant if approval_required is
  true.
- Defaults to success true
- Defaults to testMode true
- You cannot trigger disbursements on an unapproved contractor payment.
- You also cannot edit a contractor payment once a trigger has been initiated.
- Defaults to false for approval_required
- Payment will be processed two business days before the pay_date
- This contractor payment cannot be edited if a disbursement was already triggered.
- The endpoint will return a job_id instead of the raw data itself.
- The data returned can be large; a job queue is utilized to process it.
- Data processing is done via a job queue.
- Creates a Year-to-date report for specified employees returning gross pay, net pay,
  taxes, total employer taxes, total employee taxes, deductions for each check associated
  with the employees.
- The endpoint returns a job_id instead of the raw data itself.
- Payroll information will only be taken into account for reports from checks that
  are in a processed state.
- The endpoint will return a job_id instead of the raw data.
- This endpoint is subject to frequent changes.
- The endpoint returns a job_id instead of the raw data. Once the job status is marked
  as complete, the report can be downloaded.
- The Document Object contains attributes such as companyID, type, description, id,
  link, year, and quarter.
- The International Contractor Object represents an international non-resident contractor
  of a company
- Updates an International Contractor's Information.
- This endpoint creates a record of payments made to the international contractor.
  Zeal does not do any financial transactions for this payment.
- This endpoint updates a record of payments made to the international contractor.
  Zeal does not do any financial transactions for this payment.
- Zeal does not do any financial transactions for this payment.
- Production API key affects production resources; Test API key affects test resources.
- API keys should be treated like passwords and not entered into version control.
- Represents a PTO, sick leave, or custom accrual policy that can be created for a
  company.
- The Overtime eligible shifts will be calculated at the Compliance Mandated Rate.
- Test Mode must be enabled to add a company.
- Work Locations aren't required to onboard 1099 Contractors due to their taxable
  status.
- Bank account details don't need to be submitted, but the contractor can't be paid
  by direct deposit without them.
- Bank accounts must be verified through a microdeposit flow which can take up to
  2-3 business days.
- Authorization documents must be signed for Zeal to legally begin processing payroll
  for the company.
- Contractor onboarded without a bank account can still be paid with any disbursement
  method other than direct_deposit.
- Employee Checks are batched and processed 2 days before the Check Date.
- 'There are two kinds of payroll runs: regular and off-cycle.'
- Regular payroll runs populate with configured defaults every pay cycle.
- Off-cycle payroll can be run at any time, but must be configured each time.
- Uses OAuth2 — requires setup of connected app in zeal
- Previewing upcoming payroll is an asynchronous process and returns a job_id.
- If you create employee checks for 'is_regular' employees through the API, you will
  not necessarily see payroll runs in the UI.
- The accrual policy that you are referencing must have a valid policy_effective_date.
- The employee must already be added to the accrual policy to assign usage.
- Tax requirements are documents that an employer must submit in order for Zeal to
  properly pay and report taxes on their behalf.
- Contractor Payments require only an amount and pay_date.
- Payments will automatically be batched and processed by Zeal.
- Once Zeal has processed and applied Overtime calculations to checks for a given
  reporting period, no additional checks can be created for that period.
- Customer Accounts is an early access feature.
- This product is in Early Access. Please reach out to the Zeal team to get access
  to this Product.
- The accrual policy that you are referencing as a path parameter must have a valid
  `policy_effective_date`.
- Remember to replace the placeholders such as {{testApiKey}} in the code samples.
- Reports are processed asynchronously using a job queue.
- Reports are processed asynchronously with a job queue.
- Visit our Deductions Guide to learn more about setting up deduction templates.
- You must wait at least 18 seconds because shifts are measured on an hourly basis.
- All required information for an employee that lives in one location but works in
  another is gathered during onboarding.
- To manage workers with varying work locations, you can submit a workLocationID as
  part of the shift object.
- Remember to replace the placeholders such as {{testApiKey}} in the code samples
  below.
- Zeal automatically withholds and remits taxes to the proper tax agencies.
- Tax requirements can be submitted via the Tax Setup page which can be accessed through
  the Partner Dashboard, Employer Dashboard, or embedded.
errors:
- '401: Unauthorized - If you do not include your key when making an API request,
  or use one that is incorrect or outdated.'
- '401 Unauthorized: Ensure companyID and API key are correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 - Bad Request: The request was unacceptable, often due to a missing or incorrect
  required parameter'
- '401 - Unauthorized: No valid API Key provided'
- '402 - Request Failed: The parameters were valid but the request failed'
- '403 - Forbidden: The API key doesn''t have permission to perform the request'
- '404 - Not Found: The requested resource doesn''t exist'
- '409 - Conflict: The request conflicts with another request'
- '429 - Too Many Requests: Too many requests hit the API too quickly. We recommend
  an exponential backoff of your requests'
- '500, 502, 503, 504 - Server Errors: Something went wrong on Zeal''s end'
- '429: Too Many Requests'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'URL_EXPIRED: The URL for this request expired after 30 days.'
- URL expired after 30 days
- 'Success false: contains a list of error objects'
- 'URL Expired: The URL for this request expired after 30 days.'
- 400 - Result
- '400 Bad Request: Missing required parameters.'
- '401 Unauthorized: Invalid API key.'
- 'Error message: The Company Object error'
- 'Error code: Error codes description'
- URL Expired
- 'Contains a list of error objects which consists of: message: Error message, code:
  Error code as described in Error codes'
- 'Contains a list of error objects which consists of:  `message`: Error message.  `code`:
  Error code as described in [Error codes](/reference/error-codes).'
- Error message
- Error code
- '400: Bad Request'
- Error code as described in [Error codes](/reference/error-codes)
- 'Error message: Error message, code: Error code as described in Error codes'
- '200: Response status indicating success'
- Error message and code as described in the error codes documentation
- '400: Result'
- '200: Result'
- '200: Response status'
- Contains list of error objects
- '401: Unauthorized'
- '404: Not Found'
- Error if trying to create two work locations with the same combination of taxableLocationID
  and work_site_id
- Error if you try to create two work locations with the same combination of taxableLocationID
  and work_site_id
- 'message: Error message'
- 'code: Error code as described in [Error codes](/reference/error-codes)'
- 'Contains a list of error objects which consists of: `message`: Error message `code`:
  Error code as described in [Error codes](/reference/error-codes)'
- 'Error Code 34: Address not suitable for taxation.'
- 'Error Code 34: Address was not suitable for taxation.'
- 'Contains a list of error objects which consists of:  `message`: Error message  `code`:
  Error code as described in [Error codes]'
- 'Error message: Error message  code: Error code as described in Error codes'
- '200: Success response'
- 'Error message: Error message'
- 'HTTP response code: Error code'
- 'code: Error code'
- Error message and code as described in the error codes documentation.
- '200: Request successful'
- 'missing properties: error message'
- '400 Bad Request: Check if all required properties are provided'
- '400 Bad Request: Invalid input parameters'
- '401 Unauthorized: Invalid or expired token'
- '404 Not Found: Endpoint does not exist'
- Defaults to 0
- Defaults to true
- '200: Success'
- 'Error message: Error message code: Error code as described in [Error codes]'
- 'Error code: Error code as described in [Error codes]'
- 'Contains list of error objects which consists of: message: Error message code:
  Error code'
- 'Unauthorized: Recheck credentials'
- 'Invalid Request: Check required parameters'
- 400 Bad Request
- '400 Bad Request: Error code.'
- '200: Success response.'
- '400 Bad Request: Error code or message details'
- '401 Unauthorized: Recheck authentication credentials'
- 200 Successful response
- '400 Bad Request: Ensure all required parameters are provided'
- '401 Unauthorized: Check authentication details'
- '404 Not Found: Verify the endpoint or resource ID'
- 404 - Result
- 'error: Error message and code'
- 'Error message: Error message, code: Error code'
- error message
- error code
- 'Error message: Error message code: Error code'
- 'success: false'
- 'Contains a list of error objects which consists of: message: Error message, code:
  Error code'
- '400 Bad Request: Check if required fields are missing'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: Endpoint may not be available'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Invalid or expired access token'
- 'success: boolean'
- 'message: string'
- 'errors: array'
- 'Contains list of error objects which consists of: message: Error message code:
  Error code as described in the documentation'
- '400 Bad Request: Missing required parameters'
- 'success: Response status'
- 'errors: If `success` is false, errors contains a list of error objects.'
- '400 Invalid request: Check required fields and types'
- 400 Invalid request error
- 404 Resource not found error
- 200 OK
- 'Unauthorized: Check API key and permissions'
- 400 - Bad Request
- 'Error message: Error message, Error code: Error code as described in the documentation'
- '200: Defaults to true'
- 'code: Error code as described in [Error codes]'
- Error message and code are described in the error codes reference.
- '404 Not Found: Check the endpoint URL'
- '400 Bad Request: Check required parameters'
- '404 Not Found: Verify endpoint and parameters'
- If `success` is false, errors contains a list of error objects.
- '401 Unauthorized: Ensure valid authentication'
- '404 Not Found: Ensure the URL is correct'
- 'success: false, errors: array'
- 'success: false, errors: list of error objects'
- 'success: false, errors contains a list of error objects'
- 'status: HTTP response code'
- '200: Response status and a corresponding message validating the success of contractor
  payment deletion'
- 'Contains a list of error objects: message and code'
- 'Unauthorized: Recheck authentication'
- 'Bad Request: Check required parameters such as companyID, start_date, end_date'
- 'Contains a list of error objects which consists of: message: Error message code:
  Error code'
- '0: No errors'
- 'URL Expired: The URL for this request expired after 30 days'
- 'Contains a list of error objects which consists of: message: Error message code:
  Error code as described in Error codes'
- 'Error message: Error message, Error code: Error code'
- 'Error code: Error code as described in [Error codes](/reference/error-codes)'
- 'Error message: Error code as described in [Error codes]'
- '400: Bad Request - Result'
- 'Contains a list of error objects which consists of: message: Error message code:
  Error code as described in [Error codes]'
- 'Invalid deduction template. Ensure deduction template matches template definition:
  code 13'
- 'Invalid input: Check the JSON structure and required fields.'
- 'Unauthorized: Check the API key or authorization token.'
- 'CONFLICT: Overtime calculations have already been applied to other employee checks
  within the same reporting period.'
- No check for given date range
- Employee must work specified hours before accruing time
- '401 Unauthorized: Recheck API key'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.zeal.com
  auth:
    type: oauth2
source_metadata: null
