resources:
- name: portfolios
  endpoint:
    path: /v1/portfolios
    method: GET
    data_selector: records
    params: {}
- name: portfolios
  endpoint:
    path: /portfolios
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: POST
- name: Order Status Request
  endpoint:
    path: /api/v2/orders/status
    method: GET
    data_selector: order_status
    params: {}
- name: heartbeats
  endpoint:
    path: /heartbeats
    method: POST
    data_selector: events
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: events
- name: l2_data
  endpoint:
    path: /l2_data
    method: POST
    data_selector: events
- name: Get Balance For Portfolio/Asset
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-balance-for-assests
    method: GET
- name: List Portfolio Balance
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/list-portfolio-balances
    method: GET
- name: Get Portfolio Details
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-portfolio-details
    method: GET
- name: Get Portfolio Position
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-position-portfolio
    method: GET
- name: List Portfolio Positions
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/list-portfolio-positions
    method: GET
- name: Portfolio Patch
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/patch-portfolio
    method: PATCH
- name: portfolio
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-user-portfolio
    method: GET
- name: transfers
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/list-matching-transfers
    method: GET
- name: orders
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/create-order
    method: POST
- name: portfolio_margin_call
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-portfolio-margin-call
    method: GET
    data_selector: data
    params: {}
- name: portfolio_patch
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/patch-portfolio
    method: PATCH
    data_selector: data
    params:
      marginCallEnabled: 'true'
- name: withdraw_to_crypto_address
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/withdraw-to-crypto-address
    method: POST
    data_selector: data
    params: {}
- name: modify_order
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/modify-open-order
    method: POST
    data_selector: data
    params: {}
- name: get_instrument_details
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/instruments/get-instrument-details
    method: GET
    data_selector: data
    params: {}
- name: list_instruments
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/instruments/list-instruments
    method: GET
    data_selector: data
    params: {}
- name: get_fund_transfer_limit
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/get-fund-transfer-limit
    method: GET
    data_selector: data
    params: {}
- name: get_counterparty_withdrawal_limit
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/get-counterparty-withdrawal-limit
    method: GET
    data_selector: data
    params: {}
- name: list_portfolio_fills
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/portfolios/list-portfolio-fills
    method: GET
    data_selector: data
    params: {}
- name: get_transfer
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/get-transfer
    method: GET
    data_selector: data
    params: {}
- name: list_matching_transfers
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/list-matching-transfers
    method: GET
    data_selector: data
    params: {}
- name: get_daily_trading_volumes
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/instruments/get-daily-trading-volume
    method: GET
    data_selector: data
    params: {}
- name: get_aggregated_candles
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/instruments/get-aggegated-candles
    method: GET
    data_selector: data
    params: {}
- name: REST API
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/introduction
    method: GET
- name: FIX API - Order Entry
  endpoint:
    path: /api-reference/international-exchange/fix-api/fix-api-overview
    method: GET
- name: WEBSOCKET API
  endpoint:
    path: /international-exchange/websocket-feed/websocket-overview
    method: GET
- name: Order Entry
  endpoint:
    path: /order-entry
    method: TCP
    data_selector: records
- name: Market Data
  endpoint:
    path: /market-data
    method: TCP
    data_selector: records
- name: Drop Copy
  endpoint:
    path: /drop-copy
    method: TCP
    data_selector: records
- name: MarketDataIncrementalRefresh
  endpoint:
    path: /MarketDataIncrementalRefresh
    method: GET
    data_selector: marketDataEntries
    params: {}
- name: SecurityListRequest
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: SecurityList
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: SecurityDefinition
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: MarketDataRequest
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: MarketDataRequestReject
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: MarketDataSnapshotFullRefresh
  endpoint:
    path: /international-exchange/fix-api/market-data
    method: GET
- name: transfers
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/transfers/list-matching-transfers
    method: GET
    data_selector: transfers
    params:
      transfer_type: POSITION_TRANSFER
- name: cb_intx_fix_dictionaries_latest
  endpoint:
    path: /intx/fix/dictionary-downloads
    method: GET
- name: cb_intx_fix_dictionaries_archive
  endpoint:
    path: /intx/fix/dictionary-downloads/archive
    method: GET
- name: Logon
  endpoint:
    path: /logon
    method: POST
    data_selector: response
    params:
      Username: Client API Key
      Password: Passphrase for the API key
      DefaultApplVerID: FIX50SP2
- name: NewOrderSingle
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/new
    method: POST
    data_selector: records
- name: OrderCancelReplaceRequest
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/cancel-replace
    method: POST
    data_selector: records
- name: OrderCancelRequest
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/cancel
    method: POST
    data_selector: records
- name: OrderMassCancelRequest
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/mass-cancel
    method: POST
    data_selector: records
- name: ExecutionReport
  endpoint:
    path: /executionreport
    method: GET
    data_selector: records
    params: {}
- name: OrderMassCancelReport
  endpoint:
    path: /ordermasscancelreport
    method: GET
    data_selector: records
    params: {}
- name: OrderCancelReject
  endpoint:
    path: /ordercancelreject
    method: GET
    data_selector: records
    params: {}
- name: BusinessMessageReject
  endpoint:
    path: /businessmessagereject
    method: GET
    data_selector: records
    params: {}
- name: TradeCaptureReport
  endpoint:
    path: /tradecapturereport
    method: GET
    data_selector: records
    params: {}
- name: PreFillRequest
  endpoint:
    path: /prefillrequest
    method: GET
    data_selector: records
    params: {}
- name: PreFillReport
  endpoint:
    path: /prefillreport
    method: GET
    data_selector: records
    params: {}
- name: RFQ Request
  endpoint:
    path: /rfqrequest
    method: GET
    data_selector: records
    params: {}
- name: quote_request
  endpoint:
    path: /quote/request
    method: POST
    data_selector: QuoteReqID
    params: {}
- name: quote
  endpoint:
    path: /quote
    method: POST
    data_selector: QuoteID
    params: {}
- name: quote_status_report
  endpoint:
    path: /quote/status
    method: GET
    data_selector: QuoteStatus
    params: {}
- name: TPSL Orders
  endpoint:
    path: /api-reference/international-exchange-api/rest-api/orders/create-order
    method: POST
- name: ExecutionReport
  endpoint:
    path: /execution/report
    method: GET
    data_selector: executionReports
- name: TradeCaptureReport
  endpoint:
    path: /trade/capture/report
    method: GET
    data_selector: tradeCaptureReports
- name: QuoteStatusReport
  endpoint:
    path: /quote/status/report
    method: GET
    data_selector: quoteStatusReports
- name: websocket_feed_authentication
  endpoint:
    path: /international-exchange/websocket-feed/authentication
    method: POST
    data_selector: null
    params: {}
- name: RFQ_MATCH
  endpoint:
    path: /RFQ_MATCH
    method: SUBSCRIBE
    data_selector: response
    params: {}
- name: INDEX
  endpoint:
    path: /INDEX
    method: SUBSCRIBE
    data_selector: response
    params: {}
- name: instruments
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: match
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: funding
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: risk
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: level1
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: level2
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
- name: candles
  endpoint:
    path: /international-exchange/websocket-feed/channels
    method: SUBSCRIBE
notes:
- Ensure you authenticate all API requests.
- All Prime infrastructure is located in AWS US-east 1 region. For optimal performance
  and latency, its recommended that client deploy their applications in AWS US-EAST
  1.
- Sessions are forcibly logged out every day between 5pm ET and 5:05pm ET for a maintenance
  window.
- The REST API throttles endpoints by IP address AND portfolio ID
- The X-CB-ACCESS-TIMESTAMP header must be number of seconds since Unix Epoch in UTC.
  Decimal values are not allowed.
- Your timestamp must be within 30 seconds of your request, or it will be considered
  expired and be rejected.
- Especially pertinent if using an Org or Entity level API key
- A standard header must be present at the start of every message in both directions.
- Only one session can exist per connection.
- Real-time market data updates provide the fastest insight into order flow and trades.
- Connection requests to it are rate-limited at 750 every 10 seconds per IP.
- For optimal performance and latency, it's recommended that clients deploy their
  applications in AWS US-EAST 1.
- API requires an access key, account ID, and API key passphrase for authentication.
- Public preview of the Coinbase International Exchange FIX and REST APIs.
- API keys can be used simultaneously between trading and view-only sessions.
- Resend requests are not supported.
- Every connection establishes a new session and a new set of session sequence numbers.
- The WebSocket feed is publicly available and provides real-time market data updates
  for orders and trades.
- Market data feed only supports aggregated books on levels 1, 10, or 20
- Must be 0 (None) for EncryptMethod.
- Default HeartBtInt is 10 seconds if not provided.
- Quotes must be received by the ValidUntilTime specified in the Quote Request.
- Only one side is traded if the Liquidity Provider wins the RFQ.
- Only GTC and GTD are supported for TimeInForce
- The Post-Only tag is not supported.
- Must authenticate when subscribing to the WebSocket Feed the very first time.
- WebSocket channels provide real-time updates.
- The server will disconnect the session of slow consumers.
- The server will disconnect the session if a subscribe message is not sent within
  3 seconds.
- Geofencing is applied on the IP address.
errors:
- Requests are limited to 50 calls per second/FIX session.
- '400: Bad Request - Invalid request format'
- '401: Unauthorized - Invalid API Key'
- '403: Forbidden - You do not have access to the requested resource'
- '404: Not Found - Requested resource could not be found'
- '500: Internal Server Error - Server-side error occurred'
- '429: Too Many Requests - If you exceed 100 rps, a 429 error is thrown and you have
  to wait 30 seconds before resuming'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key and permissions'
- 'ErrSlowConsume: The client has too many backed up messages.'
- 'ErrSlowRead: The client is sending too many messages.'
- 'Message too big: The message size is too large.'
- 'Network issues: There are intermittent network issues.'
- '401 Unauthorized: Verify your access credentials.'
- 'ConnectionClosed: Handle WebSocket disconnections gracefully.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'HTTP Code: 429 - Rate limit exceeded - Server allows 100 requests per second'
- 0 = Invalid Tag Number
- 1 = Required Tag Missing
- 2 = Tag not defined for this message type
- 'QuoteStatus = Rejected: Quote failed validation checks or was sent too late'
- 'QuoteStatus = Expired: Quote Request expired w/no match'
- 'QuoteStatus = Active: Quote was acknowledged'
- 'QuoteStatus = Canceled: Quote not selected b/c LP did not win auction or had insufficient
  funds'
- 'QuoteStatus = Pending End Trade: Quote selected for execution'
- 'Invalid product_id: Check the provided product IDs.'
- 'Unauthorized: Check your API key and permissions.'
auth_info:
  mentioned_objects:
  - ACCESS_KEY
  - SVC_ACCOUNTID
  - SIGNING_KEY
  - PASSPHRASE
client:
  base_url: https://api.coinbase.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
