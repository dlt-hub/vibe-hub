resources:
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: ''
    params: {}
- name: audio_transcriptions
  endpoint:
    path: /audio/transcriptions
    method: POST
    data_selector: ''
    params: {}
- name: audio_translations
  endpoint:
    path: /audio/translations
    method: POST
    data_selector: ''
    params: {}
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: ''
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: POST
    data_selector: ''
    params: {}
- name: list_deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: ''
    params: {}
- name: deployment_info
  endpoint:
    path: /deployments/{deploymentID}
    method: GET
    data_selector: ''
    params: {}
- name: delete_deployment
  endpoint:
    path: /deployments/{deploymentID}
    method: DELETE
    data_selector: ''
    params: {}
- name: text_models
  endpoint:
    path: /models/text
    method: GET
- name: audio_models
  endpoint:
    path: /models/audio
    method: GET
- name: text_embedding_models
  endpoint:
    path: /models/text-embedding
    method: GET
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: deployments
- name: create_deployment
  endpoint:
    path: /deployments
    method: POST
    data_selector: deployment
    params: {}
- name: retrieve_deployment
  endpoint:
    path: /deployments/{deploymentID}
    method: GET
    data_selector: deployment
    params: {}
- name: delete_deployment
  endpoint:
    path: /deployments/{deploymentID}
    method: DELETE
    data_selector: deployment
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: transcriptions
  endpoint:
    path: /audio/transcriptions
    method: POST
- name: translations
  endpoint:
    path: /audio/translations
    method: POST
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
- name: document_embedder
  endpoint:
    path: /v1/embedding
    method: POST
    data_selector: documents
    params: {}
- name: llm_generator
  endpoint:
    path: /v1/generate
    method: POST
    data_selector: response
    params: {}
notes:
- 'File uploads are currently limited to 25 MB and the following input file types
  are supported: flac, mp3, mp4, mpeg, mpga, m4a, wav, and webm.'
- Requires setup of API key
- Rate limits are intentionally set low during the Early Access phase and will be
  updated once General Availability is released
- Uses API key for authentication
- Some models may have specific usage limits
errors:
- 'INVALID_REQUEST: Check the request format for errors'
- 'UNAUTHORIZED: Verify API key is correct'
- 'MODEL_NOT_FOUND: Ensure the requested model is available'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.ektos.ai/v1
  auth:
    type: ApiKeyAuth
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
