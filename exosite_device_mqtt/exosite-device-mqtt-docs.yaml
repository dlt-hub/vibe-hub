resources:
- name: data_in
  endpoint:
    path: $resource/data_in
    method: POST
    data_selector: value
    params: {}
- name: device_data
  endpoint:
    path: /devices/data
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: data
    params: {}
- name: insights
  endpoint:
    path: /v1/insights
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: digital_asset
  endpoint:
    path: /getting-started/creating-assets/
    method: GET
    data_selector: assets
    params: {}
- name: device_signals
  endpoint:
    path: /api/v1/devices/signals
    method: GET
    data_selector: data
    params: {}
- name: event_log
  endpoint:
    path: /api/v1/devices/logs
    method: GET
    data_selector: logs
    params: {}
- name: asset_templates
  endpoint:
    path: /asset-templates
    method: GET
    data_selector: templates
    params: {}
- name: linked_assets
  endpoint:
    path: /linked-assets
    method: GET
    data_selector: assets
    params: {}
- name: Asset Templates
  endpoint:
    path: /exosense/asset-templates
    method: GET
    data_selector: templates
- name: Linked Assets
  endpoint:
    path: /exosense/asset-templates/linked-assets
    method: GET
    data_selector: linked_assets
- name: Creating and Updating Asset Templates
  endpoint:
    path: /exosense/asset-templates/create-update
    method: POST
    data_selector: template_creation
- name: signals
  endpoint:
    path: /signals
    method: POST
    data_selector: signals
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: assets
    params: {}
- name: conditions
  endpoint:
    path: /conditions
    method: GET
    data_selector: conditions
    params: {}
- name: condition
  endpoint:
    path: /conditions/{conditionId}
    method: GET
    data_selector: condition
    params: {}
- name: export_conditions
  endpoint:
    path: /conditions/export
    method: GET
    data_selector: exportOptions
    params: {}
- name: conditions
  endpoint:
    path: /conditions
    method: GET
    data_selector: conditions
    params: {}
- name: condition_policy
  endpoint:
    path: /condition-policy
    method: GET
    data_selector: policies
    params: {}
- name: asset_fleet_grid
  endpoint:
    path: /exosense/asset-fleet-view
    method: GET
    data_selector: assets
    params: {}
- name: asset_types
  endpoint:
    path: /exosense/asset-types
    method: GET
    data_selector: types
    params: {}
- name: asset_templates
  endpoint:
    path: /exosense/asset-templates
    method: GET
    data_selector: templates
    params: {}
- name: Asset Grid
  endpoint:
    path: /export/asset-grid
    method: GET
- name: Asset Fleet Grid
  endpoint:
    path: /exosense/asset-fleet-view/
    method: GET
    data_selector: assets
    params: {}
- name: Asset Types
  endpoint:
    path: /exosense/asset-types/
    method: GET
    data_selector: types
    params: {}
- name: Asset Templates
  endpoint:
    path: /exosense/asset-templates/
    method: GET
    data_selector: templates
    params: {}
- name: Asset Tracker
  endpoint:
    path: /asset_fleet_view
    method: GET
    data_selector: records
- name: Pump - 1
  endpoint:
    path: /services/data/v1.0/pumps/1
    method: GET
    data_selector: data
    params: {}
- name: Pump - 2
  endpoint:
    path: /services/data/v1.0/pumps/2
    method: GET
    data_selector: data
    params: {}
- name: group_hierarchy
  endpoint:
    path: /api/v1/group-hierarchy
    method: GET
    data_selector: groups
    params: {}
- name: group_hierarchy
  endpoint:
    path: /exosense/group-hierarchy
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: notification_lists
  endpoint:
    path: /notifications/lists
    method: GET
    data_selector: lists
    params: {}
- name: notification_contact_preferences
  endpoint:
    path: /notifications/contact_preferences
    method: GET
    data_selector: preferences
    params: {}
- name: user_preferences
  endpoint:
    path: /user/preferences
    method: GET
    data_selector: preferences
    params: {}
- name: map_view
  endpoint:
    path: /exosense/location-maps/map-browse-view
    method: GET
    data_selector: assets
- name: asset_location
  endpoint:
    path: /exosense/location-maps/asset-location
    method: GET
    data_selector: location_settings
- name: asset_map_view_features
  endpoint:
    path: /exosense/location-maps/asset-map-view-features
    method: GET
    data_selector: features
- name: notification_lists
  endpoint:
    path: /exosense/notifications/
    method: GET
    data_selector: notifications
    params: {}
- name: work_orders
  endpoint:
    path: /work-orders
    method: GET
    data_selector: records
    params: {}
- name: maintenance_work_orders
  endpoint:
    path: /work-orders
    method: GET
    data_selector: workOrders
    params: {}
- name: user_preferences
  endpoint:
    path: /user/preferences
    method: GET
    data_selector: preferences
- name: signal_history
  endpoint:
    path: /tsdb/v=1.1/written_at=<date-time>Z/<random_id>.csv
    method: GET
    data_selector: raw signal data
    params: {}
- name: asset_history
  endpoint:
    path: /assets/v=1
    method: GET
    data_selector: template
    params: {}
- name: work_order
  endpoint:
    path: /work-orders
    method: GET
    data_selector: records
- name: Work Order States
  endpoint:
    path: /work-orders/states
    method: GET
    data_selector: states
- name: Work Order Priorities
  endpoint:
    path: /work-orders/priorities
    method: GET
    data_selector: priorities
- name: Work Order Description
  endpoint:
    path: /work-orders/description
    method: GET
    data_selector: description
- name: Exporting Maintenance Records
  endpoint:
    path: /work-orders/export
    method: GET
    data_selector: export_options
- name: nodes
  endpoint:
    path: /groups/v=1/written_at=<date-time>Z/nodes.json
    method: GET
    data_selector: nodes
- name: roles
  endpoint:
    path: /groups/v=1/written_at=<date-time>Z/roles.json
    method: GET
    data_selector: roles
- name: permissions
  endpoint:
    path: /groups/v=1/written_at=<date-time>Z/permissions.json
    method: GET
    data_selector: permissions
- name: devices
  endpoint:
    path: /groups/v=1/written_at=<date-time>Z/devices.json
    method: GET
    data_selector: devices
- name: users
  endpoint:
    path: /groups/v=1/written_at=<date-time>Z/users.json
    method: GET
    data_selector: users
- name: historical_signal_values
  endpoint:
    path: /data/signals
    method: GET
    data_selector: signalValues
- name: event_status_changes
  endpoint:
    path: /data/events
    method: GET
    data_selector: eventChanges
- name: asset_configuration_changes
  endpoint:
    path: /data/assets
    method: GET
    data_selector: assetChanges
- name: group_hierarchy_information
  endpoint:
    path: /data/groups
    method: GET
    data_selector: groupHierarchy
- name: signal_history
  endpoint:
    path: /tsdb/v=1.1
    method: GET
    data_selector: signal_data
    params: {}
- name: asset_archive
  endpoint:
    path: /assets/v=1
    method: GET
    data_selector: template
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.assets
    params: {}
- name: nodes
  endpoint:
    path: groups/v=1/written_at=<date-time>Z/nodes.json
    method: GET
    data_selector: records
    params: {}
- name: roles
  endpoint:
    path: groups/v=1/written_at=<date-time>Z/roles.json
    method: GET
    data_selector: records
    params: {}
- name: permissions
  endpoint:
    path: groups/v=1/written_at=<date-time>Z/permissions.json
    method: GET
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: groups/v=1/written_at=<date-time>Z/devices.json
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: groups/v=1/written_at=<date-time>Z/users.json
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.assets
    params: {}
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: signal
  endpoint:
    path: /v1/signals
    method: GET
    data_selector: data
    params: {}
- name: channels
  endpoint:
    path: /schema/data-types
    method: GET
    data_selector: channels
- data_type: CURRENCY
  data_unit: USD
- data_type: DATA
  data_unit: MEGABYTE
- data_type: DENSITY
  data_unit: KG_PER_M3
- data_type: DISPLACEMENT
  data_unit: METERS
- data_type: ELEC_CHARGE
  data_unit: COULOMB
- data_type: ELEC_CURRENT
  data_unit: AMPERE
- data_type: ELEC_CONDUCTANCE
  data_unit: SIEMENS
- data_type: ELEC_CONDUCTIVITY
  data_unit: SIEMENS_PER_METER
- data_type: ELEC_POTENTIAL
  data_unit: VOLT
- data_type: ELEC_RESISTANCE
  data_unit: OHM
- data_type: ELEC_RESISTIVITY
  data_unit: OHM_METER
- data_type: ENERGY
  data_unit: JOULE
- data_type: ENERGY_REACTIVE
  data_unit: KILOVOLTAMPS_REACTIVE_HOUR
- data_type: FIELD_LEVEL
  data_unit: DECIBEL
- data_type: FLOW
  data_unit: LITERS_PER_SEC
- data_type: FLOW_MASS
  data_unit: KG_PER_SEC
- data_type: FORCE
  data_unit: NEWTON
- data_type: FREQUENCY
  data_unit: HERTZ
- data_type: LOCATION
  data_unit: LAT_LONG
- data_type: HEAT
  data_unit: JOULE
- data_type: HUMIDITY
  data_unit: PERCENT
- data_type: ILLUMINANCE
  data_unit: LUX
- data_type: INDUCTANCE
  data_unit: HENRY
- data_type: IRRADIANCE
  data_unit: WATT_PER_METER2
- data_type: JERK
  data_unit: METER_PER_SEC3
- data_type: LENGTH
  data_unit: METERS
- data_type: LINEAR_DENSITY
  data_unit: KILOGRAM_PER_METER
- data_type: LUMINANCE
  data_unit: CANDELA_PER_METER2
- data_type: LUMINOUS_FLUX
  data_unit: LUMENS
- data_type: LUMINOUS_INTENSITY
  data_unit: CANDELA
- data_type: MASS
  data_unit: KILOGRAM
- data_type: PERCENTAGE
  data_unit: PERCENT
- data_type: PH
  data_unit: PH
- data_type: ANGLE
  data_unit: RADIAN
- data_type: POWER
  data_unit: WATT
- data_type: POWER_APPARENT
  data_unit: VOLTAMPS
- data_type: POWER_REACTIVE
  data_unit: VOLTAMPS_REACTIVE
- data_type: POWER_LEVEL
  data_unit: DECIBEL
- data_type: PRESSURE
  data_unit: BAR
- data_type: SIGNAL_STRENGTH_PERCENTAGE
  data_unit: PERCENT
- data_type: SOLID_ANGLE
  data_unit: STERADIAN
- data_type: SPEED
  data_unit: METER_PER_SEC
- data_type: TEMPERATURE
  data_unit: DEG_CELSIUS
- data_type: TEMPERATURE_DELTA
  data_unit: DEG_CELSIUS
- data_type: TIME
  data_unit: SECONDS
- data_type: TORQUE
  data_unit: NEWTON_METER
- data_type: TURBIDITY
  data_unit: FTU
- data_type: URL
- data_type: VELOCITY
  data_unit: METER_PER_SEC
- data_type: DYNAMIC_VISCOSITY
  data_unit: PASCAL_SEC
- data_type: KINEMATIC_VISCOSITY
  data_unit: METERS2_PER_SEC
- data_type: VOLUME
  data_unit: METER3
- name: weight
  endpoint:
    data_selector: data_type
    params:
      data_unit: NEWTON
- name: work
  endpoint:
    data_selector: data_type
    params:
      data_unit: JOULE
- name: signals
  endpoint:
    path: /api/v1/signals
    method: GET
    data_selector: data
- name: event_log
  endpoint:
    path: /api/v1/event_log
    method: GET
    data_selector: events
- name: channels
  endpoint:
    path: /schema/data-types/channels
    method: GET
    data_selector: channels
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
    params: {}
- name: provision_device
  endpoint:
    path: /service/<iot-connector-id>/device2/identity/<device-id>
    method: PUT
    data_selector: auth
    params:
      expire: <µs-timestamp-to-provision-by>
- name: whitelist_devices
  endpoint:
    path: /service/<iot-connector-id>/device2/identities
    method: POST
    data_selector: identities
    params: {}
- name: data_out
  endpoint:
    path: /data_out
    method: GET
- name: currency
  endpoint:
    data_selector: data_type
    params: {}
- name: data
  endpoint:
    data_selector: data_type
    params: {}
- name: density
  endpoint:
    data_selector: data_type
    params: {}
- name: displacement
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_charge
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_current
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_conductance
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_conductivity
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_potential
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_resistance
  endpoint:
    data_selector: data_type
    params: {}
- name: electrical_resistivity
  endpoint:
    data_selector: data_type
    params: {}
- name: energy
  endpoint:
    data_selector: data_type
    params: {}
- name: energy_reactive
  endpoint:
    data_selector: data_type
    params: {}
- name: field_level
  endpoint:
    data_selector: data_type
    params: {}
- name: flow
  endpoint:
    data_selector: data_type
    params: {}
- name: flow_mass
  endpoint:
    data_selector: data_type
    params: {}
- name: force
  endpoint:
    data_selector: data_type
    params: {}
- name: frequency
  endpoint:
    data_selector: data_type
    params: {}
- name: gps_location
  endpoint:
    data_selector: data_type
    params: {}
- name: heat
  endpoint:
    data_selector: data_type
    params: {}
- name: humidity
  endpoint:
    data_selector: data_type
    params: {}
- name: illuminance
  endpoint:
    data_selector: data_type
    params: {}
- name: inductance
  endpoint:
    data_selector: data_type
    params: {}
- name: irradiance
  endpoint:
    data_selector: data_type
    params: {}
- name: jerk
  endpoint:
    data_selector: data_type
    params: {}
- name: length
  endpoint:
    data_selector: data_type
    params: {}
- name: data_out
  endpoint:
    path: /data/out
    method: POST
    data_selector: control_requests
    params: {}
- name: data_in
  endpoint:
    path: /data/in
    method: GET
    data_selector: channel_data
    params: {}
- name: config_otau
  endpoint:
    path: /onep:v1/stack/alias?config_otau
    method: GET
- name: otau_in
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
- name: data_in
  endpoint:
    path: /data_in
    method: POST
- name: config_io
  endpoint:
    path: /config_io
    method: POST
- name: linear_density
  endpoint:
    data_selector: data_type
    params:
      data_unit: KILOGRAM_PER_METER
- name: luminance
  endpoint:
    data_selector: data_type
    params:
      data_unit: CANDELA_PER_METER2
- name: luminous_flux
  endpoint:
    data_selector: data_type
    params:
      data_unit: LUMENS
- name: luminous_intensity
  endpoint:
    data_selector: data_type
    params:
      data_unit: CANDELA
- name: mass
  endpoint:
    data_selector: data_type
    params:
      data_unit: KILOGRAM
- name: percentage
  endpoint:
    data_selector: data_type
    params:
      data_unit: PERCENT
- name: ph
  endpoint:
    data_selector: data_type
    params:
      data_unit: PH
- name: plane_angle
  endpoint:
    data_selector: data_type
    params:
      data_unit: RADIAN
- name: power
  endpoint:
    data_selector: data_type
    params:
      data_unit: WATT
- name: power_apparent
  endpoint:
    data_selector: data_type
    params:
      data_unit: VOLTAMPS
- name: power_reactive
  endpoint:
    data_selector: data_type
    params:
      data_unit: VOLTAMPS_REACTIVE
- name: power_level
  endpoint:
    data_selector: data_type
    params:
      data_unit: DECIBEL
- name: pressure
  endpoint:
    data_selector: data_type
    params:
      data_unit: BAR
- name: signal_strength_percentage
  endpoint:
    data_selector: data_type
    params:
      data_unit: PERCENT
- name: solid_angle
  endpoint:
    data_selector: data_type
    params:
      data_unit: STERADIAN
- name: speed
  endpoint:
    data_selector: data_type
    params:
      data_unit: METER_PER_SEC
- name: temperature
  endpoint:
    data_selector: data_type
    params:
      data_unit: DEG_CELSIUS
- name: temperature_delta
  endpoint:
    data_selector: data_type
    params:
      data_unit: DEG_CELSIUS
- name: time
  endpoint:
    data_selector: data_type
    params:
      data_unit: SECONDS
- name: torque
  endpoint:
    data_selector: data_type
    params:
      data_unit: NEWTON_METER
- name: turbidity
  endpoint:
    data_selector: data_type
    params:
      data_unit: FTU
- name: url
  endpoint:
    data_selector: data_type
    params: {}
- name: velocity
  endpoint:
    data_selector: data_type
    params:
      data_unit: METER_PER_SEC
- name: dynamic_viscosity
  endpoint:
    data_selector: data_type
    params:
      data_unit: PASCAL_SEC
- name: kinematic_viscosity
  endpoint:
    data_selector: data_type
    params:
      data_unit: METERS2_PER_SEC
- name: volume
  endpoint:
    data_selector: data_type
    params:
      data_unit: METER3
- name: device_connection_debug_logs
  endpoint:
    path: /device-connectivity/iot-connector-management/device-connection-debug-logs
    method: GET
    data_selector: Debug Log Messages
    params: {}
- name: tags
  endpoint:
    path: /device-connectivity/iot-connector-management/tags
    method: GET
    data_selector: Tags
    params: {}
- name: exosense_tags
  endpoint:
    path: /device-connectivity/iot-connector-management/exosense-tags
    method: GET
    data_selector: ExoSense Tags
    params: {}
- name: adding_tags
  endpoint:
    path: /device-connectivity/iot-connector-management/adding-tags
    method: GET
    data_selector: Adding tags
    params: {}
- name: searching_by_tags
  endpoint:
    path: /device-connectivity/iot-connector-management/searching-by-tags
    method: GET
    data_selector: Searching by Tags
    params: {}
- name: provision
  endpoint:
    path: /provision
    method: POST
    data_selector: responses
- name: write
  endpoint:
    path: /write
    method: POST
    data_selector: responses
- name: read
  endpoint:
    path: /read
    method: GET
    data_selector: responses
- name: weight
  endpoint:
    path: /schema/data-types/weight
    method: GET
    data_selector: data_unit
- name: work
  endpoint:
    path: /schema/data-types/work
    method: GET
    data_selector: data_unit
- name: write_resource
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: null
    params: {}
- name: read_resource
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
    data_selector: null
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: hybrid_read_write
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: ''
    params: {}
- name: long_polling
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
    data_selector: ''
    params: {}
- name: record
  endpoint:
    path: /onep:v1/stack/record
    method: POST
    data_selector: ''
    params: {}
- name: list_available_content
  endpoint:
    path: /provision/download
    method: GET
    data_selector: ''
    params: {}
- name: get_content_info
  endpoint:
    path: /provision/download
    method: GET
    data_selector: ''
    params:
      info: 'true'
- name: download_content
  endpoint:
    path: /provision/download
    method: GET
    data_selector: ''
    params: {}
- name: upload_content
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PUT
    data_selector: ''
    params: {}
- name: provision_device
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: ''
    params: {}
- name: data_out
  endpoint:
    path: /device-api/data_out
    method: POST
    data_selector: control
    params: {}
- name: provision_activate
  endpoint:
    path: /provision/activate
    method: POST
    data_selector: token
- name: write_data
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: No Content
- name: read_data
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
    data_selector: value
- name: data_out
  endpoint:
    path: /data_out
    method: POST
    data_selector: payload
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: GET
    data_selector: payload
    params: {}
- name: config_otau
  endpoint:
    path: /onep:v1/stack/alias?config_otau
    method: GET
    data_selector: ''
    params: {}
- name: otau_in
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: ''
    params: {}
- name: record
  endpoint:
    path: /onep:v1/stack/record
    method: POST
- name: read
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
- name: hybrid_read_write
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
- name: long_polling
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
- name: list_available_content
  endpoint:
    path: /provision/download
    method: GET
- name: get_content_info
  endpoint:
    path: /provision/download
    method: GET
- name: download_content
  endpoint:
    path: /provision/download
    method: GET
- name: upload_content
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PUT
- name: tags
  endpoint:
    path: /device-connectivity/iot-connector-management/#tags
    method: GET
    data_selector: tags
    params: {}
- name: provision
  endpoint:
    path: /provision
    method: POST
- name: write
  endpoint:
    path: /write
    method: POST
- name: read
  endpoint:
    path: /read
    method: GET
- name: initiate_upload
  endpoint:
    path: /onep:v1/content/
    method: POST
    data_selector: ''
    params: {}
- name: upload_part
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_upload
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PATCH
    data_selector: ''
    params: {}
- name: get_upload_info
  endpoint:
    path: /onep:v1/content/<content-id>
    method: GET
    data_selector: ''
    params: {}
- name: get_timestamp
  endpoint:
    path: /timestamp
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /device/connectivity/c2/cloudevents
    method: POST
    data_selector: eventData
- name: provision_activate
  endpoint:
    path: /provision/activate
    method: POST
    data_selector: ''
    params: {}
- name: write_data
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: ''
    params: {}
- name: read_data
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
    data_selector: ''
    params: {}
- name: exosite.identity.data_in
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: exosite.identity.created
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: exosite.identity.deleted
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: identity_connected
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: identity_disconnected
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: Hybrid Read Write
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: response
    params: {}
- name: Long Polling
  endpoint:
    path: /onep:v1/stack/alias
    method: GET
    data_selector: response
    params: {}
- name: Record
  endpoint:
    path: /onep:v1/stack/record
    method: POST
    data_selector: response
    params: {}
- name: List Available Content
  endpoint:
    path: /provision/download
    method: GET
    data_selector: response
    params: {}
- name: Get Content Info
  endpoint:
    path: /provision/download
    method: GET
    data_selector: response
    params:
      info: 'true'
- name: Download Content
  endpoint:
    path: /provision/download
    method: GET
    data_selector: response
    params: {}
- name: Upload Content
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PUT
    data_selector: response
    params: {}
- name: signals
  endpoint:
    path: /api/v1/signals
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: Write
  endpoint:
    path: /write
    method: POST
    data_selector: response
    params: {}
- name: Read
  endpoint:
    path: /read
    method: GET
    data_selector: response
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
- name: data_out
  endpoint:
    path: /data_out
    method: POST
- name: config_io
  endpoint:
    path: /config_io
    method: GET
- name: provision_activate
  endpoint:
    path: /provision/activate
    method: POST
    data_selector: null
    params: {}
- name: write_data
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: null
    params: {}
- name: signals
  endpoint:
    path: /api/v1/signals
    method: GET
    data_selector: data
    params: {}
- name: event_log
  endpoint:
    path: /api/v1/event_log
    method: GET
    data_selector: events
    params: {}
- name: stack_alias
  endpoint:
    path: /onep:v1/stack/alias
    method: POST
    data_selector: ''
    params: {}
- name: record
  endpoint:
    path: /onep:v1/stack/record
    method: POST
    data_selector: ''
    params: {}
- name: provision_download
  endpoint:
    path: /provision/download
    method: GET
    data_selector: ''
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: data
    params: {}
- name: config_io
  endpoint:
    path: /config_io
    method: POST
    data_selector: config
    params: {}
- name: data_out
  endpoint:
    path: /data_out
    method: POST
    data_selector: data
    params: {}
- name: initiate_upload
  endpoint:
    path: /onep:v1/content/
    method: POST
    data_selector: ''
    params: {}
- name: upload_part
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PATCH
    data_selector: ''
    params: {}
- name: finalize_upload
  endpoint:
    path: /onep:v1/content/<content-id>
    method: PATCH
    data_selector: ''
    params: {}
- name: get_upload_info
  endpoint:
    path: /onep:v1/content/<content-id>
    method: GET
    data_selector: ''
    params: {}
- name: get_timestamp
  endpoint:
    path: /timestamp
    method: GET
    data_selector: ''
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: data
    params: {}
- name: data_out
  endpoint:
    path: /data_out
    method: GET
    data_selector: data
    params: {}
- name: Modbus_TCP
  endpoint:
    path: /interfaces
    method: GET
    data_selector: interfaces
- name: data_in
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: identity_created
  endpoint:
    path: /
    method: POST
    data_selector: subject
    params: {}
- name: identity_deleted
  endpoint:
    path: /
    method: POST
    data_selector: subject
    params: {}
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: signal
  endpoint:
    path: /api/v1/signals
    method: GET
    data_selector: data
    params: {}
- name: identity_connected
  endpoint:
    path: /remote-cloud/application/devices
    method: POST
    data_selector: subject
- name: identity_disconnected
  endpoint:
    path: /remote-cloud/application/devices
    method: POST
    data_selector: subject
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: data
    params: {}
- name: config_io
  endpoint:
    path: /config_io
    method: GET
    data_selector: config
    params: {}
- name: data_out
  endpoint:
    path: /data_out
    method: POST
    data_selector: control
    params: {}
- name: config_applications
  endpoint:
    path: /config_applications
    method: GET
    data_selector: applications
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: data
    params: {}
- name: config_io
  endpoint:
    path: /config_io
    method: GET
    data_selector: configuration
    params: {}
- name: data_out
  endpoint:
    path: /data_out
    method: POST
    data_selector: control
    params: {}
- name: signals
  endpoint:
    path: /api/signals
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
- name: data_in
  endpoint:
    path: /data_in
    method: POST
- name: config_io
  endpoint:
    path: /config_io
    method: PUT
- name: data_out
  endpoint:
    path: /data_out
    method: POST
- name: config_otau
  endpoint:
    path: /path/to/config_otau
    method: POST
    data_selector: data
    params: {}
- name: otau_in
  endpoint:
    path: /path/to/otau_in
    method: GET
    data_selector: data
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: payload
- name: data_out
  endpoint:
    path: /data_out
    method: GET
    data_selector: payload
- name: Modbus_TCP
  endpoint:
    path: /applications/Modbus_TCP/interfaces
    method: GET
    data_selector: interfaces
- name: Modbus_RTU
  endpoint:
    path: /applications/Modbus_RTU/interfaces
    method: GET
    data_selector: interfaces
- name: CANopen
  endpoint:
    path: /applications/CANopen/interfaces
    method: GET
    data_selector: interfaces
- name: CUSTOM_ACME_PROTOCOL
  endpoint:
    path: /applications/CUSTOM_ACME_PROTOCOL/interfaces
    method: GET
    data_selector: interfaces
- name: config_io
  endpoint:
    path: /config_io
    method: GET
    data_selector: channels
    params: {}
- name: data_in
  endpoint:
    path: /data_in
    method: POST
    data_selector: data
- name: config_io
  endpoint:
    path: /config_io
    method: GET
    data_selector: config
- name: data_out
  endpoint:
    path: /data_out
    method: POST
    data_selector: control
- name: config_applications
  endpoint:
    path: /config_applications
    method: GET
    data_selector: applications
- name: config_io
  endpoint:
    path: /config_io
    method: POST
    data_selector: channels
    params: {}
- name: Modbus
  endpoint:
    path: /exoedge/sources/modbus
    method: GET
    data_selector: records
    params: {}
- name: Simulator
  endpoint:
    path: /exoedge/sources/simulator
    method: GET
    data_selector: records
    params: {}
- name: File I/O
  endpoint:
    path: /exoedge/sources/fileio
    method: GET
    data_selector: records
    params: {}
- name: Linux Stats
  endpoint:
    path: /exoedge/sources/linux-stats
    method: GET
    data_selector: records
    params: {}
- name: Modbus_TCP
  endpoint:
    path: /services/data/vXX.X/sobjects/Modbus_TCP
    method: GET
    data_selector: interfaces
- name: Modbus_RTU
  endpoint:
    path: /services/data/vXX.X/sobjects/Modbus_RTU
    method: GET
    data_selector: interfaces
- name: CANopen
  endpoint:
    path: /services/data/vXX.X/sobjects/CANopen
    method: GET
    data_selector: interfaces
- name: CUSTOM_ACME_PROTOCOL
  endpoint:
    path: /services/data/vXX.X/sobjects/CUSTOM_ACME_PROTOCOL
    method: GET
    data_selector: interfaces
- name: 30 Minutes from Now
  endpoint:
    path: /channels/001
    method: GET
    data_selector: timestamp
    params:
      minutes: 30
- name: thirty_minutes_from_now
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: sixteen
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: OTA Update Process
  endpoint:
    path: /schema/ota_update_schema/#over-the-air-ota-update-process-schema
    method: GET
    data_selector: records
- name: Device Software Package Update
  endpoint:
    path: /schema/ota_update_schema/#device-software-package-update-process
    method: GET
    data_selector: records
- name: Uploading Listing OTAU Packages
  endpoint:
    path: /schema/ota_update_schema/#uploading-listing-otau-packages
    method: GET
    data_selector: records
- name: config_otau
  endpoint:
    path: /services/config_otau
    method: POST
    data_selector: status
    params: {}
- name: otau_in
  endpoint:
    path: /services/otau_in
    method: GET
    data_selector: status
    params: {}
- name: data_in
  endpoint:
    path: /
    method: POST
    data_selector: uplink_message.decoded_payload
    params: {}
- name: info
  endpoint:
    path: /info
    method: GET
    data_selector: payload
- name: insights
  endpoint:
    path: /insights
    method: POST
    data_selector: insights
- name: process
  endpoint:
    path: /process
    method: POST
    data_selector: output
- name: config_io
  endpoint:
    path: /config_io
    method: GET
- name: config_io
  endpoint:
    path: /config_io
    method: GET
    data_selector: channels
    params: {}
- name: Modbus
  endpoint:
    path: /exoedge/sources/#modbus-tcpip-and-rtu
    method: GET
- name: Simulator
  endpoint:
    path: /exoedge/sources/#simulator
    method: GET
- name: File I/O
  endpoint:
    path: /exoedge/sources/#file-io
    method: GET
- name: Linux Stats
  endpoint:
    path: /exoedge/sources/#linux-stats
    method: GET
- name: asset
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /api/events
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /channels/001
    method: GET
    data_selector: channels
    params: {}
- name: thirty_minutes_from_now
  endpoint:
    display_name: The time, thirty minutes from now, according to the gateway.
- name: sixteen
  endpoint:
    display_name: The number 16, according to the example_source.
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: event_log
  endpoint:
    path: /event_logs
    method: GET
    data_selector: logs
    params:
      incremental: timestamp
- name: signals
  endpoint:
    path: /api/signals
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
- name: info
  endpoint:
    path: /info
    method: GET
    data_selector: payload
- name: function_list
  endpoint:
    path: /insights
    method: POST
    data_selector: insights
- name: process_signal_data
  endpoint:
    path: /process
    method: POST
    data_selector: output
- name: anomaly_detection
  endpoint:
    path: /insights/anomaly_detection
    method: GET
    data_selector: results
- name: kalman_filter
  endpoint:
    path: /insights/kalman_filter
    method: GET
    data_selector: results
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: event_log
  endpoint:
    path: /event_logs
    method: GET
    data_selector: logs
- name: core_services
  endpoint:
    path: /core/services
    method: GET
    data_selector: services
- name: web_assets
  endpoint:
    path: /web/assets
    method: GET
    data_selector: assets
- name: additional_services
  endpoint:
    path: /additional/services
    method: GET
    data_selector: services
- name: asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
- name: signals
  endpoint:
    path: /api/v1/signals
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: records
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: event
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: signals
  endpoint:
    path: /api/signals
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: event_log
  endpoint:
    path: /event_logs
    method: GET
    data_selector: events
    params:
      incremental: timestamp
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: event_log
  endpoint:
    path: /api/v1/event_logs
    method: GET
    data_selector: events
    params: {}
- name: default_dashboard
  endpoint:
    path: /dashboards/default
    method: GET
    data_selector: dashboards
    params: {}
- name: shared_dashboard
  endpoint:
    path: /dashboards/shared
    method: GET
    data_selector: dashboards
    params: {}
notes:
- Authentication Types include Password Authentication and Client Certificate.
- ClientID must be set as empty while provisioning.
- Client key/cert is always set.
- OAuth2 authentication is required to access device data.
- ExoSense is an end-to-end solution for remote monitoring applications.
- ExoSense supports data from IoT edge devices or from federated device clouds.
- The Insights interface allows functions to be inserted into an Asset's configuration.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Supports up to 10 simulated devices
- 5 simulators can be running at any time
- Includes a simple custom waveform simulator type
- Includes a CSV file reader simulator type
- 'Selectable report rate with a minimum setting of 10 seconds supported. Note: If
  value is set to less than 10 seconds, it will report at 10 seconds.'
- Max CSV file size supported is 100KB
- 'Exosite maintains a real-time status page for our operations, which can be found
  at: https://status.exosite.com.'
- Advanced Exosite Platform accounts required
- Uses OAuth2 with refresh token — requires setup of connected app in Exosite
- Some objects may return nulls in deeply nested fields
- Some API responses may include additional metadata
- ExoSense provides configurable properties and user preferences to allow flexibility
  in the presentation of data values, units, and timestamps while maintaining a strong
  source of truth for data processing and storage.
- Signal data values are stored using UTC timestamps.
- User's preferred timezone is used for visualization of timestamps.
- Asset Types functionality is not available at all ExoSense application tiers.
- Devices must have at least one channel matching each data type of signal in the
  Asset Template
- Bulk Change functionality is not available at all ExoSense application tiers and
  is controlled with a Feature Control.
- Asset Condition Lifecycle Management functionality is currently in an Early Access
  BETA state.
- Condition Policies must be set up to use Conditions.
- Condition Policies specify the priority, this is a decision by users who define
  the policies.
- Asset Grid view and Asset Types are available at specific ExoSense application tiers.
- Asset Types are used to populate the asset grid fleet view.
- Asset Templates can be associated to an Asset type, but are otherwise not represented
  on the asset grid view.
- Export options include image, print, pdf, and two file output options CSV and JSON.
- This feature and specific export options may not be available on all solutions.
- Groups provide organization and access control to represent a collection of assets,
  devices, users, dashboards, and to organize groups of groups.
- Groups provide organization and access control to represent a collection of assets,
  devices, users, dashboards, and to organize groups of groups for entities such as
  customer, sites, regions, etc.
- SMS notifications may not be available on all solutions dependent on Solution Tier
  and Administrators.
- Group names are not required to be unique in the solution.
- Users in child sub-groups have no access to assets in a parent group.
- This feature may not be enabled on all ExoSense instances.
- Users set up their notification contact info including SMS rules on their Profile
  page.
- Asset Maintenance Work Order Management functionality is currently in an Early Access
  BETA state.
- Export options include PDF, JSON, Image, CSV.
- Each user has options to allow specifying how they interact with the application.
- User Language is optional.
- Preferred Visualization Units is optional.
- The Data Lake provides ExoSense administrators with a secure, redundant and economical
  historical archive (cold storage) of signal values and metadata for assets and group
  hierarchies.
- Users may request their personal identifiable data using this page and the Request
  Your Data button.
- 'ExoSense user passwords have the following requirements: Minimum of 8 Characters.'
- Asset Maintenance Work Order Management functionality is currently in an Early Access
  BETA state. Please contact Exosite's support for more information about getting
  early access to this new feature set.
- Each Work Order can be filtered by priority.
- Device Software Packages functionality is available at certain ExoSense tiers.
- The feature must be enabled in the feature configuration area.
- When archiving is enabled, all signal values for all assets in a solution are archived
  in files on generally an hourly basis.
- These files contain the raw signal data and timestamp, including rule state changes.
- Files contain all the signal and pipeline information identifiers, properties, metadata,
  subsystems, and dashboard information for the asset at that point in time.
- ExoSense GraphQL API requires authentication
- GraphQL queries are like a GET request in a RESTful API.
- GraphQL mutations operate like POST, PATCH, and DELETE.
- Device Software Package Management is made available via User Role Permissions.
- The API is not recommended for nor does it fully support building custom user applications.
- All requests take the form of an HTTP POST request with a JSON encoded body.
- GraphQL queries operate like a GET request in RESTful APIs.
- The API has a single endpoint specific to your ExoSense instance.
- GraphQL queries are like a GET request in a RESTful API. GraphQL mutations operate
  like POST, PATCH, and DELETE.
- The API is provided for software integrations such as retrieving and displaying
  Asset status and/or signal values.
- Currently the API is not recommended for nor does it fully support building custom
  user applications.
- This API has a single endpoint specific to your ExoSense instance.
- The API has a single endpoint specific to your ExoSense instance and does not change
  no matter what query is being made.
- Uses OAuth2 with refresh token — requires setup of connected app in ExoSense
- Authentication is required to access the API
- Some API endpoints may have rate limits.
- Device diagnostic
- Generic types without accepted unit types will not be able to take advantage of
  unit conversion and other unit specific functionality in ExoSense.
- Requires OAuth2 authentication for accessing devices.
- Default activation period is 48 hours.
- Devices using TLS Client Certificate authentication do not need to explicitly call
  the activate endpoint to get provisioned.
- The Control functionality in ExoSense must be enabled by an administrator before
  it can be used.
- Devices may subscribe to MQTT or use long-poll (HTTP) for the data_out resource.
- The device must have a public internet connection for use with Exosite's standard
  Murano platform.
- When using MQTT, HTTP is required to download actual content files.
- The TLS encryption requirement can be turned off for development, but not for production
  use cases.
- Unsecured HTTP communications can be read by third parties who are able to intercept
  the communications.
- Devices that attempt to connect that do not match the identity format will be ignored
  for security reasons.
- Supports Token Authentication for device provisioning.
- Added TEMPERATURE_DELTA type with same units as TEMPERATURE to support temperature
  delta unit conversions in the application.
- Added MILLITORR and MICRONS_HG units for type PRESSURE
- Updated the abbreviation in ExoSense for MICRONS to use µm instead of µ
- Added ELEC_CHARGE type with units COULOMB, AMPERE_HOUR, MILLIAMPERE_HOUR
- Added IRRADIANCE type with unit WATT_PER_METER2
- Added HECTOPASCAL unit for type PRESSURE
- Added ARRAY_POINTS and ARRAY_NUMBERS data types
- Added MEGAPASCAL unit for type PRESSURE
- Added ENERGY_REACTIVE type with units VOLTAMPS_REACTIVE_HOUR, KILOVOLTAMPS_REACTIVE_HOUR,
  MEGAVOLTAMPS_REACTIVE_HOUR
- Added FEET_PER_MIN unit for type SPEED and VELOCITY
- Added FEET_PER_MIN2 unit for type ACCELERATION
- Removing reference of primitive_type in config_io as it is assumed by data_type
  and not needed. If provided, must match the primitive format for each data type.
- Updated format of Accepted Units into tables and added channel property examples.
- 'Added Mass units: MICROGRAM'
- 'Added Concentration Mass units: MILLIGRAM_PER_METER3, MICROGRAM_PER_METER3, MICROGRAM_PER_LITER'
- Moved Particles up and changed heading to Concentration Ratio (Particles)
- Add POUND_FORCE unit to Force type.
- Split Power to Power, Power (Apparent), and Power (Reactive). Add additional units
  to Power types.
- Add CONCENTRATION_MASS, TURBIDITY, and ELEC_CONDUCTIVITY types.
- Change VELOCITY unit INCH_PER_SEC abbreviation to in/s (was ips).
- 'Add ACCELERATION unit MILLMETERS_PER_SEC2 (abbreviation: mm/s²).'
- Added a note about Numeric primitive type value size and format.
- Fixed Luminous Flux data type 'data_type' value to LUMINOUS_FLUX, was LUMINANCE_FLUX.
- Requires OAuth2 authentication setup
- Devices must be whitelisted before provisioning
- The default activation window time is 48 Hours.
- If you see a response like `HTTP/1.1 415 Unsupported Media Type`, this likely means
  you have forgotten to enable Token or Password Authentication.
- Exosite provides a Cloud Federation API to support integrations.
- Cloud integrated IoT Connectors can be managed and connected to applications the
  same ways as standard IoT Connectors.
- Device control from a remote server application requires common sense and risk analysis.
- CIK authentication using the X-Exosite-CIK header is deprecated and not recommended
  for new use.
- The ExoSense UI will allow any value that matches the primitive type for the specified
  channel data_type if control_properties is not provided.
- Devices may subscribe to MQTT or use long-poll (HTTP) or a read (HTTP) for the data_out
  resource.
- Requires setup of connected app in api
- Device must have a public internet connection for use with Exosite's standard Murano
  platform.
- TLS encryption requirement can be turned off for development, but not to be used
  for production use cases.
- All writes occur before all reads.
- Exosite supports various API types for device connectivity.
- Ensure to follow the guidelines for authentication setup.
- Unsecured HTTP communications can be read by third parties.
- Tags are static device identity metadata enabling fast and flexible devices search
  and filtering.
- Tags cannot be set through the Device API.
- Exosite IoT Connector Device APIs only supports secure communication with TLS encryption.
- Encrypted TCP connections and IoT Device Security
- Uses TLS v1.2 Default policy for secure connections.
- Authentication is required to access the events endpoint.
- If auto-provisioning is enabled, an identity is created in the IoT Connector and
  placed in provisioned status.
- API response may vary based on the user permissions.
- 'Device I/O resource use is as follows: data_in, config_io, data_out are supported.'
- Requires an Exosite account to access the API.
- Response may also be `HTTP/1.1 204 No Content` if either none of the aliases are
  found or the device state for the given aliases are empty
- Exosite's Device API requires encrypted TCP connections.
- TLS v1.2 Default policy is selected by default for secure connections.
- SNI is required for secure TLS connection attempts.
- Currently only Bearer token is supported
- If auto-provisioning is enabled, an identity is created in the IoT Connector on
  the first ever connection.
- ExoSense uses the Murano IoT Platform device interface for its device connectivity.
- Some data may require specific permissions to access
- Device I/O resource use is supported for data_in, config_io, and data_out.
- Some libraries and references may become outdated in terms of terminology or hardware/software
  versions.
- Channels can be used to control devices.
- Device control requires common sense and safety measures.
- ExoEdge is a python client developed and maintained to be used with ExoSense, Exosite's
  Industrial IoT Solution.
- ExoEdge is a python client developed to run on an industrial computer.
- By default ExoEdge will use HTTP device API protocol.
- The murano_token option is not present in the .ini file prior to activation. If
  murano_token is present, the client will attempt to use that token, even if it's
  blank, to communicate with Murano.
- The murano_token option is not present in the .ini file prior to activation.
- export EDGED_LOG_DEBUG=CRITICAL
- export EDGED_LOG_FILENAME=/var/log/edged.log
- export EDGED_LOG_MAX_BYTES=1024000
- export EDGED_LOG_MAX_BACKUPS=3
- export MURANO_CLIENT_DEBUG=warning
- export MURANO_CLIENT_LOGFILE=/var/log/murano_client.log
- export MURANO_CLIENT_LOG_MAX_BYTES=$((1024*100))
- export MURANO_CLIENT_MAX_BACKUPS=2
- Contact Support
- Devices that will use control channels must begin subscribing ('mqtt') or polling
  ('http') the data_out resource.
- The primary purpose of ExoEdge is to provide the 'plumbing' for getting channel
  data into ExoSense.
- The module needs to be installed like any other Python module or package
- Schema provides guidelines for OTA updates.
- Includes processes for uploading and managing OTA packages.
- 'ExoSense expects that Murano products are configured with two specific resources:
  config_otau and otau_in.'
- Some libraries and references may become outdated in terms of terminology or hardware
  / software versions.
- Each Insight module is defined by a swagger file and published as a ExoSense Insight
  service.
- ExoEdge will continuously monitor configuration resources for updates.
- Businesses with higher tier accounts can publish new elements to the Exchange marketplace
  privately and publicly.
- Exosite platform business account has a minimum password requirement of 8 characters
- Advanced Tier business accounts only
- Custom applications hosted on Murano have access to the core services
- Ensure you configure the connected app for OAuth2.
- The module that is imported is specified on app_specific_config as is the function
  and any positional or parametric arguments the function.
- OAuth2 requires setup in the Exosite developer console
- Rate limits apply to API requests
- The only limit to the number of threads you can use when designing an ExoEdgeSource
  is made by the host system (hardware).
- Only one Things Stack application/webhook source is supported by each IoT Connector
- Ensure to handle token expiration appropriately.
- Most accounts start as 'Standard' and offer the ability to deploy multiple solutions,
  use services from Exchange, and customize deployed solutions.
- Advanced Accounts allow access to the Murano Platform for deploying custom services
  that are hosted on the platform.
- New functionality includes timeout rules and multi-group users.
- API supports OAuth2 authentication.
- Minor update that contains bug fixes and improvements.
- New Create Asset Workflow
- Device control functionality is disabled by default and can be enabled by Admins
  in the Setup -> Features tab.
- Asset Content Files feature is disabled by default and can be enabled by Admins
  on the Setup -> Features tab.
- Asset Timeout Status via Channel Timeout feature is disabled by default and can
  be enabled by Admins on the Setup -> Features tab.
- Platform Updates, Improvements, Fixes
- Each dashboard supports up to 15 panels.
- Exosite API uses OAuth2 with refresh tokens for authentication.
- Rate limits may apply based on the endpoint accessed.
- Some responses may include pagination information
- New functionality includes Action Function Support.
- Feature controls are available to enable new functionalities.
- Requires proper OAuth2 token management for API access.
- Data may be rate-limited based on the number of requests.
- Shared dashboards require a password to help protect from being viewed by anyone
  on the public internet.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- Export method not available on all solutions.
- 'ExceededMaximumTime: Not a reachable error'
- 'ExceededRateLimitTime: Try again after the rate period and reduce the frequency
  of requests'
- 'ExceededRateLimitRequests: Reduce the request frequency and try again when the
  window rolls over from the first request'
- 'ExceededMaximumTime: This error is available, but will not be encountered on a
  per request basis, only on rate limiting. A timeout will occur before it is reached'
- 'ExceededRateLimitTime: The sum of time taken for requests in the window has exceeded
  the per request time * rate scale'
- 'ExceededRateLimitRequests: The number of requests has exceeded the requests rate
  limit for the given window_size for the token'
- 'ExceededMaximumTime: A timeout will occur before it is reached'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '404 Not Found: Ensure the device ID is correct.'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Ensure valid authentication token.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Missing or invalid credentials'
- '204 No Content: Successful request, nothing will be returned'
- '401 Unauthorized: Check credentials'
- '403 Forbidden: Permission denied'
- '404 Not Found: Check endpoint path'
- HTTP/1.1 204 No Content
- HTTP/1.1 415 Unsupported Media Type
- '304: Long Polling Time Out'
- '400: Bad Request'
- '400 not_authenticated: If an already provisioned device attempts to re-provision
  without authenticating with old credentials.'
- 'body_size_too_large: the part was greater than 100MB in size'
- 'content_notfound: the content identified by content-id in a part upload or finalization
  attempt was not found'
- 'incomplete_part: an attempt was made to finalize an upload with not enough bytes
  uploaded or gap in the uploaded ranges'
- 'incomplete_range: the Content-Range header specified a range longer than bytes
  provided in the body'
- 'invalid_content_id: the content id is somehow invalid'
- 'invalid_range: the Content-Range header was invalid'
- 'invalid_tags: the tags included with the initiation request was not proper JSON
  or not key/value pairs'
- 'invalid_md5: the provided MD5 header contained a value that did not successfully
  validate for the body payload'
- 'overlapping_range: a part was attempted to be uploaded with Content-Range overlapping
  a previously uploaded part'
- 'upload_part_too_small: the part being uploaded was less than 5MB in size'
- 'internal: an error internal to Murano occurred'
- '404 Not Found: Whitelisting is required and the identity is not whitelisted'
- '409 Conflict: The identity has already been provisioned'
- '415 Unsupported Media Type: The provided password is less than 20 characters'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Endpoint does not exist.'
- '404 Not Found: Whitelisting is required and the <identity> is not whitelisted'
- '409 Conflict: The <identity> has already been provisioned'
- 'HTTP/1.1 409 Conflict: If timestamps have less than one-second difference'
- 'HTTP/1.1 304 Not Modified: If no datapoint is written before timeout'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint path'
- 'INVALID_PACKAGE: Ensure the package is correctly formatted.'
- 'NOT_AUTHORIZED: Check user permissions for OTA actions.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests'
- 'INVALID_TOKEN: Re-authenticate with valid credentials'
- '401 Unauthorized: Invalid client credentials.'
- '401 Unauthorized: Check the provided credentials or token.'
- '429 Too Many Requests: Rate limit exceeded, please retry later.'
- '429 Too Many Requests: You are sending too many requests in a given amount of time.'
- '401 Unauthorized: Invalid token or expired token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Ensure the endpoint exists'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- Fixed issue preventing notifications and log entries when any non-default (English)
  language was in use.
- '401 Unauthorized: Check client credentials and token validity.'
- '429 Too Many Requests: Reduce frequency of requests to avoid rate limiting.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - ClientCredentials
  - OAuthClient
  - Token
client:
  base_url: https://api.exosite.io
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.exosite.io/oauth/token
    client_id: '{{ dlt.secrets[''exosite_client_id''] }}'
    client_secret: '{{ dlt.secrets[''exosite_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''exosite_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
