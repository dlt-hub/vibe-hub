resources:
- name: subscriptions
  endpoint:
    path: /subscriptions/
    method: GET
- name: orders
  endpoint:
    path: /orders/
    method: GET
- name: items
  endpoint:
    path: /items/
    method: GET
- name: customers
  endpoint:
    path: /customers/
    method: GET
- name: payments
  endpoint:
    path: /payments/
    method: GET
- name: products
  endpoint:
    path: /products/
    method: GET
- name: addresses
  endpoint:
    path: /addresses/
    method: GET
- name: product_groups
  endpoint:
    path: /product-groups/
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements/
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: resources
  endpoint:
    path: /reference/resource-list
    method: GET
- name: offer_profile
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: one_time_incentives
  endpoint:
    path: /reference/otd-list
    method: GET
- name: cart
  endpoint:
    path: /reference/cart-retrieve
    method: GET
- name: entitlements
  endpoint:
    path: /reference/entitlements-list
    method: GET
- name: product_feed
  endpoint:
    path: /api/product_feed
    method: POST
- name: subscription_manager
  endpoint:
    path: /api/subscription_manager
    method: GET
- name: purchase_post
  endpoint:
    path: /api/purchase_post
    method: POST
- name: set_contact_details
  endpoint:
    path: /api/set_contact_details
    method: PUT
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: item
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: subscription_creation
  endpoint:
    path: /subscription/create
    method: POST
    data_selector: result
- name: recurring_order
  endpoint:
    path: /path/to/recurring_order
    method: POST
    data_selector: order
- name: customer_contact_details_update
  endpoint:
    path: /customers/{merchant_user_id}/set_contact_details
    method: PATCH
    data_selector: phone_number, email
- name: customer_payment_update
  endpoint:
    path: /customer/update_payment_default
    method: POST
    data_selector: SUCCESS
- name: subscription_origin_component
  endpoint:
    path: /subscription/origin
    method: GET
    data_selector: records
    params: {}
- name: payment_method
  endpoint:
    path: /payment/method
    method: GET
    data_selector: records
    params: {}
- name: shipping_billing_addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params: {}
- name: migration
  endpoint:
    path: /migrations
    method: POST
    data_selector: status
    params: {}
- name: customers
  endpoint:
    path: /customers/
    method: GET
    data_selector: records
    params:
      incremental: updated_start
- name: subscriptions
  endpoint:
    path: /subscriptions/
    method: GET
    data_selector: records
    params:
      incremental: updated_start
- name: orders
  endpoint:
    path: /orders/
    method: GET
    data_selector: records
    params:
      incremental: updated_start
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params:
      incremental: order_updated_start
- name: addresses
  endpoint:
    path: /addresses/
    method: GET
    data_selector: records
    params:
      incremental: updated_start
- name: payments
  endpoint:
    path: /payments/
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products/
    method: GET
    data_selector: records
- name: offer_profiles
  endpoint:
    path: /offer_profiles/
    method: GET
    data_selector: records
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/
    method: GET
    data_selector: records
- name: delta_file
  endpoint:
    path: /outgoing/merchant_orders_<date>_delta.csv
    method: GET
    data_selector: records
- name: full_export_file
  endpoint:
    path: /outgoing/merchant_orders_<date>_full.csv
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: products
    params: {}
- name: first_order_place_date
  endpoint:
    path: /first_order_place_date
    method: POST
    data_selector: line_items
    params: {}
- name: Campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: real_time_stock_update
  endpoint:
    path: /products-batch/update/
    method: PATCH
    data_selector: results
    params: {}
- name: subscription_offer
  endpoint:
    path: /quickview-offers
    method: POST
    data_selector: offers
    params: {}
- name: subscriptions-retrieve
  endpoint:
    path: /subscriptions-retrieve
    method: GET
- name: delay_shipment
  endpoint:
    path: /one_click/delay/
    method: GET
    data_selector: ''
    params:
      days: '{{days}}'
      token: '{{event.action_token}}'
- name: reactivate_subscription
  endpoint:
    path: /one_click/reactivate/
    method: GET
    data_selector: ''
    params:
      token: '{{event.action_token}}'
- name: order-item
  endpoint:
    path: /order-item
    method: GET
    data_selector: records
- name: order-level-actions
  endpoint:
    path: /order-level-actions
    method: GET
    data_selector: records
- name: order-summary
  endpoint:
    path: /order-summary
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /order
    method: GET
    data_selector: records
- name: iu-elements
  endpoint:
    path: /iu-elements
    method: GET
    data_selector: records
- name: dialog-header
  endpoint:
    path: /dialog-header
    method: GET
    data_selector: records
- name: main
  endpoint:
    path: /main
    method: GET
    data_selector: records
- name: maintenance-mode
  endpoint:
    path: /maintenance-mode
    method: GET
    data_selector: records
- name: order-processing
  endpoint:
    path: /order-processing
    method: GET
    data_selector: records
- name: upcoming-order
  endpoint:
    path: /upcoming-order
    method: GET
    data_selector: records
- name: orders_unsent
  endpoint:
    path: /orders/unsent
    method: GET
    data_selector: records
- name: change_date
  endpoint:
    path: /change_shipment_date
    method: POST
    data_selector: shipment_date
    params: {}
- name: orders_processing
  endpoint:
    path: /orders-processing
    method: GET
    data_selector: orders
    params: {}
- name: order_total
  endpoint:
    path: /order-total.liquid
    method: GET
    data_selector: order
    params: {}
- name: inactive_subscriptions
  endpoint:
    path: /inactive-subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Subscription Manager
  endpoint:
    path: /subscription-manager
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: localized_product_by_id
  endpoint:
    path: /localized_product_by_id
    method: GET
    data_selector: localized_product_by_id
- name: address_by_id
  endpoint:
    path: /address_by_id
    method: GET
    data_selector: address_by_id
- name: payment_by_id
  endpoint:
    path: /payment_by_id
    method: GET
    data_selector: payment_by_id
- name: change-date
  endpoint:
    path: /path/to/change-date
    method: POST
    data_selector: modal
    params: {}
- name: change-shipment-address
  endpoint:
    path: /path/to/change-shipment-address
    method: POST
    data_selector: modal
    params: {}
- name: delete-item
  endpoint:
    path: /path/to/delete-item
    method: POST
    data_selector: modal
    params: {}
- name: pause-subscription
  endpoint:
    path: /path/to/pause-subscription
    method: POST
    data_selector: modal
    params: {}
- name: reactivate-subscription
  endpoint:
    path: /path/to/reactivate-subscription
    method: POST
    data_selector: modal
    params: {}
- name: send-now
  endpoint:
    path: /path/to/send-now
    method: POST
    data_selector: modal
    params: {}
- name: skip
  endpoint:
    path: /path/to/skip
    method: POST
    data_selector: modal
    params: {}
- name: dynamic_shipping_restrictions
  endpoint:
    path: /dynamic_shipping_restrictions
    method: GET
    data_selector: data
- name: inactive_subscriptions
  endpoint:
    path: /views/inactive-subscriptions.liquid
    method: GET
    data_selector: subscriptions
    params: {}
- name: payment_updates
  endpoint:
    path: /subscriptions/manager/
    method: GET
    data_selector: theme
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: cat_image
  endpoint:
    path: /images/search
    method: GET
    data_selector: '[0].url'
- name: subscription_manager
  endpoint:
    path: /apps/subscriptions/manage/
    method: GET
    data_selector: subscriptions
    params: {}
- name: upcoming_orders
  endpoint:
    path: /orders
    method: GET
    data_selector: results
    params:
      status: '1'
- name: create_item
  endpoint:
    path: /items/iu/
    method: POST
    data_selector: null
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions/iu/
    method: POST
    data_selector: null
    params: {}
- name: bundle_subscriptions
  endpoint:
    path: /bundle/subscriptions
    method: GET
    data_selector: records
- name: product_bulk_create
  endpoint:
    path: /reference/bulk-create
    method: POST
- name: product_bulk_update
  endpoint:
    path: /reference/bulk-update
    method: POST
- name: purchase_post_api
  endpoint:
    path: /reference/purchase-post-api
    method: POST
- name: bundle_components
  endpoint:
    path: /reference/bundle-components
    method: GET
- name: subscription
  endpoint:
    path: /box-subscription
    method: POST
    data_selector: subscription
- name: subscription_components
  endpoint:
    path: /reference/update-components
    method: POST
    data_selector: components
    params: {}
- name: component
  endpoint:
    path: /reference/retrieve-component
    method: GET
    data_selector: component
    params: {}
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
    data_selector: subscriptions
    params: {}
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
    data_selector: items
    params: {}
- name: order_item_update
  endpoint:
    path: /update-2
    method: PATCH
- name: subscription
  endpoint:
    path: /update
    method: PATCH
- name: prepaid_subscription
  endpoint:
    path: /reference/prepaid-subscriptions
    method: GET
    data_selector: renewal_behaviors
    params: {}
- name: purchase_post
  endpoint:
    path: /reference/purchase-post-api
    method: POST
    data_selector: subscription_info
    params: {}
- name: purchase_create
  endpoint:
    path: /subscription/create
    method: POST
    data_selector: payment
    params: {}
- name: payment_update
  endpoint:
    path: /customer/update_payment_default
    method: POST
    data_selector: payment
    params: {}
- name: webhook_targets
  endpoint:
    path: /webhook_targets/
    method: POST
    data_selector: id
- name: event_filters
  endpoint:
    path: /webhook_targets/{target_id}/filters
    method: POST
    data_selector: pattern
- name: signing_key
  endpoint:
    path: /webhook_targets/{target_id}/signing_key
    method: GET
    data_selector: signing_key
- name: rotate_signing_key
  endpoint:
    path: /webhook_targets/{target_id}/signing_key/rotate
    method: PATCH
    data_selector: signing_key
- name: subscriber_event
  endpoint:
    path: /subscriber/events
    method: POST
    data_selector: data
    params: {}
- name: subscription_event
  endpoint:
    path: /subscription/events
    method: POST
    data_selector: data
    params: {}
- name: order_event
  endpoint:
    path: /order/events
    method: POST
    data_selector: data
    params: {}
- name: item_event
  endpoint:
    path: /item/events
    method: POST
    data_selector: data
    params: {}
- name: subscription_creation_webhook
  endpoint:
    path: /webhooks/subscription_creation
    method: POST
    data_selector: extra_data
    params: {}
- name: subscription_update
  endpoint:
    path: /subscriptions/update
    method: PATCH
    data_selector: extra_data
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/cancel
    method: POST
    data_selector: confirmation
    params: {}
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: entitlements
  endpoint:
    path: /reference/entitlements-list
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: results
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: results
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: results
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: results
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: results
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: results
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: results
- name: product_groups
  endpoint:
    path: /product-groups
    method: GET
    data_selector: results
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: resources
  endpoint:
    path: /reference/resource-list
    method: GET
- name: offer_profiles
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: one_time_incentives
  endpoint:
    path: /reference/otd-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-retrieve
    method: GET
- name: items
  endpoint:
    path: /reference/items-retrieve
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-retrieve
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-retrieve
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-retrieve
    method: GET
- name: products
  endpoint:
    path: /reference/products-retrieve
    method: GET
- name: item_events
  endpoint:
    path: /reference/item-events
    method: GET
    data_selector: data
- name: order_events
  endpoint:
    path: /reference/order-events
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: subscription.create
- name: subscription.cancel
- name: subscription.sku_swap
- name: subscription.change_live
- name: subscription.change_frequency
- name: subscription.change_components
- name: subscription.change_quantity
- name: subscription.change_shipping_address
- name: subscription.change_payment
- name: subscription.refresh_one_click_token
- name: subscriber_events
  endpoint:
    path: /reference/webhooks-subscriber-events
    method: GET
    data_selector: records
- name: entitlements
  endpoint:
    path: /reference/entitlements-list
    method: GET
    data_selector: records
    params: {}
- name: entitlements_expiring
  endpoint:
    path: /entitlements/expiring
    method: GET
- name: entitlements_expired
  endpoint:
    path: /entitlements/expired
    method: GET
- name: entitlements_granted
  endpoint:
    path: /entitlements/granted
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: entitlements
  endpoint:
    path: /reference/entitlements-list
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/
    method: GET
    data_selector: results
- name: customers
  endpoint:
    path: /customers/
    method: GET
    data_selector: results
- name: orders
  endpoint:
    path: /orders/
    method: GET
    data_selector: results
- name: products
  endpoint:
    path: /products/
    method: GET
    data_selector: results
- name: subscriptions
  endpoint:
    path: /subscriptions/
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscription_id}/
    method: GET
    data_selector: object
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscription_id}/cancel/
    method: PATCH
- name: change_quantity
  endpoint:
    path: /subscriptions/{subscription_id}/change_quantity/
    method: PATCH
- name: change_shipping_address
  endpoint:
    path: /subscriptions/{subscription_id}/change_shipping/
    method: PATCH
- name: change_payment
  endpoint:
    path: /subscriptions/{subscription_id}/change_payment/
    method: PATCH
- name: change_email_reminder
  endpoint:
    path: /subscriptions/{subscription_id}/change_email_reminder/
    method: PATCH
- name: change_frequency
  endpoint:
    path: /subscriptions/{subscription_id}/change_frequency/
    method: PATCH
- name: reactivate_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/reactivate/
    method: PATCH
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscription_id}/update/
    method: PATCH
- name: subscriptions
  endpoint:
    path: /subscriptions/subscription_id/update/
    method: PATCH
- name: create_in_order
  endpoint:
    path: /subscriptions/iu/
    method: POST
- name: create_from_item
  endpoint:
    path: /subscriptions/create_from_item/
    method: POST
- name: change_product
  endpoint:
    path: /subscriptions/{subscription_public_id}/change_product/
    method: PATCH
- name: subscriptions
  endpoint:
    path: /subscriptions/subscription_public_id/change_product/
    method: PATCH
- name: change_next_order_date
  endpoint:
    path: /subscriptions/{subscription_id}/change_next_order_date/
    method: PATCH
- name: Retrieve Rotating Ordinal Subscription Context
  endpoint:
    path: /subscriptions/{subscription_id}/rotation_ordinal/{product_id}
    method: GET
- name: set_subscription_ordinal
  endpoint:
    path: /subscriptions/{subscription_id}/rotation_ordinal/update/
    method: PATCH
- name: prepaid_subscriptions
  endpoint:
    path: /reference/prepaid-subscriptions
    method: PATCH
    data_selector: prepaid_subscription_context
    params: {}
- name: update_prepaid_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/update_prepaid_context/
    method: PATCH
- name: Change Prepaid Renewal Behavior
  endpoint:
    path: /subscriptions/{subscription_id}/change_renewal_behavior/
    method: PATCH
- name: upgrade_subscription_to_prepaid
  endpoint:
    path: /subscriptions/{subscription_id}/upgrade_to_prepaid/
    method: PATCH
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: resources
  endpoint:
    path: /reference/resource-list
    method: GET
- name: offer_profile
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: one_time_incentives
  endpoint:
    path: /reference/otd-list
    method: GET
- name: Retrieve Component
  endpoint:
    path: /subscriptions/components/{component_public_id}/
    method: GET
- name: Update Components
  endpoint:
    path: /subscriptions/{subscription_public_Id}/components/bulk_operation/
    method: POST
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: resources
  endpoint:
    path: /reference/resource-list
    method: GET
- name: offer_profile
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: otd
  endpoint:
    path: /reference/otd-list
    method: GET
- name: orders
  endpoint:
    path: /orders/
    method: GET
- name: orders
  endpoint:
    path: /orders/{order_id}/
    method: GET
    data_selector: object
    params:
      include_has_plan: 'false'
- name: cancel_order
  endpoint:
    path: /orders/{order_id}/cancel/
    method: PATCH
- name: send_now
  endpoint:
    path: /orders/{order_id}/send_now/
    method: PATCH
- name: Change Shipping Address
  endpoint:
    path: /orders/{order_id}/change_shipping/
    method: PATCH
- name: change_payment
  endpoint:
    path: /orders/{order_id}/change_payment/
    method: PATCH
- name: Change Place Date
  endpoint:
    path: /orders/{order_id}/change_place_date/
    method: PATCH
- name: orders
  endpoint:
    path: /orders/{order_id}/update/
    method: PATCH
- name: skip_subscription
  endpoint:
    path: /orders/{order_id}/skip_subscription/
    method: PATCH
- name: finalize_processing_order
  endpoint:
    path: /orders/{order_id}/finalize_placement/
    method: PATCH
- name: items
  endpoint:
    path: /items/
    method: GET
- name: customers
  endpoint:
    path: /customers/
    method: GET
- name: orders
  endpoint:
    path: /orders/
    method: GET
- name: products
  endpoint:
    path: /products/
    method: GET
- name: items
  endpoint:
    path: /items/{item_id}/
    method: GET
- name: change_quantity
  endpoint:
    path: /items/{item_id}/change_quantity/
    method: PATCH
- name: change_price
  endpoint:
    path: /items/{item_id}/change_price/
    method: PATCH
- name: items_create
  endpoint:
    path: /items/create/
    method: POST
- name: create_in_order
  endpoint:
    path: /items/iu/
    method: POST
- name: items
  endpoint:
    path: /items/{item_id}/delete/
    method: DELETE
- name: items
  endpoint:
    path: /items/{item_id}/update/
    method: PATCH
- name: product_change
  endpoint:
    path: /items/{item_id}/change_product/
    method: PATCH
- name: customers
  endpoint:
    path: /customers/
    method: GET
    data_selector: object
    params: {}
- name: customers
  endpoint:
    path: /customers/{merchant_user_id}/
    method: GET
- name: create_customer
  endpoint:
    path: /customers/create/
    method: POST
    data_selector: null
    params: {}
- name: customers
  endpoint:
    path: /customers/{merchant_user_id}/update
    method: PATCH
- name: set_contact_details
  endpoint:
    path: /customers/{merchant_user_id}/set_contact_details
    method: PATCH
- name: list_cancellation_reasons
  endpoint:
    path: /merchant/cancel_reason/
    method: GET
- name: addresses
  endpoint:
    path: /addresses/
    method: GET
    data_selector: addresses
- name: addresses
  endpoint:
    path: /addresses/{address_id}/
    method: GET
- name: addresses
  endpoint:
    path: /addresses/create/
    method: POST
- name: addresses
  endpoint:
    path: /addresses/{address_id}/update/
    method: PATCH
- name: use_address_for_all
  endpoint:
    path: /addresses/{address_public_id}/use_for_all/
    method: POST
- name: credit_card_types
  endpoint:
    path: /reference/credit-card-types
    method: GET
- name: payments
  endpoint:
    path: /payments/
    method: GET
- name: payments
  endpoint:
    path: /payments/{payment_id}/
    method: GET
    data_selector: object
- name: payments
  endpoint:
    path: /payments/create/
    method: POST
- name: payments
  endpoint:
    path: /payments/{payment_id}/update/
    method: PATCH
- name: payments
  endpoint:
    path: /payments/{payment_id}/use_for_all
    method: POST
- name: products
  endpoint:
    path: /products/
    method: GET
    data_selector: results
- name: products
  endpoint:
    path: /products/
    method: GET
    params:
      include_product_selection_rules: 'false'
- name: products
  endpoint:
    path: /products/{product_id}/
    method: GET
    data_selector: merchant
- name: products
  endpoint:
    path: /products/product_id/
    method: GET
    params:
      include_product_selection_rules: 'false'
- name: group_check
  endpoint:
    path: /products/{product_id}/{group_type}/{group_name}
    method: GET
    data_selector: product_has_group
- name: relationships
  endpoint:
    path: /products/{product_id}/relationships/
    method: GET
- name: products
  endpoint:
    path: /products/<external_product_id>/
    method: PATCH
- name: bulk_create
  endpoint:
    path: /products-batch/create/
    method: POST
- name: bulk_update
  endpoint:
    path: /products-batch/update/
    method: PATCH
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: offer_profile
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: one_time_incentives
  endpoint:
    path: /reference/otd-list
    method: GET
- name: time_window_rotating_product
  endpoint:
    path: /products/{product_id}/selection_rules/time_window/manage/
    method: POST
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: product_groups
  endpoint:
    path: /product-groups
    method: GET
- name: offer_profile
  endpoint:
    path: /offer-profile
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
- name: ordinal_rotating_product
  endpoint:
    path: /products/{product_id}/selection_rules/ordinal/manage/
    method: POST
- name: Retrieve Rotating Delivery Product
  endpoint:
    path: /products/{product_id}/rotating_delivery_product/
    method: GET
- name: manage_digital_plan_product
  endpoint:
    path: /products/{product_id}/resource_grants/manage/
    method: POST
- name: free_trials
  endpoint:
    path: /reference/free-trials-configuration
    method: GET
- name: free_trials_list
  endpoint:
    path: /reference/free-trials-list
    method: GET
- name: free_trials_create
  endpoint:
    path: /reference/free-trials-create
    method: POST
- name: free_trials_update
  endpoint:
    path: /reference/free-trials-update
    method: PATCH
- name: free_trials_delete
  endpoint:
    path: /reference/free-trials-delete
    method: DELETE
- name: subscriptions
  endpoint:
    path: /reference/subscriptions-list
    method: GET
- name: orders
  endpoint:
    path: /reference/orders-list
    method: GET
- name: items
  endpoint:
    path: /reference/items-list
    method: GET
- name: customers
  endpoint:
    path: /reference/customers-list
    method: GET
- name: addresses
  endpoint:
    path: /reference/addresses-list
    method: GET
- name: payments
  endpoint:
    path: /reference/payments-list
    method: GET
- name: products
  endpoint:
    path: /reference/products-list
    method: GET
- name: product_groups
  endpoint:
    path: /reference/product-groups-list
    method: GET
- name: resources
  endpoint:
    path: /reference/resource-list
    method: GET
- name: offer_profile
  endpoint:
    path: /reference/offer-profile-list
    method: GET
- name: one_time_incentives
  endpoint:
    path: /reference/otd-list
    method: GET
- name: free_trials
  endpoint:
    path: /products/{product_id}/free_trials/create/
    method: POST
- name: free_trial
  endpoint:
    path: /products/{product_id}/free_trials/{free_trial_id}/update/
    method: PATCH
- name: free_trials
  endpoint:
    path: /products/{product_id}/free_trials/{free_trial_id}/delete
    method: DELETE
- name: product_groups
  endpoint:
    path: /product_groups/
    method: GET
- name: product_group
  endpoint:
    path: /product_groups/create/
    method: POST
- name: product_group
  endpoint:
    path: /product_groups/{group_type}/{name}/
    method: PATCH
- name: resources
  endpoint:
    path: /resources/
    method: GET
- name: resource
  endpoint:
    path: /resources/{resource_public_id}/
    method: GET
    data_selector: object
- name: resource
  endpoint:
    path: /resources/create/
    method: POST
- name: resource
  endpoint:
    path: /resources/{resource_public_id}/update/
    method: PATCH
- name: offer_profiles
  endpoint:
    path: /offer_profiles/
    method: GET
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/
    method: GET
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/{one_time_incentive_id}/
    method: GET
    data_selector: object
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/create/
    method: POST
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/{one_time_incentive_id}/update/
    method: PATCH
- name: one_time_incentives
  endpoint:
    path: /one_time_incentives/{one_time_incentive_id}/delete/
    method: DELETE
- name: 1-Click Delay
  endpoint:
    path: /one_click/delay
    method: GET
    data_selector: object
    params:
      days: '14'
      token: required
- name: 1-Click Reactivate
  endpoint:
    path: /one_click/reactivate
    method: GET
    data_selector: object
    params:
      token: required
- name: Purchase
  endpoint:
    path: /subscription/create/
    method: POST
- name: purchase_post
  endpoint:
    path: /reference/purchase-post-api
    method: POST
- name: purchase
  endpoint:
    path: /subscription/create
    method: POST
    data_selector: result
- name: purchase_post_status
  endpoint:
    path: /subscription/{Subscription Request ID}/response
    method: GET
- name: cart
  endpoint:
    path: /carts/{session_id}/
    method: GET
- name: entitlements
  endpoint:
    path: /entitlements/
    method: GET
    data_selector: results
notes:
- All requests must be made over HTTPS
- Never expose the Storefront API Key itself
- Ordergroove can ingest a Product Feed up to every 30 minutes, on the half-hour.
- Ordergroove requires that each checkout from your store results in a purchase post
  to Ordergroove, whether the post contains a subscription or not.
- Order placement testing initiated by Ordergroove's backend is required in order
  to complete full end-to-end testing prior to launch.
- The authentication page must be HTTPS.
- Only set the og_auth cookie if the user is logged in and set it to a 2-hour expiry.
- Ordergroove uses newline delimited JSON file where each customer's data is its own
  JSON object on its own line.
- Reach out to Ordergroove to confirm which fields are required for your subscription
  program.
- When things are configured correctly, the process can take a few hours with more
  than 70% of your data importing successfully.
- Ensure that the customer data is valid before placing an order.
- Errors must be addressed directly in the Errors file during migration.
- Do NOT uninstall Recharge from your Shopify store until the migration is successful
  and it is working as you would like.
- Be extra careful and make sure you pick the correct file.
- If you feel you accidentally uploaded the wrong file (aka - the full data set),
  please reach out to us immediately.
- Staged migration enables you to observe how smaller chunks of subscribers perform
  on Ordergroove and identify potential inconsistencies within a smaller dataset before
  ingesting larger amounts of data.
- Ordergroove's API uses cursor-based pagination, which must be consumed sequentially.
- Ordergroove uses API key authentication for its APIs.
- Use Cursor-Based Pagination
- Do Incremental Fetch with Timestamps
- Implement Upsert Logic
- Test with Smaller Time Window
- Logging and Monitoring
- No Concurrent requests for the same object
- Don’t Assume Deleted Data via API
- Rate Limit Awareness
- Delta files contain changes, and merchants should implement an upsert strategy to
  integrate them efficiently.
- Canceled subscriptions will appear in the daily subscription delta files, as a subscription
  cancellation counts as an update to the subscription.
- The main.js should only be tagged once per page.
- The product feed should contain all products, regardless of whether they are eligible
  for subscriptions or not.
- If the product feed is not sent continuously throughout the day it is highly recommended
  that the product feed run prior to order placement run-time, in order to prevent
  any orders from being rejected for out of stock issues.
- The property must be a string following the format YYYY-MM-DD that represents the
  date in the future that the first order will be placed.
- Shopify Scripts are small pieces of code that let you create unique experiences
  for your customers in their cart and at checkout.
- Free shipping set up in Ordergroove only applies to recurring subscription orders,
  and not the initial order when a customer purchases a subscription.
- If the cart contains any matching items, and we have a matching country, the entered
  rate(s) are hidden.
- Requires page tagging and nuances will occur if you're on a legacy install on the
  previous Ordergroove offers without a cart offer.
- Our app can only automatically add blocks for Online Store 2.0 themes.
- Ordergroove's offer may not appear correctly if there are code snippets from other
  subscription programs present.
- Requires user-level authentication with specific hash key and merchant level id.
- Uses HMAC authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Updated 9 months ago
- This doc only applies to Direct Offers on Shopify.
- Requires setting an additional attribute in our og-offer tag which is not present
  in our Online Store 2.0 Offer block.
- The Subscription Manager allows customers to self-manage various aspects of their
  subscriptions by logging into their account on the store website.
- If you use the Advanced Editor to customize your Subscription Manager, be careful
  not to remove or modify elements that Ordergroove's tracking library depends on.
- This article is intended for developers on v25 templates.
- This article is intended for developers on Subscription Manager 2.0; shown as v25
  templates and beyond.
- This section contains information about the Orders Unsent Section in the Subscription
  Manager.
- Skip Order allows a customer to skip their next upcoming order.
- This section controls the grouping of all items that are about to be sent to the
  customer.
- The Inactive Subscriptions Section can be found in the inactive-subscriptions.liquid
  file.
- Be careful not to remove or change elements that our library code relies on for
  front-end analytics.
- 'If you directly make fetch calls to Ordergroove APIs from your JavaScript code,
  add the tracking-source: MSI header.'
- The Subscription Manager uses a singleton data store.
- To prevent issues with stale data, call `window.og.smi.reset()` when navigating
  back to the page that loads the SM.
- Subscription Manager version is frozen when changes are made.
- All merchants have access to v25 by creating a new theme in the Subscription Manager
  Theme Designer.
- Only one theme can be live at a time.
- The base theme is mobile-compatible by default, with built-in media queries.
- Main Body section displays orders, billing, and payment information.
- Payment Update section allows customers to send an email to update their payment.
- The safest thing to do in this case is to refresh all orders and order items.
- smi-serve is in alpha — you may encounter bugs or missing features
- The Subscription Manager (SM) uses a Redux store to manage the state of the customer’s
  subscriptions and orders.
- As of June 2023, the Change Billing Process button has been moved into the Subscription
  Manager.
- If you followed the above steps and still do not see it, please submit a ticket
  to help@ordergroove.com.
- This article applies to themes using version 0.X of the Subscription Manager.
- Customers can modify upcoming subscription order dates in the Subscription Manager.
- By default, customers can push out future orders as far as they want.
- Use 'enabled_states_restricted' to specify states where shipping is not allowed.
- Make sure to adjust the shipping address form based on product restrictions.
- If a customer has products that are not shippable to certain states, you'll want
  to suppress their ability to use the update for all feature when changing their
  address.
- Some aspects of this article require technical expertise with coding languages.
  This is self-serve and outside of the normal support policy.
- This article only pertains to v0 versions of the Subscription Manager (versions
  starting with 0.x). Subscription Manager versions 25.x already have the scrollbar
  out of the box with no action needed!
- Payment updates for Shopify New Accounts are supported in the template by default.
- Requires setup of connected app in Ordergroove
- This article is only applicable for stores on Shopify.
- Reach out to Ordergroove to add a token value as a dynamic field in the email trigger
  content.
- The Action Token must be enabled for your merchant account.
- The Action Token is not enabled by default, contact Ordergroove Support or your
  Customer Success Manager.
- Dynamic bundle pricing is similar to having multiple subscriptions being shipped
  together.
- The parent product price must be set to $0 in dynamic bundles.
- The parent product price must be set to a positive value in static bundles.
- The New Bundles Suite is in Beta.
- 'Ensure you set the correct price for bundles: static must be greater than zero,
  dynamic must be exactly zero.'
- The endpoint changes refer to the new Bundles Suite.
- Ordergroove does a stock status check at the time of order placement.
- Bundle components do not have a quantity attribute.
- Default renewal behavior is autorenew. Custom renewal behavior can be specified.
- We do not currently support any special logic for determining the initial checkout
  item’s rotating product.
- Time-Window Rotation allows your customers to subscribe to a pre-determined series
  of products, based on time frames.
- Webhooks allow you to send Ordergroove to proactively contact your application(s)
  with information about the events that happen in your program.
- Webhook events should be verified using HMAC-SHA256.
- The API does not require authentication.
- Updating subscription extra_data will overwrite the existing values of everything
  in that field.
- HMAC authentication is used for authenticating API calls as well as authenticating
  logged-in users.
- AES encryption is typically used solely for encrypting the credit card expiration
  date.
- The allowed limit authorizes 6,000 requests per IP per minute.
- Requests returning 429 error codes are safe to retry at any point in time.
- Cursor-based pagination is recommended for fetching data from List endpoints.
- By default, List endpoints return 10 results per response, adjustable up to 100.
- Page-based pagination is now deprecated; cursor-based pagination is recommended
  for better performance and data consistency.
- API supports up to 5 concurrent threads for API requests when utilizing pagination.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- 1-Click Tokens need to be enabled by Ordergroove. Please reach out for more information.
- Uses OAuth2 with refresh token — requires setup of connected app in Ordergroove
- HTTPS is used for all webhook requests, ensuring secure transmission of data.
- Duplicate requests may occur due to network retries or system errors.
- Ordergroove cannot guarantee the sequential order of webhook delivery in 100% of
  the cases.
- Webhook requests have a timeout policy, timing out if no response is received within
  5 seconds.
- Clients should be prepared for possible multiple deliveries of the same event due
  to timeouts and retries.
- Application API Scope with Bulk Operations permission is required to list subscriptions
  for more than one customer.
- Application API Scope
- 'Storefront API Scope (including with trust_level: recognized)'
- Attempting to call these on a prepaid subscription will result in a 400 error.
- Application API Scope is required
- Storefront API Scope is required
- Changes a subscription from canceled/inactive to live/active.
- Application API Scope is required to update the price or components values.
- Storefront API Scope
- 'History will be preserved: it will not affect past items (shipments).'
- The product ID that you are swapping to must already exist in Ordergroove.
- The subscription must be active (live) in order to swap it to a new product.
- Application API Scope required
- Storefront API Scope required
- The Product ID provided in the parameter must be a Rotating Ordinal Product associated
  with the Subscription, either currently or in the past.
- If the Subscription is for a Bundle Product where the components are Ordinal Rotating
  Products, the context for each component must be retrieved individually.
- After the modification if the prepaid subscription is in a state where its renewal_behavior
  is “cancel” and the number of orders_remaining is 0 it will be transitioned to a
  canceled state where the subscription is not live anymore.
- This operation can only be called on subscriptions that are associated with a product
  that is prepaid eligible. Attempting to call this mutation on a subscription that
  is not associated with a prepaid-eligible product will result in a 400.
- A single subscription can not have multiple components for the same product.
- You will receive empty lists in the created, updated, or deleted response fields
  if you did not provide any values for the respective input field on the request
  payload.
- Application API Scope with Bulk Operations permission is required to list orders
  for more than one customer.
- 'This endpoint is accessible with a recognized trust group by setting it as <trust_level:
  "recognized"> in the authentication string.'
- Storefront API Scope not applicable
- Requires setup of connected app in api
- Application API Scope with Bulk Operations permission is required to list more than
  one customer.
- Authentication must be made via API User Scope.
- Application API Scope required.
- Application API Scope with Bulk Operations permission is required to list addresses
  for more than one customer.
- Application API Scope with Bulk Operations permission is required to list payments
  for more than one customer.
- By default the endpoint will only return products that are autoship enabled.
- Application API Scope is required for authentication.
- Storefront API Scope is required for authentication.
- Requests are throttled at 600req/min.
- Time-Window based Rotating Products allow customers to subscribe to a pre-determined
  series of products.
- You must define at least one selection rule.
- All starting dates must be in ISO8601 format with timezone.
- This endpoint will by default return the first product in the rotation at that time.
  This is usually the product the customer will be checking out with to generate the
  rotating subscription.
- Application API Scope required for authentication
- Authentication requires Application API Scope and Storefront API Scope.
- Delays a subscribers upcoming shipment by 14 days. The number of days to delay can
  optionally be overwritten as a URL parameter.
- The request body must always be URL encoded prior to any Purchase POST Request.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 – Invalid request. No subscriptions were created. Provides details about what
  specifically was missing or invalid in the request.
- 401/403 – Authentication failed.
- '409 – Conflict: A request with the given merchant_order_id was already received
  and processed.'
- '110: The credit card number provided is not valid.'
- 020 — technical issue when placing order
- 100 — invalid credit card type
- 110 — invalid credit card number
- 120 — invalid credit card expiration date
- 130 — invalid billing address
- 140 — payment declined
- 150 — PayPal issue
- 160 — Payment Declined - Do Not Retry
- 170 — No Default Card on File
- 180 — Strong Customer Authentication (SCA) Requested
- 999 — generic order processing issue - should be used for temporary errors (ie temporary
  stock issues)
- '400: Field name error detail'
- '403: Authentication Failed'
- '404: Unable to find requested asset.'
- 'Placement Failure: Check the order placement section for details.'
- 'Timeout: The system may retry if there''s a timeout communicating with Ecomm.'
- Shopify store is not configured with a payment gateway that allows customers to
  purchase subscriptions.
- Shopify store has not connected Stripe as a secondary payment gateway.
- Log failed records for reprocessing
- Validate data types before insertion
- Use transactions to ensure atomicity
- '404 Not Found: Product ID not found'
- '400 Bad Request: Invalid request format'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'Invalid Request: Check the request parameters and try again.'
- 'Unauthorized: Recheck OAuth credentials.'
- '400 Bad Request: Check your input parameters.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '200: Success'
- '401: Unauthorized'
- 'PATCH: Update failed'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'Invalid renewal behavior: Use ''autorenew'', ''cancel'', or ''downgrade''.'
- Delivery will be retried for no more than 3 days if a non-2xx response is received.
- '429 Too Many Requests: Some of your requests have reached the maximum threshold
  per IP per minute.'
- '401 Unauthorized: Recheck API key or permissions'
- '403: detail'
- '404: detail'
- '400: Attempting to call these on a prepaid subscription will result in a 400 error.'
- '400: Invalid request'
- '403: Forbidden'
- '404: Not Found'
- '400: Bad Request'
- '400: [field_name] string'
- '403: detail string'
- '404: detail string'
- '400: Bad Request - Non-Rotating Product'
- '400: Bad Request - Called on Bundle Product'
- '404: Not Found - Subscription + Product Pairing Invalid'
- '400: Subscription not found'
- '400: Product not found'
- 400 - Subscription not prepaid
- 400 - Invalid Renewal Behavior
- 400 - Renewal Field Not Provided
- '400: Attempting to call this mutation on a subscription that is not associated
  with a prepaid-eligible product will result in a 400.'
- '400: Attempt to create a component for a product that is already present in the
  subscription’s component list.'
- '400: Attempt to remove all components from a subscription.'
- '400: Attempt to delete and update the same component in a single request.'
- '403: Recheck API permissions'
- '400 BAD REQUEST: Invalid input data'
- '403 FORBIDDEN: Authentication failed'
- '404 NOT FOUND: Order ID does not exist'
- '400: [field_name] is required'
- '403: Attempting to call these on a prepaid subscription will result in a 400 error.'
- '400'
- '403'
- '404'
- '403: Access denied'
- '404: Not found'
- '403: Updated 8 months ago'
- '400: Invalid input'
- '403: Authentication failed'
- '403: Updated over 1 year ago'
- '403 Forbidden: Recheck permissions or API scope'
- '404 Not Found: Check the payment ID or endpoint path'
- '403 Forbidden: Check your authentication'
- '404 Not Found: Ensure the resource exists'
- '400: Invalid Request'
- '403: Result'
- '400: Rotating product'
- '400: Invalid Ordinal'
- '400: Invalid Date'
- '400: No timezone offset'
- '403: json'
- '404: json'
- '403 Forbidden: Check permissions or API key validity'
- '400: Bad Request - Invalid field name'
- 400 - no records will be created
- '{"error": "Invalid Merchant MERCHANT_PUBLIC_ID"}'
- '{"error": "Merchant ID must be a string"}'
- '{"error_message": "Merchant order id cannot be null"}'
- '{"error_message": "Session id cannot be null"}'
- '{"error_message": "Session ID must be a string"}'
- '{"error_message": "Missing payment data to create record"}'
- '{"error_message": "The credit card encryption is not valid"}'
- '{"error_message": "Expiration date is not valid, received: "}'
- '{"error_message": "Paymetric tokenization error"}'
- '403: Updated about 1 month ago'
auth_info:
  mentioned_objects: []
client:
  base_url: https://restapi.ordergroove.com
  auth:
    type: apikey
    location: header
    header_name: x-api-key
source_metadata: null
