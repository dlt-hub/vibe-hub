resources:
- name: Benutzer
  endpoint:
    path: /settings/users
    method: GET
- name: Rollen
  endpoint:
    path: /settings/user-roles
    method: GET
- name: allowed_currencies
  endpoint:
    path: /guide/tenant/currencies/allowed
    method: GET
    data_selector: currencies
- name: currency_rates
  endpoint:
    path: /api/currencies/rates
    method: GET
    data_selector: rates
- name: payment_methods
  endpoint:
    path: /guide/tenant/payment-methods
    method: GET
    data_selector: Zahlungsmethoden
- name: available_payment_methods
  endpoint:
    path: /api/payment-methods
    method: GET
    data_selector: methods
    params: {}
- name: setup_payment_providers
  endpoint:
    path: /api/payment-providers/setup
    method: POST
    data_selector: setupStatus
    params: {}
- name: activate_payment_methods
  endpoint:
    path: /api/payment-methods/activate
    method: POST
    data_selector: activationStatus
    params: {}
- name: custom_fields
  endpoint:
    path: /api/customFields
    method: GET
    data_selector: customFields
- name: custom_fields
  endpoint:
    path: /customFields
    method: POST
    data_selector: customFields
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: credits
  endpoint:
    path: /credits
    method: GET
    data_selector: records
- name: cancellations
  endpoint:
    path: /cancellations
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: invoices
  endpoint:
    path: /invoices
    method: GET
- name: credits
  endpoint:
    path: /credits
    method: GET
- name: cancellations
  endpoint:
    path: /cancellations
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: product
  endpoint:
    path: /webhooks/product
    method: POST
    data_selector: event
    params: {}
- name: coupon
  endpoint:
    path: /webhooks/coupon
    method: POST
    data_selector: event
    params: {}
- name: customer
  endpoint:
    path: /webhooks/customer
    method: POST
    data_selector: event
    params: {}
- name: invoice
  endpoint:
    path: /webhooks/invoice
    method: POST
    data_selector: event
    params: {}
- name: price_plan
  endpoint:
    path: /webhooks/price_plan
    method: POST
    data_selector: event
    params: {}
- name: subscription
  endpoint:
    path: /webhooks/subscription
    method: POST
    data_selector: event
    params: {}
- name: dunning_document
  endpoint:
    path: /webhooks/dunning_document
    method: POST
    data_selector: event
    params: {}
- name: cart
  endpoint:
    path: /webhooks/cart
    method: POST
    data_selector: event
    params: {}
- name: feature
  endpoint:
    path: /webhooks/feature
    method: POST
    data_selector: event
    params: {}
- name: customer
  endpoint:
    path: /api/customers
    method: POST
    data_selector: data
    params: {}
- name: units
  endpoint:
    path: /api/units
    method: POST
    data_selector: unit
    params: {}
- name: product_categories
  endpoint:
    path: /catalogue/product-categories
    method: GET
- name: products_in_categories
  endpoint:
    path: /catalogue/products
    method: GET
- name: units
  endpoint:
    path: /api-reference/unit
    method: POST
- name: products
  endpoint:
    path: /catalogue/products
    method: POST
- name: archive_product
  endpoint:
    path: /catalogue/products/archive
    method: POST
- name: products
  endpoint:
    path: /catalogue/products
    method: POST
- name: Rabatte
  endpoint:
    path: /api/discounts
    method: POST
    data_selector: discount
    params: {}
- name: Rabatt anpassen
  endpoint:
    path: /api/discounts/{id}
    method: PUT
    data_selector: discount
    params: {}
- name: Rabatt löschen
  endpoint:
    path: /api/discounts/{id}
    method: DELETE
    data_selector: discount
    params: {}
- name: Rabatt erstellen
  endpoint:
    path: /rabatt-erstellen
    method: POST
- name: Rabatt anpassen
  endpoint:
    path: /rabatt-anpassen
    method: PUT
- name: Rabatt löschen
  endpoint:
    path: /rabatt-löschen
    method: DELETE
- name: features
  endpoint:
    path: /api-reference/entitlement/get-available-features
    method: GET
    data_selector: entitlements
- name: features
  endpoint:
    path: /api-reference/entitlement/get-available-features
    method: GET
    data_selector: features
- name: customer_entitlements
  endpoint:
    path: /customer-entitlements
    method: GET
    data_selector: subscriptionEntitlements
- name: subscription
  endpoint:
    path: /api/v1/subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: invoices
  endpoint:
    path: /api/invoices
    method: GET
    data_selector: records
    params: {}
- name: Zahlungserinnerungen
  endpoint:
    path: /mahnwesen/zahlungserinnerungen
    method: POST
    data_selector: data
    params: {}
- name: Mahnungen
  endpoint:
    path: /mahnwesen/mahnungen
    method: POST
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoices
    params: {}
- name: Zahlungserinnerungen
  endpoint:
    path: /settings/payment-failures
    method: GET
    data_selector: settings
    params: {}
- name: Mahnungen
  endpoint:
    path: /settings/payment-failures
    method: GET
    data_selector: settings
    params: {}
- name: analytics_series
  endpoint:
    path: /analytics/series/{type}
    method: GET
- name: subscription_revenue
  endpoint:
    path: /analytics/subscription-revenue
    method: GET
- name: Checkout Session
  endpoint:
    path: /checkout-link/xxxxxxxx
    method: GET
    data_selector: metadata
    params:
      session: 'true'
- name: Current Checkout Session
  endpoint:
    path: /public/checkout/cart/current
    method: GET
    data_selector: metadata
    params: {}
- name: analytics_series
  endpoint:
    path: /analytics/series/{type}
    method: GET
    data_selector: records
- name: subscription_revenue
  endpoint:
    path: /analytics/subscription-revenue
    method: GET
    data_selector: records
- name: buchungskonten
  endpoint:
    path: /settings/accounting/cost-centres
    method: GET
    data_selector: accounts
- name: buchungspositionen
  endpoint:
    path: /settings/accounting/booking-positions
    method: GET
    data_selector: booking_positions
- name: integrationen
  endpoint:
    path: /integrations
    method: GET
    data_selector: integrations
- name: checkout_session
  endpoint:
    path: /checkout-link/xxxxxxxx
    method: GET
    data_selector: metadata
    params:
      session: 'true'
- name: current_cart
  endpoint:
    path: /public/checkout/cart/current
    method: GET
    data_selector: session_data
    params: {}
- name: customer_authentication
  endpoint:
    path: /customers/{id}/authenticate
    method: POST
    data_selector: ''
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
- name: register_user
  endpoint:
    path: /auth/register
    method: POST
    data_selector: user
    params: {}
- name: user_registration
  endpoint:
    path: /user/complete
    method: POST
    data_selector: user
    params: {}
- name: user_accounts
  endpoint:
    path: /user/accounts
    method: GET
    data_selector: data
- name: register_user
  endpoint:
    path: /auth/register
    method: POST
    data_selector: user
    params: {}
- name: set_default_tenant
  endpoint:
    path: /user/default-tenant
    method: POST
    data_selector: tenantId
- name: complete_user_registration
  endpoint:
    path: /user/complete
    method: POST
    data_selector: user
    params: {}
- name: accounts
  endpoint:
    path: /user/accounts
    method: GET
    data_selector: data
- name: login_activities
  endpoint:
    path: /user/login-activities
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: set_default_tenant
  endpoint:
    path: /user/default-tenant
    method: POST
    data_selector: tenantId
- name: current_user
  endpoint:
    path: /user/me
    method: GET
- name: login_activities
  endpoint:
    path: /user/login-activities
    method: GET
    data_selector: data
    params:
      page: 1
- name: tenant
  endpoint:
    path: /tenants/{id}
    method: GET
    data_selector: id
- name: current_user
  endpoint:
    path: /user/me
    method: GET
    data_selector: user
- name: tenant
  endpoint:
    path: /tenants/{id}
    method: PATCH
    data_selector: null
    params: {}
- name: tenant
  endpoint:
    path: /tenants/{id}
    method: GET
    data_selector: id
    params: {}
- name: tenants
  endpoint:
    path: /user/tenants
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: tenant
  endpoint:
    path: /tenants/{id}
    method: PATCH
    data_selector: id
    params: {}
- name: tenants
  endpoint:
    path: /user/tenants
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: feature
  endpoint:
    path: /entitlement/features
    method: POST
    data_selector: id
    params: {}
- name: feature
  endpoint:
    path: /entitlement/features
    method: POST
    data_selector: id
- name: feature
  endpoint:
    path: /entitlement/features/{id}
    method: PUT
    data_selector: feature
    params: {}
- name: feature
  endpoint:
    path: /entitlement/features/{id}
    method: PUT
    data_selector: id
- name: update_feature_status
  endpoint:
    path: /entitlement/features/{id}/status
    method: PUT
    data_selector: null
    params: {}
- name: feature
  endpoint:
    path: /entitlement/features/{id}/status
    method: PUT
- name: features
  endpoint:
    path: /entitlement/features
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '30'
- name: features
  endpoint:
    path: /entitlement/features
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '30'
- name: feature
  endpoint:
    path: /entitlement/features/{id}
    method: GET
    data_selector: Feature resource
- name: feature
  endpoint:
    path: /entitlement/features/{id}
    method: GET
    data_selector: Feature resource
- name: feature_assignments
  endpoint:
    path: /entitlement/feature-assignments
    method: POST
- name: feature_assignments
  endpoint:
    path: /entitlement/feature-assignments
    method: POST
    data_selector: id
- name: feature_assignments
  endpoint:
    path: /entitlement/feature-assignments
    method: GET
    data_selector: data
    params:
      page: 1
- name: feature_assignments
  endpoint:
    path: /entitlement/feature-assignments
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: available_features
  endpoint:
    path: /subscriptions/{id}/available-features
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '30'
- name: available_features
  endpoint:
    path: /subscriptions/{id}/available-features
    method: GET
    data_selector: data
    params:
      page: '1'
- name: entitlement
  endpoint:
    path: /subscriptions/{subscriptionId}/entitlements
    method: POST
    data_selector: id
- name: entitlement
  endpoint:
    path: /subscriptions/{subscriptionId}/entitlements
    method: POST
    data_selector: id
    params: {}
- name: subscription_entitlements
  endpoint:
    path: /subscriptions/{subscriptionId}/entitlements
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: subscription_entitlements
  endpoint:
    path: /subscriptions/{subscriptionId}/entitlements
    method: GET
    data_selector: data
    params:
      page: 1
- name: add_subscription_item_entitlement
  endpoint:
    path: /subscription-items/{subscriptionItemId}/entitlements
    method: POST
    data_selector: id
    params: {}
- name: add_subscription_item_entitlement
  endpoint:
    path: /subscription-items/{subscriptionItemId}/entitlements
    method: POST
    data_selector: id
    params: {}
- name: subscription_item_entitlement
  endpoint:
    path: /subscription-items/{subscriptionItemId}/entitlements
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: subscription_item_entitlements
  endpoint:
    path: /subscription-items/{subscriptionItemId}/entitlements
    method: GET
    data_selector: data
    params:
      page: 1
- name: entitlement_status
  endpoint:
    path: /entitlements/{id}/status
    method: PUT
    data_selector: entitlement
    params: {}
- name: entitlement
  endpoint:
    path: /entitlements/{id}/status
    method: PUT
    data_selector: id
- name: entitlement
  endpoint:
    path: /entitlements/{id}
    method: DELETE
- name: entitlement
  endpoint:
    path: /entitlements/{id}
    method: DELETE
- name: accounts
  endpoint:
    path: /tenant/accounts
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: accounts
  endpoint:
    path: /tenant/accounts
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: deactivate_account
  endpoint:
    path: /accounts/{id}/deactivate
    method: PUT
- name: deactivate_account
  endpoint:
    path: /accounts/{id}/deactivate
    method: PUT
- name: reactivate_account
  endpoint:
    path: /accounts/{id}/reactivate
    method: PUT
- name: reactivate_account
  endpoint:
    path: /accounts/{id}/reactivate
    method: PUT
- name: update_account_role
  endpoint:
    path: /accounts/{id}/role
    method: PUT
    data_selector: application/json
    params: {}
- name: update_account_role
  endpoint:
    path: /accounts/{id}/role
    method: PUT
    data_selector: account
    params: {}
- name: series_data
  endpoint:
    path: /analytics/series/{type}
    method: GET
    data_selector: data
- name: series_data
  endpoint:
    path: /analytics/series/{type}
    method: GET
    data_selector: data
    params:
      type: customer,offer,subscription,revenue,signed-offer,open-offer
- name: subscription_revenue
  endpoint:
    path: /analytics/subscription-revenue
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: GET
    data_selector: data
    params: {}
- name: subscription_revenue
  endpoint:
    path: /analytics/subscription-revenue
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounting/accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounting/accounts/{id}
    method: PUT
    data_selector: AccountingAccount
    params: {}
- name: account
  endpoint:
    path: /accounting/accounts/{id}
    method: PUT
    data_selector: AccountingAccount
    params: {}
- name: tax_groups
  endpoint:
    path: /tax-groups
    method: GET
    data_selector: data
    params:
      incremental: page
- name: tax_group
  endpoint:
    path: /tax-groups/{id}
    method: GET
    data_selector: TaxGroup
    params: {}
- name: tax_group
  endpoint:
    path: /tax-groups
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 30
- name: tax_group
  endpoint:
    path: /tax-groups/{id}
    method: GET
    data_selector: TaxGroup
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params:
      limit: '100'
- name: update_customer_billing_settings
  endpoint:
    path: /customers/{customerId}/settings/billing
    method: PATCH
    data_selector: requiresManualInvoiceApproval
- name: settings
  endpoint:
    path: /settings
    method: PATCH
    data_selector: settings
- name: customers
  endpoint:
    path: /customers
    method: GET
    params:
      limit: '100'
- name: update_customer_settings
  endpoint:
    path: /customers/{customerId}/settings/billing
    method: PATCH
    data_selector: requiresManualInvoiceApproval
    params: {}
- name: payment_method
  endpoint:
    path: /payment-methods
    method: POST
    data_selector: status
    params: {}
- name: payment_method
  endpoint:
    path: /payment-methods
    method: POST
    data_selector: status
- name: subscription_measurements_batch
  endpoint:
    path: /subscription-measurements/batch
    method: POST
    data_selector: values
- name: subscription_measurements
  endpoint:
    path: /subscription-measurements/batch
    method: POST
    data_selector: values
    params: {}
notes:
- Benutzerrollen können individuell angepasst werden.
- Rollen können aktuell nicht bearbeitet werden.
- Standardmäßig sind die Nummernkreise bereits eingerichtet.
- Einmal vergebene Nummernkreise werden nicht erneut vergeben.
- Die Vorlagen enthalten Platzhalter, die automatisch durch die entsprechenden Informationen
  ersetzt werden, wenn die E-Mail gesendet wird.
- Um E-Mails mit der eigenen Domain zu versenden, muss die Domain vom Fynn-Team konfiguriert
  werden.
- Benutzerdefinierte Attribute können über die API gesetzt und abgerufen werden.
- Die Suche ermöglicht es dir, schnell und einfach die gewünschten Informationen zu
  finden.
- Der Aktivitäts-Stream ist erst seit dem 17.Dez 2024 verfügbar, alle Änderungen vor
  diesem Datum sind nicht im Aktivitäts-Stream verfügbar.
- Die Events werden bei einem Fehler bis zu 3x wiederholt.
- Currently in closed beta phase. Please contact us for access.
- Uses OAuth2 with refresh token — requires setup of connected app in Fynn
- Ensure to validate customer details before creating
- Fynn Functions erlaubt es den Entwicklern das Verhalten der Backend Logik zu erweitern.
- Diese Erweiterung befindet sich aktuell in einer geschlossenen Beta-Phase. Bitte
  kontaktiere uns, um Zugang zu erhalten.
- Standardmäßig wird eine Kundennummer auf Basis des Nummernkreises generiert.
- Einheiten können nicht direkt für die wiederkehrende Abrechnung verwendet werden.
- Einheit kann nicht über die Web-App bearbeitet werden.
- Eine Einheit kann aktuell nicht gelöscht werden.
- Rabatte können nur einmal oder mehrmals verwendet werden.
- Die Features werden nur beim Erstellen eines Abonnements übernommen. Änderungen
  an den Features im Produkt oder Preis wirken sich nicht auf bestehende Abos aus.
- Der Endpunkt ist auf 240 Anfragen pro Minute, pro Organisation begrenzt.
- Abonnements können jederzeit gekündigt werden.
- Die Möglichkeit zur Pro-Rata-Berechnung wird in einem zukünftigen Release hinzugefügt.
- Die Kündigung eines Abonnements kann solange widerrufen werden, bis der Kündigungszeitpunkt
  erreicht ist.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Standardmäßig ist die elektronische Rechnung (ZUGFeRD) für den Kunden aktiviert.
- Requires setup of connected app in Fynn
- Some requests may lead to rate limits
- Automatisiertes Mahnwesen für Rechnungen
- PDF Dokumente werden per E-Mail an den Kunden versendet
- Die elektronische Rechnung (ZUGFeRD) ist standardmäßig für den Kunden aktiviert.
- Rechnungen werden im entsprechenden XML Format erstellt, allerdings nicht digital
  über bspw. Peppol versendet.
- Uses OAuth2 for authentication
- Das Mahnwesen kann für alle Rechnungen oder nur für ausgewählte Rechnungen aktiviert
  werden.
- Der Umsatz wird auf Basis der Rechnungsstellung berechnet und nicht auf Basis der
  Zahlungseingänge.
- Pausierte und gekündigte Abonnements werden ebenfalls nicht in die Berechnung des
  MRR einbezogen.
- Aktuell unterstützt Fynn die Integration mit DATEV.
- When authenticated as a customer, access is restricted to the customer’s own data.
- Uses OAuth2 with refresh token.
- Minimum password length is 8 characters.
- 'Required permissions: user:write'
- The default tenant was set successfully returns 204
- 'Required permissions: tenant:manager'
- 'Required permissions: ROLE_USER'
- Custom ID must be unique.
- The feature can be enabled or disabled for a subscription.
- Requires setup of authorization token.
- Authorization header is required.
- Authorization header is required to access the features
- Authorization header required
- 'Required range for limit: 0 <= x <= 100'
- Required range for limit is `0 <= x <= 100`.
- Requires setup of connected app in Fynn API
- The number of items per page can range from 0 to 100.
- 'Required permissions: analytics:read'
- 'Required permissions: accounting:accounts:write'
- 'Required permissions: tax-group:read'
- Requires setup of API key.
- Using the batch API is recommended for collecting usage data for multiple subscription
  items, as it processes their values asynchronously.
errors:
- '400 Bad Request: Check required fields for customer creation'
- '401 Unauthorized: Verify OAuth token'
- '403 Forbidden: Insufficient permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check required fields and data types.'
- '422 Unprocessable Entity: Validation errors.'
- 400 Bad Request
- 422 Unprocessable Entity
- '400: Bad Request'
- '422: Unprocessable Entity'
- '204: The default tenant was set successfully'
- '404'
- '404 Not Found: Invalid tenant ID'
- '200: Tenant resource updated'
- '404: Not Found'
- '200: Success'
- '201: Feature resource created'
- '400 Bad Request: Invalid request data.'
- '404 Not Found: Feature not found.'
- '422 Unprocessable Entity: Validation error.'
- '200: Feature resource updated'
- '400'
- '422'
- '401 Unauthorized: Recheck Authorization header.'
- '201: Entitlement resource created'
- '400 Bad Request: Check the request body for required fields'
- '422 Unprocessable Entity: Check the validity of the data provided'
- '400 Bad Request: Invalid input data'
- '404 Not Found: Account not found'
- '422 Unprocessable Entity: Validation error'
- '400 Bad Request: Check required fields'
- '404 Not Found: Verify the account ID'
- '422 Unprocessable Entity: Validate input data'
- '404 Not Found: Check if the tax group ID is valid'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Authorization
client:
  base_url: https://app.fynn.eu
source_metadata: null
