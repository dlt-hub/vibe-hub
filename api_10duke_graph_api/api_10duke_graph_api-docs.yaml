resources:
- name: clientRole
  endpoint:
    path: /client-role
    method: GET
- name: clientPermission
  endpoint:
    path: /client-permission
    method: GET
- name: client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: client_permission
  endpoint:
    path: /api/idp/v1/client-permissions
    method: GET
    data_selector: object
    params: {}
- name: client_role
  endpoint:
    path: /api/idp/v1/client-roles
    method: GET
    data_selector: object
    params: {}
- name: organization_role
  endpoint:
    path: /api/idp/v1/organization-roles
    method: GET
    data_selector: object
    params: {}
- name: list_organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params:
      filter: ''
- name: get_organization
  endpoint:
    path: /organizations/{organizationId}
    method: GET
    data_selector: organization
    params: {}
- name: create_organization
  endpoint:
    path: /organizations
    method: POST
    data_selector: organization
    params: {}
- name: replace_organization
  endpoint:
    path: /organizations/{organizationId}
    method: PUT
    data_selector: organization
    params: {}
- name: delete_organization
  endpoint:
    path: /organizations/{organizationId}
    method: DELETE
    data_selector: organization
    params: {}
- name: list_organization_users
  endpoint:
    path: /organizations/{organizationId}/users
    method: GET
    data_selector: users
    params:
      offset: 0
      limit: 25
      order: created
      asc: true
- name: import_users
  endpoint:
    path: /api/idp/v1/users/import
    method: POST
    data_selector: users
    params: {}
- name: get_user
  endpoint:
    path: /api/idp/v1/users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: remove_user
  endpoint:
    path: /api/idp/v1/users/{userId}/remove
    method: DELETE
    data_selector: response
    params: {}
- name: list_user_groups
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups
    method: GET
    data_selector: userGroups
    params:
      offset: 0
      limit: 25
      order: created
      asc: true
- name: create_user_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups
    method: POST
    data_selector: userGroup
    params: {}
- name: delete_user_group
  endpoint:
    path: /api/idp/v1/user-groups/{groupId}
    method: DELETE
    data_selector: response
    params:
      cleanUpLicenseReservations: false
      returnNoMembershipsUserIds: false
- name: create_organization_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object (DeclineClientGroupInvitationResponse)
- name: get_organization_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: GET
    data_selector: object (DeclineClientGroupInvitationResponse)
- name: delete_organization_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: DELETE
    data_selector: object (DeclineClientGroupInvitationResponse)
- name: create_token_for_organization_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: POST
    data_selector: object (DeclineClientGroupInvitationResponse)
- name: revoke_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: response
    params: {}
- name: list_permissions
  endpoint:
    path: /api/idp/v1/roles/{roleId}/permissions
    method: GET
    data_selector: response
    params: {}
- name: replace_permissions
  endpoint:
    path: /api/idp/v1/roles/{roleId}/permissions
    method: PUT
    data_selector: response
    params: {}
- name: add_permissions
  endpoint:
    path: /api/idp/v1/roles/{roleId}/permissions
    method: POST
    data_selector: response
    params: {}
- name: remove_permissions
  endpoint:
    path: /api/idp/v1/roles/{roleId}/permissions
    method: DELETE
    data_selector: response
    params: {}
- name: get_permission
  endpoint:
    path: /api/idp/v1/roles/{roleId}/permissions/{permissionId}
    method: GET
    data_selector: response
    params: {}
- name: list_roles
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles
    method: GET
    data_selector: response
    params: {}
- name: create_role
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles
    method: POST
    data_selector: response
    params: {}
- name: replace_role_details
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles/{roleId}
    method: PUT
    data_selector: response
    params: {}
- name: list_inheriting_roles
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles/{parentRoleId}/inheriting
    method: GET
    data_selector: response
    params: {}
- name: replace_inheriting_roles
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles/{parentRoleId}/inheriting
    method: PUT
    data_selector: response
    params: {}
- name: add_inheriting_roles
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/roles/{parentRoleId}/inheriting
    method: POST
    data_selector: response
    params: {}
- name: remove_inheriting_organization_roles
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      parentRoleId: string
      roleId: string <uuid>
- name: get_organization_role
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
- name: list_users_with_organization_role
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
      offset: integer <int64>
      limit: integer <int32>
      order: string
      asc: boolean
- name: replace_users_with_organization_role
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
- name: add_organization_role_to_users
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
- name: remove_organization_role_from_users
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
- name: get_user_with_organization_role
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      roleId: string
      userId: string <uuid>
- name: add_organization_role_to_user
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      userId: string <uuid>
      roleId: string <uuid>
- name: remove_organization_role_from_user
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      userId: string <uuid>
      roleId: string <uuid>
- name: list_internal_permissions
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: DeclineClientGroupInvitationResponse
    params:
      domain: string
      offset: integer <int64>
      limit: integer <int32>
      order: string
      asc: boolean
- name: get_internal_permission
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: DeclineClientGroupInvitationResponse
    params:
      permissionId: string <uuid>
- name: client_group_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/idp/v1/users
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 250
      order: lastName
      asc: true
- name: create_user
  endpoint:
    path: /api/idp/v1/users
    method: POST
    data_selector: user
    params:
      activationMessage: activateUser
- name: get_user_by_email
  endpoint:
    path: /api/idp/v1/users/email
    method: GET
    data_selector: user
    params: {}
- name: import_users
  endpoint:
    path: /api/idp/v1/users/import
    method: POST
    data_selector: importedUsers
    params:
      allowUpdateExisting: false
      errorHandlingMode: failImmediately
- name: mark_recovery_email_valid
  endpoint:
    path: /api/idp/v1/users/recovery-email/validate
    method: POST
    data_selector: validation
    params: {}
- name: get_user
  endpoint:
    path: /api/idp/v1/users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: delete_user
  endpoint:
    path: /api/idp/v1/users/{userId}
    method: DELETE
    data_selector: deletedUser
    params: {}
- name: list_user_organizations
  endpoint:
    path: /api/idp/v1/users/{userId}/organizations
    method: GET
    data_selector: organizations
    params:
      offset: 0
      limit: 25
      order: name
      asc: true
- name: change_user_login_email
  endpoint:
    path: /api/idp/v1/users/{userId}/email
    method: PUT
    data_selector: updatedEmail
    params: {}
- name: list_user_invitations
  endpoint:
    path: /api/idp/v1/users/{userId}/invitations
    method: GET
    data_selector: invitations
    params:
      offset: 0
      limit: 25
      order: email
      asc: true
- name: get_user_invitation
  endpoint:
    path: /api/idp/v1/users/{userId}/invitations/{invitationId}
    method: GET
    data_selector: invitation
    params: {}
- name: list_user_groups
  endpoint:
    path: /api/idp/v1/users/{userId}/groups
    method: GET
    data_selector: userGroups
    params:
      organizationId: null
      offset: 0
      limit: 25
      order: name
      asc: true
- name: replace_user_recovery_email
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: response
    params: {}
- name: list_user_recovery_emails
  endpoint:
    path: /user/recovery-emails
    method: GET
    data_selector: response
    params: {}
- name: create_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails
    method: POST
    data_selector: response
    params: {}
- name: get_user_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails/{userId}/{emailId}
    method: GET
    data_selector: response
    params: {}
- name: delete_user_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails/{userId}/{emailId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}
    method: POST
    data_selector: response
    params: {}
- name: delete_user_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}
    method: DELETE
    data_selector: response
    params: {}
- name: check_user_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}/exists
    method: GET
    data_selector: response
    params: {}
- name: get_user_totp_credentials
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: verify_user_totp_credentials
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: activate_or_suspend_user
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: set_user_password
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: mark_user_email_as_valid
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: send_account_activation_message
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: list_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: create_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: accept_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: decline_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: get_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: delete_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: DELETE
    data_selector: object
    params: {}
- name: create_invitation_token
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: object
    params: {}
- name: revoke_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: DELETE
    data_selector: object
    params: {}
- name: client_group_invitations_decline
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: list_clients
  endpoint:
    path: /clients
    method: GET
    data_selector: object
    params: {}
- name: client_group_invitations_decline
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: list_clients
  endpoint:
    path: /clients
    method: GET
    data_selector: object
    params: {}
- name: get_client
  endpoint:
    path: /clients/{clientId}
    method: GET
    data_selector: object
    params: {}
- name: create_client
  endpoint:
    path: /clients
    method: POST
    data_selector: object
    params: {}
- name: delete_client
  endpoint:
    path: /clients/{clientId}
    method: DELETE
    data_selector: object
    params: {}
- name: set_client_secret
  endpoint:
    path: /clients/{clientId}/secret
    method: PUT
    data_selector: object
    params: {}
- name: list_client_groups
  endpoint:
    path: /client-groups
    method: GET
    data_selector: object
    params: {}
- name: create_client_group
  endpoint:
    path: /client-groups
    method: POST
    data_selector: object
    params: {}
- name: get_client_group
  endpoint:
    path: /client-groups/{groupId}
    method: GET
    data_selector: object
    params: {}
- name: replace_client_group_details
  endpoint:
    path: /client-groups/{groupId}
    method: PUT
    data_selector: object
    params: {}
- name: client_group_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations
    method: GET
    data_selector: object
    params: {}
- name: decline_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: list_client_group_clients
  endpoint:
    path: /api/idp/v1/client-group-clients
    method: GET
    data_selector: object
    params: {}
- name: replace_client_group_clients
  endpoint:
    path: /api/idp/v1/client-group-clients/replace
    method: PUT
    data_selector: object
    params: {}
- name: add_clients_to_client_group
  endpoint:
    path: /api/idp/v1/client-group-clients/add
    method: POST
    data_selector: object
    params: {}
- name: remove_clients_from_client_group
  endpoint:
    path: /api/idp/v1/client-group-clients/remove
    method: DELETE
    data_selector: object
    params: {}
- name: get_client_group_client
  endpoint:
    path: /api/idp/v1/client-group-clients/{clientId}
    method: GET
    data_selector: object
    params: {}
- name: add_client_to_client_group
  endpoint:
    path: /api/idp/v1/client-group-clients/add/{clientId}
    method: POST
    data_selector: object
    params: {}
- name: remove_client_from_client_group
  endpoint:
    path: /api/idp/v1/client-group-clients/remove/{clientId}
    method: DELETE
    data_selector: object
    params: {}
- name: list_client_group_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations
    method: GET
    data_selector: object
    params: {}
- name: create_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations
    method: POST
    data_selector: object
    params: {}
- name: create_and_send_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/send
    method: POST
    data_selector: object
    params: {}
- name: decline_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: create_token_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: revoke_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: send_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: accept_client_group_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: licensed_items
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      productId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      productId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      filter: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      clientId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string
      entId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: ''
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: licenses
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
      licenseId: string
      includeEffectiveModel: boolean
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
      orgId: string <uuid>
      entId: string
      licenseId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: required
      entId: required
      licenseId: required
      userId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
      licenseId: string
      userId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
      licenseId: string
      userId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      includeEffectiveModel: boolean
- name: licenses
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      userId: required
      licensedItemName: string
      ownerOrganizationId: string
      includeEffectiveModel: boolean
      includeAggregatedLicensedItems: boolean
      onlyValidLicenses: boolean
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      userId: required
      includeEffectiveModel: boolean
      includeAggregatedLicensedItems: boolean
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      userId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      userId: string <uuid>
      allowDeleteLicenses: boolean
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      userId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      userId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      userId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
    params:
      clientId: required
- name: consume_license_request
  endpoint:
    path: /api/api-license-consumption/consume-license-request-api/
    method: POST
- name: release_license_lease_request
  endpoint:
    path: /api/api-license-consumption/release-license-lease-request-api/
    method: POST
- name: events
  endpoint:
    path: /api/event
    method: GET
    data_selector: events
- name: entitlement_management
  endpoint:
    path: /api/api-entitlements
    method: GET
    data_selector: records
- name: identity_management
  endpoint:
    path: /api/api-identity
    method: GET
    data_selector: records
- name: client_groups
  endpoint:
    path: /clients/{clientId}/client-groups
    method: GET
- name: user_activation
  endpoint:
    path: /users/{userId}/send-activation
    method: POST
- name: user_by_email
  endpoint:
    path: /users/byEmail
    method: POST
- name: organization_group_invitations
  endpoint:
    path: /organization-group-invitations
    method: GET
- name: user_invitations
  endpoint:
    path: /user-invitations
    method: GET
- name: list_entitlement_consuming_clients
  endpoint:
    path: /organizations/{orgId}/entitlements/{entId}/consuming-clients
    method: GET
- name: reserve_license_for_user
  endpoint:
    path: /organizations/{orgId}/entitlements/{entId}/licenses/{licenseId}/users/{userId}/reserve
    method: PUT
- name: deny_license_for_user
  endpoint:
    path: /organizations/{orgId}/entitlements/{entId}/licenses/{licenseId}/users/{userId}/deny
    method: PUT
- name: reset_reservations_and_denials_for_user
  endpoint:
    path: /organizations/{orgId}/entitlements/{entId}/licenses/{licenseId}/users/{userId}/reset
    method: PUT
- name: process_organization_license_transaction
  endpoint:
    path: /organizations/{orgId}/entitlements/{entId}/licenses/{licenseId}/users/{userId}/process
    method: POST
- name: user_groups
  endpoint:
    path: /users/{userId}/organization-groups
    method: GET
    params:
      organizationId: ''
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    params:
      domain: organization
- name: products
  endpoint:
    path: /products
    method: GET
    params: {}
- name: product_details
  endpoint:
    path: /products/{productId}
    method: GET
    params: {}
- name: license_usage
  endpoint:
    path: /users/{userId}/license-usage/
    method: GET
    params: {}
- name: 10Duke Identity Management REST API
  endpoint:
    path: /api/api-identity/index.html
    method: GET
- name: 10Duke Entitlement Management REST API
  endpoint:
    path: /api/api-entitlements/index.html
    method: GET
- name: 10Duke Authentication API
  endpoint:
    path: /api/api-authentication/
    method: GET
- name: 10Duke License Consumption API
  endpoint:
    path: /api/api-license-consumption/
    method: GET
- name: 10Duke Event API
  endpoint:
    path: /api/api-event/
    method: GET
- name: Graph API
  endpoint:
    path: /api/api-graph/
    method: GET
- name: OIDC_OAuth_API
  endpoint:
    path: /user/oauth20/cb
    method: GET
- name: SAML_API
  endpoint:
    path: /user/saml20/cb
    method: GET
- name: clientRole
  endpoint:
    path: /client-roles
    method: GET
- name: clientPermission
  endpoint:
    path: /client-permissions
    method: GET
- name: client_group_invitations_decline
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: client_permission
  endpoint:
    path: /api/idp/v1/client-permissions/{clientId}
    method: GET
    data_selector: object
    params: {}
- name: client_role
  endpoint:
    path: /api/idp/v1/client-roles/{clientId}
    method: GET
    data_selector: object
    params: {}
- name: organization_role
  endpoint:
    path: /api/idp/v1/organization-roles/{organizationId}
    method: GET
    data_selector: object
    params: {}
- name: organization
  endpoint:
    path: /api/idp/v1/organizations
    method: GET
    data_selector: records
    params:
      filter: ''
- name: client_group_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: response
    params: {}
- name: organization_invitation
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/invitations
    method: GET
    data_selector: records
    params: {}
- name: organization_properties
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/properties
    method: GET
    data_selector: records
    params: {}
- name: organization_users
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/users
    method: GET
    data_selector: records
    params: {}
- name: import_users
  endpoint:
    path: /api/idp/v1/import-users
    method: POST
    data_selector: response
    params:
      allowUpdateExisting: 'false'
      errorHandlingMode: failImmediately
      activationMessage: activateUser
      activationUrl: activationUrl=${base_url}/${locale}/user/activate?uaKey=${key}&email=${email}&next=/continue/here
- name: get_user
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/users/{userId}
    method: GET
    data_selector: response
- name: remove_user
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/users/{userId}
    method: DELETE
    data_selector: response
    params:
      deleteInvitations: 'true'
- name: list_user_groups
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 25
      order: created
      asc: 'true'
- name: replace_user_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}
    method: PUT
    data_selector: response
- name: create_user_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups
    method: POST
    data_selector: response
- name: get_user_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}
    method: GET
    data_selector: response
- name: delete_user_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}
    method: DELETE
    data_selector: response
    params:
      cleanUpLicenseReservations: 'false'
      returnNoMembershipsUserIds: 'false'
- name: list_group_users
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}/users
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 25
      order: lastName
      asc: 'true'
- name: replace_group_users
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}/users
    method: PUT
    data_selector: response
    params:
      cleanUpLicenseReservations: 'false'
      returnNoMembershipsUserIds: 'false'
- name: add_group_users
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}/users
    method: POST
    data_selector: response
- name: remove_group_users
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/user-groups/{groupId}/users
    method: DELETE
    data_selector: response
    params:
      cleanUpLicenseReservations: 'false'
      returnNoMembershipsUserIds: 'false'
- name: get_user_group_user
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: list_organization_invitations
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: create_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: accept_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: decline_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: get_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: GET
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: delete_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: DELETE
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: create_token_for_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
    params: {}
- name: revoke_organization_invitation
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      invitationId: string
- name: list_organization_roles
  endpoint:
    path: /api/idp/v1/organization-roles
    method: GET
    data_selector: organizationRoles
    params:
      organizationId: string
- name: replace_organization_role_permissions
  endpoint:
    path: /api/idp/v1/organization-roles/{roleId}/permissions
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      roleId: string
- name: add_inheriting_roles
  endpoint:
    path: /api/idp/v1/organization-roles/{parentRoleId}/inheriting
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string
      parentRoleId: string
- name: list_internal_permissions
  endpoint:
    path: /api/idp/v1/internal-permissions
    method: GET
    data_selector: permissions
    params:
      domain: organization
- name: create_internal_permission
  endpoint:
    path: /api/idp/v1/internal-permissions
    method: POST
    data_selector: permission
- name: replace_internal_permission_details
  endpoint:
    path: /api/idp/v1/internal-permissions/{permissionId}
    method: PUT
    data_selector: permission
- name: get_internal_permission
  endpoint:
    path: /api/idp/v1/internal-permissions/{permissionId}
    method: GET
    data_selector: permission
- name: client_group_invitations_decline
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: response
    params: {}
- name: list_users
  endpoint:
    path: /api/idp/v1/users
    method: GET
    data_selector: response
    params:
      limit: 5000
- name: user
  endpoint:
    path: /api/idp/v1/users
    method: POST
    data_selector: user
    params: {}
- name: user_group
  endpoint:
    path: /api/idp/v1/user-groups
    method: GET
    data_selector: userGroups
    params: {}
- name: replace_user_recovery_email
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: list_user_recovery_emails
  endpoint:
    path: /client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: add_user_to_user_groups
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: remove_user_from_user_groups
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: get_user_group
  endpoint:
    path: /client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: list_user_properties
  endpoint:
    path: /client-group-invitations/decline
    method: GET
    data_selector: object
    params: {}
- name: replace_user_properties
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: create_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails
    method: POST
    data_selector: response
    params: {}
- name: get_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails/{userId}/{emailId}
    method: GET
    data_selector: response
    params: {}
- name: delete_recovery_email
  endpoint:
    path: /api/idp/v1/recovery-emails/{userId}/{emailId}
    method: DELETE
    data_selector: response
    params: {}
- name: create_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}
    method: POST
    data_selector: response
    params: {}
- name: get_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}
    method: GET
    data_selector: response
    params: {}
- name: delete_totp_credentials
  endpoint:
    path: /api/idp/v1/totp/{userId}
    method: DELETE
    data_selector: response
    params: {}
- name: decline_client_group_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: get_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: GET
    data_selector: DeclineClientGroupInvitationResponse
- name: create_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
- name: accept_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
- name: decline_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
- name: delete_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: DELETE
    data_selector: DeclineClientGroupInvitationResponse
- name: create_invitation_token
  endpoint:
    path: /client-group-invitations/decline
    method: POST
    data_selector: DeclineClientGroupInvitationResponse
- name: revoke_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: DELETE
    data_selector: DeclineClientGroupInvitationResponse
- name: client_group_invitations_decline
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
- name: list_clients
  endpoint:
    path: /clients
    method: GET
    data_selector: ClientListResponse
    params:
      offset: 0
      limit: 25
- name: get_client
  endpoint:
    path: /clients/{clientId}
    method: GET
    data_selector: GetClientResponse
- name: create_client
  endpoint:
    path: /clients
    method: POST
    data_selector: CreateClientResponse
- name: delete_client
  endpoint:
    path: /clients/{clientId}
    method: DELETE
    data_selector: DeleteClientResponse
- name: client_group_invitations_decline
  endpoint:
    path: /api/idp/v1/client-group-invitations/decline
    method: PUT
    data_selector: object
    params: {}
- name: list_organizations_clients
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients
    method: GET
    data_selector: object
    params: {}
- name: replace_organization_client_details
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients
    method: PUT
    data_selector: object
    params: {}
- name: create_organization_client
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients
    method: POST
    data_selector: object
    params: {}
- name: get_organization_client
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients/{clientId}
    method: GET
    data_selector: object
    params: {}
- name: delete_organization_client
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients/{clientId}
    method: DELETE
    data_selector: object
    params: {}
- name: set_client_secret
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/clients/{clientId}/secret
    method: PUT
    data_selector: object
    params: {}
- name: list_organizations_client_groups
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/client-groups
    method: GET
    data_selector: object
    params: {}
- name: replace_client_group_details
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/client-groups
    method: PUT
    data_selector: object
    params: {}
- name: create_client_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/client-groups
    method: POST
    data_selector: object
    params: {}
- name: get_client_group
  endpoint:
    path: /api/idp/v1/organizations/{organizationId}/client-groups/{groupId}
    method: GET
    data_selector: object
    params: {}
- name: list_client_group_invitations
  endpoint:
    path: /client-group-invitations
    method: GET
    data_selector: invitations
    params:
      organizationId: string <uuid>
      invitationState: string
- name: create_client_group_invitation
  endpoint:
    path: /client-group-invitations
    method: POST
    data_selector: invitationResponse
    params:
      organizationId: string <uuid>
      invitationScopeInformation: string
      recipientLanguageCode: string
      memberWelcomeUrl: string
      invitationCompletedUrl: string
      recipientCountryCode: string
      clientData: string
      recipientName: string
      inviterName: string
      email: string
      validFrom: string
      validUntil: string
      id: string <uuid>
      groupIds: Array of strings <uuid>
      allowClientId: string
      clientName: string
- name: decline_client_group_invitation
  endpoint:
    path: /client-group-invitations/decline
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      organizationId: string <uuid>
      invitationId: string <uuid>
- name: accept_client_group_invitation
  endpoint:
    path: /client-group-invitations/accept
    method: PUT
    data_selector: DeclineClientGroupInvitationResponse
    params:
      token: string
      clientName: string
      createClient: boolean
- name: licensed_items
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      productId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      filter: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: required
      entId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
      groupId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: required
      entId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
      groupId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
      groupId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      groupId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      clientId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string <uuid>
      entId: string
      licenseId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: string
      entId: string
      licenseId: string
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      clientId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
    params:
      clientId: string <uuid>
      orgId: string <uuid>
      entId: string
      licenseId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      orgId: string <uuid>
      entId: string
      licenseId: string
      userId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params: {}
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      orgId: required
      entId: required
      licenseId: required
      userId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: licenses
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      userId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
    params:
      userId: string <uuid>
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
- name: license_activations
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: '[]'
    params:
      orgId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params: {}
- name: license_transaction
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      code: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      userId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: Array
    params:
      userId: string <uuid>
      transactionExternalId: string
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: required
- name: license_usage
  endpoint:
    path: /clients/{clientId}/license-usage
    method: GET
    data_selector: records
    params:
      clientId: required
      includeEffectiveModel: boolean
      includeAggregatedLicensedItems: boolean
- name: licenses
  endpoint:
    path: /licenses
    method: GET
    data_selector: '[]'
notes:
- 10Duke Enterprise support for the Graph API is deprecated, and this Graph API documentation
  is no longer being updated.
- Each event consists of an envelope and the actual event data.
- License provisioning integrations that don’t create transactions cannot be used
  side by side with the new transaction-based UI in SysAdmin.
- Significant changes that break compatibility with the previous major releases, including
  changes in API endpoints.
- If you wish to change the threshold in your deployment, contact the 10Duke Integration
  Support team.
- When accessing 10Duke Enterprise APIs, the legacy option of providing an OAuth access
  token as a parameter is no longer supported.
- Includes minor security improvements.
- 10Duke Enterprise support for the Graph API is deprecated.
- 'Authorization of API requests should not be confused with the authorization of
  accessing your software application: the latter is controlled using licenses.'
- 10Duke Enterprise is configured to trust the identity provider.
- By default, 10Duke Enterprise requires that the external identity provider returns
  at least the ID, email address, first name, and last name of the authenticated user.
- Include the authorization header in all requests to the License Consumption API.
- Our recommended format for the license token is JSON Web Token (JWT).
- Events are stored in AWS for 90 days.
- Events generated by 10Duke Enterprise components become available in AWS after a
  short delay (typically a couple of minutes).
- 10Duke Enterprise is deployed and hosted as a single-tenant environment in Amazon
  Web Services (AWS).
- 10Duke Enterprise supports OAuth 2.0 and OpenID Connect (OIDC) identity protocol
- 10Duke Enterprise supports Security Assertion Markup Language (SAML) 2.0 protocol
- 10Duke Enterprise supports OAuth 1.0a (for client application connections, can be
  enabled on request)
- Content type for requests is application/json.
- Requires setup of OAuth2 connected app in 10Duke
- Some responses may vary based on user roles and permissions.
- Content type for requests is application/json
errors:
- 401 Unauthorized
- 403 Forbidden
- 500 Internal server error
- '404: Object not found'
- 'default: Unexpected error'
- '404: Not Found'
- '200: OK'
- '400 Bad Request: Ensure the request parameters are correct.'
- '401 Unauthorized: Check OAuth token validity.'
- '404 Not Found: Verify the endpoint path.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Missing required user attributes: ID, email address, first name, last name'
- 'The user already exists: checks if a user with the authenticated email address
  already exists'
- 'Authentication fails due to no valid client secret: requires a valid client secret
  from the identity provider'
- '401 Unauthorized: Check your OAuth token or credentials.'
- '403 Forbidden: Ensure you have permission for this operation.'
- '500 Internal Server Error: Contact support if the issue persists.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://entitlement.10duke.com
  headers:
    Accept: application/json
source_metadata: null
