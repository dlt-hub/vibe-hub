resources:
- name: API
  endpoint:
    path: /GetAPI
    method: GET
- name: Teams
  endpoint:
    path: /GetTeams
    method: GET
- name: Subscription
  endpoint:
    path: /GetUserSubscriptions
    method: GET
- name: API Version Docs
  endpoint:
    path: /GetAPIVersionDoc
    method: GET
- name: API Developers
  endpoint:
    path: /GetAPIDevelopers
    method: GET
- name: Apps
  endpoint:
    path: /GetApp
    method: GET
- name: Version Tag
  endpoint:
    path: /GetAPIVersionTag
    method: GET
- name: Users
  endpoint:
    path: /GetUsers
    method: GET
- name: Organization
  endpoint:
    path: /GetOrganization
    method: GET
- name: Email Types
  endpoint:
    path: /emails/sent/to/users
    method: GET
    data_selector: emails
    params: {}
- name: notification
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transaction_history
  endpoint:
    path: /developer/billing/transaction-history
    method: GET
    data_selector: transaction_data
- name: subscriptions_usage
  endpoint:
    path: /developer/billing/subscriptions-and-usage
    method: GET
    data_selector: quota_usage_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: topics
  endpoint:
    path: /topics
    method: GET
    data_selector: topics
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: records
    params:
      max_records: 100
- name: X-RapidAPI-Proxy-Secret
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: X-RapidAPI-User
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: X-RapidAPI-Subscription
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: X-RapidAPI-Version
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: X-Forwarded-For
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: X-Forwarded-Host
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: x-rapidapi-host
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: custom_token_service
  endpoint:
    path: /
    method: POST
    data_selector: token
    params: {}
- name: topics
  endpoint:
    path: /topics
    method: GET
- name: schemas
  endpoint:
    path: /schemas
    method: GET
- name: calls
  endpoint:
    path: /calls
    method: POST
- name: calls
  endpoint:
    path: /calls
    method: POST
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: '[]'
- name: Analytics
  endpoint:
    path: /logs
    method: POST
- name: GET Echo
  endpoint:
    path: /
    method: GET
- name: POST Echo
  endpoint:
    method: POST
    params:
      testQueryParameter: myQueryValue
    data_selector: my-body-key
- name: Default Session
  endpoint:
    path: /sessions/default
    method: GET
    data_selector: cookies
    params: {}
- name: groups
  endpoint:
    path: /requests/groups
    method: POST
    data_selector: group
    params: {}
- name: environments
  endpoint:
    path: /requests/environments
    method: POST
    data_selector: environment
    params: {}
- name: Get Categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: daily_email_summary
  endpoint:
    path: /daily_email_summary
    method: GET
    data_selector: summary_data
- name: create_sms_alert
  endpoint:
    path: /create/sms/alert
    method: POST
    data_selector: alert
    params: {}
- name: create_request
  endpoint:
    path: /create_request
    method: POST
- name: edit_request
  endpoint:
    path: /edit_request
    method: PUT
- name: reset
  endpoint:
    path: /reset
    method: DELETE
- name: multiple_webhook_configurations
  endpoint:
    path: /multiple_webhook_configurations
    method: GET
- name: test_analytics
  endpoint:
    path: /docs/test-analytics
    method: GET
    data_selector: analytics
- name: test_results
  endpoint:
    path: /docs/test-results
    method: GET
    data_selector: results
- name: api_dashboard
  endpoint:
    path: /docs/testing-dashboard
    method: GET
    data_selector: dashboard
- name: api_performance
  endpoint:
    path: /docs/testing-performance
    method: GET
    data_selector: performance
- name: test_results
  endpoint:
    path: /results
    method: GET
    data_selector: results
    params: {}
- name: execution_report
  endpoint:
    path: /execution_report
    method: GET
    data_selector: report
    params: {}
- name: organization
  endpoint:
    path: /organizations
    method: POST
    data_selector: organization
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: create_team
  endpoint:
    path: /create_team
    method: POST
    data_selector: team
    params: {}
- name: edit_team
  endpoint:
    path: /edit_team
    method: PUT
    data_selector: team
    params: {}
- name: manage_teammates
  endpoint:
    path: /manage_teammates
    method: GET
    data_selector: teammates
    params: {}
- name: organization_api_collections
  endpoint:
    path: /organization/api/collections
    method: POST
    data_selector: collection
    params: {}
- name: custom_branding
  endpoint:
    path: /organization/custom/branding
    method: POST
    data_selector: branding
    params: {}
- name: approvals
  endpoint:
    path: /approvals
    method: POST
    data_selector: approvalData
- name: join_organization
  endpoint:
    path: /join-organization
    method: POST
    data_selector: joinData
- name: organization_audit_logs
  endpoint:
    path: /audit_trails
    method: GET
    data_selector: logs
    params: {}
- name: audit_trails
  endpoint:
    path: /admin/panel/audit/trails
    method: GET
    data_selector: logs
- name: events_webhooks
  endpoint:
    path: /events/webhooks
    method: POST
    data_selector: payload
- name: events
  endpoint:
    path: /docs/admin-panel-audit-trails
    method: GET
    data_selector: events_triggered
    params: {}
- name: user_status
  endpoint:
    path: /user/status
    method: GET
    data_selector: statuses
- name: organization_details
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: Assets
  endpoint:
    path: /assets
    method: GET
    data_selector: images
- name: Global Navigation
  endpoint:
    path: /global-navigation
    method: GET
    data_selector: navigation
- name: Hub CSS
  endpoint:
    path: /hub-css
    method: GET
    data_selector: css
- name: lambda_function
  endpoint:
    path: /
    method: POST
    data_selector: response.headers
    params: {}
- name: SEO Configuration
  endpoint:
    path: /hub
    method: POST
    data_selector: SEO configurations
    params: {}
- name: add_extension
  endpoint:
    path: /docs/admin-panel-overview
    method: GET
    data_selector: extensions
    params: {}
- name: using_extension
  endpoint:
    path: /docs/using-an-extension
    method: GET
    data_selector: extensions
    params: {}
- name: creating_extension
  endpoint:
    path: /docs/creating-an-extension
    method: GET
    data_selector: extensions
    params: {}
- name: ping
  endpoint:
    path: /
    method: POST
    data_selector: data.ping
    params: {}
- name: api
  endpoint:
    path: /
    method: POST
    data_selector: data.api
    params: {}
- name: apis
  endpoint:
    path: /
    method: POST
    data_selector: data.apis
    params: {}
- name: api
  endpoint:
    path: /apis
    method: POST
    data_selector: data
    params: {}
- name: graphql example
  endpoint:
    path: /createApi
    method: POST
    data_selector: createApi
    params: {}
- name: updateGraphQLSchema
  endpoint:
    path: /
    method: POST
    data_selector: data.updateGraphQLSchema
    params: {}
- name: createGqlApiVersions
  endpoint:
    path: /
    method: POST
    data_selector: data.createGqlApiVersions
    params: {}
- name: createApisFromSpecs
  endpoint:
    path: /createApisFromSpecs
    method: POST
    data_selector: createApisFromSpecs
    params: {}
- name: updateApisFromSpecs
  endpoint:
    path: /updateApisFromSpecs
    method: POST
    data_selector: updateApisFromSpecs
    params: {}
- name: tutorials
  endpoint:
    path: /tutorials
    method: GET
    data_selector: nodes
    params: {}
- name: create_tutorial
  endpoint:
    path: /createTutorial
    method: POST
    data_selector: id
    params: {}
- name: delete_tutorial
  endpoint:
    path: /deleteTutorial
    method: DELETE
    data_selector: success
    params: {}
- name: tutorials
  endpoint:
    path: /tutorials
    method: QUERY
    data_selector: nodes
    params:
      apiId: $id
      apiVersion: $versionId
- name: create_tutorial
  endpoint:
    path: /createTutorial
    method: MUTATION
    data_selector: id
    params:
      apiId: $id
      apiVersion: $versionId
      title: $title
      content: $content
      published: $published
      thumbnailURL: $thumbnailURL
- name: update_tutorial
  endpoint:
    path: /updateTutorial
    method: MUTATION
    data_selector: id
    params:
      apiId: $id
      apiVersion: $versionId
      title: $title
      content: $content
      published: $published
      thumbnailURL: $thumbnailURL
      slugifiedName: $slug
- name: delete_tutorial
  endpoint:
    path: /deleteTutorial
    method: MUTATION
    data_selector: null
    params:
      apiId: $id
      apiVersion: $versionId
      slugifiedName: $slug
- name: generateAssetUploadUrl
  endpoint:
    path: /
    method: POST
    data_selector: data.generateAssetUploadUrl
    params: {}
- name: updateAssetUploaded
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAssetUploaded
    params: {}
- name: updateAsset
  endpoint:
    path: /
    method: POST
    data_selector: data.updateAsset
    params: {}
- name: createDocumentation
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: createApi
  endpoint:
    path: /createApi
    method: POST
    data_selector: createApi
    params: {}
- name: updateApi
  endpoint:
    path: /updateApi
    method: POST
    data_selector: updateApi
    params: {}
- name: readAPI
  endpoint:
    path: /readAPI
    method: GET
    data_selector: api
    params: {}
- name: Get API by external custom ID
  endpoint:
    path: /apis
    method: GET
    data_selector: edges.node
    params:
      externalCustomIds: $customId
- name: list_user_team_subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: nodes
    params:
      where: {}
      pagination:
        first: 10
- name: list_any_user_team_subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: nodes
    params:
      where:
        userId: 7344547
- name: list_api_subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: nodes
    params:
      where:
        apiId: api_f6108c78-5ee7-40e5-b177-7b740c96ef2a
        pagingArgs:
          limit: -1
          orderBy: createdAt
          orderDirection: desc
- name: create_user_team_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params:
      input:
        apiId: api_81eaf459-fd5f-4239-ae64-ab9f06559888
        billingPlanVersionId: billingplanversion_62cb69e2-0503-4f82-83d0-4c6ed78dc2c4
        ownerId: '6028339'
- name: billing_plan_versions
  endpoint:
    path: /billingPlanVersions
    method: query
    data_selector: billingPlanVersions.nodes
    params:
      where:
        apiId: api_81eaf459-fd5f-4239-ae64-ab9f06559888
      pagination:
        first: '50'
- name: create_external_gateway_api_subscription
  endpoint:
    path: /createExternalGatewayApiSubscription
    method: mutation
    data_selector: createExternalGatewayApiSubscription
    params:
      input:
        apiId: api_6040d9e7-3d00-43d5-bc51-b7e10c3348ea
- name: delete_subscription
  endpoint:
    path: /deleteSubscription
    method: mutation
    data_selector: deleteSubscription
    params:
      id: '4460204'
- name: generateFile
  endpoint:
    path: /generateFile
    method: POST
    data_selector: data
    params: {}
- name: getFileDetails
  endpoint:
    path: /getFileDetails
    method: POST
    data_selector: data
    params: {}
- name: getFileDetails
  endpoint:
    path: /getFileDetails
    method: query
    data_selector: getFileDetails
    params:
      id: id
- name: apiFollowers
  endpoint:
    path: /apiFollowers
    method: POST
    data_selector: apiFollowers
    params: {}
- name: api
  endpoint:
    path: /api
    method: POST
    data_selector: api
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: users
    params: {}
- name: following_apis
  endpoint:
    path: /graphql
    method: POST
    data_selector: followingApis.nodes
    params:
      userId: '7344547'
- name: add_follower
  endpoint:
    path: /graphql
    method: POST
    data_selector: createApiFollowers
    params:
      ApiFollowerCreateInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: delete_follower
  endpoint:
    path: /graphql
    method: POST
    data_selector: deleteApiFollowers
    params:
      ApiFollowerDeleteInput:
        apiId: api_737d0adb-a966-4b3c-a4a6-c961fd88b22f
- name: list_api_announcements
  endpoint:
    path: /announcements
    method: POST
    data_selector: announcements
    params: {}
- name: create_api_announcement
  endpoint:
    path: /postMessage
    method: POST
    data_selector: message
    params: {}
- name: list_apps_owned_by_user
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.user.ProjectACLs.Project
    params:
      id: '5713300'
- name: create_app
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createProject
    params: {}
- name: applicationAuthorizations
  endpoint:
    path: /applicationAuthorizations
    method: GET
    data_selector: applicationAuthorizations
    params:
      projectId: PROJECT_ID
- name: applicationAuthorization
  endpoint:
    path: /applicationAuthorization
    method: GET
    data_selector: applicationAuthorization
    params:
      authId: AUTH_ID
- name: createApplicationAuthorization
  endpoint:
    path: /createApplicationAuthorization
    method: POST
    data_selector: createApplicationAuthorization
    params:
      input:
        projectId: YOUR_PROJECT_ID
        name: YOUR_AUTHORIZATION_NAME
        authorizationType: OAUTH2
        authorizationValues: '{"clientId":"YOUR_CLIENT_ID","clientSecret":"YOUR_CLIENT_SECRET"}'
        gatewayIds:
        - YOUR_GATEWAY_ID
        grantType: CLIENT_CREDENTIALS
- name: updateApplicationAuthorization
  endpoint:
    path: /updateApplicationAuthorization
    method: POST
    data_selector: updateApplicationAuthorization
    params:
      input:
        id: AUTH_ID
        name: NEW_NAME
- name: deleteApplicationAuthorization
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
    data_selector: deleteApplicationAuthorization
    params:
      id: AUTH_ID
- name: user_apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data.apps
- name: user_authorizations
  endpoint:
    path: /authorizations
    method: GET
    data_selector: data.authorizations
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
    params: {}
- name: createApp
  endpoint:
    path: /createProject
    method: POST
    data_selector: data.createProject
    params: {}
- name: deleteApp
  endpoint:
    path: /apps/{appId}
    method: DELETE
    data_selector: data
    params: {}
- name: getUserByEmail
  endpoint:
    path: /users
    method: POST
    data_selector: data.users
    params: {}
- name: createAuth
  endpoint:
    path: /createApplicationAuthorization
    method: POST
    data_selector: data.createApplicationAuthorization
    params: {}
- name: deleteAuth
  endpoint:
    path: /deleteApplicationAuthorization
    method: POST
    data_selector: data.deleteApplicationAuthorization
    params: {}
- name: users
  endpoint:
    path: YOUR URL FROM SAMPLE CODE
    method: POST
    data_selector: data.users.nodes
    params: {}
- name: users
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.users.nodes
- name: user_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: user
    params: {}
- name: multiple_users
  endpoint:
    path: /graphql
    method: POST
    data_selector: users
    params:
      where:
        limit: 50
        offset: 0
        term: ''
        order: createdAt,ASC
        byField: id,name,email,username
        filters: {}
- name: organization_users
  endpoint:
    path: /graphql
    method: POST
    data_selector: paginatedTeamUsersByOrganizationIdV2
    params:
      orgId: 5755578
      pagingArgs:
        offset: 0
        limit: 1000
        orderBy: id
        orderDirection: desc
- name: team_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: team
    params: {}
- name: roles
  endpoint:
    path: /graphql
    method: POST
    data_selector: roles
    params:
      where:
        roleLevels:
        - USER_ENVIRONMENT
- name: create_organization
  endpoint:
    path: /createOrganization
    method: POST
    data_selector: createOrganization
    params: {}
- name: organization_details
  endpoint:
    path: /organization
    method: GET
    data_selector: organization
    params:
      id: ORG_ID
- name: get_user_details
  endpoint:
    path: /user
    method: POST
    data_selector: user
    params:
      id: ID!
- name: get_multiple_users
  endpoint:
    path: /users
    method: POST
    data_selector: users
    params:
      where: UserWhereInput!
- name: update_user_details
  endpoint:
    path: /updateUser
    method: POST
    data_selector: updateUser
    params:
      input: UserUpdateInput!
- name: get_users_of_organization
  endpoint:
    path: /paginatedTeamUsersByOrganizationIdV2
    method: POST
    data_selector: paginatedTeamUsersByOrganizationIdV2
    params:
      orgId: Int!
      pagingArgs: PagingArgs
- name: get_team_details
  endpoint:
    path: /team
    method: POST
    data_selector: team
    params:
      id: ID!
- name: get_configured_roles
  endpoint:
    path: /roles
    method: POST
    data_selector: roles
    params:
      where: RoleWhereInput!
- name: update_user_roles
  endpoint:
    path: /updateUserRoles
    method: POST
    data_selector: updateUserRoles
    params:
      input: UserRolesUpdateInput
- name: update_user_team_role
  endpoint:
    path: /upsertEntityRole
    method: POST
    data_selector: upsertEntityRole
    params:
      input: EntityRoleInput
- name: get_user_teams
  endpoint:
    path: /teams
    method: POST
    data_selector: teams
    params:
      where: TeamWhereInput!
- name: invite_user_to_organization
  endpoint:
    path: /createUserInvites
    method: POST
    data_selector: createUserInvites
    params:
      input: UserInvitesInput
- name: manage_team_users
  endpoint:
    path: /updateTeamUser
    method: POST
    data_selector: updateTeamUser
    params:
      input: TeamUserUpdateInput
- name: organization_details_by_id
  endpoint:
    path: /graphql
    method: POST
    data_selector: organization
    params:
      id: '5755578'
      whereRoles:
        roleLevels:
        - ORGANIZATION
      papiWhere:
        roleLevels:
        - TEAM_ENVIRONMENT
      whereOrgTeam:
        orgId: '5755578'
        parentId: '5755578'
      defaultRoleWhere:
        roleLevels:
        - USER_ORGANIZATION
- name: organizations_details
  endpoint:
    path: /graphql
    method: POST
    data_selector: organizations
    params:
      where:
        userId: YOUR_USER_ID
- name: categories
  endpoint:
    path: /categories
    method: POST
    data_selector: categoriesV2
    params: {}
- name: create_organization
  endpoint:
    path: /createOrganization
    method: POST
    data_selector: createOrganization
    params: {}
- name: organization_details
  endpoint:
    path: /organization
    method: GET
    data_selector: organization
    params:
      id: ORG_ID
- name: tag_definitions
  endpoint:
    path: /tagDefinitions
    method: GET
    data_selector: tagDefinitions
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: getGateways
  endpoint:
    path: /gatewayInstances
    method: GET
    data_selector: nodes
- name: createGWInstance
  endpoint:
    path: /createGatewayInstance
    method: POST
    data_selector: id
- name: updateGWInstance
  endpoint:
    path: /updateGatewayInstance
    method: POST
    data_selector: id
- name: deleteGWInstance
  endpoint:
    path: /deleteGatewayInstance
    method: POST
    data_selector: id
- name: organization_details_by_id
  endpoint:
    path: /organizations
    method: POST
    data_selector: organization
    params:
      id: '5755578'
      whereRoles:
        roleLevels:
        - ORGANIZATION
      papiWhere:
        roleLevels:
        - TEAM_ENVIRONMENT
      whereOrgTeam:
        orgId: '5755578'
        parentId: '5755578'
      defaultRoleWhere:
        roleLevels:
        - USER_ORGANIZATION
- name: all_organizations_details
  endpoint:
    path: /organizations
    method: POST
    data_selector: organizations
    params:
      where:
        userId: YOUR_USER_ID
- name: single_organization_details
  endpoint:
    path: /organizations
    method: POST
    data_selector: organizations
    params:
      where:
        slugifiedName: platform-management
- name: categories
  endpoint:
    path: /categories
    method: POST
    data_selector: nodes
    params: {}
- name: get_gateway_templates
  endpoint:
    path: /getGWTemplates
    method: POST
    data_selector: gatewayTemplates.nodes
    params: {}
- name: create_gateway_template
  endpoint:
    path: /createTemplate
    method: POST
    data_selector: createGatewayTemplate
    params: {}
- name: update_gateway_template
  endpoint:
    path: /updateTemplate
    method: POST
    data_selector: updateGatewayTemplate
    params: {}
- name: delete_gateway_template
  endpoint:
    path: /deleteTemplate
    method: POST
    data_selector: deleteGatewayTemplate
    params: {}
- name: tag_definitions
  endpoint:
    path: /tagDefinitions
    method: GET
    data_selector: tagDefinitions
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections.data
- name: apiTrafficAnalytics
  endpoint:
    path: /apiTrafficAnalyticsSummary
    method: POST
    data_selector: data.apiTrafficAnalyticsSummary
    params:
      fromDate: '2024-03-21T07:00:00.000Z'
      toDate: '2024-03-28T22:53:09.586Z'
      resolution: DAYS
      apiIds:
      - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
      timeOffset: 0
- name: getGateways
  endpoint:
    path: getGateways
    method: POST
    data_selector: gatewayInstances.nodes
    params: {}
- name: createGatewayInstance
  endpoint:
    path: createGWInstance
    method: POST
    data_selector: createGatewayInstance
    params: {}
- name: updateGatewayInstance
  endpoint:
    path: updateGWInstance
    method: POST
    data_selector: updateGatewayInstance
    params: {}
- name: deleteGatewayInstance
  endpoint:
    path: deleteGWInstance
    method: POST
    data_selector: null
    params: {}
- name: apiTrafficAnalytics
  endpoint:
    path: /apiTrafficAnalytics
    method: POST
    data_selector: data.apiTrafficAnalytics
- name: get_api_gateway_templates
  endpoint:
    path: /getGWTemplates
    method: POST
    data_selector: gatewayTemplates.nodes
    params: {}
- name: create_api_gateway_template
  endpoint:
    path: /createTemplate
    method: POST
    data_selector: createGatewayTemplate
    params: {}
- name: update_api_gateway_template
  endpoint:
    path: /updateTemplate
    method: POST
    data_selector: updateGatewayTemplate
    params: {}
- name: delete_api_gateway_template
  endpoint:
    path: /deleteTemplate
    method: POST
    data_selector: null
    params: {}
- name: apiTrafficAnalyticsFacets
  endpoint:
    path: /apiTrafficAnalyticsFacets
    method: POST
    data_selector: apiTrafficAnalyticsFacets
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: calculatedStatistics
    params: {}
- name: apiTrafficAnalyticsSummary
  endpoint:
    path: /apiTrafficAnalyticsSummary
    method: POST
    data_selector: data.apiTrafficAnalyticsSummary
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-21T07:00:00.000Z'
        toDate: '2024-03-28T22:53:09.586Z'
        timeOffset: 0
        resolution: DAYS
- name: requestLogsByEntity
  endpoint:
    path: /requestLogsByEntity
    method: POST
    data_selector: requests
    params:
      fromDate: '2023-01-10T19:48:15.350Z'
      toDate: '2023-01-17T19:48:15.350Z'
      offset: 10
      limit: 10
      orderBy: callTime
      orderDir: desc
      filters:
        apiIds:
        - api_6024cb01-90f9-4e84-a756-3768a35808da
      timeOffset: 0
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: requests
    params:
      projectId: 61784bcd6deb162134b9659d
      fromDate: '2024-03-16T00:00:00.000Z'
      toDate: '2024-04-15T20:39:38.206Z'
      offset: 0
      limit: 10
      orderBy: callTime
      orderDir: desc
      filters:
        projectIds:
        - 61784bcd6deb162134b9659d
      showDeleted: true
      timeOffset: 0
- name: apiTrafficAnalytics
  endpoint:
    path: ''
    method: POST
    data_selector: data.apiTrafficAnalytics
    params:
      where:
        fromDate: '2024-02-16T00:00:00.000Z'
        toDate: '2024-03-23T19:27:55.232Z'
        resolution: DAYS
- name: apiTrafficAnalyticsFacets
  endpoint:
    path: /apiTrafficAnalyticsFacets
    method: POST
    data_selector: data.apiTrafficAnalyticsFacets
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: data.calculatedStatistics
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: apiTrafficAnalyticsLogs
    params:
      fromDate: '2024-03-23T07:00:00.000Z'
      toDate: '2024-03-30T22:46:09.121Z'
      apiIds:
      - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
      pagination:
        first: 10
        after: ''
- name: logPayloadByRequestIdWithLoggingRestrictions
  endpoint:
    path: /logPayloadByRequestIdWithLoggingRestrictions
    method: POST
    data_selector: logPayloadByRequestIdWithLoggingRestrictions
    params:
      requestId: 8c3d64b72726fe465d833a5c189e1d7401408690ecb8769c2518daddeacc6486
      callTime: Fri, 29 Mar 2024 22:54:33 GMT
      apiId: api_28f03d6e-955e-4f13-bed8-f574ff7530a2
- name: total_number_of_apis
  endpoint:
    path: /getHubMetrics
    method: POST
    data_selector: metrics
    params: {}
- name: api_metrics
  endpoint:
    path: /getApiMetrics
    method: POST
    data_selector: metrics
    params: {}
- name: requestLogsByEntity
  endpoint:
    path: /requestLogsByEntity
    method: POST
    data_selector: requests
    params:
      fromDate: '2023-01-10T19:48:15.350Z'
      toDate: '2023-01-17T19:48:15.350Z'
      offset: 10
      limit: 10
      orderBy: callTime
      orderDir: desc
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: requests
    params:
      projectId: 61784bcd6deb162134b9659d
      fromDate: '2024-03-16T00:00:00.000Z'
      toDate: '2024-04-15T20:39:38.206Z'
      offset: 0
      limit: 10
      orderBy: callTime
      orderDir: desc
      showDeleted: true
- name: governance_metrics
  endpoint:
    path: /metrics/governance
    method: POST
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710806400
        toDate: 1711460907
        excludeProtected: true
- name: billing_metrics
  endpoint:
    path: /metrics/billing
    method: POST
    data_selector: data.metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: audit_login
  endpoint:
    path: /auditLogin
    method: POST
    data_selector: auditLogin
    params: {}
- name: admin_audit_logs
  endpoint:
    path: /adminAuditLogs
    method: POST
    data_selector: adminAuditLogs
    params: {}
- name: apiTrafficAnalyticsLogs
  endpoint:
    path: /apiTrafficAnalyticsLogs
    method: POST
    data_selector: data.apiTrafficAnalyticsLogs
    params:
      where:
        apiIds:
        - api_28f03d6e-955e-4f13-bed8-f574ff7530a2
        fromDate: '2024-03-23T07:00:00.000Z'
        toDate: '2024-03-30T22:46:09.121Z'
        timeOffset: 0
      orderBy:
      - by: DESC
        fieldName: DATE_TIME
      pagination:
        first: 10
        after: ''
- name: logPayloadByRequestIdWithLoggingRestrictions
  endpoint:
    path: /logPayloadByRequestIdWithLoggingRestrictions
    method: POST
    data_selector: data.logPayloadByRequestIdWithLoggingRestrictions
    params:
      requestId: 8c3d64b72726fe465d833a5c189e1d7401408690ecb8769c2518daddeacc6486
      callTime: Fri, 29 Mar 2024 22:54:33 GMT
      apiId: api_28f03d6e-955e-4f13-bed8-f574ff7530a2
- name: event_logs
  endpoint:
    path: eventLogs
    method: query
    data_selector: edges
    params: {}
- name: event_config
  endpoint:
    path: eventConfig
    method: query
    data_selector: id
    params: {}
- name: upsert_event_config
  endpoint:
    path: upsertEventConfig
    method: mutation
    data_selector: secret
    params: {}
- name: create_event_url
  endpoint:
    path: createEventUrl
    method: mutation
    data_selector: id
    params: {}
- name: update_event_url
  endpoint:
    path: updateEventUrl
    method: mutation
    data_selector: id
    params: {}
- name: delete_event_url
  endpoint:
    path: deleteEventUrl
    method: mutation
    data_selector: id
    params: {}
- name: total_apis
  endpoint:
    path: /getHubMetrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: '2024-03-19T00:00:00.000Z'
        toDate: '2024-03-26T13:48:27.535Z'
- name: api_metrics
  endpoint:
    path: /getApiMetrics
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: governance_metrics
  endpoint:
    path: /metrics/governance
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: 1710806400
        toDate: 1711460907
        excludeProtected: true
- name: billing_metrics
  endpoint:
    path: /metrics/billing
    method: POST
    data_selector: metrics
    params:
      where:
        fromDate: 1710658800
        toDate: 1711436399
        excludeProtected: true
- name: audit_login
  endpoint:
    path: /auditLogin
    method: POST
    data_selector: auditLogin
- name: admin_audit_logs
  endpoint:
    path: /adminAuditLogs
    method: POST
    data_selector: adminAuditLogs
- name: apis
  endpoint:
    path: /apis
    method: POST
    data_selector: edges
    params:
      pagination:
        first: 5
- name: event_logs
  endpoint:
    path: /eventLogs
    method: POST
    data_selector: edges
    params: {}
- name: event_config
  endpoint:
    path: /eventConfig
    method: POST
    data_selector: id
    params: {}
- name: createApi
  endpoint:
    path: /createApi
    method: mutation
    data_selector: id
- name: apis
  endpoint:
    path: /apis
    method: POST
    data_selector: edges
    params:
      pagination:
        first: 5
- name: Create API
  endpoint:
    path: /v1/apis
    method: POST
    data_selector: data
    params: {}
- name: Update API
  endpoint:
    path: /v1/apis/rapidapi-file/admin/{apiId}/versions/{versionId}
    method: PUT
    data_selector: data
    params: {}
- name: Delete API
  endpoint:
    path: /v1/apis/{apiId}
    method: DELETE
    data_selector: data
    params: {}
- name: createApi
  endpoint:
    path: /createApi
    method: POST
    data_selector: id
    params: {}
- name: Create Collection
  endpoint:
    path: /collections
    method: POST
    data_selector: collection
    params: {}
- name: Update Collection
  endpoint:
    path: /collections/{collectionID}
    method: PUT
    data_selector: collection
    params: {}
- name: Delete Collection
  endpoint:
    path: /collections/{collectionID}
    method: DELETE
    data_selector: collection
    params: {}
- name: create_collection
  endpoint:
    path: /collections/create
    method: POST
    data_selector: data
    params: {}
- name: update_collection
  endpoint:
    path: /collections/update
    method: POST
    data_selector: data
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/delete
    method: DELETE
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: data
    params:
      email: any-user-email@example.com
- name: user_teams
  endpoint:
    path: /admin/users/{userId}/teams
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: app_details
  endpoint:
    path: /apps/{projectId}
    method: GET
    data_selector: data
- name: app_authorizations
  endpoint:
    path: /apps/{projectId}/authorizations
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: data
    params:
      email: any-user-email@example.com
- name: user_teams
  endpoint:
    path: /admin/users/{userId}/teams
    method: GET
    data_selector: data
    params:
      email: any-user-email@example.com
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: app_details
  endpoint:
    path: /apps/{projectId}
    method: GET
    data_selector: data
- name: app_keys
  endpoint:
    path: /apps/{projectId}/keys
    method: GET
    data_selector: data
- name: application_authorizations
  endpoint:
    path: /applicationAuthorizations
    method: POST
    data_selector: data
- name: authorization_update
  endpoint:
    path: /mutation.updateApplicationAuthorization
    method: POST
- name: authorization_delete
  endpoint:
    path: /mutation.deleteApplicationAuthorization
    method: POST
- name: app_delete
  endpoint:
    path: /DELETE App
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.calculatedStatistics
- name: API Traffic Analytics
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.trafficAnalytics
- name: Hub Usage Metrics
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.hubUsageMetrics
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: data.calculatedStatistics
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: GET
    data_selector: metrics
    params: {}
- name: API Usage Analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: usageMetrics
    params: {}
- name: API Traffic Analytics
  endpoint:
    path: /trafficAnalytics
    method: GET
    data_selector: trafficData
    params: {}
- name: Hub Usage Metrics
  endpoint:
    path: /hubUsageMetrics
    method: GET
    data_selector: hubMetrics
    params: {}
- name: Administration
  endpoint:
    path: /administration
    method: GET
    data_selector: adminData
    params: {}
- name: calculatedStatistics
  endpoint:
    path: /calculatedStatistics
    method: POST
    data_selector: data.calculatedStatistics
    params:
      apiIds:
      - ''
      - api_04849dbb-4515-4dd3-899e-420e9af8076d
      - api_05433514-c272-4a59-a4f1-6cd281032c1a
      fromDate: '2022-12-06'
      toDate: '2023-01-05'
      resolution: days
notes:
- You must have Enterprise Access to the Platform API to use the 'on-behalf-of' functionality.
- If you are calling an endpoint on-behalf-of of an org admin, that org admin must
  have their Personal Context enabled.
- An API hub provides a centralized catalog for helping developers, product managers,
  IT, and API creators to find, manage, and connect to all APIs — using a single key
  and SDK.
- A user can be both an API builder and consumer. Additionally, a user can belong
  to multiple organizations and teams.
- Rapid Runtime is responsible for proxying API requests.
- Usage analytics are not automatically available in Rapid when using only third-party
  gateways.
- Integrates existing tools in your API Management ecosystem to the RapidAPI Enterprise
  API Hub
- Changing your email address or password is only possible if your password is managed
  by RapidAPI. These options are not available for single sign-on options such as
  Login with Google.
- It is extremely important to know how close you are to the quota limit for your
  subscription.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Creating an app within Rapid generates an API key specific to that app.
- You must have an app on the RapidAPI Developer Dashboard to access an API key.
- If you opt to have multiple projects under a single RapidAPI account, keep in mind
  that pricing is based on account-wide usage.
- Does not include periods with 0 calls
- If the total amount of an invoice is less than 50 US cents, a charge will not occur.
- API consumers can obtain authorization credentials without needing to enter values
  such as the Client ID and Client Secret.
- API consumers can request OAuth2 credentials from an Environment Admin.
- Build, test, publish, and manage high-quality APIs.
- Studio is a tightly-integrated set of tools used by an API provider.
- 'You can import the data in the following formats: OpenAPI, Postman Collection,
  GraphQL Schema, Kafka.'
- Ensure API key is included in the header for requests.
- Logos are uploaded to and hosted on Rapid's infrastructure.
- Categories are created by Rapid administrators.
- 'The short description for an API will show in the following two places: The API''s
  tile on the API Hub page and in search results.'
- The optional long description is displayed under the short description on the Endpoints
  tab of the API listing.
- The Website field in Studio is used to link to the main website related to the API.
- The Terms of use (terms of service) field in Studio is used to link to a popup window
  that displays the terms of use.
- APIs in a Hub have visibility that can be either private or public.
- Tags can be used to better categorize APIs based on custom attributes.
- All API endpoints are relative to a base URL, which is added as a 'prefix' to all
  API endpoints.
- API Hub Runtime supports secure communication with backend services using both standard
  CA certificates and self-signed SSL certificates.
- Transformations allow you to add, remap, or remove headers, query parameters, or
  bodies in API requests and API responses.
- This functionality uses the Rapid Runtime. If you are an Enterprise Hub customer
  and your API does not use the Rapid Runtime, this page does not apply.
- Remapping a field in the body of the request to a new header.
- Specify the condition to identify what to do if the target parameter already exists.
- All APIs are automatically configured to use the Rapid Runtime.
- Every request coming from the Rapid Runtime will come from one of the listed IP
  addresses.
- This functionality uses the Rapid Runtime.
- If you are an Enterprise Hub customer and your API does not use the Rapid Runtime,
  this page does not apply.
- 'Transformations work on the following keys: Header, Body, Form field, Query parameter.'
- Headers added by the Rapid Runtime to API requests.
- Custom Token feature is in private beta — contact support for access.
- Enterprise Hub feature only
- Available via Studio and the GraphQL Platform API only
- Be sure to click Free Users to view them.
- Free API plans are limited to 1000 requests per hour and 500K requests per month.
- Above 500K request per month, the minimum price per API call is $0.00003.
- To read more about payouts and forgiveness, see our Payouts and Finance section
- Each RapidAPI user gets a single, multi-API key, enabling quick setup and convenient
  management.
- Keep pricing clear and transparent from the beginning.
- Focus on being helpful first, promoting your API second.
- Rapid only pays out API providers via PayPal.
- We do not refund any overage without your explicit permission.
- Rapid incorporates an industry-standard credit card verification and anti-fraud
  solution to prevent fraudulent charges.
- Rapid will make payouts to the API provider only when Rapid has received final payments
  from or on behalf of the user.
- This page is for informational purposes only and isn't a substitute for legal advice
  about your specific situation.
- Testing of SOAP APIs is not supported. It is assumed that API consumers have other
  tools to test SOAP APIs.
- Monetization and API gateway features are not supported.
- Other tabs in Studio (Requests, Tests, Analytics) are not supported for SOAP APIs.
- Spotlights are publicly accessible
- Enterprise Hubs can be configured to not use Spotlights. Contact your Rapid representative
  if you would like to disable Spotlights on your hub.
- Analytics for API providers is available through Studio (My APIs)
- Consumer analytics is available via the Developer Dashboard (Apps)
- Admin analytics can be found on the Admin Panel and can be obtained using the GraphQL
  Platform API
- Explains the types of aggregations available on analytics pages for each of the
  main dimensions (volume/error/latency), and how they are calculated.
- Analytics can be analyzed for different time periods and resolutions depending on
  the subscription level.
- When viewing API traffic analytics, it is possible to change the time period. For
  each time period, the supported resolutions will change.
- 'If you click on the Analytics tab and see a Log Collection Methods heading, that
  means one of two things: Your API uses the Rapid Runtime, but no calls have been
  made to the API. You can use the API Playground (the API Hub) to make calls to your
  endpoint. After a few minutes, the Analytics tab should be populated.'
- Your API has been configured to not use the Rapid Runtime. To populate the Analytics
  tab, you must use the Platform Analytics API or one of Rapid's Analytics Gateway
  Integrations instead.
- Logs can be exported and analyzed using external tools like excel.
- The content section is currently not available for logs being imported via the Platform
  Analytics API.
- If you have a custom DNS your setup might be slightly different, please contact
  your technical account manager if you are not sure how to proceed.
- If you API already has access logs in a different format your setup might be slightly
  different, please contact customer support if you are not sure how to proceed.
- By default, logs sent are anonymous
- This feature is currently in preview and may experience issues.
- Uses a JavaScript policy to send logs to the Platform Analytics API
- By design, Apigee does not call the postflow steps when an error is returned from
  the service
- Configure the API Management Policy for all APIs to send one-way requests in the
  outbound processing.
- You can import requests into your API Project from an API spec file, remote URL,
  or text input.
- API may have rate limits that should be considered during integration.
- Some sub-tabs may not be populated if there is no data of that sub-tab type in the
  response.
- Flow control steps are color-coded purple in the visual editor.
- An Environment is a context created in RapidAPI to simplify running the same test
  on different deployments.
- Environment variables are not scoped to a specific test but are available for all
  the tests in an API Project.
- Variables are key-value pairs that save data for easy reuse and referencing in multiple
  test steps.
- Environment variables are only accessible when executing a test on their housed
  environment.
- You can build custom tests using the Visual Editor.
- Each test you create will have test-specific settings you can edit, including timeout.
- You can edit the test's execution and default HTTP request timeouts (in seconds).
- If frequency is undefined, the worker will only fetch new tests once.
- With frequency less than 2000 ms, you may get 429 (rate limiting) errors.
- Uses OAuth2 with refresh token — requires setup of connected app in rapidapi
- The ability to run code at any point within your test definition already gives you
  a lot of flexibility to manipulate data, get the current date, etc.
- JWT Encode and Decode steps can be used in testing workflows.
- 'Faker Generate supports multiple categories of fake data including: name, address,
  company, images, phone number, date, time, and more.'
- API monitoring is the practice of observing the performance, availability, and accuracy
  of your APIs over time.
- You can schedule a test to reoccur at regular intervals.
- This can help you monitor the API's performance over time.
- Daily email summaries will be sent to every member of the organization if enabled.
- Configurable test retry and alerts in the Failures & Alerts section of API Project's
  Testing Settings.
- On Error alerts are sent after a selected number of consecutive test failures (including
  retries).
- On Recovery alerts are sent when a test recovers from a failure.
- Redirects are blocked in webhook alerts
- Using triple brackets for JSON data ensures that the JSON payload does not get interpreted
  as an HTML entity.
- API Hub for Teams is a feature of rapidapi.com.
- Enterprise Hub customers can create and manage organizations.
- The first 5 seats are free, and every additional seat costs $10 per month.
- The number of users you can add to an organization or team is currently uncapped.
- The first five users in an organization are free, and every additional seat is $10
  per month.
- The number of organizations or teams you can create is currently uncapped.
- To create an organization, provide an Organization name and the number of seats.
- To import from GitHub, you must log into GitHub as an admin and provide the read:org
  and user:email scopes.
- Custom collections show up above standard team collections.
- The Transactions tab is mostly related to teams on rapidapi.com.
- Enterprise Hub customers who monetize their APIs would also use this tab.
- API builders can request to make team's API public from Studio.
- Requests to join an organization must be approved by organization admins.
- The Billing & Payment Settings tab allows you to add billing information and payment
  settings.
- Displays organization-related audit logs for governance and compliance.
- This feature must be enabled by an Admin on the Organization Settings page.
- Uses OAuth2 with refresh token — requires setup of connected app in RapidAPI
- Search term insights is a beta feature.
- Data is updated with a delay of up to 20 minutes.
- Includes up to 1000 of the most recent results
- Results can be filtered by user type and timespan
- The Analytics and usage tab provides call volume, error rate, and latency.
- You can filter results to specific endpoints and other parameters.
- The Transactions tab shows monetization information if applicable.
- Your Enterprise Hub may not be configured to use this exact user approval process.
  Speak with your RapidAPI representative for approval configuration options.
- The Audit Trails tab only lists logs for changes made in the Admin Panel by environment
  admins.
- You must add a callback URL to begin seeing events
- Users are uniquely identified by email address.
- 'A user can have one of four statuses: ACTIVE, DEACTIVATED, DELETED, PENDING.'
- An API can appear in multiple collections
- APIs in a collection must be public
- CSS rules do not apply to an iFrame in the API listing pages (the ones with the
  Test Endpoint button).
- You must have configured a code template before adding an API gateway.
- This page is unofficial and unsupported. Consult the Amazon API Gateway documentation
  for more information.
- Remember to deploy your API after making changes in Amazon API Gateway.
- CORS error messages are only displayed in the browser's console. Make sure to check
  there for error messages.
- The response to your actual endpoint method must include the `Access-Control-Allow-Origin`
  response header with the value set to your Enterprise Hub URL.
- An Environment Admin can add or modify HTML tags for most pages in the Enterprise
  Hub.
- Invoice billing is available but requires manual processing.
- Billing using your Stripe account requires configuration.
- Roles specify what users can see and do in the Hub given certain contexts.
- Roles enable fine-tuned control over administrative tasks, creating organizations,
  and creating APIs.
- All methods except email and password are used for single sign-on (SSO).
- The email and password method can be disabled.
- The specific page URL does not include a trailing /.
- Must be enabled on your Enterprise Hub.
- Because of the way DNS works, it can take a while before it's possible to verify
  that you've created the DNS records correctly.
- This process normally only takes a few minutes, and rarely takes more than an hour
  if you've created the records correctly, soon after starting the Custom Domain creation
  flow.
- It's extremely unlikely to take longer than 24h. If that happens, start over, or
  contact support.
- Restricting Access to Publishing APIs & Subscribing to APIs can be managed using
  API Publishing Approval feature.
- It is recommended that you perform these queries and mutations in your Personal
  Account.
- Requires a valid apiId for most queries.
- The API supports pagination and filtering based on ownerId and visibility.
- The GraphQL Platform API is available only to Enterprise Hub customers.
- Environment admin can update any API using their personal account.
- Team must have access to the GraphQL Platform API.
- The API's visibility can be changed by an environment admin or a team member.
- To create an API in a team context, you must include the x-rapidapi-identity-key
  header parameter.
- You must specify the API version ID to upload assets.
- Automatically update an API's documentation in Rapid when a README.md file is updated
  in a GitLab repository.
- Environment variables must be set in GitLab for API ID, API key, and host.
- The date range can not be larger than 31 days.
- Data is only available for the most recent 90 days.
- There will be a limitation of 10 successful calls to `generateFile` per calendar
  month.
- Once a file is generated, it is available to be downloaded for a period of 5 days.
- Additional consideration is needed to allow using this process in conjunction with
  API plans that include hard limits.
- This query only works for the current user. You currently cannot list another user's
  apps using this query.
- Requires user email and admin user ID for access
- Uses on-behalf-of functionality for REST API
- Requires enterprise access to the Platform API for certain functionalities.
- Uses x-rapidapi-key for access — requires enterprise access to the platform API
- To query by a user's email, use the where input with email.
- Include your API key from your personal account in the x-rapidapi-identity-key header.
- Environment Admin must execute queries from Personal Account.
- API key must be specified in the x-rapidapi-identity-key header.
- This API requires the user to be an Environment Admin.
- Queries must be executed from a Personal Account.
- This query requires that the user is an Environment Admin.
- Only organizations where the Personal Account key is an org admin will be returned.
- This query requires the user to be an Environment Admin.
- Using apiTrafficAnalyticsSummary query is usually recommended
- Logins using a browser cookie are not listed in the audit log.
- Use arguments to narrow searches and order results
- On-behalf-of functionality is not currently implemented in the GraphQL Platform
  API.
- Currently, the GraphQL Platform API is limited to 10 requests per minute per user.
- The Platform API is for Enterprise Hub customers only.
- It is highly recommended that enterprise customers use the GraphQL Platform API
  instead of the REST Platform API.
- Deleting an API is permanent and cannot be undone.
- Endpoints require Environment Admin Access to the Platform API.
- Enterprise Hub customers only
- The Get all App Keys endpoint currently is used only to obtain X-RapidAPI-Key values.
- Deleting an API is permanent
- Deleting a collection is not reversible.
- Requires setup of connected app in API
- Users need no special access to the platform API
- The Testing applicationEnvironmentName is not used.
- If you don't see that optional header, please contact your Rapid representative.
- Currently, you must use the GraphQL Platform API to update or delete an authorization
  within an app.
- The key used must have Environment Access to the REST Platform API.
- 'Single Sign-On (SSO) Enhancement: In Enterprise Hubs where users authenticate with
  SSO, you can now capture the user’s Name attribute to be used in the profile on
  the hub.'
- The GraphQL Platform API and documentation has been updated to include queries that
  Environment Admins can use to programmatically read aggregate metrics from an Enterprise
  Hub.
- The GraphQL Platform API and documentation have been updated to include queries
  related to obtaining API request/response logs.
- The GraphQL Platform API and documentation have been updated to include queries
  related to obtaining single API and aggregate API request analytics.
- Rapid sends emails to users on your behalf, such as when they are invited to join
  an organization.
- Enterprise Hub customers now have the option to monetize APIs on their Enterprise
  Hub using their own Stripe account.
- Uses RapidAPI for authentication and authorization.
- If you host your own login button to the Enterprise Hub, previously by default the
  logged in user will be taken to the /hub page.
- You must use the GraphQL Platform API to create an authorization (or X-RapidAPI-Key)
  within an app.
- Example only
- The following code shows an example of using the REST Platform API. It is provided
  'as is' and is not supported by Rapid's support team.
- key used must have Environment Access to the REST Platform API
- Configuring additional API security (such as OAuth) will move to the Hub Listing
  > Definitions > Security tab.
- OAuth 2 PASSWORD grant type is now supported.
- Your company's custom API ID can be associated with Rapid's API ID, allowing you
  to search for an API in Rapid using your custom ID.
- SOAP APIs now support multiple versions.
- Single Sign-On (SSO) enhancement allows capturing the user’s Name attribute for
  profile use.
- APIs now support authorizations of type BEARER.
- APIs now support OAuth2 password grant types.
- The GraphQL Platform API and documentation have been updated to include queries
  that Environment Admins can use to programmatically read aggregate metrics from
  an Enterprise Hub.
- The GraphQL Platform API and documentation have been updated to include queries
  related to obtaining single API and aggregate API request analytics from API consumer,
  API provider, and/or admin perspectives.
- Support for Header and Basic authentication for API Access Provisioning (Preview).
- Initial support for API Access Provisioning Approvals (Preview).
- Support for the WS-Federation login method.
- If you host your own login button to the Enterprise Hub, previously by default the
  logged in user will be taken to the /hub page. We have added the ability to directly
  log in to other pages, such as the Organization Homepage or the Developer Dashboard
  (Apps), using the referral URL query parameter in the button's link.
- If your enterprise would prefer to bill API consumers using your existing billing
  system, Rapid makes it easy for you to export subscription and usage data as CSV
  files.
- For environment admins, the user experience has been improved for configuring and
  enabling login options (such as Okta login) on your Enterprise Hub.
- New GraphQL API provides access to API traffic metrics.
- New authorization types include OAuth Client Credentials, Authorization Code, Basic
  Authorization, and Header Authorization.
- Uses API key authentication
- Ensure proper API key usage to avoid rate limits
- New Log Forwarding Options Page requires setup of connected app in RapidAPI
- Analytics Admin Panel metric charts 'from date' will now start at the beginning
  of the day
- During September of 2023, configuring additional API security (such as OAuth) will
  move from the Hub Listing > Gateway tab of Studio to the Hub Listing > Definitions
  > Security tab. The major benefit of this change is that security can configured
  for individual endpoints, rather than only for the entire API. This involves creating
  security schemes for an API, as described in Configuring API Security.
- New Authorization Types include OAuth Client Credentials, Authorization Code, Basic
  Authorization, and Header Authorization.
- Please work with your RapidAPI representative to enable log forwarding options.
- All widgets on the Admin Panel Dashboard now have an info popover that describes
  what the widget measures, and how to use the information.
- Results can be narrowed down by API, Endpoint, and App.
- Hub Static Asset Management enabled for API providers to share static assets with
  consumers.
- RapidAPI Studio is in General Availability (GA) with new features.
- Results can be narrowed down by API, Endpoint, App.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: bad request'
- '413: Request size limit exceeded'
- '504: Gateway Timeout'
- '429 Too Many Requests: Rate limit exceeded.'
- fault.name = 'ErrorResponseCode'
- 200 OK
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '429 Too Many Requests: Rate limit exceeded'
- This action will fail the test
- Alert fatigue can be reduced by setting a limit to the frequency of On Error alerts
  during a failure state.
- You have reached your rate limit for the Beta version, please wait and try again.
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Ensure the API id is correct.'
- '400 Bad Request: Validate the structure of your query.'
- 'LimitExceeded: Request will be denied when exceeding the limit of successful calls
  to `generateFile`.'
- '404 Not Found: Check the endpoint URL'
- '401 Unauthorized: Verify API key or user permissions'
- '404 Not Found: The specified app or endpoint does not exist.'
- '403 Forbidden: Access denied, check permissions.'
- '401 Unauthorized: Ensure you have the correct permissions and API key.'
- '400 Bad Request: Check the input fields for validity.'
- '429 Too Many Requests: Exceeding rate limit'
- '429 Too Many Requests: Your code should include retry attempts to account for this
  rate limit.'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check API key validity'
- 'REQUEST_OR_RESPONSE_BODY_FAILED_PROCESSING: This occurs when using the REST PAPI
  create and update API version ASYNC endpoints'
- 'Too many requests: This error would appear when updating an APIs definition'
- 'REQUEST_OR_RESPONSE_BODY_FAILED_PROCESSING: Error appears when using the REST PAPI
  create and update API version ASYNC endpoints.'
- 'Too many requests: Error would appear when updating an API''s definition.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Authorization
  - Apps
  - Environment Admin
  - Username
  - Password
  - User
  - ProjectCreateInput
  - AppAuthorizationCreateInput
  - UserWhereInput
  - UserUpdateInput
  - PagingArgs
  - EntityRoleInput
  - TeamWhereInput
  - UserInvitesInput
  - TeamUserUpdateInput
client:
  base_url: https://rapidapi.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
