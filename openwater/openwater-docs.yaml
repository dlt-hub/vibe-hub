resources:
- name: user_profile
  endpoint:
    path: /api/user_profile
    method: GET
    data_selector: fields
    params: {}
- name: admin_account
  endpoint:
    path: /admin/accounts
    method: POST
    data_selector: records
- name: authenticated_domains
  endpoint:
    path: /system/settings/authenticated_domains
    method: GET
    data_selector: domains
    params: {}
- name: guest_submission
  endpoint:
    path: /api/guest_submission
    method: POST
    data_selector: submissions
    params: {}
- name: payment_configuration
  endpoint:
    path: /apikeys
    method: GET
- name: evaluation_form
  endpoint:
    path: /evaluation/forms
    method: GET
    data_selector: forms
    params: {}
- name: scores_results
  endpoint:
    path: /scores/results
    method: POST
    data_selector: results
    params: {}
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: GET
    data_selector: records
- name: applicants
  endpoint:
    path: /api/v1/applicants
    method: GET
    data_selector: records
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: GET
    data_selector: records
- name: applicant
  endpoint:
    path: /v1/applicants
    method: GET
    data_selector: data
    params: {}
- name: submission_export
  endpoint:
    path: /export/submissions
    method: GET
    data_selector: exports
- name: judges
  endpoint:
    path: /judges
    method: GET
    data_selector: records
- name: submissions
  endpoint:
    path: /submissions
    method: GET
    data_selector: records
- name: judges
  endpoint:
    path: /judges
    method: GET
    data_selector: records
- name: email_blast
  endpoint:
    path: /email_blast/send
    method: POST
    data_selector: response
    params: {}
- name: judging_results
  endpoint:
    path: /judging/results
    method: GET
    data_selector: results
    params: {}
- name: submission
  endpoint:
    path: /forward_submission
    method: POST
    data_selector: submission_status
    params: {}
- name: ApplicationSurveyTabulationReport
  endpoint:
    path: /v2/Export/Reports/{reportId}/ApplicationSurveyTabulationReport
    method: GET
    data_selector: records
- name: submission_files
  endpoint:
    path: /api/submissions/files
    method: GET
    data_selector: files
    params: {}
- name: submission_pdfs
  endpoint:
    path: /api/submissions/pdfs
    method: GET
    data_selector: pdfs
    params: {}
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params: {}
- name: submissions
  endpoint:
    path: /api/submissions
    method: GET
    data_selector: records
    params: {}
- name: abstracts
  endpoint:
    path: /api/v1/abstracts
    method: GET
    data_selector: abstracts
    params: {}
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: GET
    data_selector: data
    params: {}
- name: abstracts
  endpoint:
    path: /api/v1/abstracts
    method: GET
    data_selector: data
    params: {}
- name: Session Type Groups
  endpoint:
    path: /sessions/type_groups
    method: GET
- name: Sessions Configuration
  endpoint:
    path: /sessions/configuration
    method: GET
- name: session_type_group
  endpoint:
    path: /sessions/type/groups
    method: GET
    data_selector: sessionGroups
- name: session_configuration
  endpoint:
    path: /sessions/configuration
    method: GET
    data_selector: sessionConfigurations
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: rooms
  endpoint:
    path: /api/rooms
    method: GET
    data_selector: rooms
    params: {}
- name: time_slots
  endpoint:
    path: /api/time_slots
    method: GET
    data_selector: time_slots
    params: {}
- name: session_agenda
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: ThriveSubmission
  endpoint:
    path: /higherlogic/external/oauth/connect/authorize
- name: OpenWaterSSO
  endpoint:
    path: /website/content/OpenWaterSSO
    method: POST
- name: OpenWater Login
  endpoint:
    path: /website/content/OpenWaterLogin
    method: POST
- name: user_info
  endpoint:
    path: /OpenWater/GetDataByUserId
    method: GET
    data_selector: data
- name: membership_service
  endpoint:
    path: /asicommon/services/membership/membershipwebservice.asmx?wsdl
    method: GET
- name: query_service
  endpoint:
    path: /asicommon/services/query/queryservice.asmx?wsdl
    method: GET
- name: login_url
  endpoint:
    path: https://{imisInstanceUrl}/OpenWaterRedirect.aspx
    method: GET
- name: CsContact
  endpoint:
    path: /services/data/vXX.X/sobjects/CsContact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /OpenWater/GetDataByUserId
    method: GET
    data_selector: properties
- name: Membership Web Service
  endpoint:
    path: /asicommon/services/membership/membershipwebservice.asmx?wsdl
    method: GET
- name: Query Service
  endpoint:
    path: /asicommon/services/query/queryservice.asmx?wsdl
    method: GET
- name: credentials
  endpoint:
    path: /add_credentials
    method: POST
    data_selector: credentials
    params: {}
- name: field_mapping
  endpoint:
    path: /field_mapping
    method: GET
    data_selector: fields
    params: {}
- name: user_info
  endpoint:
    path: /api/v1/profile/me
    method: GET
    data_selector: profile
- name: user_profile
  endpoint:
    path: /auth/profile
    method: GET
    data_selector: user_data
- name: Authentication
  endpoint:
    path: /CENSSAWEBSVCLIB.AUTHENTICATION
    method: GET
- name: Customer Info
  endpoint:
    path: /CENSSAWEBSVCLIB.GET_CUST_INFO_XML
    method: GET
- name: Customer Details
  endpoint:
    path: /CENSSAWEBSVCLIB.GET_ID_BY_NAME_AND_EMAIL_XML
    method: GET
- name: Decryption
  endpoint:
    path: /CENSSAWEBSVCLIB.DECRYPT_STR_XML
    method: GET
- name: Look Up
  endpoint:
    path: /integrations/hub/lookup
    method: POST
    data_selector: fields
    params: {}
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
- name: prefill
  endpoint:
    path: /prefill
    method: GET
    data_selector: results
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
    params: {}
- name: prefill
  endpoint:
    path: /prefill
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_verification
  endpoint:
    path: /check-if-user-is-allowed
    method: GET
    data_selector: isValid
    params:
      email: test@test.com
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_verification
  endpoint:
    path: /check-if-user-is-allowed
    method: GET
    data_selector: isValid
    params:
      email: test@test.com
- name: submission_form
  endpoint:
    path: /a/solicitations/8/home
    method: GET
    data_selector: fields
    params: {}
- name: autocomplete
  endpoint:
    path: /your-endpoint
    method: GET
    data_selector: '[]'
    params:
      query: '{value user typed in}'
- name: set_field_values
  endpoint:
    path: /your-value-endpoint
    method: GET
    data_selector: '[]'
    params:
      value: '{value received from autocomplete}'
- name: submission
  endpoint:
    path: /a/solicitations/8/home
    method: GET
    data_selector: records
    params: {}
- name: autocomplete
  endpoint:
    path: /your-endpoint
    method: GET
    data_selector: '[]'
    params:
      query: '{value user typed in}'
- name: set_field_values
  endpoint:
    path: /your-value-endpoint
    method: GET
    data_selector: '[]'
    params:
      value: '{value received from autocomplete}'
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All applicants and judges are required to login to OpenWater to participate.
- Many built-in user profile fields are hidden and not in use by default.
- Users receive an auto-generated password to login when added.
- Uses Microsoft Authenticator or Google Authenticator for multi-factor authentication
- If a user forgets their token, an admin can reset it
- Enable multi-factor authentication (MFA) to increase security and meet compliance
  requirements.
- When enabled, users logging in from a new device will be required to enter a code
  sent to their email address.
- 'Magic Link Expires After: This is how many hours the link will work for once it
  is generated'
- You can paste a google sheet as long as the google sheet is cloned from this one
  AND you have set the google sheet to ALLOW ANYONE TO VIEW THIS SHEET
- Supports login with Facebook, Google, and LinkedIn
- Some customers need High Security Mode enabled in order to comply with their internal
  IT security policies.
- Auto-logout after 15 minutes of inactivity.
- User accounts are locked out after 10 failed login attempts.
- Ensure email deliverability and avoid spam
- If your organization uses a proprietary transactional email service like SendGrid,
  MailGun, or sendinblue, you can contact customer support and provide them with your
  SMTP credentials.
- Domain authentication is available by adding the appropriate SPF and DKIM DNS records
  for a customer’s domain.
- 'If your incoming mail server needs to have emails white listed, be sure to set
  us up on that whitelist. Provide them our IP address: 192.254.116.40.'
- OpenWater can provision a SendGrid sub-account on your behalf for an additional
  fee.
- Guests must complete and submit their application in a single session.
- Generating PDFs that include other PDF information can be computationally intensive.
- For best results, the original image size should be less than 25 MB and no more
  than 20 images should exist in a single application.
- Individual PDFs should not be more than 25 MB and no more than 20 PDFs should exist
  in a single application.
- The uploaded PDFs should not be password protected or use digital signatures.
- File is less than 10 MB and is not password protected and is generated using Microsoft
  Office 365 on PC or Mac.
- Authorize.NET, Paypal / Pay Flow Pro, Braintree, and Stripe are currently the best
  payment gateways that our customers are most satisfied with.
- For many gateways, you will find a Payment Coding or Reference Coding field available.
- Be sure to select 'StripeJS' and not the legacy 'Stripe' option.
- Uses HPP or Hosted Payment Page, which minimized the PCI compliance exposure as
  all sensitive content is transmitted through Global Pay servers.
- Request API signature when acquiring credentials.
- Commonly requested is to have a thumbnail image appear next to the submission.
- If you want to completely customize your judging view, you can build it with HTML.
- Edit content on review and checkout pages, my submissions, and login box headings.
- Requires setup of OAuth2 client credentials in OpenWater
- Requires setup of connected app in OpenWater
- Ensure to handle applicant data according to privacy regulations.
- Enables Sub Accounts to group users by organization
- Impersonation feature available for applicants
- Applicants can export their submissions to Excel.
- Allow Public Users to Change Program Scope must be enabled in System Settings >
  System Features
- By default, we show application number, program name, and application title
- Lead judges must be members of the team they manage
- Lead judges must be assigned at least one submission
- The system will not email judges by default when added.
- By default, OpenWater will sort the results from highest average score to lowest.
- Email notification for forwarded applications is off by default.
- You can restrict access to your galleries by requiring visitors to enter a password
  or by requiring them to log in.
- You can further restrict access by selecting Restrict Access to Logged in Users
  Based on Conditions.
- 'Shows the Field Name, the Option Value Selected, # of Times out of Total and the
  % of Total'
- Use Dropbox for faster downloads.
- Some conferences have a committee that review the abstracts before they become available
  to session organizers.
- Invited speakers can submit materials directly without review.
- Uses OAuth2 with refresh token — requires setup of connected app in OpenWater
- Session building occurs in the Call for Abstracts program.
- Conference Sessions can now have different sets of fields depending on the type
  of session.
- Fields can be set to Hidden, Default, Required, or Not Required based on session
  type.
- Requires Session Builder configuration before adding sessions
- General Pool allows abstracts to be available to other sessions.
- Configure timezone for the scheduler.
- Unique email address is used for conflict detection.
- Enables online viewing of session agendas.
- Enable License Setting for Integrations Hub
- User permission for access is managed by OpenWater support staff
- No need for refresh token
- 'OAuth is used by a lot of places and systems, here is a small list of compatible
  providers: GrowthZone, Member Clicks, Microsoft 365 / Microsoft Dynamics, Neon AMS
  / Neon CRM, Novi AMS, Personify, Wild Apricot, YourMembership, CiviCRM (Drupal /
  WordPress), Auth0, Okta.'
- OpenWater supports SAML authentication.
- The Entity ID is typically OpenWater, but you can enter whatever entity ID used
  to assign.
- Use the Integrations Hub module to connect a single sign on to iMIS EMS.
- Available via the REST API needs to be enabled for Integrations Hub to find this
  IQA.
- Your Base URL is your iMIS account URL minus "/staff" at the end
- 'Your iMIS object is going to be the Query Path we set earlier: $/OpenWater/GetDataByUserId'
- Allow 3rd Party Corporate Handshake Authentication must be checked
- Json Web Token should be chosen from the list
- Use the Integrations Hub module to connect a single sign on to iMIS Legacy (20.2
  or earlier) using Web Service and IQAs.
- Advanced Mode must be enabled for filters
- Allow 3rd Party Corporate Handshake Authentication
- Login with {CompanyName}
- Request admin login credentials from your staff if you don't have them already.
- Once published, you can test the integration by clicking 'Test'.
- 'Scopes: read, write, read write'
- You will need at least a basic level of Javascript understanding to format the field
  for public display.
- Requires setup of Json Web Token for authentication
- Ensure the returnUrl is saved for the handshake process
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with JWT — requires setup of connected app in api
- Testing is super important!
- Look Ups are integrations that query an outside source to autofill information for
  the user.
- A Look Up is a set of fields in an OpenWater form that queries an outside source
  to autofill information for the user.
- Google Sheet must be shared to everyone with the link to avoid errors.
- The Google Sheet must be Shared to Everyone with the link.
- Rule must be created before proceeding with Prefill setup.
- Ensure the checkbox 'Available via the REST API' is enabled for the IQA.
- Ensure you have admin login credentials for iMIS.
- Enable 'Available via the REST API' for the IQA.
- Autocomplete and Set Field Values URLs need to be set in the form.
- You can reuse your SSO credentials, or add a different set. It will ask for WSDL
  Name, Username and Password.
- In order to set up a Pushback through Integrations Hub, you must configure an Integrations
  Hub SSO first.
- Request admin login credentials from your staff if you don't have them already (it's
  important that these credentials are admin, other account types will not have access
  to what we need).
- In iMIS, every IQA now has a checkbox for security settings called 'Allow Access
  via REST API'. You must check this box.
- We normally suggest Every Hour for the CRON Expression.
- Uses OAuth for authentication
- iMIS Pay Central is a centralized view of payments within iMIS
- Default settings can be kept during initialization
- Pushback can be disabled per program
- OpenWater requires its own payment gateway configuration
- Some organizations may need to add 'test.' in front of 'salesforce.com' in the URL
  in order to make sure you log into your staging site and not production.
- The 'Manage System' permission is needed
- Failed Web Hooks will be retried 3 times, after that they will appear in the Failed
  tab for your further review
- It may take up to 5 minutes after an event in OpenWater to occur before the webhook
  is fired
- When a webhook receives a failed response 50 consecutive times, it will self disable
  and send the WebHook Deactivated email
- API usage can be enabled for $2,000 per year.
- 'API rates are as follows: 3 or less calls per second, no charge.'
- The feature must be enabled in System Features.
- Failed Web Hooks will be retried 3 times.
- It may take up to 5 minutes after an event in OpenWater to occur before the webhook
  is fired.
- 3 or less calls per second, no charge.
- CORS header is required
- To pre-fill fields, append query string parameters to the submission URL.
errors:
- '508 Incorrect Hash: This often means you were given Sandbox Credentials instead
  of Production Credentials or the shared secret is incorrect.'
- 'Invalid Account ID: This often means the account ID is not accurate.'
- '401 Unauthorized: Check client credentials and token validity'
- '403 Forbidden: Ensure proper permissions are set for the API access'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API credentials'
- '404 Not Found: Requested resource does not exist'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify the authentication details'
- '404 Not Found: Ensure the endpoint exists'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your authentication details.'
- Webhook Deactivated email is sent after 50 consecutive failed responses.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - Json Web Token
  - NamedCredential
client:
  base_url: https://api.openwater.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.openwater.com/oauth/token
    client_id: '{{ dlt.secrets[''openwater_client_id''] }}'
    client_secret: '{{ dlt.secrets[''openwater_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''openwater_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
