resources:
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: waitForEvent
  endpoint:
    path: /pdf
    method: POST
    data_selector: null
    params: {}
- name: rejectResourceTypes
  endpoint:
    path: /pdf
    method: POST
    data_selector: null
    params: {}
- name: gotoOptions
  endpoint:
    path: /pdf
    method: POST
    data_selector: null
    params: {}
- name: bestAttempt
  endpoint:
    path: /pdf
    method: POST
    data_selector: null
    params: {}
- name: pdf_generation
  endpoint:
    path: /pdf
    method: POST
    data_selector: url
- name: content
  endpoint:
    path: /content
    method: GET
- name: unblock
  endpoint:
    path: /unblock
    method: GET
- name: download
  endpoint:
    path: /download
    method: GET
- name: function
  endpoint:
    path: /function
    method: GET
- name: pdf
  endpoint:
    path: /pdf
    method: GET
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
- name: scrape
  endpoint:
    path: /scrape
    method: GET
- name: export
  endpoint:
    path: /export
    method: GET
- name: performance
  endpoint:
    path: /performance
    method: GET
- name: content
  endpoint:
    path: /content
    method: GET
- name: unblock
  endpoint:
    path: /unblock
    method: GET
- name: download
  endpoint:
    path: /download
    method: GET
- name: function
  endpoint:
    path: /function
    method: GET
- name: pdf
  endpoint:
    path: /pdf
    method: GET
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
- name: scrape
  endpoint:
    path: /scrape
    method: GET
- name: export
  endpoint:
    path: /export
    method: GET
- name: performance
  endpoint:
    path: /performance
    method: GET
- name: webdriver
  endpoint:
    path: /webdriver
    method: GET
- name: screenshot
  endpoint:
    path: /image
    method: GET
- name: webdriver
  endpoint:
    path: /webdriver
    method: GET
- name: webdriver
  endpoint:
    path: /webdriver
    method: GET
    data_selector: capabilities
    params: {}
- name: webdriver
  endpoint:
    path: /webdriver
    method: GET
    data_selector: records
- name: unblock
  endpoint:
    path: /chromium/unblock
    method: POST
    data_selector: browserWSEndpoint
    params: {}
- name: unblock
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data
    params: {}
- name: unblock
  endpoint:
    path: /chromium/unblock
    method: POST
    data_selector: ''
    params: {}
- name: unblock
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /enterprise/utility-functions/sessions
    method: GET
- name: metrics
  endpoint:
    path: /enterprise/utility-functions/metrics
    method: GET
- name: config
  endpoint:
    path: /enterprise/utility-functions/config
    method: GET
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: screenshot
- name: sessions
  endpoint:
    path: /enterprise/utility-functions/sessions
    method: GET
- name: metrics
  endpoint:
    path: /enterprise/utility-functions/metrics
    method: GET
- name: config
  endpoint:
    path: /enterprise/utility-functions/config
    method: GET
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: results
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: GET
    data_selector: results
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: results
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: response
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: response
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: ''
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: GET
    data_selector: ''
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: ''
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: browserWSEndpoint
    params: {}
- name: chromium_stealth
  endpoint:
    path: /chromium/stealth
    method: GET
    data_selector: ''
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: image
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: document
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: browserWSEndpoint
- name: chromium_stealth
  endpoint:
    path: /chromium/stealth
    method: GET
- name: proxy
  endpoint:
    path: /content
    method: GET
    data_selector: results
    params:
      proxy: residential
      proxyCountry: us
- name: proxy
  endpoint:
    path: /chrome/bql
    method: GET
    data_selector: time
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: ''
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: ''
    params: {}
- name: bql
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: response
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: launch_options
  endpoint:
    path: /launch
    method: POST
    data_selector: options
    params: {}
- name: launch_options
  endpoint:
    path: /launch
    method: POST
    data_selector: options
    params:
      launch: '{}'
      token: none
      timeout: 60000
      headless: true
      stealth: false
      proxy: none
      proxyCountry: none
      proxySticky: false
      record: false
      humanlike: false
      blockAds: false
      blockConsentModals: false
      slowMo: 0
      ignoreDefaultArgs: false
      ignoreHTTPSErrors: false
- name: BrowserQL
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data
    params:
      token: YOUR-API-KEY
      timeout: 300000
      proxy: residential
      proxyCountry: us
- name: Reconnect
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data
    params: {}
- name: ReconnectToPlaywright
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.reconnect
    params:
      timeout: 30000
- name: ReconnectToPuppeteer
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.reconnect
    params:
      timeout: 30000
- name: Reconnect
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: data.reconnect.BrowserQLEndpoint
    params:
      timeout: 60000
- name: fetch_data
  endpoint:
    path: /fetch_data
    method: POST
    data_selector: data.text.text
    params: {}
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: data.reconnect.BrowserQLEndpoint
- name: fetch_data
  endpoint:
    path: /fetch_data
    method: POST
    data_selector: data.text.text
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: session
    params:
      ttl: 300000
      stealth: true
      browser: chromium
      proxy:
        type: residential
        country: us
        sticky: true
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: session
    params:
      ttl: 300000
      stealth: true
      browser: chromium
      proxy:
        type: residential
        country: us
        sticky: true
- name: cookies
  endpoint:
    path: /cookies
    method: POST
    data_selector: cookies
- name: pdf
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: base64
- name: pdf
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: base64
- name: retrieve_html
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.html.html
    params:
      timeout: '300000'
- name: ExtractJobsHTML
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.html.html
    params: {}
- name: RetrieveHTML
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.html.html
- name: extract_jobs_html
  endpoint:
    path: /chromium/bql
    method: POST
    data_selector: data.html.html
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: data
    params: {}
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: data
    params: {}
- name: waitForSelector
  endpoint:
    path: /scrape
    method: POST
    data_selector: null
    params: {}
- name: waitForFunction
  endpoint:
    path: /scrape
    method: POST
    data_selector: null
    params: {}
- name: waitForEvent
  endpoint:
    path: /content
    method: POST
    data_selector: null
    params: {}
- name: waitForSelector
  endpoint:
    path: /scrape
    method: POST
    data_selector: ''
    params: {}
- name: waitForFunction
  endpoint:
    path: /scrape
    method: POST
    data_selector: ''
    params: {}
- name: waitForEvent
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: results
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: null
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: pdf
    params:
      timeout: 60000
      headless: 'true'
      stealth: 'false'
      blockAds: 'false'
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: url
    params:
      timeout: 60000
      headless: true
      stealth: false
      blockAds: false
- name: pdf_generation
  endpoint:
    path: /pdf
    method: POST
    data_selector: output.pdf
- name: pdf_generation
  endpoint:
    path: /pdf
    method: POST
    data_selector: pdf
    params:
      blockConsentModals: 'true'
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: response
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: response
    params:
      timeout: '25000'
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: ''
    params:
      timeout: '25000'
- name: content
  endpoint:
    path: /content
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: scrapedData
    params:
      token: YOUR_API_TOKEN_HERE
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: screenshotData
    params:
      token: YOUR_API_TOKEN_HERE
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: pdfData
    params:
      token: YOUR_API_TOKEN_HERE
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: contentData
    params:
      token: YOUR_API_TOKEN_HERE
- name: export
  endpoint:
    path: /export
    method: POST
    data_selector: exportData
    params:
      token: YOUR_API_TOKEN_HERE
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: functionData
    params:
      token: YOUR_API_TOKEN_HERE
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: data
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: data
    params: {}
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: data
    params: {}
- name: export
  endpoint:
    path: /export
    method: POST
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: response
    params: {}
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: response
    params: {}
- name: waitForEvent
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: waitForFunction
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: waitForSelector
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: waitForTimeout
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: waitForEvent
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: waitForFunction
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: waitForSelector
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: waitForTimeout
  endpoint:
    path: /content
    method: POST
    data_selector: ''
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: null
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: HTML content
- name: download
  endpoint:
    path: /download
    method: POST
    data_selector: data
    params: {}
- name: download
  endpoint:
    path: /download
    method: POST
    data_selector: response
    params: {}
- name: download
  endpoint:
    path: /download
    method: POST
    data_selector: response
    params: {}
- name: minified_code
  endpoint:
    path: /download
    method: POST
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: data
- name: function
  endpoint:
    path: /function
    method: POST
- name: function
  endpoint:
    path: /function
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: null
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: screenshot.png
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: response
    params: {}
- name: unblock
  endpoint:
    path: /chromium/unblock
    method: POST
    data_selector: response
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: content
    params: {}
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: response
    params: {}
- name: performance
  endpoint:
    path: /performance
    method: POST
    data_selector: audits
    params: {}
- name: performance_metrics
  endpoint:
    path: /performance
    method: POST
    data_selector: audits
- name: chat
  endpoint:
    path: /api/chat
    method: POST
    data_selector: messages
- name: web_scraping
  endpoint:
    path: /api/web-scraping
    method: POST
    data_selector: documents
- name: browserless_service
  endpoint:
    path: /api/chat
    method: POST
    data_selector: messages
    params: {}
- name: BrowserlessLoader
  endpoint:
    path: /
    method: POST
    data_selector: documents
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: parameters
- name: pdf
  endpoint:
    path: /pdf
    method: POST
    data_selector: parameters
- name: content
  endpoint:
    path: /content
    method: POST
    data_selector: parameters
- name: unblock
  endpoint:
    path: /unblock
    method: POST
    data_selector: parameters
- name: bql
  endpoint:
    path: /chrome/bql
    method: POST
    data_selector: query
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: body
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: content
  endpoint:
    path: /content
    method: POST
- name: unblock
  endpoint:
    path: /unblock
    method: POST
- name: bql
  endpoint:
    path: /chrome/bql
    method: POST
- name: function
  endpoint:
    path: /function
    method: POST
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: content
  endpoint:
    path: /content
    method: POST
- name: unblock
  endpoint:
    path: /unblock
    method: POST
- name: bql
  endpoint:
    path: /chrome/bql
    method: POST
- name: function
  endpoint:
    path: /function
    method: POST
- name: recording_sessions
  endpoint:
    path: /recording
    method: POST
    data_selector: session
    params:
      incremental: updated_at
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
- name: pdf
  endpoint:
    path: /pdf
    method: POST
- name: content
  endpoint:
    path: /content
    method: POST
- name: unblock
  endpoint:
    path: /unblock
    method: POST
- name: bql
  endpoint:
    path: /chrome/bql
    method: POST
- name: function
  endpoint:
    path: /function
    method: POST
notes:
- We do not allow setting a options.path
- Puppeteer relies on Chrome's printToPDF DevTools protocol, which exposes limited
  options for document metadata.
- You must specify --headless and --no-sandbox
- This documentation is for BaaS v1, which is no longer actively supported.
- Connect to Browserless using WebSocket endpoint
- Sessions are essential for building realistic automation workflows that mimic human
  behavior.
- The best way to manage persistent sessions is to use `Browserless.reconnect` CDP
  command to maintain state between connections.
- Connect to Browserless using CDP (recommended method)
- Standard sessions allow you to maintain state across multiple connections.
- Reconnect to an existing session using the browserWSEndpoint.
- The Unblock API optimizes execution to only return fields requested.
- Uses API token retrievable from the dashboard.
- Hybrid Automation is only available on paid plans.
- URLs contain no API tokens or sensitive information.
- API allows specifying a target URL to return data.
- Tokens are required for API access.
- Utility Functions are primarily intended for dedicated and self-hosted accounts.
  Some functions may not be available on shared plans.
- Uses a one-time link to a webpage which does not share API tokens or sensitive information.
- Browserless is designed to always require a token.
- Browserless is designed to always require a token. If you don't pass a TOKEN env
  variable, a randomly generated token will be set.
- Perfect for simple, stateless operations
- Taking screenshots, generating PDFs, basic content extraction
- Add your API token to the URL query string as ?token=YOUR_TOKEN. Required for authentication.
- Invalid tokens result in HTTP 401/403 errors.
- Best for simple boolean options.
- Keep the API token secure and never expose it in client-side code or logs.
- Uses Bearer token for authentication
- Residential proxies can help bypass bot detection
- Use query params for simple toggles and the launch parameter for multiple settings.
- Using a proxy consumes 6 units per MB.
- All requests will go through a random node in the proxy pool by default.
- To keep your session 'sticky', add a proxySticky parameter.
- No need for credentials or otherwise for proxying.
- Most proxies will require some means of authentication.
- Uses a built-in residential proxy service
- Default requests go through a random node in the proxy pool
- Proxy parameters can be added to the requests' query-string parameters.
- Launch options can be specified via query parameters or a JSON launch payload.
- Requires a browserless API key
- 5 minutes timeout and residential proxy settings
- Reconnect mutation has a timeout argument, which is a limit (in milliseconds) for
  how long the browser should be available before it gets shutdown.
- Configures a 5-minute timeout and sets up residential proxy settings
- Reconnect mutation has a timeout argument which is a limit (in milliseconds) for
  how long the browser should be available before it gets shutdown.
- Reconnects maintains browser sessions, preserving cookies, cache, and session data
  across multiple requests.
- We recommend only to enable this option if you trust the device.
- Reconnect timeout is limited to 60 seconds for Prototyping and Starter plans.
- CAPTCHA challenges may occur if request rates are too high.
- Session reconnect functionality and timeout limits vary by subscription plan.
- Reconnect timeout should be set appropriately based on plan limits.
- Stealth mode is required for BQL support
- Sessions automatically expire after their TTL
- Stealth mode is required for BQL support.
- Sessions automatically expire after their TTL.
- Cookie management is essential for maintaining session state, authentication, and
  personalized user experiences during browser automation.
- Uses API token for authentication
- BrowserQL provides powerful cookie injection and extraction capabilities through
  the cookies mutation.
- Uses REST API to generate PDFs.
- Timeout is set to 5 minutes
- Requires API token for authentication
- Default behavior is to wait for the page to load for up to 30 seconds.
- The default behavior is to navigate to the URL specified, wait for the page to load
  (including parsing and executing of JavaScript), then waiting for the elements for
  a maximum of 30 seconds.
- You can configure various options like timeout and wait for specific elements.
- Uses UBlock Origin to block ads and filter content.
- Browserless allows extensive configuration of how browsers are launched and behave
  during sessions.
- Using residential proxies consumes 6 units per MB of data transferred
- Using proxyCountry and proxySticky parameters only work with proxy=residential
- Use --proxy-server parameter to connect to a third-party proxy.
- Proper timeout configuration is essential for reliable browser automation, especially
  when dealing with slow-loading pages or complex interactions.
- Set realistic timeouts and monitor total request time.
- Uses token in query parameter for authentication
- If you're experiencing issues with the /content API returning no data or partial
  data, this is typically due to bot detection mechanisms employed by the target website.
- Designed specifically to bypass bot detection mechanisms like Datadome and passive
  CAPTCHAs
- 'Returns HTML content directly in the response when content: true is set'
- Works best when combined with residential proxies
- This API is sensitive to the downloaded file and will return an appropriate Content-Type
  with the response.
- The API requires a token for authentication, which should be passed in the query
  string.
- 'Functions should return an object with two properties: data and type.'
- The /function API allows for POSTing of custom code and context to run them with.
- If the /screenshot API is getting blocked by bot detectors, then we would recommend
  trying BrowserQL GraphQL API.
- Browserless offers 4 different ways to wait for preconditions to be met on page.
- Uses token in query parameters for authentication
- Uses a token for authentication
- The /unblock API is designed to bypass bot detection mechanisms
- Using /unblock with a residential proxy is recommended
- Uses API token for authentication.
- This API is particularly useful for developers who need to automate web interactions
  on sites that employ sophisticated bot detection and blocking techniques.
- Due to the number of checks gathered it can take anywhere from several seconds to
  minutes depending on the site and size of the worker.
- An active Browserless API Token is required.
- Environment variable BROWSERLESS_API_TOKEN must be set.
- By default, the /performance API will gather all the metrics. This will not only
  result in a really big JSON response (350kb to 800kb on average) and it will take
  some seconds (to minutes) to complete.
- Requires Browserless.io API token and OpenAI API key
- BROWSERLESS_API_TOKEN environment variable is necessary.
- Use environment variables to manage API tokens.
- Requires Browserless.io API key
- API token is required for accessing the service.
- Session recordings are saved in WebM format.
- All recordings are saved in WebM format, which provides efficient compression while
  maintaining quality.
errors:
- '401 Unauthorized: Recheck API token'
- 'Non-OK response: Check the request parameters or API token.'
- 'Non-OK response: Check the request and parameters.'
- '401 Unauthorized: Recheck API token.'
- 'Error: Response contains error details if not successful.'
- '401 Unauthorized: Invalid token provided'
- '403 Forbidden: Access denied'
- '401 Unauthorized: Invalid token'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Error during script: Check your API token'
- '401 Unauthorized: Invalid tokens will result in HTTP 401/403 errors'
- 'Timeout: Maximum session duration exceeded.'
- 'Unauthorized: Invalid authorization token.'
- 'CAPTCHA: Ensure human-like interaction patterns.'
- 'SESSION_TIMEOUT: Reconnect timeout exceeded.'
- 'CAPTCHA: Ensure human-like interaction patterns by reducing request rates.'
- 'Session Timeout: Reconnect timeout needs to be within plan limits.'
- '401 Unauthorized: Check your API token.'
- '400 Bad Request: Ensure that session configuration is valid.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Ensure the request body is correctly formatted'
- '500 Internal Server Error: Check the request format and API status'
- '401 Unauthorized: Invalid tokens result in HTTP 401/403 errors'
- 'Error: Ensure valid API token is provided'
- 'Error: Check the request format and data'
- Timeout errors should be handled properly.
- '401 Unauthorized: Invalid or missing token'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_TIMEOUT: If your download request doesn''t result in a file being downloaded,
  Browserless will likely time out the function.'
- '401 Unauthorized: Recheck your API token'
- 'Error: Check API token'
- '401 Unauthorized: Check API token validity'
- '400 Bad Request: Verify request parameters'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your API token'
- '403 Forbidden: Ensure you have access to the requested resource'
- '401 Unauthorized: Recheck API token validity'
- '403 Forbidden: Ensure sufficient permissions for API token'
- '404 Not Found: Verify endpoint path'
- 'Recording failed: Check your API token and connection parameters.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://production-sfo.browserless.io
  headers:
    Cache-Control: no-cache
    Content-Type: application/json
source_metadata: null
