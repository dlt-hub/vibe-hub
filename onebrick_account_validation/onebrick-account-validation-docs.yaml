resources:
- name: bank_account_validation
  endpoint:
    path: /bank-account-validation
    method: GET
    data_selector: data
    params:
      accountNumber: '151601000313306'
      bankShortCode: BRI
- name: Payment Disbursement APIs
  endpoint:
    path: /disbursement
    method: POST
- name: Virtual Account APIs
  endpoint:
    path: /virtual-account
    method: POST
- name: QRIS APIs
  endpoint:
    path: /qris
    method: POST
- name: E-wallet APIs
  endpoint:
    path: /ewallet
    method: POST
- name: Verify Your Account (KYB)
  endpoint:
    path: /docs/verify-your-account
    method: GET
- name: subaccount
  endpoint:
    path: /api/v1/subaccount
    method: GET
- name: disbursement_methods
  endpoint:
    path: /docs/disbursement-method-options
    method: GET
    data_selector: methods
- name: disbursement_status
  endpoint:
    path: /get-payment-out-transaction-status
    method: GET
    data_selector: records
- name: Open VA
  endpoint:
    path: /generate-open-va
    method: GET
- name: Close VA
  endpoint:
    path: /generate-close-va
    method: GET
- name: payment_link
  endpoint:
    path: /payment/link
    method: GET
    data_selector: records
- name: transaction_status
  endpoint:
    path: /qris/transaction/status
    method: GET
    data_selector: status
- name: one_time_payment
  endpoint:
    path: /onetimepayment-ewallet
    method: GET
- name: create_ewallet_payment_link
  endpoint:
    path: /reference/create-payment-ewallet
    method: POST
- name: check_ewallet_payment_status
  endpoint:
    path: /reference/status-ewallet-payment
    method: GET
- name: callback_notification_ewallet_payment
  endpoint:
    path: /reference/callback-payment-ewallet
    method: POST
- name: verify_recipient_account
  endpoint:
    path: /v2/payments/gs/bank-account-validation
    method: GET
    data_selector: data
    params: {}
- name: create_payment_out
  endpoint:
    path: /v2/payments/gs/disbursements
    method: POST
    data_selector: data
    params: {}
- name: disbursement_methods
  endpoint:
    path: /disbursement-methods
    method: GET
    data_selector: methods
    params: {}
- name: disbursement_status
  endpoint:
    path: /get-payment-out-transaction-status
    method: GET
    data_selector: transaction_status
    params: {}
- name: transaction_history
  endpoint:
    path: /ledger-api/transactions
    method: GET
- name: Open VA
  endpoint:
    path: /generate-open-va
    method: POST
    data_selector: data
    params: {}
- name: Close VA
  endpoint:
    path: /generate-close-va
    method: POST
    data_selector: data
    params: {}
- name: Simulate Close VA Payment Status
  endpoint:
    path: /reference/simulate-payment-of-close-va-paid
    method: GET
- name: payment_link
  endpoint:
    path: /payment-link
    method: GET
- name: dynamic_qr_code
  endpoint:
    path: /api/v1/dynamic_qr_code
    method: POST
- name: static_qr_code
  endpoint:
    path: /api/v1/static_qr_code
    method: POST
- name: e_wallet_payment
  endpoint:
    path: /ewallet/payment
    method: GET
    data_selector: transactions
    params: {}
- name: create_ewallet_payment_link
  endpoint:
    path: /reference/create-payment-ewallet
    method: POST
- name: check_ewallet_payment_status
  endpoint:
    path: /reference/status-ewallet-payment
    method: GET
- name: callback_notification_ewallet_payment
  endpoint:
    path: /reference/callback-payment-ewallet
    method: POST
- name: account_validation
  endpoint:
    path: /v2/payments/gs/bank-account-validation
    method: GET
    data_selector: response
    params:
      accountNumber: '151601000313306'
      bankShortCode: BRI
- name: generate_public_access_token
  endpoint:
    path: /v2/payments/auth/token
    method: GET
- name: balance
  endpoint:
    path: /balance
    method: GET
    data_selector: data.balance
    params:
      publicAccessToken: One time access-token generated using the auth token API
- name: top_up_options
  endpoint:
    path: /v2/payments/gs/top-up/bank/list
    method: GET
    data_selector: vaListData
    params:
      email: string
- name: public_key
  endpoint:
    path: /v2/payments/general/client/public-key
    method: POST
- name: create_subaccount
  endpoint:
    path: /v2/payments/general/b2c/sub-accounts
    method: POST
- name: regenerate_api_key
  endpoint:
    path: /v2/payments/general/b2c/sub-accounts/{subAccountCode}/regenerate-api-key
    method: POST
- name: disbursement
  endpoint:
    path: /v2/payments/gs/disbursements
    method: POST
    data_selector: data
    params: {}
- name: bank_account_validation
  endpoint:
    path: /v2/payments/gs/bank-account-validation
    method: GET
    data_selector: data
    params:
      accountNumber: '151601000313306'
      bankShortCode: BRI
- name: disbursement
  endpoint:
    path: /v2/payments/gs/bifast-disbursements
    method: POST
    data_selector: ''
    params: {}
- name: job_code
  endpoint:
    path: /reference/job-code
    method: GET
    data_selector: records
- name: country_code
  endpoint:
    path: /reference/country-code
    method: GET
    data_selector: records
- name: province_code
  endpoint:
    path: /reference/province-code
    method: GET
    data_selector: records
- name: city_code
  endpoint:
    path: /reference/city-code
    method: GET
    data_selector: records
- name: province_code_list
  endpoint:
    path: /provinceCodeList
    method: GET
    data_selector: provinceCodeList
- name: disbursement
  endpoint:
    path: /reference/bifast-disbursement-callback
    method: POST
    data_selector: data.attributes
    params: {}
- name: regular_disbursement
  endpoint:
    path: /v2/payments/gs/disbursements
    method: POST
    data_selector: id
    params: {}
- name: regular_disbursement_callback
  endpoint:
    path: /disbursement-async
    method: POST
    data_selector: data
    params: {}
- name: check_disbursement_status
  endpoint:
    path: /v2/payments/gs/disbursements/{disbursementId}
    method: GET
    data_selector: data
- name: check_disbursement_status
  endpoint:
    path: /disbursements/transaction
    method: GET
    data_selector: data
    params:
      referenceId: string
- name: ledger
  endpoint:
    path: /ledger
    method: GET
    data_selector: transactions
    params:
      publicAccessToken: Bearer
      startDate: YYYY-MM-DD
      endDate: YYYY-MM-DD
      status: completed or processing or pending or failed
      search: transaction ID or referenceId
      page: Integer
      size: Integer
- name: download_transfer_proof
  endpoint:
    path: /v2/payments/gs/disbursements/proof/{disbId}/download
    method: GET
    data_selector: proof
- name: Open VA
  endpoint:
    path: /v2/payments/gs/va/open
    method: POST
- name: status_of_open_va
  endpoint:
    path: /v2/payments/gs/va/open
    method: GET
    data_selector: data
    params:
      vaId: string
- name: Close VA
  endpoint:
    path: /v2/payments/gs/va/close
    method: POST
- name: status_of_close_va
  endpoint:
    path: /v2/payments/gs/va/close
    method: GET
- name: simulate_close_va_payment
  endpoint:
    path: /v2/payments/gs/va/close/status/{vaIdCL}
    method: POST
    data_selector: object
    params: {}
- name: dynamic_qris
  endpoint:
    path: /payments/gs/qris/dynamic
    method: POST
- name: dynamic_qris
  endpoint:
    path: /reference/qris-callback-dynamic-qris
    method: get
- name: Status for Dynamic QRIS
  endpoint:
    path: /v2/payments/gs/qris/dynamic/{referenceId}
    method: GET
    data_selector: responses
- name: status_for_static_qris
  endpoint:
    path: /reference/status-for-dynamic-qris-copy
    method: GET
    data_selector: data
- name: qris_callback_static
  endpoint:
    path: /reference/qris-callback-dynamic-qris-copy
    method: GET
    data_selector: data
- name: status_for_static_qris
  endpoint:
    path: /v2/payments/gs/qris/static/{referenceId}
    method: GET
    data_selector: data
    params: {}
- name: QRIS Testing in Sandbox
  endpoint:
    path: /v2/payments/gs/qris/update-status-sandbox
    method: POST
- name: merchant_details
  endpoint:
    path: /v2/payments/gs/qris/merchant/{id}
    method: GET
    data_selector: data
    params:
      publicAccessToken: Bearer
- name: merchant_list
  endpoint:
    path: /v2/payments/gs/qris/merchant/bulk
    method: GET
    data_selector: json
- name: Get Access Token
  endpoint:
    path: /reference/get-access-token-snap
    method: POST
- name: Generate Dynamic QRIS (SNAP)
  endpoint:
    path: /reference/generate-dynamic-qris-snap
    method: POST
- name: Status for Dynamic QRIS
  endpoint:
    path: /reference/status-for-dynamic-qris-snap
    method: POST
- name: QRIS Dynamic Callback (SNAP)
  endpoint:
    path: /reference/qris-callback-dynamic-qris-snap
    method: POST
- name: access_token
  endpoint:
    path: /access-token/b2b
    method: POST
    data_selector: accessToken
- name: generate_dynamic_qris
  endpoint:
    path: /qr/qr-mpm-generate
    method: POST
    data_selector: response
    params:
      partnerReferenceNo: '2025111500000000000001'
      validityPeriod: '600'
- name: qr_status
  endpoint:
    path: /qr/qr-mpm-query
    method: POST
    data_selector: response
    params: {}
- name: QRIS Dynamic Callback
  endpoint:
    path: /reference/qris-callback-dynamic-qris-snap
    method: POST
    data_selector: callbackResponse
    params: {}
- name: Generate Payment Link
  endpoint:
    path: /reference/generate-open-va-via-payment-link
    method: POST
- name: Get Available Payment Link
  endpoint:
    path: /reference/get-virtual-account-availability
    method: GET
- name: Get Payment Link Detail
  endpoint:
    path: /reference/get-payment-link-detail
    method: GET
- name: Cancel Payment Link
  endpoint:
    path: /reference/cancel-payment-link
    method: PATCH
- name: generate_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link
    method: POST
    data_selector: json
- name: get_available_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link/bank
    method: GET
    data_selector: data.virtualAccount
    params:
      referenceId: string
- name: get_payment_link_detail
  endpoint:
    path: /v2/payments/gs/payment-link
    method: GET
    params:
      referenceId: string
- name: cancel_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link/cancel
    method: PATCH
    data_selector: data
    params:
      referenceId: string
- name: create_e_wallet_payment_link
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet
    method: POST
    data_selector: data
    params: {}
- name: payment_status
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet/{id}
    method: GET
    data_selector: data
    params: {}
- name: E-wallet Acceptance
  endpoint:
    path: /create-payment-ewallet
    method: POST
- name: Status E-wallet Payment
  endpoint:
    path: /status-ewallet-payment
    method: GET
- name: Callback E-wallet Payment
  endpoint:
    path: /callback-payment-ewallet
    method: GET
- name: check_disbursement_status
  endpoint:
    path: /v2/payments/gs/disbursements/{disbursementId}
    method: GET
    data_selector: data
    params: {}
- name: generate_open_va
  endpoint:
    path: /v2/payments/gs/va/open
    method: POST
    data_selector: data
    params: {}
- name: Generate Dynamic QRIS
  endpoint:
    path: /v2/payments/gs/qris/dynamic
    method: POST
- name: create_e_wallet_payment_link
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet
    method: POST
    data_selector: data
    params: {}
- name: generate_public_access_token
  endpoint:
    path: /v2/payments/auth/token
    method: GET
    data_selector: accessToken
    params: {}
- name: balance
  endpoint:
    path: /balance
    method: GET
- name: Get Balance
  endpoint:
    path: /reference/get-balance-api
    method: GET
- name: List of Available Top Up Options
  endpoint:
    path: /reference/get-list-of-available-top-up-options
    method: GET
- name: top_up_options
  endpoint:
    path: /v2/payments/gs/top-up/bank/list
    method: GET
    data_selector: vaListData
    params:
      email: string
- name: setup_public_key
  endpoint:
    path: /v2/payments/general/client/public-key
    method: POST
- name: create_subaccount
  endpoint:
    path: /v2/payments/general/b2c/sub-accounts
    method: POST
- name: regenerate_api_key
  endpoint:
    path: /v2/payments/general/b2c/sub-accounts/{subAccountCode}/regenerate-api-key
    method: POST
- name: disbursement
  endpoint:
    path: /v2/payments/gs/disbursements
    method: POST
    data_selector: data
    params: {}
- name: account_verification
  endpoint:
    path: /reference/account-verification-api
    method: GET
    data_selector: data
    params: {}
- name: bifast_disbursement
  endpoint:
    path: /v2/payments/gs/bifast-disbursements
    method: POST
    data_selector: attributes
    params: {}
- name: province_code
  endpoint:
    path: /provinceCodeList
    method: GET
    data_selector: provinceCodeList
- name: disbursement
  endpoint:
    path: /reference/disbursement-bifast
    method: POST
    data_selector: records
- name: account_validation
  endpoint:
    path: /reference/account-validation-api
    method: GET
    data_selector: records
- name: disbursement_callback
  endpoint:
    path: /bifast-disbursement-callback
    method: POST
    data_selector: data
    params: {}
- name: disbursement
  endpoint:
    path: /v2/payments/gs/disbursements
    method: POST
    data_selector: id
    params: {}
- name: check_disbursement_status
  endpoint:
    path: /disbursements/{disbursementId}
    method: GET
    data_selector: data
    params: {}
- name: Check Disbursement Status
  endpoint:
    path: /disbursements/transaction
    method: GET
    data_selector: data
    params:
      referenceId: string
- name: ledger
  endpoint:
    path: /ledger
    method: GET
    data_selector: transactions
    params:
      startDate: YYYY-MM-DD
      endDate: YYYY-MM-DD
      status: completed
      search: ''
      page: 1
      size: 100
- name: download_transfer_proof
  endpoint:
    path: /v2/payments/gs/disbursements/proof/{disbId}/download
    method: GET
- name: generate_open_va
  endpoint:
    path: /v2/payments/gs/va/open
    method: POST
    data_selector: id
- name: status_of_open_va
  endpoint:
    path: /v2/payments/gs/va/open
    method: GET
- name: close_virtual_account
  endpoint:
    path: /v2/payments/gs/va/close
    method: POST
    data_selector: data
    params: {}
- name: status_of_close_va
  endpoint:
    path: /v2/payments/gs/va/close
    method: GET
- name: simulate_close_va_payment
  endpoint:
    path: /v2/payments/gs/va/close/status/{vaIdCL}
    method: POST
    data_selector: object
- name: generate_dynamic_qris
  endpoint:
    path: /v2/payments/gs/qris/dynamic
    method: POST
    data_selector: response
    params: {}
- name: generate_dynamic_qris
  endpoint:
    path: /reference/generate-dynamic-qris
    method: POST
- name: status_dynamic_qris
  endpoint:
    path: /reference/status-dynamic-qris
    method: GET
- name: qris_callback_dynamic
  endpoint:
    path: /reference/qris-callback-dynamic-qris
    method: GET
- name: dynamic_qris_status
  endpoint:
    path: /v2/payments/gs/qris/dynamic/{referenceId}
    method: GET
    data_selector: response
    params: {}
- name: Static QRIS Get Merchant Details
  endpoint:
    path: /reference/static-qris-get-merchant-details
    method: GET
- name: Static QRIS Get Merchant List
  endpoint:
    path: /reference/static-qris-get-merchant-list
    method: GET
- name: QRIS Callback - Static QRIS
  endpoint:
    path: /reference/qris-callback-dynamic-qris-copy
    method: GET
- name: Status for Static QRIS
  endpoint:
    path: /reference/status-for-dynamic-qris-copy
    method: GET
- name: status_for_static_qris
  endpoint:
    path: /v2/payments/gs/qris/static/{referenceId}
    method: GET
- name: QRIS Testing in Sandbox
  endpoint:
    path: /v2/payments/gs/qris/update-status-sandbox
    method: POST
- name: merchant_details
  endpoint:
    path: /v2/payments/gs/qris/merchant/{id}
    method: GET
    data_selector: data
    params:
      publicAccessToken: Bearer
- name: merchant_list
  endpoint:
    path: /v2/payments/gs/qris/merchant/bulk
    method: GET
    data_selector: json
- name: Get Access Token
  endpoint:
    path: /reference/get-access-token-snap
    method: POST
- name: Generate Dynamic QRIS (SNAP)
  endpoint:
    path: /reference/generate-dynamic-qris-snap
    method: POST
- name: Status for Dynamic QRIS
  endpoint:
    path: /reference/status-for-dynamic-qris-snap
    method: POST
- name: QRIS Dynamic Callback (SNAP)
  endpoint:
    path: /reference/qris-callback-dynamic-qris-snap
    method: POST
- name: access_token
  endpoint:
    path: /access-token/b2b
    method: POST
    data_selector: accessToken
    params:
      grant_type: client_credentials
- name: Generate Dynamic QRIS
  endpoint:
    path: /qr/qr-mpm-generate
    method: POST
    data_selector: response
    params: {}
- name: Status for Dynamic QRIS
  endpoint:
    path: /v2/payments/acceptance/1.0/qr/qr-mpm-query
    method: POST
- name: QRIS Dynamic Callback
  endpoint:
    path: /reference/qris-callback-dynamic-qris-snap
    method: POST
    data_selector: callbackResponse
- name: payment_link
  endpoint:
    path: /reference/generate-open-va-via-payment-link
    method: POST
- name: available_payment_link
  endpoint:
    path: /reference/get-virtual-account-availability
    method: GET
- name: payment_link_detail
  endpoint:
    path: /reference/get-payment-link-detail
    method: GET
- name: cancel_payment_link
  endpoint:
    path: /reference/cancel-payment-link
    method: PATCH
- name: generate_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link
    method: POST
- name: available_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link/bank
    method: GET
- name: payment_link_detail
  endpoint:
    path: /v2/payments/gs/payment-link
    method: GET
    data_selector: json
    params:
      referenceId: string
- name: cancel_payment_link
  endpoint:
    path: /v2/payments/gs/payment-link/cancel
    method: PATCH
    data_selector: data
    params:
      referenceId: string
- name: create_e_wallet_payment_link
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet
    method: POST
    data_selector: data
    params:
      amount: 10000
      referenceId: Test-Sandbox-01
      ewalletCode: DANA
      returnUrl: https://staging-app.onebrick.io
- name: status_ewallet_payment
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet/{id}
    method: GET
- name: Status E-wallet Payment
  endpoint:
    path: /reference/status-ewallet-payment
    method: GET
- name: Create E-Wallet Payment Link
  endpoint:
    path: /reference/create-payment-ewallet
    method: POST
- name: Callback E-wallet Payment
  endpoint:
    path: /reference/callback-payment-ewallet
    method: GET
- name: balance
  endpoint:
    path: /balance/
    method: GET
- name: check_disbursement_status
  endpoint:
    path: /v2/payments/gs/disbursements/{disbursementId}
    method: GET
    data_selector: data
- name: generate_open_va
  endpoint:
    path: /open
    method: POST
    data_selector: data
    params: {}
- name: Generate Dynamic QRIS
  endpoint:
    path: /v2/payments/gs/qris/dynamic
    method: POST
- name: create_ewallet_payment_link
  endpoint:
    path: /v2/payments/gs/acceptance/ewallet
    method: POST
    data_selector: data
    params: {}
notes:
- Credentials are different for each environment.
- BrickI is designed for real-time support and information.
- Security is not just a feature—it’s a foundation.
- Even if Brick’s database were compromised, user data would remain encrypted and
  unusable.
- Clients can enable the Incoming request validation and provide the list of Static
  IPs in brick dashboard.
- Enablement of Incoming requests in up to clients, It's an Optional Step.
- Clients can manage its configuration for Sandbox and Production, So by having separate
  configurations clients can test the feature in Sandbox environments.
- Clients can manage separate configurations for all Sub-Accounts, So it's up to clients
  to enable / Disable Outgoing request validation for any Sub-account.
- Subaccounts are currently manageable only via the dashboard (API access coming soon)
- Brick provides a sandbox environment so you can test disbursement flows safely—without
  using real funds or hitting production endpoints.
- 'Bank Account Number: Any number with more than 8 digits is acceptable.'
- 'Account Holder Name: Must always be exactly "PROD ONLY".'
- 'Amount: Must fall within the range of Rp10.000 to Rp500.000.000.'
- These values are hardcoded in our sandbox environment to help simulate specific
  response statuses.
- In production mode, transactions are real and irreversible.
- Manually check transaction status if processing for more than an hour or if there
  was an API error.
- Use transaction_id or reference_id to query the transaction status.
- In sandbox mode, all VA numbers are dummy values, and no actual funds are transferred.
- 'VA simulation is currently not supported for the following banks in sandbox mode:
  BNI, Permata, CIMB Niaga, Danamon.'
- Currently, Brick supports one-time payments only. Tokenized payments are not yet
  available.
- Complete KYB verification of your account.
- For clients doing API integration, complete the UAT (User Acceptance Test) and CDD
  (Customer Due Diligence) process.
- Get your production (Live mode) API credentials.
- Setup callback URLs for your production environment (Live mode) in Brick dashboard.
- Change domain host for the production environment (Live mode) in your application.
- Credentials are different for each environment. Make sure you use the correct client_key
  and client_secret for the environment you're working in.
- Public access token is valid for 5 minutes and can be used one time only.
- Payment system is dependent on the bank system.
- Transactions in the Sandbox environment do not affect real accounts or institutions.
- Cannot show information related to subaccounts.
- Cannot perform actions or changes, such as updating API credentials.
- Cannot access or modify sensitive data, including balance, credentials, or personal
  user information.
- Does not support media attachments, such as file uploads or screenshots.
- Read-only access.
- Enablement of Incoming requests is up to clients, It's an Optional Step.
- Clients can enable single layer encryption from Brick Dashboard.
- Clients can enable callback signature encryption from Brick Dashboard.
- Clients need to handle the validation flow in their system before enabling it from
  the Brick dashboard.
- 'Outgoing Request Validation will be available for all APIs, ie: Disbursement, Acceptance,
  or any other APIs.'
- Clients can manage its configuration for Sandbox and Production.
- Clients can manage separate configurations for all Sub-Accounts.
- You may be required to upload additional business licenses—such as BPOM, SIUP, TDP,
  or Izin Usaha Industri (IUI)—depending on your business sector.
- Subaccounts are currently only manageable via the dashboard (API access coming soon)
- Role-based access control (RBAC) is used to manage team collaboration.
- Manually checking transaction status is recommended in certain scenarios.
- 'VA simulation is currently not supported for the following banks in sandbox mode:
  BNI, Permata, CIMB Niaga, Danamon'
- Currently, the creation of E-Wallet payment links is available via API only.
- You need to complete KYB verification of your account.
- For clients that doing API integration, complete the UAT (User Acceptance Test)
  and CDD (Customer Due Diligence) process with Brick technical sales team.
- Always use HTTPS for all API requests.
- Ensure that your client_secret is securely stored and never exposed on the client-side.
- Public access token is valid for only one time and for the next 5 minutes.
- 'Callback method : POST'
- 'Content type : app/json'
- Add whitelist to Brick server for secure connection
- The URL for this request expired after 30 days.
- This API is only available in a Sandbox environment.
- To successfully simulate paid and completed statuses in sandbox, please use a BRI
  or Mandiri Virtual Account.
- This is sample of status update we send to your callback URL.
- This API only for testing purpose and can only works in sandbox environment.
- Client ID must be sent in the X-CLIENT-KEY header.
- Grant type must be 'client_credentials'.
- When a payment status changes, we will send a status update to your callback URL.
- Token is valid for 5 minutes and is intended for single-use only.
- Always use HTTPS for all API requests. Ensure that your client_secret is securely
  stored and never exposed on the client-side (e.g., in browser apps or mobile apps).
- Request requires public access token and HMAC-SHA512 signature.
- Public access token is valid for 1 time and only for the next 5 minutes.
- 'Callback method: POST'
- 'Content type: app/json'
- Client's current local time in ISO 8601 format
- Unique external identifier for the API request that can be found on Brick Dashboard
  Credentials
- Callback Response - Paid
errors:
- accountNumber is invalid
- bankShortCode missing
- bankShortCode invalid
- invalid token
- '401: Request is not coming from whitelisted IP'
- Please make sure that you will conduct the validation process at your backend system
  not on the client side system
- '400 Invalid Request: Missing required fields, malformed input'
- '400 Image Too Large: Uploaded image exceeds the allowed size limit'
- '401 Unauthorized: Invalid token or missing Bearer token'
- '404 Subaccount Not Found: The requested subaccount does not exist.'
- '403 Forbidden: Action not allowed for current account type or status'
- '403 Public Key Not Found: Public Key has not been uploaded by the client'
- '409 Conflict: Duplicate subaccount code'
- '429 Rate Limit Exceeded: Too many requests'
- '500 Internal Server Error: System failure—retry later'
- '401: missing_parameters_in_headers'
- '401: invalid_parameters_in_headers'
- '401: expired_parameters_in_headers'
- '401: unauthorized_access'
- '403: client_not_authorized'
- '400: missing_parameters_in_request'
- '400: wrong_parameters_in_request'
- '400: invalid_parameters_in_request'
- '400: incorrect_format_of_parameters_in_request'
- '400: incorrect_type_of_parameters_in_request'
- '400: missing_callback_url'
- '400: expired_parameters_in_request'
- '422: inactive_user'
- '400: session_available_in_other_device'
- '404: feature_not_available'
- '401: ip_not_whitelisted'
- '401: rate_limit_exceeded'
- '405: method_not_allowed'
- '500: service_unavailable'
- '500: institution_not_available'
- '500: unexpected_behaviour'
- '500: server_unavailable'
- '500 Internal Server Error: Indicates uncertainty about transaction creation.'
- Network issues may lead to failed callback delivery.
- Check callback URL for transaction status.
- Handle status completed or error cases.
- '401 Unauthorized: Request is not coming from whitelisted IP'
- '400: Invalid Request'
- '400: Image Too Large'
- '401: Unauthorized'
- '404: Subaccount Not Found'
- '403: Forbidden'
- '403: Public Key Not Found'
- '409: Conflict'
- '429: Rate Limit Exceeded'
- '500: Internal Server Error'
- 'Unauthorised/Unauthenticated: Username & password in not correct(in Auth API) 401
  missing_parameters_in_headers'
- 'Unauthorised/Unauthenticated: Public token is invalid 401 invalid_parameters_in_headers'
- 'Unauthorised/Unauthenticated: Public token is missing 401 missing_parameters_in_headers'
- 'Unauthorised/Unauthenticated: Public token is expire 401 expired_parameters_in_headers'
- 'Unauthorised/Unauthenticated: User access token is invalid 401 invalid_parameters_in_headers'
- 'Unauthorised/Unauthenticated: User access token is missing 401 missing_parameters_in_headers'
- 'Unauthorised/Unauthenticated: User access token is expire 401 expired_parameters_in_headers'
- 'Unauthorised/Unauthenticated: Unauthorised access to transaction 401 unauthorized_access'
- 'Forbidden: User access token is not mapped with Public access token(Client) 403
  client_not_authorized'
- 'Bad Request(Parameters is missing or Invalid): Parameter is missing in request(Either
  one or more parameters) 400 missing_parameters_in_request'
- 'Bad Request(Parameters is missing or Invalid): Parameters are not incorrect(If
  value is not correct) 400 wrong_parameters_in_request'
- 'Bad Request(Parameters is missing or Invalid): Parameters are not incorrect (If
  value is not valid) 400 invalid_parameters_in_request'
- 'Bad Request(Parameters is missing or Invalid): Parameters are not in correct format
  400 incorrect_format_of_parameters_in_request'
- 'Bad Request(Parameters is missing or Invalid): Parameter are not in correct type(Wrong
  type of parameters) in request 400 incorrect_type_of_parameters_in_request'
- 'Bad Request(Parameters is missing or Invalid): Callback is not available 400 missing_callback_url'
- 'Bad Request(Parameters is missing or Invalid): Parameters is expired 400 expired_parameters_in_request'
- 'Unprocessable request: Dormant user 422 inactive_user'
- 'Unprocessable request: Concurrent user/ Session is available is other device 400
  session_available_in_other_device'
- 'Resource not available: Not authorised to complete the request 404 feature_not_available'
- 'Source is not authorised: Request is not from whitelisted IP 401 ip_not_whitelisted'
- 'Rate limit exceeded: More number of request than rate limit 401 rate_limit_exceeded'
- 'Method not allowed: Wrong method 405 method_not_allowed'
- 'Service unavailable: Service unavailable (Brick) 500 service_unavailable'
- 'Service unavailable: Service unavailable (Institution level) 500 institution_not_available'
- 'Unexpected behaviour: Data can not retrieved 500 unexpected_behaviour'
- 'Unexpected behaviour: Internal crash 500 unexpected_behaviour'
- 'Server unavailable: Server unavailable 500 server_unavailable'
- General request failed 4000100 bad_request
- Exceeds or Below Transaction Amount Limit 4030102 amount_limit_not_eligible
- Suspected fraud 4030103 suspected_fraud
- Bank account invalid 4040111 invalid_bank_account
- General error 5000100 general_error
- External server error (hanging transaction) 5000102 general_external_error
- Timeout (hanging transaction) 5040100 timeout
- '500 Internal Server Error: Indicates an issue with the transaction creation.'
- '400: accountNumber is invalid'
- '400: bankShortCode missing'
- '400: bankShortCode invalid'
- '400: invalid token'
- '401: user not exist'
- '401: expired token'
- '401: re-used token'
- '401: invalid token'
- '401: token is expired'
- '400: Bad Request'
- '400: Type not supported'
- '400: File upload too large'
- '500: Result'
- '400: Image Upload Too Large'
- '400: Unauthorized'
- '409: Duplicate Subaccount Code'
- '5000100: General Error - Please try again later or contact support if the issue
  persists.'
- '400: Invalid transfer amount'
- '400: callback not available'
- '400: referenceId already used'
- '401: Invalid token'
- '401: insufficient balance'
- '503: Bank under maintenance'
- '5000100: General Error'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check if the disbursement ID is correct'
- '401: Invalid id'
- '400: bankShortCode not supported'
- '400: referenceId used'
- '400: bankShortCode do not use suffixNo'
- '401: invalid id'
- '401: Public token in invalid'
- '401: Public token expired'
- '400: Public token in invalid'
- '400: Invalid Payload'
- '401: Unauthorized Authorization'
- '401: Unauthorized Signature'
- '409: Same x-external-id on the Same Day'
- '400: Invalid Mandatory Field'
- '404: Transaction Not Found'
- 400 Amount Exceed Limit
- 400 Duplicated Reference ID
- 401 Public Token Invalid
- '401: Reference ID Not Found'
- '400: Amount Exceed Limit'
- '400: Duplicated Reference ID'
- '401: Public Token Invalid'
- '200: OK'
- '404 Not Found: Check the disbursementId'
- '400: bankShortCode do not use suffix'
- '401 Unauthorized: Reference ID Not Found'
- '401 401: invalid token'
- '401 401: token is expired'
auth_info:
  mentioned_objects:
  - client_id
  - client_secret
  - access_token
client:
  base_url: https://sandbox.onebrick.io
  auth:
    type: basic
    location: header
    header_name: Authorization
source_metadata: null
