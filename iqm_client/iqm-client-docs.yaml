resources:
- name: CONFIGURATION
  endpoint:
    path: /configuration
    method: GET
- name: SUBMIT_JOB
  endpoint:
    path: /submit_job
    method: POST
- name: GET_JOB_REQUEST_PARAMETERS
  endpoint:
    path: /get_job_request_parameters
    method: GET
- name: GET_JOB_RESULT
  endpoint:
    path: /get_job_result
    method: GET
- name: GET_JOB_STATUS
  endpoint:
    path: /get_job_status
    method: GET
- name: GET_JOB_CALIBRATION_SET_ID
  endpoint:
    path: /get_job_calibration_set_id
    method: GET
- name: GET_JOB_CIRCUITS_BATCH
  endpoint:
    path: /get_job_circuits_batch
    method: GET
- name: GET_JOB_TIMELINE
  endpoint:
    path: /get_job_timeline
    method: GET
- name: GET_JOB_ERROR_LOG
  endpoint:
    path: /get_job_error_log
    method: GET
- name: GET_JOB_COUNTS
  endpoint:
    path: /get_job_counts
    method: GET
- name: ABORT_JOB
  endpoint:
    path: /abort_job
    method: POST
- name: DELETE_JOB
  endpoint:
    path: /delete_job
    method: DELETE
- name: HEALTH
  endpoint:
    path: /health
    method: GET
- name: ABOUT
  endpoint:
    path: /about
    method: GET
- name: CLIENT_LIBRARIES
  endpoint:
    path: /client_libraries
    method: GET
- name: CALIBRATION_SERVICE_CONFIGURATION
  endpoint:
    path: /calibration_service_configuration
    method: GET
- name: QUANTUM_ARCHITECTURE
  endpoint:
    path: /quantum_architecture
    method: GET
- name: CHANNEL_PROPERTIES
  endpoint:
    path: /channel_properties
    method: GET
- name: QUALITY_METRICS_LATEST
  endpoint:
    path: /quality_metrics_latest
    method: GET
- name: QUALITY_METRICS_MONITORING
  endpoint:
    path: /quality_metrics_monitoring
    method: GET
- name: CALIBRATED_GATES
  endpoint:
    path: /calibrated_gates
    method: GET
- name: START_CALIBRATION_JOB
  endpoint:
    path: /start_calibration_job
    method: POST
- name: ABORT_CALIBRATION_JOB
  endpoint:
    path: /abort_calibration_job
    method: POST
- name: CALIBRATION_SERVICE_JOBS
  endpoint:
    path: /calibration_service_jobs
    method: GET
- name: CALIBRATION
  endpoint:
    path: /calibration
    method: GET
- name: qubit_mapping
  endpoint:
    path: /serialize_qubit_mapping
    method: POST
    data_selector: list
    params: {}
- name: circuit
  endpoint:
    path: /validate_circuit
    method: POST
    data_selector: null
    params: {}
- name: Circuit
  endpoint:
    path: /iqm_client/models/Circuit
    method: GET
    data_selector: records
- name: CircuitCompilationOptions
  endpoint:
    path: /iqm_client/models/CircuitCompilationOptions
    method: GET
    data_selector: attributes
- name: serialize_qubit_mapping
  endpoint:
    path: /serialize_qubit_mapping
    method: POST
    data_selector: data
    params: {}
- name: Counts
  endpoint:
    path: /counts
    method: GET
    data_selector: counts
    params: {}
- name: Circuit
  endpoint:
    path: iqm.iqm_client.models.Circuit
    method: GET
    data_selector: Circuit
- name: DDMode.DISABLED
  endpoint:
    path: Do not apply dynamical decoupling.
    method: GET
    data_selector: DISABLED
    params: {}
- name: DDMode.ENABLED
  endpoint:
    path: Apply dynamical decoupling.
    method: GET
    data_selector: ENABLED
    params: {}
- name: CircuitCompilationOptions
  endpoint:
    path: /models/CircuitCompilationOptions
    method: GET
    data_selector: attributes
- name: Counts
  endpoint:
    path: /iqm/iqm_client/models/Counts
    method: GET
    data_selector: records
- name: dynamic_quantum_architecture
  endpoint:
    path: /api/dynamic_quantum_architecture
    method: GET
    data_selector: DynamicQuantumArchitecture
    params: {}
- name: DDMode
  endpoint:
    path: /models/DDMode
    method: GET
    data_selector: attributes
    params: {}
- name: loci
  endpoint:
    path: /loci
    method: GET
    data_selector: loci
- name: model_config
  endpoint:
    path: /model_config
    method: GET
    data_selector: model_config
- name: DDStrategy
  endpoint:
    path: /iqm.iqm_client/models/DDStrategy
    method: GET
    data_selector: attributes
    params: {}
- name: GateInfo
  endpoint:
    path: /iqm.iqm_client/models/GateInfo
    method: GET
    data_selector: implementations
- name: DynamicQuantumArchitecture
  endpoint:
    path: /iqm.iqm_client/models/DynamicQuantumArchitecture
    method: GET
    data_selector: components
    params: {}
- name: GateImplementationInfo
  endpoint:
    path: /iqm/iqm_client/models/GateImplementationInfo
    method: GET
    data_selector: loci
    params: {}
- name: Instruction
  endpoint:
    path: /models/Instruction
    method: GET
    data_selector: records
- name: GateInfo
  endpoint:
    path: /iqm/iqm_client/models/GateInfo
    method: GET
    data_selector: implementations
- name: delay
  endpoint:
    path: /delay
    method: GET
    data_selector: records
    params: {}
- name: NONE
  endpoint:
    data_selector: Do not do any heralding.
- name: ZEROS
  endpoint:
    data_selector: Perform a heralding measurement after qubit initialization, only
      retain shots with an all-zeros result.
- name: JobParameters
  endpoint:
    path: /iqm.iqm_client/models/JobParameters
    method: GET
    data_selector: JobParameters
- name: Metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
- name: Instruction
  endpoint:
    path: /iqm.iqm_client.models.Instruction
    method: GET
    data_selector: records
    params: {}
- name: delay
  endpoint:
    path: /delay
    method: GET
    data_selector: records
    params:
      duration: 80e-9
- name: MoveGateFrameTrackingMode
  endpoint:
    path: /iqm.iqm_client/models/MoveGateFrameTrackingMode
    method: GET
    data_selector: attributes
- name: JobParameters
  endpoint:
    path: /iqm.iqm_client/models/JobParameters
    method: GET
    data_selector: model_config
    params: {}
- name: NativeOperation
  endpoint:
    path: /NativeOperation
    method: GET
    data_selector: records
- name: Metadata
  endpoint:
    path: /iqm.iqm_client/models/Metadata
    method: GET
    data_selector: records
    params: {}
- name: QuantumArchitectureSpecification
  endpoint:
    path: /iqm.iqm_client/models/QuantumArchitectureSpecification
    method: GET
    data_selector: attributes
- name: FULL
  endpoint:
    path: /models/MoveGateFrameTrackingMode/FULL
    method: GET
    data_selector: description
    params: {}
- name: NO_DETUNING_CORRECTION
  endpoint:
    path: /models/MoveGateFrameTrackingMode/NO_DETUNING_CORRECTION
    method: GET
    data_selector: description
    params: {}
- name: NONE
  endpoint:
    path: /models/MoveGateFrameTrackingMode/NONE
    method: GET
    data_selector: description
    params: {}
- name: RunCounts
  endpoint:
    path: /models/RunCounts
    method: GET
    data_selector: RunCounts
- name: MoveGateValidationMode
  attributes:
    STRICT: MOVE gates must only appear in sandwiches, with no gates acting on the
      MOVE qubit inside the sandwich.
    ALLOW_PRX: Allow PRX gates on the MOVE qubit inside MOVE sandwiches during validation.
    NONE: Do not perform any MOVE gate validation.
- name: NativeOperation
  endpoint:
    path: /iqm/iqm_client/models/native_operation
    method: GET
    data_selector: records
- name: RunRequest
  endpoint:
    path: /iqm.iqm_client/models/RunRequest
    method: GET
    data_selector: attributes
- name: quantum_architecture
  endpoint:
    path: /quantum_architecture
    method: GET
    data_selector: quantum_architecture
    params: {}
- name: model_config
  endpoint:
    path: /model_config
    method: GET
    data_selector: model_config
    params: {}
- name: RunResult
  endpoint:
    path: /iqm/iqm_client/models/RunResult
    method: GET
    data_selector: results
- name: QuantumArchitectureSpecification
  endpoint:
    path: /iqm/iqm_client/models/QuantumArchitectureSpecification
    method: GET
    data_selector: attributes
    params: {}
- name: RunCounts
  endpoint:
    path: /iqm/iqm_client/models/RunCounts
    method: GET
    data_selector: counts_batch
- name: RunStatus
  endpoint:
    path: /iqm.iqm_client/models/RunStatus
    method: GET
    data_selector: status
    params: {}
- name: SingleQubitMapping
  endpoint:
    path: /models/SingleQubitMapping
    method: GET
    data_selector: records
- name: RunRequest
  endpoint:
    path: /iqm.iqm_client.models/RunRequest
    method: GET
    data_selector: attributes
    params: {}
- name: status
  endpoint:
    path: /iqm.iqm_client/models/Status
    method: GET
    data_selector: attributes
- name: RunResult
  endpoint:
    path: /iqm/iqm_client/models/RunResult
    method: GET
    data_selector: results
    params: {}
- name: RunStatus
  endpoint:
    path: /iqm.iqm_client/models/RunStatus
    method: GET
    data_selector: RunStatus
- name: SingleQubitMapping
  endpoint:
    path: /iqm/iqm_client/models/SingleQubitMapping
    method: GET
    data_selector: records
- name: Status
  endpoint:
    path: /iqm.iqm_client/models/Status
    method: GET
    data_selector: attributes
- name: ExistingMoveHandlingOptions
  endpoint:
    path: /iqm/iqm_client/transpile/ExistingMoveHandlingOptions
    method: GET
    data_selector: attributes
- name: ExistingMoveHandlingOptions.KEEP
  endpoint:
    path: iqm.iqm_client.transpile.ExistingMoveHandlingOptions.KEEP
    method: GET
    data_selector: Strict mode.
- name: ExistingMoveHandlingOptions.TRUST
  endpoint:
    path: iqm.iqm_client.transpile.ExistingMoveHandlingOptions.TRUST
    method: GET
    data_selector: Lenient mode.
- name: ExistingMoveHandlingOptions.REMOVE
  endpoint:
    path: iqm.iqm_client.transpile.ExistingMoveHandlingOptions.REMOVE
    method: GET
    data_selector: Removes existing MOVE instructions.
notes:
- This method is only supported for the API variant V2.
- Serializes a qubit mapping dict into the corresponding IQM data transfer format.
- 'The default DD strategy uses the following gate sequences: Simple symmetric CPMG
  sequence for short idling times, Asymmetric (left-aligned) universal XY4 sequence
  for medium idling times, Asymmetric (left-aligned) universal EDD sequence for longer
  idling times.'
- Quantum circuit to be executed.
- Consists of native quantum operations.
- Various discrete options for quantum circuit compilation to pulse schedule.
- Measurement results in the counts representation
- Configuration for the model should be a dictionary conforming to ConfigDict.
- Dynamical Decoupling (DD) mode for circuit execution.
- The current standard DD strategy can be found in STANDARD_DD_STRATEGY
- Dynamic quantum architecture describes gates/operations for which calibration data
  exists in the calibration set.
- Describes a particular dynamical decoupling strategy.
- Returns all loci which are available for at least one of the implementations.
- 'Note: in this mode, the number of shots returned after execution will be less or
  equal to the requested amount due to the post-selection based on heralding data.'
- Information about an implementation of a quantum gate/operation.
- Configuration for the model, should be a dictionary conforming to ConfigDict.
- Currently supports various native operations like measure, prx, cc_prx, reset, cz,
  move, barrier.
- Information about a quantum gate/operation.
- The loci are sorted based on the first locus component.
- Job-specific parameters extracted from the original RunRequest.
- Metadata describing a circuit execution job.
- Support for multiple implementations is currently experimental and in normal use
  the field should be omitted.
- This option is meant for advanced users.
- MOVE gate validation mode for circuit compilation. This options is meant for advanced
  users.
- Describes a native operation on the quantum computer.
- Measurement counts of a circuit execution job.
- All circuits in a batch must measure the same qubits otherwise batch execution fails.
- If the job succeeded, measurements contains the output of the batch of circuits.
- If the status is 'pending compilation' or 'pending execution', measurements and
  message are None.
- Status of a circuit execution job can be 'pending compilation', 'pending execution',
  'ready', 'failed', 'aborted'.
- Status of a job includes states such as RECEIVED, PROCESSING, ACCEPTED, etc.
- Results of the quantum circuit execution job.
- Before a circuit transpiled to a simplified architecture can be executed it must
  be further transpiled to the real Star architecture using transpile_insert_moves()
- Status of a circuit execution job.
- Status of a job includes states like RECEIVED, PROCESSING, ACCEPTED, PENDING_COMPILATION,
  PENDING_EXECUTION, READY, FAILED, ABORTED, PENDING_DELETION, DELETION_FAILED, DELETED.
- The function does nothing if `arch` does not support MOVE gates.
- Options for how transpile_insert_moves() should handle existing MOVE instructions
  in the circuit.
- IQM uses bearer token authentication to manage access to quantum computers.
- Set IQM_CLIENT_REQUESTS_TIMEOUT environment variable to override the network requests
  default timeout value. The default value is 60 seconds and might not be sufficient
  when fetching run results of larger circuits via slow network connections.
- Set IQM_CLIENT_SECONDS_BETWEEN_CALLS to control the polling frequency when waiting
  for compilation and run results.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- If any circuit in a job would take too long to execute compared to the T2 time of
  the qubits, the server will disqualify the job.
- Set IQM_CLIENT_SECONDS_BETWEEN_CALLS to control the polling frequency when waiting
  for compilation and run results with the IQMClient methods.
- Python 3.10 support is deprecated and will be removed in the future.
- The V1 API is deprecated and will be removed in a future release. Please use the
  V2 API instead.
errors:
- 'ClientAuthenticationError: acquiring the token failed'
- 'ClientAuthenticationError: closing the session failed'
- 'APITimeoutError: Executing a job on the server took too long.'
- 'ArchitectureRetrievalError: Retrieving quantum architecture failed.'
- 'CircuitExecutionError: Something went wrong on the server.'
- 'CircuitTranspilationError: Circuit transpilation failed.'
- 'CircuitValidationError: Circuit validation failed.'
- 'ClientAuthenticationError: Something went wrong with user authentication.'
- 'ClientConfigurationError: Wrong configuration provided.'
- 'JobAbortionError: Job abortion failed.'
- 'ClientAuthenticationError: getting the token failed'
- 'ClientAuthenticationError: closing failed'
- Something went wrong on the server.
- Circuit transpilation failed.
- APITimeoutError
- ArchitectureRetrievalError
- CircuitExecutionError
- CircuitTranspilationError
- CircuitValidationError
- ClientAuthenticationError
- ClientConfigurationError
- JobAbortionError
- Job abortion failed.
- 'CircuitExecutionError: IQM server specific exceptions'
- 'HTTPException: HTTP exceptions'
- 'ClientAuthenticationError: if no valid authentication is provided'
- 'pydantic.error_wrappers.ValidationError: validation failed'
- 'ClientAuthenticationError: Check authentication setup.'
- 'ClientConfigurationError: Review client configuration.'
- 'ClientAuthenticationError: Check authentication setup'
- 'ClientConfigurationError: Verify client configuration'
- 'APITimeoutError: Handle API timeout by retrying or optimizing requests.'
- 'ClientAuthenticationError: Verify client authentication details.'
- 'ClientConfigurationError: Check the client configuration settings.'
- 'ClientAuthenticationError: Check your authentication credentials.'
- 'ClientConfigurationError: Verify your client configuration settings.'
- 'ClientAuthenticationError: Check client configuration.'
- 'ClientConfigurationError: Review the API configuration.'
- 'ClientAuthenticationError: Check client credentials and configuration.'
- 'ClientConfigurationError: Verify API configuration settings.'
- 'APITimeoutError: Increase timeout settings or optimize requests.'
- 'ClientAuthenticationError: Check credentials and API access.'
- 'ClientConfigurationError: Ensure that your client is correctly configured.'
- 'ClientAuthenticationError: Check authentication details.'
- 'ClientConfigurationError: Verify the configuration settings.'
- 'APITimeoutError: The request took too long to process.'
- 'ClientAuthenticationError: Authentication failed.'
- 'ClientConfigurationError: Invalid configuration.'
- 'ClientAuthenticationError: Check your authentication details.'
- 'JobAbortionError: Ensure your job is not aborted.'
- 'ClientAuthenticationError: Check authentication credentials.'
- 'ClientConfigurationError: Verify the API client configuration.'
- 'APITimeoutError: The API request timed out.'
- 'ClientAuthenticationError: Failed to authenticate the client.'
- 'ClientConfigurationError: Client configuration is invalid.'
- 'APITimeoutError: Throttle API calls or reduce frequency'
- 'ClientAuthenticationError: Recheck OAuth scopes or token expiration'
- 'ClientConfigurationError: Verify client configuration settings'
- 'ClientAuthenticationError: Check your credentials and setup'
- 'JobAbortionError: The job was aborted'
- 'ClientConfigurationError: Check configuration settings.'
- 'JobAbortionError: The job was aborted due to a failure.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - ExternalToken
  - TokenClient
  - TokenManager
  - TokenProviderInterface
  - TokensFileReader
  - ClientAuthenticationError
  - GateImplementationInfo
  - Circuit
  - DynamicQuantumArchitecture
  - ExistingMoveHandlingOptions
client:
  base_url: https://meetiqm.com
  headers:
    Accept: application/json
source_metadata: null
