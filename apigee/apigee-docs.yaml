resources:
- name: Cassandra
  endpoint:
    path: /private-cloud/v4.52.01/installation-requirements
    method: GET
    data_selector: hardware_requirements
- name: Analytics
  endpoint:
    path: /private-cloud/v4.52.01/installation-requirements
    method: GET
    data_selector: analytics_requirements
- name: Network settings
  endpoint:
    path: /private-cloud/v4.52.01/network-settings
    method: GET
    data_selector: network_requirements
- name: Router
  endpoint:
    path: /v1/servers/UUID
    method: POST
    data_selector: ''
    params:
      reachable: true|false
- name: Message Processor
  endpoint:
    path: /v1/servers/self
    method: GET
    data_selector: ''
    params: {}
- name: API products
  endpoint:
    path: /api-platform/publish/create-api-products
    method: POST
- name: app developers
  endpoint:
    path: /api-platform/publish/adding-developers-your-api-product
    method: POST
- name: developer apps
  endpoint:
    path: /api-platform/publish/creating-apps-surface-your-api
    method: POST
- name: api_proxy_stats
  endpoint:
    path: /v1/o/org_name/environments/test/stats/apiproxy
    method: GET
    data_selector: message_count
    params:
      select: sum(message_count)
      timeRange: 6/24/2018 00:00~6/24/2018 23:59
      timeUnit: hour
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hello
  endpoint:
    path: /hello
    method: GET
    data_selector: responses
    params: {}
- name: View personalized greeting
  endpoint:
    path: /
    method: GET
    data_selector: responses
    params: {}
- name: View XML Response
  endpoint:
    path: /xml
    method: GET
    data_selector: responses
    params: {}
- name: help
  endpoint:
    path: /help
    method: GET
- name: personalized_greeting
  endpoint:
    path: /
    method: GET
- name: user_greeting
  endpoint:
    path: /user
    method: GET
- name: api_affirmation
  endpoint:
    path: /iloveapis
    method: GET
- name: ip_address
  endpoint:
    path: /ip
    method: GET
- name: xml_response
  endpoint:
    path: /xml
    method: GET
- name: json_response
  endpoint:
    path: /json
    method: GET
- name: request_headers_and_body
  endpoint:
    path: /echo
    method: GET
- name: send_request_and_view_headers_and_body
  endpoint:
    path: /echo
    method: POST
- name: status_code_and_message
  endpoint:
    path: /statuscode/{code}
    method: GET
- name: basic_auth_validation
  endpoint:
    path: /auth
    method: GET
- name: api_proxies
  endpoint:
    path: /v1/organizations/your_org_name/apis
    method: GET
- name: default
  endpoint:
    path: /{org-name}-prod.apigee.net
    method: GET
    data_selector: records
- name: secure
  endpoint:
    path: /{org-name}-test.apigee.net
    method: GET
    data_selector: records
- name: virtual_host
  endpoint:
    path: /management/apis/post/organizations/{org_name}/environments/{env_name}/virtualhosts
    method: POST
    data_selector: VirtualHost
    params: {}
- name: view_virtual_host
  endpoint:
    path: /management/apis/get/organizations/{org_name}/environments/{env_name}/virtualhosts
    method: GET
    data_selector: virtualHosts
    params: {}
- name: update_virtual_host
  endpoint:
    path: /management/apis/put/organizations/{org_name}/environments/{env_name}/virtualhosts/{virtualhost_name}
    method: PUT
    data_selector: VirtualHost
    params: {}
- name: delete_virtual_host
  endpoint:
    path: /management/apis/delete/organizations/{org_name}/environments/{env_name}/virtualhosts/{virtualhost_name}
    method: DELETE
    data_selector: VirtualHost
    params: {}
- name: API proxy
  endpoint:
    path: /v1/my/proxy/basepath
    method: GET
- name: virtual_host
  endpoint:
    path: /v1/o/{org_name}/e/{env_name}/virtualhosts
    method: POST
    data_selector: VirtualHost
    params: {}
- name: Update a Virtual Host
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/virtualhosts/{virtualhost_name}
    method: PUT
    data_selector: VirtualHost
- name: VirtualHost
  endpoint:
    path: /vhosts
    method: GET
    data_selector: VirtualHost
    params: {}
- name: virtual_host
  endpoint:
    path: /virtual_hosts
    method: GET
    data_selector: records
- name: Flow-1
  endpoint:
    path: /**
    method: GET
    data_selector: ''
    params: {}
- name: Flow-2
  endpoint:
    path: /reports
    method: ''
    data_selector: ''
    params: {}
- name: Flow-3
  endpoint:
    path: /forecasts
    method: ''
    data_selector: ''
    params: {}
- name: weather_forecast
  endpoint:
    path: /v1/weather/forecastrss
    method: GET
    data_selector: response
    params:
      w: '12797282'
- name: register_user
  endpoint:
    path: /v1/register/user
    method: POST
    data_selector: response
    params: {}
- name: QuotaPolicy
  endpoint:
    path: /apiproxy/policies/QuotaPolicy.xml
    method: CREATE
    data_selector: Quota
    params:
      enabled: 'true'
      continueOnError: 'false'
      Allow:
        count: '1'
      Interval: '1'
      TimeUnit: minute
- name: resourcefiles
  endpoint:
    path: /v1/organizations/{org}/resourcefiles
    method: POST
    data_selector: resourceFile
    params: {}
- name: resourcefiles_environment
  endpoint:
    path: /v1/organizations/{org}/environments/{env}/resourcefiles
    method: POST
    data_selector: resourceFile
    params: {}
- name: resourcefiles_api
  endpoint:
    path: /v1/organizations/{org}/apis/{api}/revisions/{rev}/resourcefiles
    method: POST
    data_selector: resourceFile
    params: {}
- name: resource_files_api_proxy_revision
  endpoint:
    path: /v1/organizations/{org}/apis/{api}/revisions/{rev}/resourcefiles/{type}/{name}
    method: PUT
    data_selector: name
    params: {}
- name: resource_files_environment
  endpoint:
    path: /v1/organizations/{org}/environments/{env}/resourcefiles/{type}/{name}
    method: PUT
    data_selector: name
    params: {}
- name: resource_files_organization
  endpoint:
    path: /v1/organizations/{org}/resourcefiles/{type}/{name}
    method: POST
    data_selector: name
    params: {}
- name: helloworld_apikey
  endpoint:
    path: /helloapikey
    method: GET
    data_selector: response
    params: {}
- name: helloworld_oauth2
  endpoint:
    path: /hellooauth2
    method: GET
    data_selector: records
    params: {}
- name: accesstoken
  endpoint:
    path: /oauth/client_credential/accesstoken
    method: POST
    data_selector: access_token
    params:
      grant_type: client_credentials
- name: clear_cache_entry
  endpoint:
    path: /management/apis/post/organizations/{org_name}/environments/{env_name}/caches/{cache_name}/entries/{entry}
    method: POST
    data_selector: null
    params: {}
- name: create_cache
  endpoint:
    path: /management/apis/post/organizations/{org_name}/environments/{env_name}/caches
    method: POST
    data_selector: null
    params: {}
- name: get_cache_info
  endpoint:
    path: /management/apis/get/organizations/{org_name}/environments/{env_name}/caches/{cache_name}
    method: GET
    data_selector: null
    params: {}
- name: clear_all_cache_entries
  endpoint:
    path: /management/apis/post/organizations/{org_name}/environments/{env_name}/caches/{cache_name}/entries
    method: POST
    data_selector: null
    params: {}
- name: list_caches
  endpoint:
    path: /management/apis/get/organizations/{org_name}/environments/{env_name}/caches
    method: GET
    data_selector: null
    params: {}
- name: update_cache
  endpoint:
    path: /management/apis/post/organizations/{org_name}/environments/{env_name}/caches/{cache_name}
    method: POST
    data_selector: null
    params: {}
- name: delete_cache
  endpoint:
    path: /management/apis/delete/organizations/{org_name}/environments/{env_name}/caches/{cache_name}
    method: DELETE
    data_selector: null
    params: {}
- name: key_value_maps
  endpoint:
    path: /api-reference/content/keyvalue-maps-management-api
    method: null
    data_selector: null
    params: {}
- name: JSONToXML
  endpoint:
    path: /api-platform/reference/policies/json-xml-policy
    method: POST
    data_selector: request
    params: {}
- name: XMLToJSON
  endpoint:
    path: /api-platform/reference/policies/xml-json-policy
    method: POST
    data_selector: response
    params: {}
- name: XSLTransform
  endpoint:
    path: /api-platform/reference/policies/xsl-transform-policy
    method: POST
    data_selector: response
    params: {}
- name: CORS
  endpoint:
    path: /v1/cnc
    method: OPTIONS
    data_selector: response
    params: {}
- name: Pass-Through SOAP
  endpoint:
    path: http(s)://[proxy_domain]/[proxy_base_path]?wsdl
    method: GET
- name: quote
  endpoint:
    path: /delayedstockquote/quote
    method: GET
    params:
      StockSymbol: GOOG
      LicenseKey: '0'
- name: list_apis
  endpoint:
    path: /v1/o/ORG_NAME/apis
    method: GET
    data_selector: null
    params: {}
- name: get_api
  endpoint:
    path: /v1/o/ORG_NAME/apis/weatherapi
    method: GET
    data_selector: null
    params: {}
- name: get_api_revision
  endpoint:
    path: /v1/o/ORG_NAME/apis/weatherapi/revisions/1
    method: GET
    data_selector: null
    params: {}
- name: deploy_api
  endpoint:
    path: /v1/o/ORG_NAME/environments/ENV_NAME/apis/API_NAME/revisions/REVISION_NUMBER/deployments
    method: POST
    data_selector: null
    params: {}
- name: undeploy_api
  endpoint:
    path: /v1/o/ORG_NAME/environments/ENV_NAME/apis/API_NAME/revisions/REVISION_NUMBER/deployments
    method: DELETE
    data_selector: null
    params: {}
- name: list_environments
  endpoint:
    path: /v1/o/ORG_NAME/environments
    method: GET
    data_selector: null
    params: {}
- name: list_deployments_in_test
  endpoint:
    path: /v1/o/ORG_NAME/environments/test/deployments
    method: GET
    data_selector: null
    params: {}
- name: list_deployments_in_organization
  endpoint:
    path: /v1/o/ORG_NAME/deployments
    method: GET
    data_selector: null
    params: {}
- name: List APIs
  endpoint:
    path: /v1/o/ORG_NAME/apis
    method: GET
- name: Get an API
  endpoint:
    path: /v1/o/ORG_NAME/apis/{api_name}
    method: GET
- name: Get API Revision
  endpoint:
    path: /v1/o/ORG_NAME/apis/{api_name}/revisions/{revision_number}
    method: GET
- name: target1
  endpoint:
    path: /targetservers
    method: POST
    data_selector: host
    params: {}
- name: target2
  endpoint:
    path: /targetservers
    method: POST
    data_selector: host
    params: {}
- name: HealthMonitor
  endpoint:
    path: /test
    method: GET
    data_selector: HealthMonitor
    params: {}
- name: hello-hosted-targets
  endpoint:
    path: /hello-hosted-targets
    method: GET
    data_selector: msg
- name: app.yaml
  endpoint:
    path: /api-platform/hosted-targets/hosted-targets-reference#the-manifest-file
    method: GET
    data_selector: records
    params: {}
- name: Nodejs-Hello
  endpoint:
    path: /nodejs-hello
    method: GET
    data_selector: response
    params: {}
- name: deploy_node_app
  endpoint:
    path: /deploynodeapp
    method: POST
    params:
      name: '{A name for your new proxy}'
      directory: '{The root directory of your Node.js app}'
      main_script: '{The name of the main Node.js file}'
      organization: '{Your org name on Edge}'
      environment: '{The environment to deploy to}'
      base_path: '{The base URL for your proxy}'
      username: '{Your Edge email address}'
      password: '{Your Edge password}'
- name: default
  endpoint:
    path: /apiproxy/targets/default.xml
    method: GET
    data_selector: records
- name: default
  endpoint:
    path: node://hello.js
    method: GET
    data_selector: environment variables
    params: {}
- name: access
  endpoint:
    path: /access
    method: GET
    data_selector: AuthenticatedUserId
    params: {}
- name: getCache
  endpoint:
    path: /getCache
    method: GET
- name: put
  endpoint:
    path: /put
    method: POST
- name: get
  endpoint:
    path: /get
    method: GET
- name: remove
  endpoint:
    path: /remove
    method: DELETE
- name: quota_apply
  endpoint:
    path: /quota/apply
    method: POST
    data_selector: ''
    params: {}
- name: quota_reset
  endpoint:
    path: /quota/reset
    method: POST
    data_selector: ''
    params: {}
- name: vaults
  endpoint:
    path: /o/{organization}/vaults
    method: GET
    data_selector: vaults
    params: {}
- name: vault_entries
  endpoint:
    path: /o/{organization}/vaults/{name}/entries/{entryname}
    method: GET
    data_selector: entries
    params: {}
- name: list_deployments
  endpoint:
    path: /v1/o/[org]/apis/edgemicro-auth/deployments
    method: GET
- name: get_deployment_info
  endpoint:
    path: /v1/o/[org]/apis/edgemicro-auth
    method: GET
- name: upload_resources_java
  endpoint:
    path: /v1/o/[org]/apis/edgemicro-auth/revisions/1/resources?type=java&name=micro-gateway-products-javacallout-2.0.0.jar
    method: POST
- name: upload_resources_jsc
  endpoint:
    path: /v1/o/[org]/apis/edgemicro-auth/revisions/1/resources?type=jsc&name=adjust-quota.js
    method: POST
- name: create_api_proxy
  endpoint:
    path: /v1/o/[org]/apis?action=import&validate=false&name=edgemicro-auth
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: default
  endpoint:
    path: /apiproxy/proxies/default.xml
    method: ''
    data_selector: ''
    params: {}
- name: PostFlow
  endpoint:
    path: /PostFlow
    method: GET
    data_selector: Request
    params: {}
- name: PostClientFlow
  endpoint:
    path: /PostClientFlow
    method: GET
    data_selector: Response
    params: {}
- name: Conditional Flows
  endpoint:
    path: /ConditionalFlows
    method: GET
    data_selector: Flows
    params: {}
- name: API Resources
  endpoint:
    path: /api/products
    method: POST
- name: api_product
  endpoint:
    path: /organizations/{org_name}/apiproducts
    method: POST
    data_selector: null
    params: {}
- name: view_api_products
  endpoint:
    path: /organizations/{org_name}/apiproducts
    method: GET
    data_selector: null
    params:
      monetized: 'false'
- name: register_developer
  endpoint:
    path: /organizations/{org_name}/developers
    method: POST
    data_selector: null
    params: {}
- name: register_developer_app
  endpoint:
    path: /organizations/{org_name}/developers/{developer_email}/apps
    method: POST
    data_selector: null
    params: {}
- name: get_consumer_key_details
  endpoint:
    path: /organizations/{org_name}/developers/{developer_email}/apps/{app_name}/keys/{consumer_key}
    method: GET
    data_selector: null
    params: {}
- name: Add API Product to Key
  endpoint:
    path: /o/{org_name}/developers/{developer_email}/apps/{app_name}/keys/{consumer_key}
    method: POST
    data_selector: apiProducts
    params: {}
- name: Approve consumer keys
  endpoint:
    path: /o/{org_name}/developers/{developer_email}/apps/{app_name}/keys/{consumer_key}
    method: POST
    data_selector: apiProducts
    params:
      action: approve
- name: Approve API products for consumer keys
  endpoint:
    path: /o/{org_name}/developers/{developer_email}/apps/{app_name}/keys/{consumer_key}/apiproducts/{apiproduct_name}
    method: POST
    data_selector: {}
    params:
      action: approve
- name: Revoke API products for consumer keys
  endpoint:
    path: /o/{org_name}/developers/{developer_email}/apps/{app_name}/keys/{consumer_key}/apiproducts/{apiproduct_name}
    method: POST
    data_selector: {}
    params:
      action: revoke
- name: volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: items
    params: {}
- name: Extract Variables
  endpoint:
    path: /api-platform/reference/policies/extract-variables-policy
    method: POST
    data_selector: variables
    params: {}
- name: Statistics Collector
  endpoint:
    path: /api-platform/reference/policies/statistics-collector-policy
    method: POST
    data_selector: statistics
    params: {}
- name: access_token
  endpoint:
    path: /access_token
    method: GET
- name: api_product
  endpoint:
    path: /api_product
    method: GET
- name: client_id
  endpoint:
    path: /client_id
    method: GET
- name: developer_app
  endpoint:
    path: /developer_app
    method: GET
- name: developer_email
  endpoint:
    path: /developer_email
    method: GET
- name: developer
  endpoint:
    path: /developer
    method: GET
- name: environment
  endpoint:
    path: /environment
    method: GET
- name: ax_edge_execution_fault_code
  endpoint:
    path: /ax_edge_execution_fault_code
    method: GET
- name: ax_execution_fault_flow_name
  endpoint:
    path: /ax_execution_fault_flow_name
    method: GET
- name: gateway_flow_id
  endpoint:
    path: /gateway_flow_id
    method: GET
- name: organization
  endpoint:
    path: /organization
    method: GET
- name: proxy
  endpoint:
    path: /proxy
    method: GET
- name: proxy_basepath
  endpoint:
    path: /proxy_basepath
    method: GET
- name: proxy_pathsuffix
  endpoint:
    path: /proxy_pathsuffix
    method: GET
- name: target_basepath
  endpoint:
    path: /target_basepath
    method: GET
- name: target_host
  endpoint:
    path: /target_host
    method: GET
- name: target_response_code
  endpoint:
    path: /target_response_code
    method: GET
- name: x_forwarded_for_ip
  endpoint:
    path: /x_forwarded_for_ip
    method: GET
- name: queries
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/queries
    method: POST
    data_selector: self
    params: {}
- name: query_status
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/queries/{queryId}
    method: GET
    data_selector: state
    params: {}
- name: query_results
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/queries/{queryId}/result
    method: GET
    data_selector: result
    params: {}
- name: create_query
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/queries
    method: POST
    data_selector: results
    params: {}
- name: async_reports
  endpoint:
    path: /mint/organizations/org_id/async-reports
    method: POST
    data_selector: null
    params:
      environment: prod
- name: reports
  endpoint:
    path: /organizations/{org_name}/reports
    method: GET
    data_selector: qualifier
- name: report_definition
  endpoint:
    path: /organizations/{org_name}/reports/{report_name}
    method: GET
    data_selector: report_definition
- name: create_report_definition
  endpoint:
    path: /organizations/{org_name}/reports
    method: POST
    data_selector: report_definition
- name: analytics_exports
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/analytics/exports
    method: POST
    data_selector: self
    params: {}
- name: analytics_exports_status
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/analytics/exports/{exportId}
    method: GET
    data_selector: self
    params: {}
- name: get_metrics
  endpoint:
    path: /organizations/{org_name}/stats
    method: GET
    data_selector: metrics
    params: {}
- name: get_metrics_by_dimension
  endpoint:
    path: /organizations/{org_name}/environments/{env_name}/stats/{dimension_name}-0
    method: GET
    data_selector: metrics
    params: {}
- name: get_metrics
  endpoint:
    path: /organizations/{org_name}/e/{env}/stats
    method: GET
    data_selector: environments
    params: {}
- name: get_metrics_by_dimension
  endpoint:
    path: /organizations/{org_name}/e/{env}/stats/{dimension_name}
    method: GET
    data_selector: dimensions
    params: {}
- name: get_metrics
  endpoint:
    path: /management/apis/get/organizations/{org_name}/stats
    method: GET
- name: get_metrics_by_dimensions
  endpoint:
    path: /management/apis/get/organizations/{org_name}/environments/{env_name}/stats/{dimension_name}-0
    method: GET
- name: api_requests
  endpoint:
    path: /stats/apis
    method: GET
    data_selector: records
- name: developer_requests
  endpoint:
    path: /stats/devs
    method: GET
    data_selector: records
- name: app_requests
  endpoint:
    path: /stats/apps
    method: GET
    data_selector: records
- name: api_product_stats
  endpoint:
    path: /v1/o/myorg/e/prod/stats/apiproducts
    method: GET
    data_selector: records
- name: request_path_stats
  endpoint:
    path: /v1/o/myorg/e/prod/stats/request_path
    method: GET
    data_selector: records
- name: request_counts
  endpoint:
    path: /stats
    method: GET
    data_selector: records
    params:
      select: sum(message_count)
      timeRange: 9/24/2018 00:00~10/25/2018 00:00
      timeUnit: day
- name: response_time
  endpoint:
    path: /stats
    method: GET
    data_selector: records
    params:
      select: avg(total_response_time)
      timeRange: 9/24/2018 00:00~10/25/2018 00:00
      timeUnit: day
- name: monetization_features
  endpoint:
    path: /api-platform/monetization/get-started-using-monetization
    method: GET
    data_selector: features
    params: {}
- name: organization_profile
  endpoint:
    path: /api-platform/monetization/edit-organization-profile
    method: GET
    data_selector: profile
    params: {}
- name: terms_and_conditions
  endpoint:
    path: /organizations/{org_name}/tncs
    method: POST
    data_selector: url
    params: {}
- name: enable_monetization_job
  endpoint:
    path: /v1/mint/asyncjobs/enablemonetization
    method: POST
    data_selector: ''
    params: {}
- name: check_job_status
  endpoint:
    path: /v1/mint/asyncjobs/{id}
    method: GET
    data_selector: ''
    params: {}
- name: organization_profile
  endpoint:
    path: /mint/organizations/{org_name}
    method: GET
    data_selector: response
    params: {}
- name: edit_organization_profile
  endpoint:
    path: /mint/organizations/{org_name}
    method: PUT
    data_selector: response
    params: {}
- name: supported_currencies
  endpoint:
    path: /mint/organizations/{org_name}/supported-currencies
    method: GET
    data_selector: supportedCurrency
    params: {}
- name: add_supported_currency
  endpoint:
    path: /mint/organizations/{org_name}/supported-currencies
    method: POST
    data_selector: ''
    params: {}
- name: supported_currency
  endpoint:
    path: /mint/organizations/{org_name}/supported-currencies/{currency_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_supported_currency
  endpoint:
    path: /mint/organizations/{org_name}/supported-currencies/{currency_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: add_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/tncs
    method: POST
    data_selector: id
    params: {}
- name: view_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/tncs/{tncs_id}
    method: GET
    data_selector: tnc
    params: {}
- name: view_all_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/tncs
    method: GET
    data_selector: tnc
    params: {}
- name: accept_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/developers/{dev_id}/tncs/{tncs_id}/developer-tncs
    method: POST
    data_selector: action
    params: {}
- name: view_accepted_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/developers/{dev_id}/developer-tncs
    method: GET
    data_selector: developerTnc
    params: {}
- name: edit_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/tncs/{tncs_id}
    method: PUT
    data_selector: id
    params: {}
- name: delete_terms_and_conditions
  endpoint:
    path: /mint/organizations/{org_name}/tncs/{tncs_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: notification_templates
  endpoint:
    path: /mint/organizations/{org_name}/notification-email-templates
    method: GET
    data_selector: templates
    params: {}
- name: notification_template
  endpoint:
    path: /mint/organizations/{org_name}/notification-email-templates/{template_id}
    method: GET
    data_selector: template
    params: {}
- name: create_notification_condition
  endpoint:
    path: /mint/organizations/{org_name}/notification-conditions
    method: POST
    data_selector: condition
    params: {}
- name: view_notification_condition
  endpoint:
    path: /mint/organizations/{org_name}/notification-conditions/{condition_Id}
    method: GET
    data_selector: condition
    params: {}
- name: edit_notification_condition
  endpoint:
    path: /mint/organizations/{org_name}/notification-conditions/{condition_Id}
    method: POST
    data_selector: condition
    params: {}
- name: delete_notification_condition
  endpoint:
    path: /mint/organizations/{org_name}/notification-conditions/{condition_Id}
    method: DELETE
    data_selector: condition
    params: {}
- name: webhooks
  endpoint:
    path: /mint/organizations/{org_name}/webhooks
    method: GET
    data_selector: webhooks
- name: add_webhook
  endpoint:
    path: /mint/organizations/{org_name}/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: edit_webhook
  endpoint:
    path: /mint/organizations/{org_name}/webhooks/{webhook_id}
    method: PUT
    data_selector: webhook
    params: {}
- name: delete_webhook
  endpoint:
    path: /mint/organizations/{org_name}/webhooks/{webhook_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: Get Company Details
  endpoint:
    path: /management/apis/get/organizations/{org_name}/companies/{company_name}
    method: GET
- name: Update Company
  endpoint:
    path: /management/apis/put/organizations/{org_name}/companies/{company_name}
    method: PUT
- name: notification_condition
  endpoint:
    path: /notification-conditions
    method: POST
    data_selector: notificationCondition
    params: {}
- name: test_webhook
  endpoint:
    path: /organizations/{org_name}/webhooks/{webhook_id}/test/{developer_email_or_id}/{app_id}/{product_id}/{rateplan_id}/{trigger_type}
    method: GET
    data_selector: sample_request_payload
    params: {}
- name: execute_webhook
  endpoint:
    path: /organizations/{org_name}/webhooks/{webhook_id}/test/{developer_email_or_id}/{app_id}/{product_id}/{rateplan_id}
    method: POST
    data_selector: request_payload
    params: {}
- name: view_notifications
  endpoint:
    path: /organizations/{org_name}/notification-service-items
    method: GET
    data_selector: notifications
    params: {}
- name: view_notification_details
  endpoint:
    path: /organizations/{org_name}/notification-service-items/{notification_id}
    method: GET
    data_selector: notification_details
    params: {}
- name: reprocess_notification
  endpoint:
    path: /organizations/{org_name}/notification-service-items/{notification_id}/reprocess
    method: POST
- name: monetization_packages
  endpoint:
    path: /organizations/{org_name}/monetization-packages
    method: GET
    data_selector: monetizationPackage
    params: {}
- name: monetization_package
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}
    method: GET
    data_selector: monetizationPackage
    params: {}
- name: create_monetization_package
  endpoint:
    path: /organizations/{org_name}/monetization-packages
    method: POST
    data_selector: monetizationPackage
    params: {}
- name: delete_monetization_package
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: api_product_bundle
  endpoint:
    path: /api/product/bundles
    method: POST
    data_selector: bundle
    params:
      description: A description of the API product bundle.
      displayName: The name to display for the API product bundle.
      name: The name of the API product bundle.
      status: A status indicator for the API product bundle.
- name: transaction_success_criteria
  endpoint:
    path: /reserve/{id}**
    method: PUT
    data_selector: attributes
    params:
      name: MINT_TRANSACTION_SUCCESS_CRITERIA
      value: txProviderStatus == 'OK'
- name: custom_attribute_1
  endpoint:
    path: /reserve/{id}**
    method: PUT
    data_selector: attributes
    params:
      name: MINT_CUSTOM_ATTRIBUTE_1
      value: test1
- name: custom_attribute_2
  endpoint:
    path: /charge/{id}**
    method: PUT
    data_selector: attributes
    params:
      name: MINT_CUSTOM_ATTRIBUTE_2
      value: test2
- name: fees
  endpoint:
    path: /api-platform/monetization/add-fees-rate-plan
    method: GET
    data_selector: rate_plan_types
- name: rate_card
  endpoint:
    path: /api-platform/monetization/specify-rate-card-plan-details
    method: GET
    data_selector: rate_plan_types
- name: revenue_share
  endpoint:
    path: /api-platform/monetization/specify-revenue-share-plan-details
    method: GET
    data_selector: rate_plan_types
- name: adjustable_notification
  endpoint:
    path: /api-platform/monetization/specifying-adjustable-notification-plan-details
    method: GET
    data_selector: rate_plan_types
- name: freemium
  endpoint:
    path: /api-platform/monetization/add-freemium-plan
    method: GET
    data_selector: rate_plan_types
- name: rate_plan
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{monetizationpackage_id}/rate-plans
    method: POST
    data_selector: ratePlan
    params: {}
- name: rate_plans_for_organization
  endpoint:
    path: /mint/organizations/{org_name}/rate-plans
    method: GET
    params:
      all: 'true'
      size: '10'
      page: '1'
- name: rate_plans_for_package
  endpoint:
    path: /mint/organizations/{org_name}/monetization-packages/{package_id}/rate-plans
    method: GET
    params: {}
- name: rate_plan_for_package
  endpoint:
    path: /mint/organizations/{org_name}/monetization-packages/{package_id}/rate-plans/{plan_id}
    method: GET
    params: {}
- name: active_rate_plans_for_developer
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-rateplans
    method: GET
    params:
      all: 'false'
      size: '20'
      page: '1'
- name: accepted_rate_plan_for_developer
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-rateplans/{developer_rateplan_id}
    method: GET
    params: {}
- name: accepted_rate_plans_by_developer
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-accepted-rateplans
    method: GET
    params:
      all: 'false'
      size: '20'
      page: '1'
- name: rate_plan
  endpoint:
    path: /rate_plans
    method: POST
    data_selector: ratePlan
    params: {}
- name: rate_plan
  endpoint:
    path: /v1/mint/organizations/{org_name}/monetization-packages/location_package/rate-plans
    method: POST
    data_selector: null
    params: {}
- name: rate_plans
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans
    method: POST
    data_selector: ratePlanDetails
- name: rate_card_plan
  endpoint:
    path: /v1/mint/organizations/{org_name}/monetization-packages/location/rate-plans
    method: POST
    data_selector: ratePlanDetails
    params: {}
- name: rate_plan
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans
    method: POST
    data_selector: ratePlanDetails
    params: {}
- name: rate_plans
  endpoint:
    path: /organizations/{org_name}/monetization-packages/location/rate-plans
    method: POST
    data_selector: id
    params: {}
- name: rate_plan
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans
    method: POST
    data_selector: null
    params: {}
- name: rate_plans
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans
    method: POST
    data_selector: ratePlanDetails
- name: developer_rateplans
  endpoint:
    path: /organizations/{org_name}/developers/{developer_id}/developer-rateplans
    method: POST
    data_selector: quotaTarget
- name: update_developer_rateplan
  endpoint:
    path: /organizations/{org_name}/developers/{developer_id}/developer-rateplans/{developer_rateplan_id}
    method: PUT
    data_selector: quotaTarget
- name: rate_plan
  endpoint:
    path: /mint/organizations/{org_name}/monetization-packages/location_package/rate-plans
    method: POST
    data_selector: ratePlanDetails
- name: organization_properties
  endpoint:
    path: /organizations/{org_name}
    method: POST
    data_selector: properties.property
    params: {}
- name: rate_plan
  endpoint:
    path: /v1/mint/organizations/{org_name}/monetization-packages/location/rate-plans
    method: POST
    data_selector: ratePlanDetails
- name: rate_plan_revision
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans/{plan_Id}/revision
    method: POST
    data_selector: ''
    params: {}
- name: developer_rateplans
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_or_company_id}/developer-rateplans
    method: POST
    data_selector: developer_rateplan
    params: {}
- name: expire_rateplan
  endpoint:
    path: /organizations/{org_name}/developers/{developer_or_company_id}/developer-rateplans/{developer_rateplan_id}
    method: PUT
    data_selector: rateplan
    params: {}
- name: companies
  endpoint:
    path: /organizations/{org_name}/companies
    method: POST
    data_selector: company
    params: {}
- name: developers
  endpoint:
    path: /organizations/{org_name}/developers
    method: POST
    data_selector: developer
    params: {}
- name: transactions
  endpoint:
    path: /organizations/{org_name}/transactions
    method: POST
    data_selector: ''
    params: {}
- name: developer_category
  endpoint:
    path: /mint/organizations/{org_name}/developer-categories
    method: POST
    data_selector: id
    params: {}
- name: view_developer_categories
  endpoint:
    path: /mint/organizations/{org_name}/developer-categories
    method: GET
    data_selector: records
    params: {}
- name: edit_developer_category
  endpoint:
    path: /mint/organizations/{org_name}/developer-categories/{category_id}
    method: PUT
    data_selector: id
    params: {}
- name: delete_developer_category
  endpoint:
    path: /mint/organizations/{org_name}/developer-categories/{category_id}
    method: DELETE
    data_selector: id
    params: {}
- name: unsuspend_all_developers
  endpoint:
    path: /organizations/{org_name}/suspended-developers/unsuspend-by-product/{suspendedProduct_id}
    method: POST
    data_selector: response
    params: {}
- name: unsuspend_specific_developer
  endpoint:
    path: /organizations/{org_name}/suspended-developers/{suspendedDev_id}
    method: DELETE
    data_selector: response
    params:
      suspendedProduct_id: ''
- name: report_definitions
  endpoint:
    path: /mint/organizations/{org_name}/report-definitions
    method: POST
    data_selector: ''
    params: {}
- name: report_definition
  endpoint:
    path: /mint/organizations/{org_name}/report-definitions/{report_definition_id}
    method: GET
    data_selector: ''
    params: {}
- name: developer_report_definitions
  endpoint:
    path: /mint/organizations/{org_name}/developers/{dev_id}/report-definitions
    method: GET
    data_selector: ''
    params: {}
- name: billing_reports
  endpoint:
    path: /mint/organizations/{org_name}/billing-reports
    method: POST
    data_selector: ''
    params: {}
- name: revenue_reports
  endpoint:
    path: /mint/organizations/{org_name}/revenue-reports
    method: POST
    data_selector: ''
    params: {}
- name: transaction_search
  endpoint:
    path: /transaction-search
    method: POST
    data_selector: ''
    params: {}
- name: applications_with_transactions
  endpoint:
    path: /applications-with-transactions
    method: GET
    data_selector: ''
    params: {}
- name: developers_with_transactions
  endpoint:
    path: /developers-with-transactions
    method: GET
    data_selector: ''
    params: {}
- name: products_with_transactions
  endpoint:
    path: /products-with-transactions
    method: GET
    data_selector: ''
    params: {}
- name: packages_with_transactions
  endpoint:
    path: /packages-with-transactions
    method: GET
    data_selector: ''
    params: {}
- name: billing_adjustments
  endpoint:
    path: /organizations/{org_name}/billing-adjustments
    method: GET
    data_selector: billingAdjustment
    params: {}
- name: specific_billing_adjustment
  endpoint:
    path: /organizations/{org_name}/billing-adjustments/{billing_adjustment_id}
    method: GET
    data_selector: billingAdjustment
    params: {}
- name: update_billing_adjustment
  endpoint:
    path: /organizations/{org_name}/billing-adjustments/{billing_adjustment_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_billing_adjustment
  endpoint:
    path: /organizations/{org_name}/billing-adjustments/{billing_adjustment_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: real_currency_credit_transactions
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/rate-plans/{rate-plan_id}/real-currency-credit-transactions
    method: POST
    data_selector: records
    params:
      currencyId: usd
      developerId: dev1@myorg.com
      transactionAmount: 100
      transactionNote: Credit for failed transactions
      billingMonth: APRIL
      billingYear: 2013
- name: developer_balances
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-balances
    method: GET
    data_selector: developerBalance
    params: {}
- name: prepaid_developer_balances
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/prepaid-developer-balances
    method: GET
    data_selector: developerBalance
    params: {}
- name: company_developer_balances
  endpoint:
    path: /mint/organizations/{org_name}/companies/{company_id}/developer-balances
    method: GET
    data_selector: developerBalance
    params: {}
- name: payment
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/payment
    method: POST
    data_selector: response
    params: {}
- name: providers
  endpoint:
    path: /mint/organizations/{org-name}/providers
    method: GET
    data_selector: provider
    params: {}
- name: reload_developer_balance
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-balances
    method: POST
    data_selector: amount
    params: {}
- name: reload_company_balance
  endpoint:
    path: /mint/organizations/{org_name}/companies/{company_id}/developer-balances
    method: POST
    data_selector: amount
    params: {}
- name: setup_recurring_developer_balance
  endpoint:
    path: /mint/organizations/{org_name}/developers/{developer_id}/developer-balances/recurring-setup
    method: POST
    data_selector: providerId
    params: {}
- name: setup_recurring_company_balance
  endpoint:
    path: /mint/organizations/{org_name}/companies/{company_id}/developer-balances/recurring-setup
    method: POST
    data_selector: providerId
    params: {}
- name: refund_transactions
  endpoint:
    path: /organizations/{org_name}/monetization-packages/{package_id}/refund-transactions
    method: POST
    params:
      parentTxId: required
      revenueType: required
      refundAmount: required
      transactionNote: required
- name: scheduled_jobs
  endpoint:
    path: /triggers
    method: GET
    data_selector: jobs
    params:
      orgid: '{org_name}'
- name: specific_scheduled_job
  endpoint:
    path: /triggers/{trig_id}
    method: GET
    data_selector: job
    params: {}
- name: transactions
  endpoint:
    path: /transactions/developers/{developer_email_or_id}
    method: GET
    params:
      limit: '1000'
      productId: ''
      utctime: ''
      utctime2: ''
- name: sync_applications
  endpoint:
    path: /organizations/{org_name}/sync-applications
    method: GET
    data_selector: ''
- name: asyncjobs
  endpoint:
    path: /asyncjobs/{id}
    method: GET
    data_selector: status
- name: default
  endpoint:
    path: /sharedflowbundle/sharedflows/default.xml
    method: GET
    data_selector: Step
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Step
  endpoint:
    path: /api-platform/reference/flow-configuration-reference#step
    method: GET
- name: Condition
  endpoint:
    path: /api-platform/reference/flow-configuration-reference#condition
    method: GET
- name: Name
  endpoint:
    path: /api-platform/reference/flow-configuration-reference#name
    method: GET
- name: Flow
  endpoint:
    path: /api-platform/reference/flow-configuration-reference#flow
    method: GET
notes:
- Customers are responsible for tracking and ensuring they stay within the configuration
  limits.
- Customers exceeding the limits may experience high API latencies, low API throughput,
  and failing API calls.
- Request/response size for both non-streamed and streamed requests is 10 MB.
- Target connection timeout is 600 seconds.
- Apigee Sense protects your APIs from unwanted request traffic.
- Monetization Services cannot be installed on an All-in-One (AiO) configuration.
- The core Apigee Edge (Gateway and Analytics) is a prerequisite for using Monetization
  Services.
- Ensure that the EPEL (Extra Packages for Enterprise Linux) repository is enabled.
- Cassandra requires a minimum network bandwidth of 1 Gbps per node.
- Ensure that you have set the following system limits on Cassandra and Message Processor
  nodes.
- The basepath is set when you deploy an API.
- If you do not declare a basepath in the deployment, then the router does not know
  which API to send incoming requests to.
- The Edge installer can install Java 1.8 and set JAVA_HOME for you as part of the
  apigee-setup installation process.
- Each installation of Edge requires a unique license file that you obtain from Apigee.
- The installer copies the license file to /opt/apigee/customer/conf/license.txt.
- The installer writes all files to the /opt/apigee directory.
- If an older version of Apigee Edge for Private Cloud was installed on the machine,
  ensure that you delete the /tmp/java directory before a new installation.
- The system-wide temporary folder /tmp needs execute permissions in order to start
  Cassandra.
- Installer expects all machines have fixed IP addresses.
- If a server has multiple interface cards, the first IP address returned might not
  be correct.
- Make sure that yum is *not* set to clean requirements on remove. Otherwise, PostreSQL
  upgrades will fail.
- These settings assume that the PostgreSQL database is only used for Edge analytics,
  and not for any other purpose.
- Do not edit the cassandra.yaml file.
- 'If necessary, you can stop iptables during installation using the command: sudo/etc/init.d/iptables
  stop.'
- Ensure that you have `patch` installed prior to a service pack (patch) installation.
- If the root file system is not large enough for the installation, Apigee recommends
  that you place the data onto a larger disk.
- If an older version of Apigee Edge for Private Cloud was installed on the machine,
  ensure that you delete the `/tmp/java` directory before a new installation.
- The system-wide temporary folder `/tmp` needs execute permissions in order to start
  Cassandra.
- If license file is valid, the management server validates the expiry and allowed
  Message Processor (MP) count.
- You will need to provide the path to the license file when installing the management
  server.
- Developer Channel is not available for installation by the Edge for Private Cloud
  installer.
- Developer Channel is not available for installation by the Edge for Private Cloud
  installer. Developer Channel is available for on-premises installation by a separate
  script.
- Ensure that you have at least 1 GBytes of free disk space before you perform the
  update.
- Backup all nodes before you update to have a backup plan in case the update to a
  new version doesn’t function properly.
- Make the Router unreachable by using the API call
- Make the Message Processor reachable after update
- For a non-standard installation, update Edge components in the specified order.
- Apigee Sense does not prevent DDoS attacks.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Edge does not require that you to let the developer associate multiple API products
  with an app.
- As a best practice, there is a 1-1 correlation between the app that the developer
  registers on Edge and the actual client app that they build.
- The timeRange parameter requires a URL-encoded space character before HH:MM, or
  a + character.
- Monetization is supported on Drupal-based developer portals only at this time.
- Apigee is a multi-cloud service, we use both GCP Cloud DNS and Amazon Web Services
  (AWS) Route53 DNS service for our external authoritative zones.
- Apigee also has internally hosted DNS servers for our internal/private zones, as
  well as resolvers for non-authoritative lookups.
- GCP Cloud DNS is across regions and uses our global network of Anycast name servers
  to serve the zones from redundant locations around the world, providing high availability
  and lower latency.
- Multiple Anycast IPs are used for redundancy, and each is used across all regions.
- Some objects like Contact may return nulls in deeply nested fields
- Calls to the API support gzip compression on responses.
- The Edge API returns data as JSON by default.
- It is recommended that you only iterate on API proxies in test, and make as few
  changes as necessary to API proxies deployed in prod.
- You can use TargetServer configurations to create environment-independent TargetEndpoint
  configurations.
- Both persistence resources are scoped by environment.
- You can also use conditional statements built with the environment.name variable
  to evaluate the current environment before enforcing a policy or before routing
  to a URL on the backend.
- By configuring a fault handler, you can customize the error returned to an API client.
- API Hub provisioning & plugin instance requires setup of API Hub within your Google
  Cloud project
- Apigee Edge opt-in requires management API call to enable API Hub connector
- The idle timeout for an Apigee Edge session is 20 minutes.
- The Classic Edge UI is available with Edge for Private Cloud only.
- The behavior of Spike Arrest involves a smoothing algorithm across multiple message
  processors, which affects the actual behavior you will see.
- This is a very low limit and is used only for this tutorial to demonstrate the policy.
- API proxy for the Apigee mock target service endpoint.
- Make sure curl is installed and available on your path
- If you're running Cygwin on Windows, you may also need the dos2unix utility
- Free Edge accounts are limited to creating only a single organization.
- 'API proxy bundle size: API proxy bundles cannot be larger than 15MB.'
- Message payload size is restricted to 10MB.
- Use IP address restriction policies to limit access to your test environment. Allow
  access for the IP addresses of your development machines or environments and disallow
  all others.
- Always apply content protection policies (JSON and or XML) to API proxies that are
  deployed to production.
- Self-service virtual hosts in Edge for the Cloud require that you enable TLS.
- Free and trial accounts cannot create virtual hosts and are limited to the four
  virtual hosts created for them at Edge registration time.
- Free and trial accounts cannot create or modify virtual hosts and are limited to
  the virtual hosts created for them at Edge registration time.
- You must have a cert signed by a trusted entity, such as Symantec or VeriSign.
- Edge for the Cloud customers can only create HTTPS virtual hosts with TLS enabled.
- Free and trial accounts cannot create or modify virtual hosts.
- You must edit any existing API proxies to add the new virtual host.
- You must edit the API proxy to remove that virtual host from its definition.
- 'The default URL rendered by the Edge UI will appear as: ''api.myCompany.com'''
- Free and trial accounts cannot create or modify virtual hosts and are limited to
  the four virtual hosts created for them at Edge registration time.
- You cannot enable TLS on a virtual host using port 80.
- You cannot disable TLS on a virtual host using port 443.
- Ensure to use the correct XML for your version of Edge.
- You must specify port 443 when creating a virtual host.
- The combination of host alias name and port number for the virtual host must be
  unique.
- Conditional flows are executed only if the flow's condition evaluates to true.
- Only one conditional flow is executed per segment.
- Fault handling is a major architectural design task for API proxy development.
- Custom fault handling lets you add functionality such as message logging whenever
  an error occurs.
- Edge evaluates the FaultRules in either the ProxyEndpoint or TargetEndpoint, depending
  on where the error occurred.
- FaultRules are evaluated in the following order. The first FaultRule whose outer
  condition evaluates to true is executed.
- For each FaultRule, provide an 'outer' <Condition> (sibling to the <Step> element).
- Fault rules with no outer condition automatically evaluate to true.
- To handle errors in multiple policies of the same type, create one FaultRule per
  policy error you're likely to receive.
- It's okay to be iterative, though it does require proxy redeployment.
- Add FaultRules where the errors will occur (client side <ProxyEndpoint> or target
  side <TargetEndpoint>).
- Include FaultRules for each policy that appears in each location.
- A DefaultFaultRule acts as an exception handler for any error that is not explicitly
  handled by another FaultRule.
- Failures that occur during the message flow (not including policy failures)
- Faults occur while establishing network or transport-level connections
- Faults occur during semantics checks on every request
- Faults occur during semantics checks on every response
- Read/write errors at client or target endpoints, timeouts, TLS/SSL errors, and chunked
  errors
- Undefined runtime errors
- Memory-related failures
- Failures such as termination of run-away tasks
- Faults for each Policy type are defined in the Policy Reference
- When a policy throws an error, Edge immediately enters the error flow and generates
  an error message.
- The variable fault.name is the value of the errorcode attribute and error.message
  is the value of the faultstring attribute.
- It's a common practice to trap the system-generated policy errors and perform a
  subsequent action such as to create a custom error response.
- You can't necessarily guess it from the contents of the fault string or error code.
- A shared flow has no endpoint and can only be called from an API proxy or another
  shared flow.
- Edge does not validate the dependencies between shared flows and API proxies at
  deploy time.
- Attaching a shared flow to a flow hook is an action that has a very broad effect.
- The shared flow will be available to any API proxies and shared flows deployed to
  an environment from this organization.
- Each proxy in the chain counts as one call against quota.
- Proxies you want to connect in this way must be in the same organization and environment.
- When chaining API proxies, take care to avoid infinite loop recursive callouts back
  into the same API proxy, which could result in system overload.
- To verify that a policy is enforced properly, the API must be invoked by an HTTP
  client.
- 'After you submit more than 1 request within a minute, you should see the following
  error message: {"fault":{"faultstring":"policies.ratelimit.QuotaViolation","detail":{"errorcode":"policies.ratelimit.QuotaViolation"}}}'
- The UI will generate a default name, but it is advisable to create a descriptive
  name for the policy.
- A policy that is not attached to any flow is flagged with the 'detached' icon in
  the Policies list.
- The {policy_name} variable must be the same as the name attribute in the policy
  (stored under /policies) that you want to attach. The names must match exactly,
  as name matching is case-sensitive.
- When importing a resource file using the API, you might need to chmod the file's
  permissions.
- It's a good practice to pass the API key in a header rather than in a query parameter.
- The access token expires in 3600 seconds (1 hour).
- The security associated with API keys is limited.
- API keys can easily be extracted from app code.
- API keys can be located in a query parameter, a form parameter, or an HTTP header.
- Attach the policies to the ProxyEndpoint of the API proxy to be protected.
- Message content is a significant attack vector used by malicious API consumers.
- Such attacks can be mitigated using the JSONThreatProtection Policy type.
- Such attacks can be mitigated using the XMLThreatProtection Policy type.
- Such attacks can be mitigated using the RegularExpressionProtection Policy type.
- Data masking is enabled only when a trace session or debug session is enabled for
  an API proxy.
- If you change your data masking configuration, you must stop and restart the tracing
  session to see the effect of your changes.
- The ConcurrentRateLimit policy mentioned in the video has been deprecated.
- Quota counter is stored in Cassandra.
- Configure the policy to synchronize the counter asynchronously to save resources.
- Asynchronous counter synchronization may cause a delay in the rate limiting response,
  which may allow calls slightly in excess of the limit you've set.
- Performs throttling based on the time at which the last traffic was received. This
  time is stored per message processor.
- If you specify a rate limit of 100 calls per second, only 1 call every 1/100 second
  (10 ms) will be allowed on the message processor. A second call within 10 ms will
  be rejected.
- Even with a high rate limit per second, nearly simultaneous requests may result
  in rejections.
- Uses either a cache you configure or a shared cache that's included by default
- Cache keys are limited to a size of 2 KB.
- Apigee Edge currently supports a subset of the HTTP/1.1 caching headers and directives.
- Apigee Edge supports only the notion of public caches.
- Content cached with the ResponseCache policy will retain the max-age value set by
  its origin.
- Cache-Control header directives max-age and s-maxage take precedence over and override
  the Expires header.
- Cache is encrypted only in PCI- and HIPAA-enabled organizations.
- The scope of a cache is limited to the environment in which you created the cache.
- KVMs can be created at organization, environment, and apiproxy scopes.
- Encrypted KVMs are encrypted with an Apigee-generated AES-128 cipher key.
- KVMs are defined at the environment scope.
- You can only encrypt KVMs when you create them. You can't encrypt or decrypt a key
  value map after it's been created.
- See you plan for any usage quotas that apply.
- Apigee Extensions are available in the Edge UI to Google Cloud Apigee customers
  with an Enterprise support plan.
- When an extension isn't working, identifying the problem can sometimes require information
  from both the Trace tool and extension logs.
- Uses CORS headers to signal to the browser that it's okay to relax its same-origin
  policy.
- Edge handles transformations and flow activities automatically
- It's easier for Edge to translate WSDL containing bounded parameters
- Uses REST to SOAP to REST proxy type.
- Message payload size is restricted to 10 MB in Edge Cloud and Private Cloud, even
  with streaming enabled.
- Apigee doesn't recommend exceeding that limit when streaming and can't support issues
  that arise as a result of exceeding that limit, such as performance issues, timeouts,
  and so on.
- Users can only deploy to the test environment.
- If you're an administrator you can deploy to any environment.
- Each environment in an organization can only have one deployed revision of an API
  proxy.
- There is a limit of 50 API proxy revisions that can be retained in history in Apigee
  Edge.
- The size limit of an API proxy bundle is 15 MB.
- The size limit is 250 MB for API proxies using the hosted targets feature.
- The size limit of a proxy bundle is 15 MB.
- Only one revision of an API proxy can be deployed in an environment at a given time.
- Ensure to substitute entries for EMAIL:PASSWORD and ORG_NAME.
- If you have an on-premises installation of Apigee Edge, you may see a different
  list of environments.
- You need to explicitly update the revision to be undeployed.
- The MaxFailures default is 0.
- Retries are triggered by I/O exceptions and HTTP time outs.
- Health monitors must be configured on a per-proxy basis.
- Ensure that you set <MaxFailures> in the <HTTPTargetConnection> tag to a non-zero
  value.
- Apigee recommends using Hosted Targets for Node.js applications.
- Hosted Targets allows Node.js applications to run in a native environment that does
  not depend on any Apigee-specific run-time technology.
- Hosted Targets applications are scoped to an Edge organization-environment.
- Proxy names must not contain spaces.
- Edge runs npm install for you when the Node.js app is deployed.
- The node_modules directory is not required.
- Edge will perform an npm install when the app is deployed.
- If you use bundled dependencies, you must specify a runtimeVersion 6 or newer in
  your application's app.yaml file.
- 'Be sure that your bundled dependencies follow this directory structure structure
  within the ZIP file: node_modules/ bundle-dependency-name/ ... (sources)'
- If a proxy bundle that you deploy exceeds 15MB in size, a deployment error can occur.
- Implementing a health check endpoint is not required.
- The health check path is only used by Apigee when your application starts up.
- Hosted Targets limits the size and number of environment variables that you can
  set.
- Maximum length of a single environment variable is 1000.
- Maximum number of environment variables that you can set is 100.
- Each Hosted Targets instance receives 256 MB memory and 1.2 GHz CPU.
- A '502 Bad Gateway' error can occur when the process fails to start. To debug this
  check the runtime logs and look for error messages when starting.
- A '504 Gateway Timeout' error can occur when the Hosted Targets target app does
  not respond within a timeout limit.
- Google App Engine (GAE) imposes a 60 second request timeout.
- Always delete temporary files. Local disk storage in the temporary directory is
  an in-memory filesystem.
- Only an older version of Node.js (0.10.32) is supported.
- There are subtle differences in behavior between the standard Node.js environment
  and the Trireme/Rhino environment.
- Debugging Node.js apps after they are deployed to Edge is difficult.
- Uses Node.js application deployed to the test environment.
- Node.js resources must reside in /apiproxy/resources/node at the API proxy scope.
- The ResourceURL parameter must always be prefixed with `node://`, followed by the
  name of the main Node.js script.
- Private Cloud customers should migrate data in secure vaults to Encrypted Key Value
  Maps (KVM) to access sensitive data from an API proxy.
- Migrate Trireme (Node.js) based API proxies to a native Node.js environment outside
  of Apigee.
- Node.js applications in the Apigee Edge environment cannot access services on the
  Internet via UDP because of the Edge network architecture.
- 'Filesystem access is restricted to the directory where the Node.js script was launched:
  the /resources/node directory.'
- Attempts to listen for incoming TCP connections generate an exception.
- Functionality to manipulate user ID, group membership, and working directory is
  not supported.
- For standard input, you are limited to passing arguments using the ScriptTarget
  element of TargetEndpoint.
- For standard output, you are limited to using the Node.js Logs button in the Edge
  management UI for your proxy.
- Modules that depend on native code are not supported.
- Modules that depend on EcmaScript 6 features, such as Promises and Generators, are
  not supported.
- The Node.js runtime flags such as 'harmony-proxies' are not supported.
- The apigee-access module is included with the Apigee Edge platform; you do not need
  to install it as you would with other Node.js modules.
- On Apigee Edge, a quota is an allotment of request messages that an app is allowed
  to submit to an API over the course of an hour, a day, a week, or a month.
- Migrate data in secure vaults to Encrypted Key Value Maps (KVM) to access sensitive
  data from an API proxy.
- The Edge secure store (vault) is deprecated and will be retired in the future.
- Trace captures message content. If your message payloads contain sensitive information,
  then you should enable data masking.
- This features is available in the Edge UI only. It is not available in the Classic
  UI.
- This option is enabled by default. When you disable or re-enable this option, the
  user name and date are saved and displayed adjacent to the toggle.
- Organization audit history is retained for 400 days (Public Cloud only; does not
  apply to Apigee Edge for Private Cloud).
- Use the --mfa flag whenever you use the --legacy flag.
- As long as the organization and environment are the same for the Microgateway instances,
  you can reuse the key/secret pair that get generated during configuration.
- You need to have org admin credentials to configure and deploy Edge Microgateway.
- Edge Microgateway is a Node.js application, and can be run by anyone with permission
  to run such applications on a given machine.
- You must set requestCert to true for mutual TLS to be enabled.
- Only the default Apigee SSL cert is currently supported.
- Support for Node.js 18 is ending. We recommend upgrading to Node.js version 20 or
  22.
- 'Supported Node.js versions include: 16, 18, and 20. As of version 3.3.2, Edge Microgateway
  CLI commands will only work on the supported versions.'
- Node.js 8 is no longer supported.
- A cache config file created by Edge Microgateway 3.1.8 could cause errors if used
  by older versions of Edge Microgateway for starting up or reloading.
- The default expiration time for tokens generated by the edgemicro-auth proxy has
  been changed from 108000 milliseconds (1.8 minutes) to 1800 seconds (30 minutes).
- To support SAML enabled orgs, the edgemicro genkeys command has been updated to
  include a --token parameter. This parameter lets you use an OAuth token for authentication
  instead of username/password.
- Improperly formatted JWTs can cause workers to crash when using token cache.
- You can run Edge Microgateway disconnected completely from any Apigee Edge dependency.
- 'Some previous versions of Edge Microgateway let you install the software by downloading
  a ZIP file. These ZIP files are no longer supported. To install Edge Microgateway,
  you must use: npm install -g edgemicro'
- Conditional flows are evaluated in the order defined in the API proxy.
- PreFlow and PostFlow need only be specified when a policy needs to be enforced.
- API product names must use a unique sequence of characters, regardless of the case.
- The names of companies that you use with monetization must not contain any spaces.
- The names of API products that you use with monetization must not contain any trailing
  spaces.
- API security, traffic management, and developer/app analytics are dependent on proper
  API proxy configuration.
- Apigee recommends that you manage developer accounts directly on your developer
  portal.
- Apigee hybrid does not support company apps; this field does not apply.
- Consumer keys and secrets can contain letters, numbers, underscores, and hyphens.
  No other special characters are allowed.
- You can keep the auto-generated key. Both the imported key and the auto-generated
  key work in API calls.
- API products enable bundling of API resources.
- Approval type can be set to 'auto' for immediate access.
- API product settings are enforced by matching policies, such as VerifyAPIKey, OAuthV2,
  and Quota.
- There is a limit to the amount of data that can be reported in the Analytics dashboards.
- For Cloud-based installations, data older than six months from the current date
  is not accessible by default.
- For Private Cloud installations, the maximum time frame for running custom reports
  through the UI is 14 days.
- 'Data delay interval: After API calls are made to proxies, it may take up to 13
  minutes for the data to appear in dashboards, custom reports, and management API
  calls.'
- Data retention differs by plan.
- Analytics data must be extracted and stored to a variable before it can be passed
  to API Analytics.
- It takes about 30 minutes for a new custom dimension to be added to the database
  after the Statistics Collector policy is invoked for the first time.
- City drilldown is currently available only for the United States and Canada.
- The Traffic Composition dashboard requires data range queries to be more than a
  month (for example, November 30 to December 31).
- After API calls are made to proxies, it may take up to 13 minutes for the data to
  appear in dashboards, custom reports, and management API calls.
- Uses standard controls, like the date and data aggregation selectors, hovering over
  graphs for more context, exporting data to CSV, and so on.
- Free and trial accounts cannot create asynchronous custom reports.
- You must put filter text between single quotes, for example, 'books'. Do not use
  double quotes.
- Apigee hybrid enforces a 30 MB size limit on the result data set.
- You can make up to seven calls per hour to initiate an asynchronous report.
- The maximum allowed time range for a query is 365 days.
- You can have up to 10 active queries for an organization/environment.
- Requires setup of connected app for authentication
- You must be an organization administrator to use this API.
- After changing the roles of a service account you have to wait for a minute or more
  for the change to take effect.
- 'Quotas for direct API calls: Postgres: 40 calls per minute, BigQuery: 12 calls
  per minute.'
- Sorting is supported by the Get metrics organized by dimensions API.
- Filtering is supported by the Get metrics organized by dimensions API.
- Paginating is supported by the Get metrics organized by dimensions API.
- Requests assume the environment is 'prod'. Modify '/e/prod' to '/e/test' for other
  environments.
- (not set) means Edge doesn't have enough information.
- (not set) could mean doesn't apply.
- Allowing longer custom reports in the Edge UI
- By default, the Edge UI only lets you create custom reports for a maximum of 14
  days.
- To override this default and set it to 183 days.
- You can extract files to other systems for accounting (and billing if you don't
  use monetization for billing). This depends on the extraction process for integration
  with other systems that the Apigee Edge configuration team created in the initial
  configuration.
- Support for generating billing documents has been retired from Apigee Edge Monetization.
- Ensure that your Edge account has system administrator privileges before proceeding.
- Requires setup of authorization credentials for basic auth.
- Monetization automatically runs a daily job that obtains the exchange rate in U.S.
  dollars for each supported currency.
- Requires authentication using email and password
- Requires basic authentication with email and password.
- Attach the Monetization Limits Check policy to API proxies to enforce monetization
  limits.
- The Monetization Limits Check policy is designed to raise a fault and block an API
  call in situations where the developer accessing monetized API is not registered
  or has not subscribed to the rate plan.
- Monetization supports event notifications that enable you to notify developers about
  events such as new API products, versions of T&C's, or rate plans.
- The save operation may take a few minutes. A message is displayed to confirm that
  the notifications have been saved.
- Classic Edge UI is available with Edge for Private Cloud only.
- The read and connection timeouts for webhook requests are 3 seconds each, which
  can result in failed requests.
- The feature is disabled by default and must be enabled per company.
- Combined transaction totals are calculated hourly.
- If a single transaction qualifies for more than one notification, multiple notifications
  are sent.
- You cannot delete or modify API product bundles after publishing a rate plan.
- The transaction success criteria expression must not exceed 100 characters.
- If specified as part of the transaction success criteria expression, txProviderStatus
  must be a string value enclosed in quotes.
- Attach the Monetization Limits Check policy to the API proxies associated with the
  API products included in the rate plan.
- Some fields are required when creating a rate plan.
- The rate card-related details are included in the request body.
- By default, a rate card plan is not a freemium plan.
- Freemium period can be based on duration or quantity.
- Flexible sharing model with multiple revenue bands
- Revenue share percentage is configurable
- You can use the same name for the variable in the message itself, the variable name
  in the transaction recording policy, and even the static attribute on an API product.
- Custom attributes must be added to the transaction recording policy before creating
  rate plans.
- The MINT.RATE_DECIMAL_PLACES is currently honored by the API only.
- The update made to the MINT.RATE_DECIMAL_PLACES property takes about 10 minutes
  to reflect in the system.
- The name of the future rate plan must not match the name of the original plan.
- You cannot delete a rate plan after it's published, but you can expire the rate
  plan and optionally replace it with a future rate plan.
- 'If a rate plan has no End Date specified, you can expire the rate plan using one
  of the following methods: Create a future rate plan. The parent rate plan will expire
  automatically on the date that the future rate plan starts.'
- If a rate plan has an End Date specified, you cannot change its expiration date.
- You cannot define future rate plans with an effective date that overlaps with the
  parent rate plan expiration date, if set.
- If a developer is purchasing the rate plan, 'MINT_DEVELOPER_ADDRESS' and 'MINT_DEVELOPER_LEGAL_NAME'
  must be defined.
- Company names must use a unique sequence of characters, regardless of case.
- If you use the company with Apigee monetization, the company name must not contain
  any spaces.
- To waive the set up fees, if a developer has already been charged, set the waivefees
  query parameter to true.
- If a developer has existing transactions, you can manually transfer the transaction
  usage.
- If a developer does not have existing transactions, you can skip the transaction
  transfer step.
- To skip validation steps and forcibly set the number of transactions, set the force
  query parameter to true.
- A company or developer can belong to only one developer category.
- Requires proper authorization using email and password.
- Report fromDate and toDate dates and times are in UTC/GMT and can include times.
- The billing adjustment ID is returned in the response when you create the billing
  adjustment.
- The currency is configured for the rate plan in the API product bundle that the
  developer purchased and cannot be changed.
- Specify a positive or negative value for the transaction amount. The value cannot
  be zero.
- Worldpay is the only payment provider that is supported at this time.
- When setting up automatic reload, ensure the recurringAmount is greater than the
  minimum reload value configured for the specified currency.
- You must have system admin privileges to view and update scheduled jobs using the
  API.
- You must enable the notifications and update the notifications templates, as required,
  to ensure proper execution of the jobs.
- You must have system admin privileges to use the APIs to update scheduled jobs.
- When updating scheduled jobs, you must pass all existing properties to the API,
  even if they are not being changed.
- 'If the utctime2 end time is not specified, the time range will now be: (utctime
  - 5s) <= txTime < (utctime + 5s)'
- If no start or end times are provided, the time range defaults to the current time
  plus or minus 5 seconds.
- This section is valid for Apigee Edge Private Cloud customers with sys admin privileges.
- Apigee Cloud customers should contact their Apigee customer support representative
  to confirm the asynchronous job has fully completed.
- Property values can only be literals. You cannot set values using variables.
- Steps without a condition always execute.
- Steps with a condition execute only if the condition evaluates to true.
- docs.apigee.com uses cookies to deliver and enhance the quality of its services
  and to analyze traffic.
- Conditions enable API proxies to behave dynamically at runtime.
- Conditional statements are boolean and always evaluate to true or false.
- In Edge for Private Cloud, the security restrictions are disabled by default.
- To enable security restrictions, add 'conf_security-policy_enable.security.manager=true'
  to the message-processor.properties file.
- Message templates are supported in several policies as well as certain elements
  used in the TargetEndpoint configuration.
- The function returns an empty string if the expression does not match.
- All offerings and add-ons are subject to Apigee product limits.
- Welcome to the home page for TLS on Apigee Edge.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Spike arrest violation. Allowed rate : 1pm'
- 'protocol.http.TooBigBody: Exceeding message payload size limit'
- '403 Forbidden: User does not have the necessary permissions to create or modify
  virtual hosts.'
- '400 Bad Request: Invalid input or parameters.'
- '404 Not Found: The specified virtual host does not exist.'
- '403 Forbidden: User does not have permission to create or modify virtual hosts.'
- '400 Bad Request: Invalid request format or parameters.'
- 'FailedToResolveAPIKey: Check the API key variable'
- 'QuotaViolation: Check the quota policies'
- QuotaViolation
- InvalidMessageWeight
- StartTimeNotSupported
- FailedToResolveAPIKey
- InvalidApiKey
- RaiseFault
- 'InternalServerError: HTTP error codes 5xx'
- 'NotFound: HTTP error codes 4xx'
- 'ConnectionRefused: Failures occur while establishing network or transport-level
  connections'
- 'ConnectionReset: Failures occur while establishing network or transport-level connections'
- 'ConnectionTimeout: Failures occur while establishing network or transport-level
  connections'
- 'ContentLengthMissing: Faults occur during semantics checks on every request'
- 'HostHeaderMissing: Faults occur during semantics checks on every request'
- 'SSLHandshakeError: Read/write errors at client or target endpoints'
- 'ReadTimeout: Read/write errors at client or target endpoints'
- 'ReadError: Read/write errors at client or target endpoints'
- 'WriteTimeout: Read/write errors at client or target endpoints'
- 'WriteError: Read/write errors at client or target endpoints'
- 'ChunkError: Read/write errors at client or target endpoints'
- 'steps.extractvariables.SourceMessageNotAvailable: foo message is not available
  for ExtractVariable: ParseJsonResponse'
- 'policies.ratelimit.QuotaViolation: Indicates that the Quota policy is being enforced
  by API Services.'
- '403 Forbidden: Check permissions or access rights'
- '404 Not Found: Verify resource path and name'
- '500 Internal Server Error: Try again later or contact support'
- Failed to resolve API Key variable request.queryparam.apikey
- 'oauth.v2.InvalidAccessToken: Invalid access token'
- 'OAuth Failure : Could not resolve the app key with variable request.queryparam.apikey'
- 'OAuth Failure : Consumer Key is Invalid'
- 500 Internal Server Error
- KVM name/identifier is case sensitive.
- Key size is limited to 2 KB.
- Value size is limited to 10 KB.
- 4xx or 5xx-level errors may appear when there's a configuration error.
- 'details: ''Project does not exist: example-test-12345'''
- 'details: ''Database not found: projects/example-test-123456/instances/spanner-extension-example-db/databases/my-business-d'''
- 'details: ''Resource type cannot be empty'''
- 'details: ''Row [jonesy42] in table user already exists'''
- The 'Access-Control-Allow-Origin' header contains multiple values '*, *', but only
  one is allowed.
- 'protocol.http.TooBigBody: Body buffer overflow'
- '401 Unauthorized: Check credentials'
- If the connection fails or takes more than 10 seconds to connect, then the failure
  count increments by 1.
- 'Deployment error: If you receive a deployment error when deploying a Hosted Targets
  proxy, try redeploying the proxy.'
- HTTP 500, failed in error handler
- 'HTTP 404: no match found for [API_path_name]'
- org is required
- env is required
- username is required
- password is required
- must have an assigned target file
- must have a key
- must have a secret
- dir must be configured
- callback must be present
- runtimeUrl is required
- mgmtUrl is required
- file is required
- must have target
- plugins not configured
- 'plugin dir does not exist: + pluginDir'
- 'plugin dir is not a directory: + pluginDir'
- 'error reading plugin dir: + pluginDir'
- must have a token
- configpath can't be empty
- must have EDGEMICRO_KEY
- must have EDGEMICRO_SECRET
- config does not exist
- edgemicro seems to be already running.
- Failed to check for change in Config. Will retry after
- If the server is not running, it might because of incorrect shutdown of the prevous
  start.
- Missing %s, Please run
- Reloading edgemicro was unsuccessful
- Stopping edgemicro was unsuccessful
- '''Try removing '' + ipcPath + '' and start again'''
- '''cache configuration '' + cache + '' does not exist. exiting.'''
- 'config file could not be written:'
- 'config file did not download:'
- edge micro failed to start
- edgemicro is not running.
- error - editing apiproxy Callout.xml
- error - editing apiproxy default.xml
- error checking for cert. Installing new cert.
- error retrieving region for org
- error uploading credentials
- failed
- failed to init configpath file %s
- invalid response from region api
- key is required
- port is not available.
- 'url protocol not supported:'
- 'verifying analytics negative case: FAIL'
- 'verifying analytics with payload: FAIL'
- verifying bootstrap url availability:FAIL
- 'verifying jwt_public_key availability: FAIL'
- 'verifying products availability: FAIL'
- 'verifying quota with configured products: FAIL'
- failed to retrieve config from gateway. continuing, will try cached copy..
- config not initialized
- must have a config
- must have config
- config must have uid
- must have config.edgemicro.logging in config
- must have request method
- must have plugin loaded in memory
- init must be a function
- must have plugin name
- ignoring invalid plugin handlers + name
- options must contain config
- plugin must have a name
- name must be a string
- plugin must be a function
- must have a source config directory
- error loading plugin
- failed in error handler
- header length more than allowed size
- response finished before work can be done
- handler threw an exception
- error starting edge micro
- config is empty
- config is not a file
- config is not defined
- config.analytics.batchSize is invalid
- config.analytics.batchSize is not a number
- config.analytics.bufferSize is invalid
- config.analytics.bufferSize is not a number
- config.analytics.flushInterval is invalid
- config.analytics.flushInterval is not a number
- config.analytics.proxy is not "dummy"
- config.analytics.proxy is not defined
- config.analytics.proxy_revision is not a number
- config.analytics.proxy_revision is not defined
- config.analytics.source is not "microgateway"
- config.analytics.source is not defined
- config.analytics.uri is not a string
- config.analytics.uri is not defined
- config.apikeys.public_key is not defined
- config.edge_config is not defined
- config.edge_config.bootstrap is not defined
- config.edge_config.jwt_public_key is not defined
- config.edge_config.proxy must be defined if config.edge_config.proxy_tunnel is defined
- config.edge_config.proxy_tunnel is not a boolean
- config.edge_config.refresh_interval is not a number
- config.edge_config.refresh_interval is too small (min 1h)
- config.edge_config.retry_interval is not a number
- config.edge_config.retry_interval is too small (min 5s)
- config.edgemicro is not defined
- config.edgemicro.logging is not defined
- config.edgemicro.logging.dir is not defined
- config.edgemicro.logging.level is not defined
- config.edgemicro.max_connections is not a number
- config.edgemicro.max_connections is not defined
- config.edgemicro.plugins.sequence is not an array
- config.edgemicro.port is not defined
- config.oauth.allowInvalidAuthorization is not defined
- config.oauth.allowNoAuthorization is not defined
- config.oauth.public_key is not defined
- config.oauthv2.public_key is not defined
- config.proxies is not defined
- config.proxy[ + index + ].base_path is not defined
- config.proxy[ + index + ].max_connections is not a number
- config.proxy[ + index + ].max_connections is not defined
- config.proxy[ + index + ].name is not defined
- config.proxy[ + index + ].proxy_name is not defined
- config.proxy[ + index + ].revision is not defined
- config.proxy[ + index + ].url is not defined
- config.quota.allow is not a number
- config.quota.allow is not defined
- config.quota.interval is not a number
- config.quota.interval is not defined
- config.spikearrest is not defined
- config.spikearrest.allow is invalid
- config.spikearrest.allow is not a number
- config.spikearrest.allow is not defined
- config.spikearrest.bufferSize is invalid
- config.spikearrest.bufferSize is not a number
- config.spikearrest.timeUnit is not defined
- key is missing
- must have configDir
- must have options
- must have source
- must have source to load from
- must have targetFile
- options cannot be null
- options.keys cannot be null
- port_message
- products should be an array
- proxies for product should be an array
- secret is missing
- target is not set
- error: Not printed
  message: Forbidden
  http_status: 403
  possible_causes: Access control rule
- error: invalid_request
  message: Invalid Request
  http_status: 400
  possible_causes: allowNoAuthorization == false No Authorization header in the HTTP
    request  allowOAuthOnly == true
- error: invalid_request
  message: API Key Verification URL not configured
  http_status: 400
  possible_causes: Verification API service not in header.
- error: access_denied
  message: Copy service message
  http_status: 403
  possible_causes: In response to the auth service timeout
- error: missing_authorization
  message: Missing API Key header
  http_status: 401
  possible_causes: allowAPIKeyOnly == true Unless allowInvalidAuthorization
- error: invalid_authorization
  message: Invalid Authorization header
  http_status: 401
  possible_causes: allowOAuthOnly == true Authorization-header not in HTTP
- error: gateway_timeout
  message: Copy service message
  http_status: 504
  possible_causes: In response to the auth timeout
- error: default
  http_status: 500
  possible_causes: All other not categorized
- error: invalid_token
  message: Missing API Key header
  http_status: 401
  possible_causes: allowAPIKeyOnly == true Unless allowInvalidAuthorization is set
- error: invalid_token
  message: token could not be parsed
  http_status: 401
  possible_causes: allowAPIKeyOnly == true Bad token delivered
- error: missing_authorization
  message: Missing Authorization header
  http_status: 401
  possible_causes: allowNoAuthorization == false Authorization-header in HTTP  allowOAuthOnly
    == true
- error: default
  http_status: 500
  possible_causes: All other uncategorized responses
- 'HTTP 431: Headers that exceed 8KB result in an HTTP 431 error.'
- 'unauthorized: authentication failed'
- error:1408F10B:SSL routines:ssl3_get_record:wrong version number
- current nodejs version is  18.x.x Note, v18.x.x will be out of support soon, see
  https://docs.apigee.com/release/notes/edge-microgateway-release-notes-0
- You are using a version of NodeJS that is not supported
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify credentials.'
- If the amount of analytics data returned by the query exceeds the limit, then the
  dashboard will display the results for a partial set of data and a warning will
  be displayed on the dashboard.
- Maximum time range is 14 days for synchronous custom reports.
- Maximum time range is 6 months for asynchronous custom reports.
- 'HTTP 429: Exceeded call quota'
- 'HTTP 404: Query not found'
- 'HTTP 401: Unauthorized access'
- 'HTTP 429: Exceeded call quota.'
- 'HTTP 429: Exceeding call quota'
- '401 Unauthorized: Recheck credentials.'
- '404 Not Found: Check the endpoint URL or parameters.'
- '401 Unauthorized: Recheck credentials'
- '404 status code with a classification error: malformed calls'
- '404 Not Found: Check webhook ID or organization name'
- '2xx: Success'
- '5xx: Failed request. The system will retry the request up to three times in 5-minute
  intervals.'
- 'Other response: Failed request. The system will not retry the request.'
- '404 Not Found: Verify the package_id or org_name.'
- '401 Unauthorized: Invalid credentials.'
- 'Invalid request: Check the request body for required fields.'
- 'Unauthorized: Check your authentication credentials.'
- '400 Bad Request: Check request body for errors'
- '401 Unauthorized: Check API credentials'
- '404 Not Found: Verify endpoint URL'
- Developer legal name not specified.
- '401 Unauthorized: Recheck credentials or permissions'
- '401 Unauthorized: Invalid credentials supplied.'
- '404 Not Found: The specified developer or organization does not exist.'
- '400 Bad Request: Check required query parameters or their values.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.enterprise.apigee.com/v1
  headers:
    Accept: application/json
source_metadata: null
