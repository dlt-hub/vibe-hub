resources:
- name: voice_call_events
  endpoint:
    path: /api/phone/voice-call-events
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: DELETE
- name: teams
  endpoint:
    path: /teams/
    method: GET
- name: widget_example
  endpoint:
    path: /widget
    method: GET
    data_selector: widgets
    params: {}
- name: tags
  endpoint:
    path: /tags/
    method: GET
- name: tickets
  endpoint:
    path: /tickets/
    method: GET
- name: messages
  endpoint:
    path: /api/tickets//messages/
    method: GET
- name: users
  endpoint:
    path: /users/
    method: GET
- name: delete_customer_custom_field
  endpoint:
    path: /customers/{customer_id}/custom-fields/{id}
    method: DELETE
- name: rule
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
- name: ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: tickets
- name: data
  endpoint:
    data_selector: data
- name: tickets
  endpoint:
    path: /api/tickets/{ticket_id}/tags
    method: PUT
- name: messages
  endpoint:
    path: /messages
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: statistic
  endpoint:
    path: /api/stats/{name}/download
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: ticket_tags
  endpoint:
    path: /tickets/{ticket_id}/tags
    method: GET
    data_selector: tags
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: customers
  endpoint:
    path: /customers/
    method: DELETE
- name: macro
  endpoint:
    path: /macros
    method: GET
    data_selector: macros
    params: {}
- name: custom_fields
  endpoint:
    path: /api/custom-fields/
    method: PUT
- name: tickets
  endpoint:
    path: /api/tickets/
    method: PUT
- name: view_items
  endpoint:
    path: /api/views//items
    method: PUT
- name: views
  endpoint:
    path: /api/views
    method: POST
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: items
  endpoint:
    path: /api/views//items
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: settings
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: POST
- name: update_setting
  endpoint:
    path: /api/account/settings/{id}
    method: PUT
- name: events
  endpoint:
    path: /events/
    method: GET
- name: rules
  endpoint:
    path: /rules/
    method: DELETE
- name: tags
  endpoint:
    path: /tags
    method: POST
- name: voice_call_recordings
  endpoint:
    path: /phone/voice-call-recordings/
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: macros
  endpoint:
    path: /macros/
    method: DELETE
- name: macro
  endpoint:
    path: /macros
    method: GET
    data_selector: macros
    params: {}
- name: satisfaction_surveys
  endpoint:
    path: /api/satisfaction-surveys
    method: GET
- name: retrieve_survey
  endpoint:
    path: /api/satisfaction-surveys/{id}
    method: GET
- name: cart_attributes
  endpoint:
    path: /createCartAttributes
    method: POST
    data_selector: attributes
- name: checkout_attributes
  endpoint:
    path: /createCheckoutAttributes
    method: POST
    data_selector: attributes
- name: widget_example
  endpoint:
    path: /widget
    method: GET
    data_selector: widgets
    params: {}
- name: tag
  endpoint:
    path: /api/tags/
    method: DELETE
- name: view
  endpoint:
    path: /views
    method: GET
    data_selector: views
    params: {}
- name: voice_calls
  endpoint:
    path: /phone/voice-calls/
    method: GET
- name: voice_call_events
  endpoint:
    path: /phone/voice-call-events/
    method: GET
- name: custom_fields
  endpoint:
    path: /api/customers/{customer_id}/custom-fields
    method: GET
    data_selector: custom_fields
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: voice_calls
  endpoint:
    path: /phone/voice-calls
    method: GET
- name: teams
  endpoint:
    path: /teams/
    method: PUT
- name: macros_unarchive
  endpoint:
    path: /api/macros/unarchive
    method: PUT
- name: MacroAction
  endpoint:
    path: /MacroAction
    method: GET
    data_selector: arguments
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: ''
    params: {}
- name: widgets
  endpoint:
    path: /widgets
    method: POST
- name: remove_ticket_tags
  endpoint:
    path: /api/tickets/{ticket_id}/tags
    method: DELETE
- name: ticket_message
  endpoint:
    path: /api/tickets/{ticket_id}/messages
    method: POST
- name: rules
  endpoint:
    path: /api/rules
    method: POST
- name: update_ticket_field_value
  endpoint:
    path: /api/tickets/{ticket_id}/custom-fields/{id}
    method: PUT
- name: satisfaction_survey
  endpoint:
    path: /satisfaction-surveys
    method: POST
    data_selector: null
    params: {}
- name: macros
  endpoint:
    path: /macros
    method: GET
- name: customer_custom_fields
  endpoint:
    path: /api/customers/{customer_id}/custom-fields
    method: PUT
- name: messages
  endpoint:
    path: /tickets//messages
    method: POST
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: DELETE
- name: file_upload
  endpoint:
    path: /api/upload
    method: POST
    data_selector: files
    params: {}
- name: view
  endpoint:
    path: /views
    method: GET
    data_selector: views
    params: {}
- name: voice_call_recording
  endpoint:
    path: /path/to/voice_call_recording
    method: GET
    data_selector: records
    params: {}
- name: tags_merge
  endpoint:
    path: /tags/merge
    method: PUT
    data_selector: null
    params: {}
- name: macros_archive
  endpoint:
    path: /api/macros/archive
    method: PUT
- name: jobs
  endpoint:
    path: /api/jobs/
    method: DELETE
- name: jobs
  endpoint:
    path: /jobs/
    method: GET
- name: messages
  endpoint:
    path: /tickets//messages/
    method: DELETE
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: search
  endpoint:
    path: /api/search
    method: POST
- name: widgets
  endpoint:
    path: /api/widgets
    method: GET
- name: settings
  endpoint:
    path: /account/settings
    method: GET
- name: custom_fields
  endpoint:
    path: /custom-fields
    method: POST
- name: custom_fields
  endpoint:
    path: /custom-fields/
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: POST
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customer
    params: {}
- name: users
  endpoint:
    path: /users/
    method: DELETE
- name: customer_data
  endpoint:
    path: /customers/{customer_id}/dataSet
    method: PUT
- name: tag
  endpoint:
    path: /api/tags/
    method: GET
    data_selector: tags
    params: {}
- name: custom_field
  endpoint:
    path: /customFields
    method: GET
    data_selector: customFields
- name: macros
  endpoint:
    path: /api/macros/
    method: PUT
- name: user_data
  endpoint:
    path: /users
    method: GET
    data_selector: order
    params:
      email: '{{ticket.customer.email}}'
- name: ticket_custom_fields
  endpoint:
    path: /api/tickets/{ticket_id}/custom-fields
    method: PUT
- name: merge_customers
  endpoint:
    path: /customers/merge
    method: PUT
    data_selector: null
    params: {}
- name: teams
  endpoint:
    path: /teams/
    method: DELETE
- name: returns
  endpoint:
    path: /api/v2/returns
    method: GET
    params:
      from: '2010-01-01'
      to: '2050-01-01'
      customer_email: '{{ticket.customer.email}}'
- name: widgets
  endpoint:
    path: /api/widgets
    method: POST
    data_selector: widgets
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customer
    params: {}
- name: account
  endpoint:
    path: /api/account
    method: GET
- name: rules
  endpoint:
    path: /rules/
    method: PUT
- name: ticket_custom_fields
  endpoint:
    path: /tickets/{ticket_id}/custom-fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: tag
  endpoint:
    path: /api/tags
    method: GET
    data_selector: tags
    params: {}
- name: tickets
  endpoint:
    path: /tickets/
    method: DELETE
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: statistic
  endpoint:
    path: /api/stats/{name}
    method: POST
    data_selector: ''
    params: {}
- name: ticket_message
  endpoint:
    path: /api/ticket_message
    method: GET
    data_selector: messages
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: voice_call
  endpoint:
    path: /voice_calls
    method: GET
    data_selector: records
- name: views
  endpoint:
    path: /views
    method: GET
    data_selector: views
    params: {}
- name: messages
  endpoint:
    path: /api/tickets//messages/
    method: PUT
- name: macros
  endpoint:
    path: /macros/
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: file
  endpoint:
    path: /attachments
    method: POST
    data_selector: content
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: POST
- name: customer_custom_field
  endpoint:
    path: /api/customers/{customer_id}/custom-fields/{id}
    method: PUT
- name: satisfaction_survey
  endpoint:
    path: /satisfaction_surveys
    method: GET
    data_selector: surveys
- name: rules
  endpoint:
    path: /rules/
    method: GET
- name: tags
  endpoint:
    path: /tags/
    method: PUT
- name: priorities
  endpoint:
    path: /api/rules/priorities
    method: POST
- name: append_values
  endpoint:
    path: /{spreadsheetId}/values/{range}:append
    method: POST
- name: voice_call_recordings
  endpoint:
    path: /phone/voice-call-recordings/
    method: DELETE
- name: macros
  endpoint:
    path: /macros
    method: POST
- name: custom_field
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: POST
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: response
    params:
      email: '{{ticket.customer.email}}'
- name: users
  endpoint:
    path: /users/
    method: PUT
- name: voice_call
  endpoint:
    path: /services/data/vXX.X/sobjects/VoiceCall
    method: GET
    data_selector: records
- name: voice_call_recordings
  endpoint:
    path: /api/phone/voice-call-recordings
    method: GET
- name: widgets
  endpoint:
    path: /widgets/
    method: GET
- name: file
  endpoint:
    path: /attachments
    method: POST
    data_selector: content
    params: {}
- name: rule
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
- name: custom_fields
  endpoint:
    path: /custom-fields
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: voice_call_recording
  endpoint:
    path: /voice_call_recordings
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers/
    method: PUT
- name: download_private_file
  endpoint:
    path: /download/
    method: GET
    data_selector: ''
    params: {}
- name: jobs
  endpoint:
    path: /jobs/
    method: PUT
- name: rules
  endpoint:
    path: /api/rules
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params:
      email: '{{ticket.customer.email}}'
- name: custom_fields
  endpoint:
    path: /custom-fields
    method: PUT
- name: delete_ticket_field_value
  endpoint:
    path: /api/tickets/{ticket_id}/custom-fields/{id}
    method: DELETE
- name: ticket_message
  endpoint:
    path: /api/ticket-messages
    method: GET
    data_selector: messages
- name: customers
  endpoint:
    path: /api/customers/
    method: GET
    data_selector: data
- name: create_customer
  endpoint:
    path: /api/customers
    method: POST
    data_selector: null
- name: update_customer
  endpoint:
    path: /api/customers
    method: PUT
    data_selector: null
- name: tickets
  endpoint:
    path: /api/tickets/
    method: POST
    data_selector: null
- name: event_types
  endpoint:
    path: /event_types
    method: GET
    data_selector: events
    params: {}
- name: settings
  endpoint:
    path: /account/settings
    method: POST
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: search
  endpoint:
    path: /api/search
    method: POST
- name: tickets
  endpoint:
    path: /api/tickets/{ticket_id}/tags
    method: POST
- name: ticket
  endpoint:
    path: /tickets
    method: GET
    data_selector: tickets
- name: satisfaction_survey
  endpoint:
    path: /satisfaction_survey
    method: GET
    data_selector: records
- name: satisfaction_surveys
  endpoint:
    path: /satisfaction-surveys/
    method: PUT
- name: ticket
  endpoint:
    path: /tickets
    method: GET
    data_selector: tickets
- name: customers
  endpoint:
    path: /customers/
    method: GET
notes:
- OAuth provides a secure way for your application to access Gorgias data without
  having to store or use sensitive data such as passwords/access tokens of Gorgias
  users.
- 'Access Token expiration: OAuth Bearer Access Tokens expire after some time.'
- Each account has different rate limits depending on the type of authentication method
  used, and the account type
- If you exceed these limits, your request will fail and the API will respond with
  a 429 Too Many Requests HTTP code
- Jobs can be canceled at any time but changes done by a job won't be reverted.
- Attributes will automatically be passed to the order once the checkout is completed.
- The decision of whether to attach the attributes to the cart or the checkout ultimately
  depends on your preferences and store setup.
- self-service-overview option will be removed from Statistics API starting January
  1, 2025
- ticket subject length is going to be limited to 998 characters starting September
  01, 2024
- breaking change affecting the format of cursor values returned in the API response
  of views items search API starting April 15, 2024
- requests to /api/customers/{id}/* endpoints will return a 301 Moved Permanently
  redirect starting May 6, 2024
- HTTP method PUT will not be allowed on /tickets/search endpoint starting February
  9
- all URLs pointing to uploaded resources returned through an API call will not be
  directly accessible anymore
- offset-based pagination will be removed starting February 1, 2024
- requests to /api/tickets/{id}/* endpoints will return a 301 redirect status code
  if the ticket has been merged with another one starting August 8, 2023
- Ensure script runs only after the GorgiasBridge has been downloaded and initialized.
- Error code RECORDING_IS_PRIVATE indicates the recording is not accessible.
- 'OAuth2 enhanced security: PKCE layer isn''t enabled yet'
- In case both customers have data for the same integration a conflict will occur
  with the API returning an error.
- API key must have all scopes enabled (Cart, Order, Return, Report).
- Widgets will only be displayed if the ticket's customer has associated data in your
  app.
- The access token has a 24 hours expiration time.
- The refresh token does not have expiration time.
- A ticket-message is associated with only one ticket.
- This endpoint has been deprecated. Use list messages endpoint instead.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Scope required to use a `refresh_token` - needed to deal with expiring `access_token`.
- Voicemail left after a missed voice call, or a voice call recording.
- Most integrations use HTTP APIs.
- Using OAuth2 is mandatory for public apps.
- For SMS Integrations, Gorgias users can only respond via email channels.
- Contains a list of messages, can be associated with tags, assigned to a user and/or
  a team
- Contains a list of messages, can be associated with tags, assigned to a user and/or
  a team, and also collect customer's feedback with a satisfaction survey.
errors:
- '429 Too Many Requests: Adjust your request rate or wait as specified in the Retry-after
  header'
- '400 Bad Request: The request is invalid. Mainly due to: • required parameters not
  specified • parameters having invalid values • unknown parameters were specified.'
- '401 Unauthorized: The request was not authenticated. Mainly due to: • invalid or
  expired API token • missing API token'
- '403 Forbidden: The API token provided does not have the permissions to perform
  the request.'
- '404 Not found: The requested resource does not exist.'
- '409 Conflict: The request tried to create or update a resource with an identifier
  already in use.'
- '413 Payload Too Large: The request failed because the payload is too large.'
- '429 Too Many Requests: The request failed because you performed too many requests
  in a period of time.'
- '5xx Server Errors: The request is valid but something when wrong on our side.'
- 'RECORDING_IS_PRIVATE: The recording is not accessible.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'RECORDING_IS_PRIVATE: The recording is private and cannot be accessed.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://{domain}.gorgias.com/api
  auth:
    type: basic
    flow: refresh_token
    location: header
    header_name: Authorization
    token_url: https://{subdomain}.gorgias.com/oauth/token
    client_id: '{your_app_client_id}'
    client_secret: '{your_app_client_secret}'
    refresh_token: '{refresh_token}'
  headers:
    Accept: application/json
    accept: application/json
    content-type: application/json
    Content-Type: application/json
    Authorization: Bearer {{token}}
    authorization: Basic {username:password_encodedinbit64}
  paginator:
    type: paginated
source_metadata: null
