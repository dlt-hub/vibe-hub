resources:
- name: update_avatar
  endpoint:
    path: /api/v3/users/update_avatar
    method: POST
    data_selector: user
    params: {}
- name: invalidate_token
  endpoint:
    path: /api/v3/users/invalidate_token
    method: POST
    data_selector: user
    params: {}
- name: validate_token
  endpoint:
    path: /api/v3/users/validate_token
    method: POST
    data_selector: user
    params: {}
- name: set_presence
  endpoint:
    path: /api/v3/users/heartbeat
    method: POST
    data_selector: user
    params:
      workspace_id: '5517'
      platform: api
- name: reset_presence
  endpoint:
    path: /api/v3/users/reset_presence
    method: POST
    data_selector: user
    params:
      workspace_id: '5517'
- name: reset_password
  endpoint:
    path: /api/v3/users/reset_password
    method: POST
    data_selector: reset
    params: {}
- name: set_password
  endpoint:
    path: /api/v3/users/set_password
    method: POST
    data_selector: user
    params: {}
- name: check_google_connection
  endpoint:
    path: /api/v3/users/is_connected_to_google
    method: GET
    data_selector: google_connection
    params: {}
- name: disconnect_google
  endpoint:
    path: /api/v3/users/disconnect_google
    method: POST
    data_selector: user
    params: {}
- name: delete_user
  endpoint:
    path: /api/v3/users/delete
    method: POST
    data_selector: status
    params: {}
- name: get_workspace
  endpoint:
    path: /api/v3/workspaces/getone
    method: GET
    data_selector: workspace
    params:
      id: '5517'
- name: get_default_workspace
  endpoint:
    path: /api/v3/workspaces/get_default
    method: GET
    data_selector: workspace
    params: {}
- name: get_all_workspaces
  endpoint:
    path: /api/v3/workspaces/get
    method: GET
    data_selector: workspaces
    params: {}
- name: add_workspace
  endpoint:
    path: /api/v3/workspaces/add
    method: POST
    data_selector: workspace
    params: {}
- name: update_workspace
  endpoint:
    path: /api/v3/workspaces/update
    method: POST
    data_selector: workspace
    params: {}
- name: update_workspace_avatar
  endpoint:
    path: /api/v3/workspaces/update_avatar
    method: POST
    data_selector: workspace
    params: {}
- name: remove_workspace
  endpoint:
    path: /api/v3/workspaces/remove
    method: POST
    data_selector: status
    params: {}
- name: get_public_channels
  endpoint:
    path: /api/v3/workspaces/get_public_channels
    method: GET
    data_selector: channels
    params:
      id: '5517'
- name: get_workspace_users
  endpoint:
    path: /api/v4/workspace_users/get
    method: GET
    data_selector: users
    params:
      id: '5517'
- name: add_user_to_workspace
  endpoint:
    path: /api/v3/workspaces/add_user
    method: POST
    data_selector: user
    params: {}
- name: resend_invite
  endpoint:
    path: /api/v3/workspaces/resend_invite
    method: POST
    data_selector: invite
    params: {}
- name: update_user
  endpoint:
    path: /api/v3/workspaces/update_user
    method: POST
    data_selector: user
    params: {}
- name: remove_user_from_workspace
  endpoint:
    path: /api/v3/workspaces/remove_user
    method: POST
    data_selector: status
    params: {}
- name: get_user_by_email
  endpoint:
    path: /api/v3/workspaces/get_user_by_email
    method: GET
    data_selector: user
    params: {}
- name: get_user_info
  endpoint:
    path: /api/v3/workspaces/get_user_info
    method: GET
    data_selector: user
    params: {}
- name: get_user_by_id
  endpoint:
    path: /api/v3/workspaces/get_user_by_id
    method: GET
    data_selector: user
    params: {}
- name: get_user_local_time
  endpoint:
    path: /api/v3/workspaces/get_user_local_time
    method: GET
    data_selector: local_time
    params: {}
- name: get_users
  endpoint:
    path: /api/v3/workspaces/get_users
    method: GET
    data_selector: workspace_users
    params:
      id: workspace_id
- name: add_user
  endpoint:
    path: /api/v3/workspaces/add_user
    method: POST
    data_selector: workspace_user
    params:
      id: workspace_id
      email: user_email
- name: remove_user
  endpoint:
    path: /api/v3/workspaces/remove_user
    method: POST
    data_selector: removed_user
    params:
      id: workspace_id
      email: user_email
- name: get_user_by_email
  endpoint:
    path: /api/v3/workspaces/get_user_by_email
    method: GET
    data_selector: user
    params:
      id: workspace_id
      email: user_email
- name: get_user_by_id
  endpoint:
    path: /api/v3/workspaces/get_user_by_id
    method: GET
    data_selector: user
    params:
      id: workspace_id
      user_id: user_id
- name: groups
  endpoint:
    path: /api/v3/groups/get
    method: GET
    data_selector: groups
    params:
      workspace_id: workspace_id
- name: channels
  endpoint:
    path: /api/v3/channels/get
    method: GET
    data_selector: channels
    params:
      workspace_id: workspace_id
- name: get_comment
  endpoint:
    path: /api/v3/comments/getone
    method: GET
    params:
      id: Integer
- name: get_all_comments
  endpoint:
    path: /api/v3/comments/get
    method: GET
    params:
      thread_id: Integer
- name: add_comment
  endpoint:
    path: /api/v3/comments/add
    method: POST
    params:
      thread_id: Integer
      content: String
- name: update_comment
  endpoint:
    path: /api/v3/comments/update
    method: POST
    params:
      id: Integer
      content: String
- name: remove_comment
  endpoint:
    path: /api/v3/comments/remove
    method: POST
    params:
      id: Integer
- name: get_or_create_conversation
  endpoint:
    path: /api/v3/conversations/get_or_create
    method: POST
    params:
      workspace_id: Integer
      user_ids: List of Integers
- name: get_all_conversations
  endpoint:
    path: /api/v3/conversations/get
    method: GET
    params:
      workspace_id: Integer
- name: update_conversation
  endpoint:
    path: /api/v3/conversations/update
    method: POST
    params:
      id: Integer
      title: String
- name: archive_conversation
  endpoint:
    path: /api/v3/conversations/archive
    method: POST
    params:
      id: Integer
- name: unarchive_conversation
  endpoint:
    path: /api/v3/conversations/unarchive
    method: POST
    params:
      id: Integer
- name: get_message
  endpoint:
    path: /api/v3/conversation_messages/getone
    method: GET
    data_selector: conversation message object
    params:
      id: Integer
- name: get_all_messages
  endpoint:
    path: /api/v3/conversation_messages/get
    method: GET
    data_selector: list of conversation message objects
    params:
      conversation_id: Integer
- name: add_message
  endpoint:
    path: /api/v3/conversation_messages/add
    method: POST
    data_selector: conversation message object
    params:
      conversation_id: Integer
      content: String
- name: update_message
  endpoint:
    path: /api/v3/conversation_messages/update
    method: POST
    data_selector: conversation message object
    params:
      id: Integer
      content: String
- name: remove_message
  endpoint:
    path: /api/v3/conversation_messages/remove
    method: POST
    data_selector: response
    params:
      id: Integer
- name: get_inbox
  endpoint:
    path: /api/v3/inbox/get
    method: GET
    data_selector: list of thread objects
    params:
      workspace_id: Integer
- name: get_inbox_count
  endpoint:
    path: /api/v3/inbox/get_count
    method: GET
    data_selector: inbox count
    params:
      workspace_id: Integer
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: items
    params:
      workspace_id: ''
      query: ''
      limit: 20
      cursor_mark: ''
- name: search_thread
  endpoint:
    path: /search/thread
    method: GET
    data_selector: comment_ids
    params:
      thread_id: ''
      query: ''
- name: search_conversation
  endpoint:
    path: /search/conversation
    method: GET
    data_selector: message_ids
    params:
      conversation_id: ''
      query: ''
- name: autocomplete_query_threads
  endpoint:
    path: /autocomplete/query_threads
    method: GET
    data_selector: thread objects
    params:
      workspace_id: ''
      query: ''
      limit: 10
- name: notifications_settings_get
  endpoint:
    path: /notifications_settings/get
    method: GET
    data_selector: notifications settings object
    params:
      workspace_id: ''
- name: url_join_get_only
  endpoint:
    path: /url_join/get_only
    method: GET
    data_selector: url
    params:
      workspace_id: ''
- name: loop_in_get_or_create
  endpoint:
    path: /loop_in/get_or_create
    method: POST
    data_selector: email
    params:
      obj_type: ''
      obj_id: ''
- name: add_user
  endpoint:
    path: /api/v3/channels/add_user
    method: POST
    data_selector: null
    params:
      id: Integer
      user_id: Integer
- name: add_users
  endpoint:
    path: /api/v3/channels/add_users
    method: POST
    data_selector: null
    params:
      id: Integer
      user_ids: List of Integers
- name: remove_user
  endpoint:
    path: /api/v3/channels/remove_user
    method: POST
    data_selector: null
    params:
      id: Integer
      user_id: Integer
- name: remove_users
  endpoint:
    path: /api/v3/channels/remove_users
    method: POST
    data_selector: null
    params:
      id: Integer
      user_ids: List of Integers
- name: get_all_threads
  endpoint:
    path: /api/v3/threads/get
    method: GET
    data_selector: null
    params:
      channel_id: Integer
- name: add_thread
  endpoint:
    path: /api/v3/threads/add
    method: POST
    data_selector: null
    params:
      channel_id: Integer
      title: String
- name: update_thread
  endpoint:
    path: /api/v3/threads/update
    method: POST
    data_selector: null
    params:
      id: Integer
      title: String
- name: remove_thread
  endpoint:
    path: /api/v3/threads/remove
    method: POST
    data_selector: null
    params:
      id: Integer
- name: UI Extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: extensions
    params: {}
notes:
- Twist enforces HTTPS everywhere, including our production integrations.
- Timeouts are applied to Bots, with a restriction of 10 seconds for response.
- Maximum allowed size for the attachment is 100MB.
- Maximum allowed size of the email is 25MB.
- This is Doist Cards only and not part of the adaptive card spec
- Uses Adaptive Cards schema for UI Extensions
errors:
- Non-200 responses will be retried 10 times in the span of 12 hours.
- '19: Required argument is missing.'
- '20: Invalid argument value.'
- '101: Your email is already found in our database.'
- '102: Password too short.'
- '103: Email is invalid.'
- '104: Email or password are invalid.'
- '105: Workspace not found.'
- '106: User not found.'
- '107: Channel not found.'
- '108: Thread not found.'
- '109: Forbidden.'
- '110: Resource not found.'
- '111: Unknown temp id.'
- '112: Invalid temp id.'
- '113: Temp id already found.'
- '114: Bad Request.'
- '115: Comment not found.'
- '116: Device not found.'
- '117: Search not available.'
- '118: One or more attachments don''t comply with the JSON specification.'
- '119: Group not found.'
- '120: You are not logged in.'
- '121: Invalid timezone.'
- '122: Not supported reaction.'
- '124: Conversation not found.'
- '125: Message not found.'
- '126: Your name is too short.'
- '127: You can''t remove the last admin.'
- '128: Invalid date range.'
- '129: Google account is not connected to any Twist user.'
- '130: Google account is already connected to a Google user.'
- '131: Already found.'
- '132: Email not found.'
- '133: One or more actions don''t comply with the JSON specification.'
- '200: Invalid token.'
- '201: Internal Server Error.'
- '202: Upload failed.'
- '203: Payment required.'
- '204: External Server Error.'
- '205: Upload is too big in size.'
- '213: The workspace has reached the maximum number of users.'
- '406: Not acceptable.'
- '401 Unauthorized: Recheck OAuth token.'
- '400 Bad Request: Check required parameters.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request payload structure'
- '404 Not Found: Ensure the endpoint path is correct'
auth_info:
  mentioned_objects:
  - Authorization
  - OauthToken
client:
  base_url: https://api.twist.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    token_url: https://twist.com/oauth/access_token
  headers:
    Content-type: application/json
    Accept: application/json
  paginator:
    type: cursor
    cursor_param: cursor_mark
source_metadata: null
