resources:
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: invoice
  endpoint:
    path: /V1/order/{orderId}/invoice
    method: POST
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: invoice
  endpoint:
    path: /V1/order/{orderId}/invoice
    method: POST
    data_selector: data
    params: {}
- name: moderators
  endpoint:
    path: /users?tab=moderators
    method: GET
    data_selector: items
    params: {}
- name: moderators
  endpoint:
    path: /users?tab=moderators
    method: GET
- name: reputation
  endpoint:
    path: /help/reputation
    method: GET
    data_selector: reputation_info
    params: {}
- name: reputation
  endpoint:
    path: /help/reputation
    method: GET
    data_selector: reputation_info
    params: {}
- name: declined_flags
  endpoint:
    path: /help/declined-flags
    method: GET
- name: Moderator Agreement
  endpoint:
    path: /help/mod-agreement-policies
    method: GET
- name: moderator_agreement
  endpoint:
    path: /help/mod-agreement-policies
    method: GET
    data_selector: records
- name: bounty
  endpoint:
    path: /help/bounty
    method: GET
    data_selector: bounty_info
    params: {}
- name: question_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: answer_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: participation_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: tag_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: privileges
  endpoint:
    path: /help/privileges
    method: GET
    data_selector: privileges
    params: {}
- name: moderation_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: other_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: retired_badges
  endpoint:
    path: /help/badges
    method: GET
    data_selector: badges
    params: {}
- name: review_queues
  endpoint:
    path: /help/review-queues
    method: GET
    data_selector: queues
    params: {}
- name: close_questions
  endpoint:
    path: /help/closed-questions
    method: GET
- name: asking
  endpoint:
    path: /help/asking
    method: GET
- name: privileges
  endpoint:
    path: /help/privileges
    method: GET
- name: badges
  endpoint:
    path: /help/badges
    method: GET
- name: reputation
  endpoint:
    path: /help/reputation
    method: GET
- name: deleted_questions
  endpoint:
    path: /help/deleted-questions
    method: GET
    data_selector: questions
    params: {}
- name: deleted_questions
  endpoint:
    path: /help/deleted-questions
    method: GET
    data_selector: questions
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: ''
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: error_message
- name: tags
  endpoint:
    path: /help/tagging
    method: GET
    data_selector: tags
    params: {}
- name: answer_ban
  endpoint:
    path: /help/answer-bans
    method: GET
    data_selector: error_message
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: error_message
    params: {}
- name: answer_ban
  endpoint:
    path: /help/answer-bans
    method: GET
    data_selector: none
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: none
    params: {}
- name: site_statistics
  endpoint:
    path: /site-analytics
    method: GET
    data_selector: data
    params: {}
- name: trusted_user
  endpoint:
    path: /help/privileges/trusted-user
    method: GET
    data_selector: privileges
- name: site analytics
  endpoint:
    path: /site-analytics
    method: GET
    data_selector: site_statistics
- name: protected_questions
  endpoint:
    path: /help/privileges/protect-questions
    method: GET
    data_selector: questions
    params: {}
- name: moderator_tools_access
  endpoint:
    path: /help/privileges/moderator-tools
    method: GET
- name: protected_questions
  endpoint:
    path: /help/privileges/protect-questions
    method: GET
    data_selector: questions
    params: {}
- name: tag_wiki_edits
  endpoint:
    path: /privileges/approve-tag-wiki-edits
    method: GET
    data_selector: data
    params: {}
- name: deleted_posts
  endpoint:
    path: /deleted_posts
    method: GET
    data_selector: posts
- name: moderator_tools
  endpoint:
    path: /moderator_tools
    method: GET
    data_selector: tools
- name: close_vote_privileges
  endpoint:
    path: /help/privileges/close-questions
    method: GET
    data_selector: privileges
    params: {}
- name: tag_wiki_edits
  endpoint:
    path: /privileges/approve-tag-wiki-edits
    method: GET
    data_selector: data
    params: {}
- name: tag_synonyms
  endpoint:
    path: /privileges/create-tag-synonyms
    method: GET
    data_selector: tag_synonyms_data
- name: close_vote
  endpoint:
    path: /help/privileges/close-questions
    method: GET
    data_selector: content
    params: {}
- name: edit_posts
  endpoint:
    path: /help/privileges/edit
    method: GET
- name: tag_synonyms
  endpoint:
    path: /help/privileges/suggest-tag-synonyms
    method: GET
    data_selector: data
    params: {}
- name: established_user
  endpoint:
    path: /help/privileges/established-user
    method: GET
    data_selector: privileges
- name: edit_posts
  endpoint:
    path: /help/privileges/edit
    method: GET
- name: gallery_chat_rooms
  endpoint:
    path: /create_gallery_chat_rooms
    method: POST
    data_selector: room
    params: {}
- name: established_user
  endpoint:
    path: /help/privileges/established-user
    method: GET
    data_selector: records
- name: review_queues
  endpoint:
    path: /help/review-queues
    method: GET
    data_selector: posts
    params: {}
- name: gallery_chat_room
  endpoint:
    path: /privileges/gallery-chat-rooms
    method: GET
    data_selector: chat_rooms
- name: create_tags
  endpoint:
    path: /help/privileges/create-tags
    method: GET
    data_selector: tags
    params: {}
- name: close_votes
  endpoint:
    path: /help/privileges/view-close-votes
    method: GET
- name: First questions
  endpoint:
    path: /help/review-first-questions
    method: GET
- name: First answers
  endpoint:
    path: /help/review-first-answers
    method: GET
- name: Late answers
  endpoint:
    path: /help/review-late-answers
    method: GET
- name: Close votes
  endpoint:
    path: /help/review-close
    method: GET
- name: Reopen votes
  endpoint:
    path: /help/review-reopen
    method: GET
- name: Low quality posts
  endpoint:
    path: /help/review-low-quality
    method: GET
- name: Suggested edits
  endpoint:
    path: /help/review-suggested-edits
    method: GET
- name: Triage
  endpoint:
    path: /help/review-triage
    method: GET
- name: reduced_ads_privilege
  endpoint:
    path: /help/privileges/reduced-ads
    method: GET
    data_selector: privilege_details
- name: create_tags_privilege
  endpoint:
    path: /help/privileges/create-tags
    method: GET
    data_selector: privileges
- name: vote_down
  endpoint:
    path: /help/privileges/vote-down
    method: GET
    data_selector: content
    params: {}
- name: close_votes
  endpoint:
    path: /privileges/view-close-votes
    method: GET
    data_selector: close_votes
    params: {}
- name: chat_rooms
  endpoint:
    path: /chat/rooms
    method: POST
    data_selector: room
    params: {}
- name: set_bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
- name: community_wiki
  endpoint:
    path: /edit/community/wiki
    method: GET
    data_selector: posts
    params: {}
- name: chat_rooms
  endpoint:
    path: /help/privileges/chat-rooms
    method: GET
- name: flag_posts
  endpoint:
    path: /help/privileges/flag-posts
    method: GET
    data_selector: content
    params: {}
- name: set_bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounties
    params: {}
- name: vote_up
  endpoint:
    path: /help/privileges/vote-up
    method: GET
    data_selector: content
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: vote_up_privilege
  endpoint:
    path: /help/privileges/vote-comments
    method: GET
    data_selector: privileges
    params: {}
- name: flag_posts
  endpoint:
    path: /help/privileges/flag-posts
    method: GET
    data_selector: content
- name: community_wiki_posts
  endpoint:
    path: /privileges/community-wiki
    method: GET
    data_selector: community_wiki_posts
- name: vote_up
  endpoint:
    path: /help/privileges/vote-up
    method: GET
- name: vote_up
  endpoint:
    path: /privileges/vote-up
    method: GET
    data_selector: data
    params: {}
- name: create_posts
  endpoint:
    path: /help/privileges/create-posts
    method: GET
    data_selector: content
    params: {}
- name: bounty
  endpoint:
    path: /help/bounty
    method: GET
- name: create_wiki_posts
  endpoint:
    path: /privileges/create-wiki-posts
    method: GET
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: data
    params: {}
- name: bounty
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounty_info
    params: {}
- name: create_posts
  endpoint:
    path: /posts/create
    method: POST
    data_selector: data
    params: {}
- name: bounty
  endpoint:
    path: /help/bounty
    method: GET
    data_selector: bounty_info
    params: {}
- name: bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounties_info
    params: {}
- name: accepted_answer
  endpoint:
    path: /help/accepted-answer
    method: GET
    data_selector: answer
    params: {}
- name: add_to_cart
  endpoint:
    path: /add_to_cart.php
    method: POST
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: POST
    data_selector: customer
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: add_to_cart
  endpoint:
    path: /api/add_to_cart.php
    method: POST
    data_selector: response
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: ''
    params: {}
- name: customer
  endpoint:
    path: /V1/customers
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_order
  endpoint:
    path: /orders/create
    method: POST
    data_selector: entity
- name: create_invoice
  endpoint:
    path: /order/{orderId}/invoice
    method: POST
    data_selector: message
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: customer
  endpoint:
    path: /V1/customers
    method: POST
    data_selector: customer
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: POST
    data_selector: customer
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: POST
    data_selector: response
- name: customer_update
  endpoint:
    path: /rest/V1/customers/{id}
    method: PUT
    data_selector: response
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
- name: customer_registration
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: authentication
  endpoint:
    path: /integration/admin/token
    method: POST
    data_selector: token
    params: {}
- name: customer_registration
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
- name: authentication_key
  endpoint:
    path: /integration/admin/token
    method: POST
    data_selector: token
- name: order_create
  endpoint:
    path: /rest/V1/orders/create
    method: POST
    data_selector: entity
- name: order_invoice
  endpoint:
    path: /rest/default/V1/order/{orderId}/invoice
    method: POST
    data_selector: null
- name: customer
  endpoint:
    path: /rest/tutorials/orders/order-create-customer.html
    method: POST
    data_selector: customer
- name: customer_registration
  endpoint:
    path: /customers
    method: POST
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
- name: customer
  endpoint:
    path: /V1/customers
    method: POST
    data_selector: customer
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: POST
    data_selector: ''
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: customer_registration
  endpoint:
    path: /customers
    method: POST
- name: get_authentication_key
  endpoint:
    path: /integration/admin/token
    method: POST
- name: customer
  endpoint:
    path: /V2/customers
    method: POST
    data_selector: customer
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
notes:
- This Privacy Policy applies where you interact with us through the Network, or use
  any of our products and services.
- Uses cookies and similar technologies for data collection
- Email tracking via Javascript or invisible images
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Cookies may impact your experience of the site and the services we are able to offer.
- Uses OAuth2 with refresh token — requires setup of connected app in Magento
- Users must be logged in to join or participate in Collectives.
- The Extension does not require direct personal information such as your name or
  email address.
- We do not store any user credentials for Stack Overflow or GitHub.
- Moderators are elected for life, though they may resign or be removed.
- Moderators must abide by the moderator agreement.
- Moderators are elected through popular vote.
- Reputation is entirely optional
- All users start with one reputation point, and reputation can never drop below 1
- Often moderators will provide a specific reason for declining a flag.
- Moderators are bound to an agreement that states that they will abide by all other
  officially announced moderator and user policies made available to them.
- While there are many FAQs and community policies across the network, this statement
  only applies to a small collection of policies that are company-defined and network-wide.
- The referenced policies are currently found on Meta Stack Exchange.
- Locking prevents voting, editing, commenting, answering, and flagging
- Temporary locks should be used for modifications causing serious problems
- Permanent locks should almost never be used
- Voting corrected events do not mean that you have done anything wrong.
- The system considers invalid votes for removal.
- A bounty can be started on a question two days after the question was asked.
- Bounties must have a minimum duration of at least 1 day.
- Badges are awarded for various community activities.
- Review queues provide various functionalities related to content moderation.
- Questions that need additional work or that are not a good fit for this site may
  be closed by experienced community members.
- Closed questions cannot be answered, but can be edited to make them eligible for
  reopening.
- Questions can also be deleted by the community.
- Moderators can delete any question.
- Asking questions is a privilege, not a right.
- Question bans do not affect other privileges, such as commenting or voting.
- This block is only temporary, but much longer blocks exist in the system.
- Avoid creating new tags if possible.
- New users are not allowed to create new tags.
- Tags must be all lower case
- Replace spaces with hyphens to combine multiple words into a single word
- Users who are banned from answering see an error message when trying to post a new
  answer.
- The only way to end a posting block is to positively contribute to the site.
- Users who are banned from answering see a specific error message when trying to
  post a new answer.
- Access to internal site analytics
- Trusted users are allowed to perform trusted actions, including voting to delete
  answers with score of -1 or lower.
- Any question at least a day old can be protected and unprotected by users that have
  the privilege.
- Milestone privilege awarded at 20,000 reputation
- Trusted users are allowed to perform trusted actions, including voting to delete
  answers with score of -1 or lower, voting to undelete answers except those deleted
  by a moderator, voting to delete questions with a score of -3 or lower immediately
  after they are closed, editing tag wikis without needing approval.
- Access to moderator tools requires a reputation of 10,000.
- Questions can be protected if they are at least a day old and have received at least
  one answer from a user with less than 10 reputation.
- Diamond Moderators can protect and unprotect questions at any time.
- All registered users can submit edits for tag wikis.
- When approving edits, ensure all content is original or attributed properly.
- Users with 10,000 reputation can access moderator tools
- Viewing deleted posts is a privilege for users with access to moderator tools
- This privilege is awarded at 3,000 reputation
- When approving these edits, ensure that all the content is original or attributed
  properly.
- Users with a total answer score of 5 or more on the tag can suggest tag synonyms.
- When a tag synonym proposal reaches a score of 4, it is accepted and becomes active.
- Moderation privilege awarded at 3,000 reputation
- It takes 5 close votes to reach the closing threshold
- Moderation privilege awarded at 2,500 reputation
- Tag synonyms allow us to fix incorrect tags by substituting them with the correct
  tags
- Edits to other users’ posts are applied immediately
- Must create new tags responsibly.
- Tags must be no longer than 35 characters.
- This privilege allows you to view and cast close and reopen votes on your own questions.
- You will gain access to different review queues based on your reputation.
- Once you reach the milestone of 200 reputation, certain ads are automatically disabled
  from view.
- Meta sites have no advertisements so this setting is not relevant for them.
- Tags must be no longer than 35 characters
- 'Tags must use the character set a-z, 0-9, +, #, -, .'
- You have a limited number of votes per day, and answer downvotes cost you a tiny
  bit of reputation on top of that.
- Community wiki posts have been donated to the community in hopes that others will
  edit them to keep them up to date, to add useful information, and generally improve
  their quality.
- Downvotes should be used to indicate issues with quality, effort, or accuracy of
  a post
- You have a limited number of votes per day
- A bounty is a reputation reward you can put on a question to get it more attention
  for exactly one week.
- You can only have three open bounties at any one time.
- Requires 20 reputation to participate in chat.
- Flagging is a way of bringing inappropriate content to the attention of the community.
- Bounties expire after seven days.
- You have a limited number of votes per day, so use them wisely.
- Comments are temporary 'Post-It' notes left on a question or answer.
- Communication privilege awarded at 20 reputation
- You can always enter chat rooms and listen with no rep at all.
- New users cannot post more than eight hyperlinks at a time, either in a post or
  their user profile
- New users cannot contribute answers to protected questions
- New users cannot ask or answer questions too rapidly
- New users cannot make edits that don't create a post revision history
- Moderation privilege awarded at 15 reputation.
- Voting for specific people can negatively impact the ranking system.
- Your reputation on meta is the same as your reputation on the parent site.
- You can always read meta, regardless of your reputation.
- Because we allow participation from anonymous internet users, we must take some
  precautions to ensure that the rare malicious or spammy anonymous user doesn't ruin
  the experience for everyone else.
- We're sorry that we have to sandbox new users, but the first few upvotes on your
  questions or answers will quickly elevate you out of it.
- Creation privilege awarded at 1 reputation
- Bounties must have a minimum duration of at least 1 day
- Bounty period lasts 7 days
- Provide context for links
- Read the question carefully
- Editing is important for keeping posts clear, relevant, and up-to-date.
- If the bounty is not awarded within 24 hours of the bounty period ending, half the
  bounty value will be automatically awarded to the top voted answer.
- By clicking 'Sign up', you agree to our terms of service and acknowledge you have
  read our privacy policy.
- Requires product_id, customer_id, qty, and other parameters to add to cart
- Ensure proper OAuth setup in Magento Admin.
- Requires authentication to register new customers.
- Some endpoints may return nulls in nested fields
- Requires customer ID and product ID for adding products to the cart.
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- Requires correct OAuth setup to avoid 401 Unauthorized errors.
- Requires setup of connected app in Magento
- Authorization requires a Bearer token obtained via admin integration.
- We do not allow behaviors or content that cause or contribute to an atmosphere that
  excludes, marginalizes, or dehumanizes individuals or communities.
errors:
- '%fieldName is a required field.'
- Please enter a customer email.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- We do not collect or log performance data at launch but may implement performance
  monitoring in the future.
- 'You gain reputation when: question is voted up: +10'
- 'You lose reputation when: your question is voted down: −2'
- 'Your question is voted down: −2'
- 'Your answer is voted down: −2'
- 'You vote down an answer: −1'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- If at least a quarter of 10 or more flags were declined during the past 7 days,
  you will be temporarily banned from raising new flags.
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- All bounties are paid for up front and non-refundable under any circumstances.
- Users may only have three active bounties at any given time.
- This question has been asked before and already has an answer.
- This question doesn’t meet a Magento Stack Exchange guideline.
- This question should include more details and clarify the problem.
- This question currently includes multiple questions in one. It should focus on one
  problem only.
- This question is likely to be answered with opinions rather than facts and citations.
  It should be updated so it will lead to fact-based answers.
- 'You can''t post new questions right now: Sorry, we are no longer accepting questions
  from your account because most of your questions need improvement or are out of
  scope for this site.'
- 'Tag creation limit: New users are not allowed to create new tags'
- Sorry, we are no longer accepting answers from your account because most of your
  answers need improvement or do not sufficiently answer the question.
- None specified
- New users are restricted from answering protected questions until they earn 10 reputation
  points
- New users cannot post more than eight hyperlinks at a time, either in a post or
  their user profile
- New users cannot contribute answers to protected questions
- New users cannot ask or answer questions too rapidly
- New users cannot make edits that don't create a post revision history
- You already have three outstanding bounties.
- The question has been asked in the last 48 hours.
- unable to add product
- '401 Unauthorized: Check client credentials or access token.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Check your OAuth credentials.'
- '400 Bad Request: Ensure the request body is correctly formatted.'
- '401 Unauthorized: Recheck OAuth token.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://magento.stackexchange.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
