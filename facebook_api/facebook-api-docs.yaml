resources:
- name: photos
  endpoint:
    path: /{user_id}/photos
    method: GET
    data_selector: data
- name: photo_details
  endpoint:
    path: /{photo_id}?fields=images
    method: GET
    data_selector: images
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: rigidbody
  endpoint:
    path: /engine/classes/RigidBodyComponent
    method: GET
    data_selector: applyForce
    params: {}
- name: collision
  endpoint:
    path: /engine/classes/CollisionComponent
    method: GET
    data_selector: Collision
    params: {}
- name: vec3
  endpoint:
    path: /engine/classes/Vec3
    method: GET
    data_selector: Vec3
    params: {}
- name: animstategraph
  endpoint:
    path: /api/animstategraph
    method: GET
    data_selector: records
- name: animation_blending
  endpoint:
    path: /tutorials/animation-blending/
    method: GET
    data_selector: animation blending
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: collision_component
  endpoint:
    path: /collision/component
    method: GET
    data_selector: collision_data
- name: rigidbody_component
  endpoint:
    path: /rigidbody/component
    method: GET
    data_selector: rigidbody_data
- name: trigger_volume
  endpoint:
    path: /trigger/volume
    method: GET
    data_selector: trigger_data
- name: light
  endpoint:
    path: /engine/classes/LightComponent
    method: GET
    data_selector: data
    params: {}
- name: ShaderMaterial
  endpoint:
    path: /engine/classes/ShaderMaterial.html
    method: GET
    data_selector: shader_material_data
- name: ShaderMaterial
  endpoint:
    path: /engine/classes/ShaderMaterial.html
    method: GET
    data_selector: records
- name: ShaderParameters
  endpoint:
    path: /engine/classes/Material.html#setparameter
    method: GET
    data_selector: records
- name: dissolveShader
  endpoint:
    path: /complete-script
    method: GET
    data_selector: script
    params: {}
- name: dissolveShader
  endpoint:
    path: /custom/shaders/dissolve
    method: POST
    data_selector: material
    params: {}
- name: first_person_movement
  endpoint:
    path: /tutorials/first-person-movement
    method: GET
    data_selector: script
- name: first_person_movement
  endpoint:
    path: /tutorials/first-person-movement/
    method: GET
    data_selector: script
- name: interstitial_ad
  endpoint:
    path: /adbreak
    method: POST
    data_selector: adBreak
- name: Interstitial Ad
  endpoint:
    path: /ads/interstitial
    method: POST
    data_selector: adResponse
    params: {}
- name: Rewarded Ad
  endpoint:
    path: /ads/rewarded
    method: POST
    data_selector: adResponse
    params: {}
- name: rewarded_ad
  endpoint:
    path: /adBreak
    method: POST
    data_selector: ad
    params:
      type: reward
      name: test-reward
- name: interstitial_ad
  endpoint:
    path: /adBreak
    method: POST
    data_selector: ad
    params:
      type: start
      name: test-interstitial
- name: rewarded_ad
  endpoint:
    path: /adBreak
    method: POST
    data_selector: adBreakResponse
    params:
      type: reward
      name: test-reward
- name: interstitial_ad
  endpoint:
    path: /adBreak
    method: POST
    data_selector: adBreakResponse
    params:
      type: start
      name: test-interstitial
- name: keyboard_input
  endpoint:
    path: /tutorials/keyboard-input
    method: GET
    data_selector: tutorial
- name: halo
  endpoint:
    path: /halo
    method: GET
    data_selector: records
    params: {}
- name: keyboard_input
  endpoint:
    path: /tutorials/keyboard-input
    method: GET
    data_selector: keyboard handling
- name: character_data
  endpoint:
    path: /
    method: GET
    data_selector: characters
- name: halo
  endpoint:
    path: /tutorials/light-halos
    method: GET
    data_selector: scripts
    params: {}
- name: entities
  endpoint:
    path: /tutorials/manipulating-entities/
    method: GET
    data_selector: tutorials
    params: {}
- name: characterData
  endpoint:
    path: /characters
    method: GET
    data_selector: characters
    params: {}
- name: mouse_input
  endpoint:
    path: /tutorials/mouse-input
    method: GET
- name: entities
  endpoint:
    path: /tutorials/manipulating-entities
    method: GET
    data_selector: entities
    params: {}
- name: analyser
  endpoint:
    path: /analyser
    method: GET
    data_selector: data
    params: {}
- name: visualizer
  endpoint:
    path: /visualizer
    method: GET
    data_selector: data
    params: {}
- name: camera
  endpoint:
    path: /tutorials/more-cameras/
    method: GET
    data_selector: tutorials
    params: {}
- name: procedural_levels
  endpoint:
    path: /tutorials/procedural-levels/
    method: GET
    data_selector: tutorials
- name: mouse_input
  endpoint:
    path: /tutorials/mouse-input/
    method: GET
    data_selector: tutorial
    params: {}
- name: Entity
  endpoint:
    path: /tutorials/programmatically-creating/
    method: GET
    data_selector: entities
    params: {}
- name: analyser
  endpoint:
    path: /analyser
    method: GET
    data_selector: records
- name: visualizer
  endpoint:
    path: /visualizer
    method: GET
    data_selector: records
- name: room
  endpoint:
    path: /my_room
    method: GET
    data_selector: state
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: PhotonLoadBalancing
  endpoint:
    path: /loadbalancing
    method: POST
    data_selector: rooms
    params: {}
- name: Procedural Levels
  endpoint:
    path: /tutorials/procedural-levels/
    method: GET
    data_selector: tutorials
    params: {}
- name: actor
  endpoint:
    path: /onActorJoin
    method: GET
    data_selector: actor
    params: {}
- name: entities
  endpoint:
    path: /tutorials/programmatically-creating/
    method: GET
    data_selector: entities
    params: {}
- name: my_room
  endpoint:
    path: /rooms/my_room
    method: POST
    data_selector: room
    params: {}
- name: player
  endpoint:
    path: /player
    method: POST
    data_selector: playerData
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: player
  endpoint:
    path: /player
    method: POST
    data_selector: players
    params: {}
- name: PhotonLoadBalancingClient
  endpoint:
    path: /Photon.LoadBalancing.LoadBalancingClient
    method: GET
    data_selector: rooms
    params: {}
- name: actor
  endpoint:
    path: /actors
    method: GET
    data_selector: actor
- name: terrain
  endpoint:
    path: /engine/classes/Mesh
    method: GET
    data_selector: records
    params: {}
- name: touchscreen_joypad
  endpoint:
    path: /tutorials/touch-joypad
    method: GET
    data_selector: tutorials
    params: {}
- name: PhotonLoadBalancingPlayCanvas
  endpoint:
    path: /photon/loadbalancing
    method: POST
    data_selector: response
    params: {}
- name: Player
  endpoint:
    path: /player
    method: POST
    data_selector: response
    params: {}
- name: Button
  endpoint:
    path: /tutorials/ui-elements-buttons/
    method: GET
    data_selector: button
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: data
- name: player
  endpoint:
    path: /player
    method: POST
    data_selector: data
    params: {}
- name: progress_bar
  endpoint:
    path: /tutorials/ui-elements-progress/
    method: GET
    data_selector: content
    params: {}
- name: ui_stats
  endpoint:
    path: /tutorials/ui-elements-stats-counter/
    method: GET
    data_selector: widgets
    params: {}
- name: Terrain
  endpoint:
    path: /terrain
    method: GET
    data_selector: attributes
    params: {}
- name: AssetRegistry
  endpoint:
    path: /engine/classes/AssetRegistry
    method: GET
    data_selector: assets
    params: {}
- name: touchscreen_joypad
  endpoint:
    path: /tutorials/touch-joypad
    method: GET
    data_selector: tutorials
- name: video_texture
  endpoint:
    path: /tutorials/video-textures
    method: GET
- name: button
  endpoint:
    path: /tutorials/ui-elements-buttons/
    method: GET
    data_selector: buttons
    params: {}
- name: button_rotate
  endpoint:
    path: /tutorials/webxr-ray-input/button-rotate.js
    method: GET
    data_selector: script
    params: {}
- name: button_color
  endpoint:
    path: /tutorials/webxr-ray-input/button-color.js
    method: GET
    data_selector: script
    params: {}
- name: leaderboard
  endpoint:
    path: /leaderboard-data.json
    method: GET
    data_selector: entries
    params: {}
- name: progress_bar
  endpoint:
    path: /tutorials/ui-elements-progress/
    method: GET
    data_selector: progress bar data
- name: stats_counter
  endpoint:
    path: /user-manual/ui-elements/stats-counter/
    method: GET
    data_selector: elements
    params: {}
- name: AssetRegistry
  endpoint:
    path: /engine/classes/AssetRegistry
    method: GET
    data_selector: assets
    params: {}
- name: video_texture
  endpoint:
    path: /tutorials/video-textures
    method: GET
    data_selector: video_texture_data
- name: button_rotate
  endpoint:
    path: /tutorials/webxr-ray-input/button-rotate
    method: GET
    data_selector: button-rotate
    params: {}
- name: button_color
  endpoint:
    path: /tutorials/webxr-ray-input/button-color
    method: GET
    data_selector: button-color
    params: {}
notes:
- FB.login() must be called in response to a user action like clicking on a button,
  otherwise the user will see a pop-up warning.
- Requires user to be logged into Facebook to access photos.
- The Web Components are completely open source and available on GitHub under the
  MIT license.
- The REST API is currently in beta. This means we may change certain endpoints and
  API responses.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Calls to the REST API have a rate limit.
- If you exceed the rate limit you will get a `429 Too Many Requests` status code.
- Use the cursor keys to apply impulses, the WASD keys to apply torques and rotate
  the cube.
- Press and hold F to apply a constant upward force to cancel gravity effects.
- Keyboard controls and applying forces and moments.
- Animation blending improves visual fidelity of animated objects.
- This tutorial uses the deprecated Model and Animation components. Please refer to
  the Anim State Graph Blending tutorial instead.
- This tutorial requires Web Audio API support.
- Rigidbodies collide with each other, a sound is played on a collision and a trigger
  volume resets the shapes.
- Different light properties have varying limits.
- This tutorial uses the ShaderMaterial API to create a dissolve effect with burning
  edges that works with both WebGL and WebGPU.
- You'll need to create four shader assets (two GLSL and two WGSL) and assign them
  to these script attributes in the PlayCanvas Editor.
- ShaderMaterial supports both WebGL and WebGPU.
- The ShaderMaterial API handles differences between GLSL and WGSL automatically.
- The scene setup for this controller is important as your character must have a rigidbody
  and collision component in addition to the script attached.
- Uses Google Adsense account with Publisher ID for integration
- Ad frequency is user configurable
- Requires a Google Adsense account and Publisher ID for ad integration.
- Make sure to enable test mode for ad integration during development.
- Uses test mode for ads; ensure compliance with privacy policies before production.
- 'Important: For the tutorial, we used test mode so we didn''t show any actual ads.
  When you disable test mode to use for production, please ensure that you comply
  with any privacy/cookies policy for the countries you release in including GDPR.'
- Keyboard handling is provided by the pc.Keyboard object.
- Use isPressed() and wasPressed() to detect key states.
- Uses the entity's lookAt method to face the camera.
- Unidirectional halos fade off as they turn away from the camera.
- Keyboard handling in the PlayCanvas engine is provided by the pc.Keyboard object.
- Use isPressed() and wasPressed() to check key states.
- Uses the lookAt method to set orientation based on camera position.
- Unidirectional glow fades off when facing away from the camera.
- Entities form the basis of most applications built using the PlayCanvas framework.
- All manipulations apply to graph nodes.
- Get JSON data from a project asset
- Load JSON from a remote server
- Mouse handling provided by the pc.Mouse object.
- This project uses clone() function on the Entity to randomly generate a level from
  Entities that have been created in the Editor.
- Mouse handling in the PlayCanvas engine is provided by the pc.Mouse object.
- AnalyserNode allows access to raw audio data every frame.
- Uses WebSocket for real-time communication.
- Uses WebSocket Secure (WSS) for connection
- onActorJoin is triggered when a new user connects
- onActorLeave is triggered when a user is disconnected
- This tutorial shows how to create, add, remove, and delete entities programmatically.
- Photon Cloud has servers in several regions, distributed across multiple hosting
  centers over the world.
- Use WASD to move the player around.
- If you only see one capsule, try opening this page in another tab or on another
  computer.
- Colyseus comes with an optional monitoring panel that can be helpful during the
  development of your game.
- Players are removed when they close the game.
- Uses WebSocket for connection — supports both secure and non-secure connections.
- Uses onActorJoin and onActorLeave for managing players in a room.
- Uses the pc.Mesh API for terrain generation
- This tutorial shares a Touchscreen Joypad library that can be installed and customized
  for any project that needs touch screen controls.
- To use the library just upload the `tween.js` file to your project.
- This tutorial covers how to start creating your own multiplayer from scratch.
- This tutorial demonstrates how to create a simple leaderboard using the built-in
  Elements.
- The leaderboard is filled programmatically with data that come from a JSON asset.
- This project uses the pc.Mesh API to procedurally generate and texture a rolling
  hillside from a heightmap texture.
- This doesn't support 3D elements.
- The button Entity also has a Text Element as a child for showing text (this is optional
  depending on the style of your button).
- These events will only fire if Use Input is enabled on the Element component so
  make sure that has been ticked in the inspector.
- The progress bar loops from empty to full every few seconds.
- The UI elements include buttons, a progress bar, and text to show the current stat
  value.
- The progress value is clamped between 0 and 10.
- The C render asset is set up not to be preloaded.
- Assets A and B are marked as preload.
- The 'load' event is fired for every asset that is loaded.
- The 'load:id' event is more specific and only fires for the specific asset.
- Uses HTML Video Element to play the video
- Requires setup of video asset or URL
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Wait for the current window to reset.'
- First Person Movement script needs to have a 'collision' component
- First Person Movement script needs to have a DYNAMIC 'rigidbody' component
- 'Client disconnected: {socket.id}'
- 'New client connected: {socket.id}'
- 'VIDEO_NOT_PLAYING: Ensure video asset is loaded and playable'
- 'CROSS_ORIGIN: Verify video source allows cross-origin requests'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.playcanvas.com
source_metadata: null
