resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: records
- name: Application Performance Monitoring
  endpoint:
    path: /application-performance-monitoring/features
    method: GET
- name: Real User Monitoring
  endpoint:
    path: /real-user-monitoring/features
    method: GET
- name: Infrastructure Monitoring
  endpoint:
    path: /infrastructure-monitoring/features
    method: GET
- name: Logs Monitoring
  endpoint:
    path: /logs-monitoring/features
    method: GET
- name: Synthetic Monitoring
  endpoint:
    path: /synthetic-monitoring/features
    method: GET
- name: API Analytics
  endpoint:
    path: /api-analytics/features
    method: GET
- name: Database Monitoring
  endpoint:
    path: /database-monitoring/features
    method: GET
- name: Kubernetes Monitoring
  endpoint:
    path: /kubernetes-monitoring/features
    method: GET
- name: Error Tracking
  endpoint:
    path: /error-tracking/features
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: error_tracking
  endpoint:
    path: /api/errors
    method: POST
    data_selector: errors
    params: {}
- name: hosts
  endpoint:
    path: /infrastructure/hosts
    method: GET
    data_selector: reports
- name: checks
  endpoint:
    path: /infrastructure/checks
    method: GET
    data_selector: reports
- name: http_check
  endpoint:
    path: /etc/atatus-infra-agent/conf.d/http_check.d/http_check.yml
    method: GET
    data_selector: checks
    params: {}
- name: tcp_check
  endpoint:
    path: /etc/atatus-infra-agent/conf.d/tcp_check.d/tcp_check.yml
    method: GET
    data_selector: checks
    params: {}
- name: MySQL
  endpoint:
    path: ./mysql/self-hosted.html
    method: GET
- name: PostgreSQL
  endpoint:
    path: ./postgresql/self-hosted.html
    method: GET
- name: Microsoft SQL Server
  endpoint:
    path: ./microsoft-sql-server/self-hosted.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: ssl_check
  endpoint:
    path: /api/v1/ssl/check
    method: POST
    data_selector: check_results
    params:
      frequency: 1 minute
- name: dns_check
  endpoint:
    path: /api/dns_check
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: errors
  endpoint:
    path: /api/v1/errors
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tcp_check
  endpoint:
    path: /tcp/check
    method: GET
    data_selector: response
    params:
      frequency: 1 minute
- name: application_monitoring
  endpoint:
    path: /api/v1/application_monitoring
    method: GET
    data_selector: records
- name: serverless_monitoring
  endpoint:
    path: /api/v1/serverless_monitoring
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert_policy
  endpoint:
    path: /alerting/alert_policy
    method: POST
    data_selector: policy
    params: {}
- name: alert_policy
  endpoint:
    path: /alerting/alert_policies
    method: POST
    data_selector: alert_rules
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Alert Policies
  endpoint:
    path: /alerting/alert_policies
    method: GET
    data_selector: policies
- name: logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: data
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
    data_selector: data
- name: Apdex Calculation
  endpoint:
    path: /apdex/calculation
    method: GET
    data_selector: apdex_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: source_map_upload
  endpoint:
    path: /v2/projects/:projectId/sourcemap
    method: POST
    data_selector: response
    params:
      api_key: YOUR_API_KEY_HERE
      url: http://www.acme.com/js/main.min.js
      sourcemap: '@js/main.min.js.map'
      version: version_string_here
- name: source_map_delete
  endpoint:
    path: /v2/projects/:projectId/sourcemap
    method: DELETE
    data_selector: response
    params:
      olderThan: 1M
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: infra_agent
  endpoint:
    path: /track/infra
    method: POST
    data_selector: data
    params:
      license_key: YOUR_LICENSE_KEY
- name: python_agent
  endpoint:
    path: /track/python
    method: POST
    data_selector: data
    params:
      app_name: YOUR_APP_NAME
      license_key: YOUR_LICENSE_KEY
- name: apdex_metrics
  endpoint:
    path: /v2/projects/:projectId/apdex
    method: GET
    data_selector: response
    params:
      timeDur: 7d
- name: errors
  endpoint:
    path: /v2/projects/:projectId/errors
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      timeDur: Required
      status: Required
      limit: Optional
      page: Optional
- name: specific_error
  endpoint:
    path: /v2/projects/:projectId/errors/:errorId
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      errorId: Required
      timeDur: Required
- name: error_events
  endpoint:
    path: /v2/projects/:projectId/errors/:errorId/events
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      errorId: Required
      timeDur: Required
      limit: Optional
      page: Optional
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pages
  endpoint:
    path: /v2/projects/:projectId/pages
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      timeDur: timeDur
- name: page_by_id
  endpoint:
    path: /v2/projects/:projectId/pages/:pageId
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      pageId: pageId
      timeDur: timeDur
- name: search_pages
  endpoint:
    path: /v2/projects/:projectId/pages
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      search: search
      timeDur: timeDur
- name: ajax_calls
  endpoint:
    path: /v2/projects/:projectId/ajax
    method: GET
    params:
      apiKey: apiKey
      projectId: projectId
      timeDur: timeDur
- name: ajax_call_by_id
  endpoint:
    path: /v2/projects/:projectId/ajax/:ajaxId
    method: GET
    params:
      apiKey: apiKey
      projectId: projectId
      ajaxId: ajaxId
      timeDur: timeDur
- name: ajax_call_with_specific_path
  endpoint:
    path: /v2/projects/:projectId/ajax
    method: GET
    params:
      apiKey: apiKey
      projectId: projectId
      search: search
      timeDur: timeDur
- name: routes_list
  endpoint:
    path: /v2/projects/:projectId/routes
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      timeDur: timeDur
- name: specific_route
  endpoint:
    path: /v2/projects/:projectId/routes/:routeId
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      routeId: routeId
      timeDur: timeDur
- name: search_route
  endpoint:
    path: /v2/projects/:projectId/routes
    method: GET
    data_selector: data
    params:
      apiKey: apiKey
      projectId: projectId
      search: search
      timeDur: timeDur
- name: transactions
  endpoint:
    path: /v2/projects/:projectId/transactions
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      timeDur: Required
- name: transaction_by_id
  endpoint:
    path: /v2/projects/:projectId/transactions/:transactionId
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      transactionId: Required
      timeDur: Required
- name: transactions_with_search
  endpoint:
    path: /v2/projects/:projectId/transactions
    method: GET
    data_selector: data
    params:
      apiKey: Required
      projectId: Required
      search: Required
      timeDur: Required
- name: webvitals
  endpoint:
    path: /v2/projects/:projectId/webvitals
    method: GET
    data_selector: data
- name: full_report
  endpoint:
    path: /v2/projects/:projectId/reports
    method: GET
    data_selector: apdex
- name: experience_report
  endpoint:
    path: /v2/projects/:projectId/reports/apdex
    method: GET
    data_selector: page
- name: error_report
  endpoint:
    path: /v2/projects/:projectId/reports/errors
    method: GET
    data_selector: errors
- name: pages_report
  endpoint:
    path: /v2/projects/:projectId/reports/pages
    method: GET
    data_selector: page
- name: ajax_report
  endpoint:
    path: /v2/projects/:projectId/reports/ajax
    method: GET
    data_selector: ajax
- name: transactions_report
  endpoint:
    path: /v2/projects/:projectId/reports/transactions
    method: GET
    data_selector: transactions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: application_metrics
  endpoint:
    path: /api/v1/metrics
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Atatus
- API requires authentication to access logs.
- Browser monitoring monitors the performance of the front-end applications and ensures
  that the user experience is not affected.
- You can learn how your pages and ajax requests are performing.
- For more advanced options on installing your monitoring code, view customizing agent.
- Uses API key for authentication
- Some features can be enabled or disabled using configuration options
- Atatus Infra agent has log monitoring feature which helps you to monitor logs from
  your apps, services, databases and load balancers.
- Collecting logs is disabled by default in the Atatus Infra Agent, enable it in your
  /etc/atatus-infra-agent/atatus.yaml file.
- Monitoring tools for Kubernetes help users gain insights into the system's behavior,
  troubleshoot issues, and optimize performance.
- Kubernetes Cluster Monitoring is essential for ensuring the health, performance,
  and reliability of a Kubernetes cluster.
- Atatus supports configuring logs and metrics inclusion or exclusion based on namespaces
  using environment variables.
- Requires setup of connected app in Atatus
- HTTP/Website Checks is the way to ensure the availability and uptime of your website
  or API and also you can check the latency, status code, header, and response.
- The default frequency is once every minute.
- You can set the retry count based on your preference.
- Supports self-signed certificates
- Default frequency is once every minute
- Ensure API keys are kept secure.
- The default frequency for testing is once every minute.
- The default number of Pings is set to four. Depending on your needs, you can alter
  this number up to ten.
- Some objects may return nulls in deeply nested fields
- If this step fails, it is recommended you select Continue with test regardless of
  the previous step's success or failure in order to test the whole endpoint collection.
- 'No Extra Configuration Needed for Basic Setup: The APM agent automatically captures
  key API analytics by default. However, to enable full API analytics capabilities,
  you will need to configure the following settings:'
- analytics=true
- logBody=true
- Threshold values can be set when creating a new rule.
- Apdex is a standard to measure the users' satisfaction and experience on using your
  applications.
- The faster the response time, the higher the apdex score.
- Wildcard characters like * are supported.
- You can give multiple filters as separate line.
- Source map is stored as project + minified URL + version.
- Uploading it more than once will lead to writing over the previous data.
- Atatus calculates number of hosts based on the number of hours the host is connected
  to Atatus (the standard hours used per month in Atatus is 720).
- If you have enabled auto-scaling, then number of hosts is calculated based on the
  above formula.
- Requires setup of connected app in api
- Replace endpoint URLs in agents as shown in configuration
- API Key to read data is required.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- '200: OK - uploaded successfully'
- '422: Non processable entity - there was an error validating the upload'
- '401 Unauthorized: your API key is wrong'
- '429 Too many requests: you’re requesting too many items. Please slow down'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.atatus.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.atatus.com/oauth/token
    client_id: '{{ dlt.secrets[''atatus_client_id''] }}'
    client_secret: '{{ dlt.secrets[''atatus_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''atatus_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
