resources:
- name: applications
  endpoint:
    path: /gslb/applications
    method: POST
    data_selector: healthchecks
    params: {}
- name: application_details
  endpoint:
    path: /gslb/applications/{id}
    method: GET
    data_selector: healthchecks
    params: {}
- name: health_checks
  endpoint:
    path: /gslb/health_checks
    method: GET
    data_selector: health_checks
    params: {}
- name: host_members
  endpoint:
    path: /gslb/host_members
    method: POST
    data_selector: host_members
    params: {}
- name: servers
  endpoint:
    path: /gslb/servers
    method: GET
    data_selector: servers
    params: {}
- name: ip_protection
  endpoint:
    path: /waf/apps/{ep_id}/ip_protection
    method: GET
    data_selector: result.configs
    params: {}
- name: ip_protection_update
  endpoint:
    path: /waf/apps/{ep_id}/ip_protection
    method: PUT
    data_selector: ''
    params: {}
- name: template_ip_protection
  endpoint:
    path: /waf/template/{template_id}/ip_protection
    method: GET
    data_selector: result.configs
    params: {}
- name: template_ip_protection_update
  endpoint:
    path: /waf/template/{template_id}/ip_protection
    method: PUT
    data_selector: ''
    params: {}
- name: get_global_setting_configurations
  endpoint:
    path: /v2/waf/settings/cbp/messages
    method: GET
    data_selector: records
- name: audit_logs
  endpoint:
    path: /get/audit/logs
    method: GET
    data_selector: records
    params: {}
- name: get_report_definition_detail
  endpoint:
    path: /ta/insight
    method: GET
    params:
      id: required
      type: required
      action: ''
      status: ''
      configuration: ''
- name: get_notification_list
  endpoint:
    path: /notifications
    method: GET
    params: {}
- name: get_report_definitions
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: records
    params: {}
- name: create_report_definition
  endpoint:
    path: /waf/settings/cbp/messages
    method: POST
    data_selector: records
    params: {}
- name: update_report_definition
  endpoint:
    path: /waf/settings/cbp/messages
    method: PUT
    data_selector: records
    params: {}
- name: audit_log
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: records
    params: {}
- name: account_usage
  endpoint:
    path: /ta/insight
    method: GET
    data_selector: records
    params:
      id: required
      type: required
- name: delete_report
  endpoint:
    path: /waf/settings/cbp/messages
    method: DELETE
    data_selector: records
    params:
      report_id: required
- name: custom_block_page_messages
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: records
    params: {}
- name: Custom Block Page Messages
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: messages
- name: attack_logs
  endpoint:
    path: /ta/insight
    method: GET
    data_selector: records
    params:
      id: '{id}'
      type: trust_ip
      action: '{action}'
      malicious_ip: '{ip}'
- name: suggested_filter_options
  endpoint:
    path: /ta/insight
    method: GET
    data_selector: records
    params:
      storage_region: '{storage_region}'
      key: '{key}'
      time_range: '{time_range}'
      filter: '{filter}'
- name: insight_events
  endpoint:
    path: /get/waf/settings/cbp/messages
    method: GET
    params:
      type: string
      cursor: string
      size: string
      forward: string
- name: attack_logs
  endpoint:
    path: /attack_logs
    method: GET
    params:
      time_range: 24h
      page: 1
      size: 20
- name: signature_information
  endpoint:
    path: /signature_information
    method: GET
    params:
      signature_id: 090500348
- name: Get Data of Incidents Dashboard
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: arecords
- name: Get Incidents List
  endpoint:
    path: /ta/insight
    method: GET
    data_selector: arecords
- name: Get Incident Detail
  endpoint:
    path: /ta/insight
    method: GET
    data_selector: arecords
- name: Update Incident to Add Comment or Tags
  endpoint:
    path: /ta/insight
    method: POST
    data_selector: arecords
- name: custom_block_page_messages
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: messages
- name: custom_block_page_images
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: records
    params: {}
- name: get_gateway_list
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
- name: update_data_storage
  endpoint:
    path: /waf/settings/cbp/messages
    method: POST
- name: custom_block_page_messages
  endpoint:
    path: /waf/settings/cbp/messages
    method: GET
    data_selector: records
- name: create_custom_block_page_message
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: delete_custom_block_page_message
  endpoint:
    path: /waf/settings/cbp/messages
    method: DELETE
    data_selector: records
- name: custom_block_page_message
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: get_custom_block_page_message_detail
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: filter_options
  endpoint:
    path: /waf/template/{template_id}
    method: PUT
    data_selector: filter_options
    params:
      cloud_connector: connector name
- name: public_ip_list
  endpoint:
    path: /waf/template/{template_id}
    method: PUT
- name: templates
  endpoint:
    path: /v2/waf/template
    method: GET
    data_selector: records
    params: {}
- name: Get fabric connector status list
  endpoint:
    path: /v2/waf/template
    method: GET
    data_selector: records
- name: Set fabric connection to FGT
  endpoint:
    path: /v2/waf/template/{template_id}
    method: PUT
    data_selector: records
- name: Delete fabric connector
  endpoint:
    path: /v2/waf/template/{template_id}
    method: DELETE
    data_selector: records
- name: Activate/Deactivate Fabric Connector
  endpoint:
    path: /v2/waf/template/{template_id}
    method: PUT
    data_selector: records
- name: template
  endpoint:
    path: /waf/template/{template_id}
    method: PUT
    data_selector: template
    params: {}
- name: Get Template Account Takeover
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Update Template Account Takeover
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Get Template Advanced Bot Protection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Update Template Advanced Bot Protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: Get Template Anomaly Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: Update Template Anomaly Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone_records
    params: {}
- name: template
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- endpoint:
    path: /gslb/zones/{id}
    method: PUT
- endpoint:
    path: /gslb/zones/{id}
    method: GET
- name: Update Template OpenAPI Validation
  endpoint:
    path: /put/gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: string
- name: Get Template Biometrics Based Detection
  endpoint:
    path: /get/gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: string
- name: Update Template Biometrics Based Detection
  endpoint:
    path: /put/gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: string
- name: zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params:
      template_id: '{{template_id}}'
- name: file_protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: Update Template CSRF Protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Get Template Custom Rule
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Get Template DDoS Prevention
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Update Template DDoS Prevention
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: zone
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
- name: Update Template MITB Protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: Get Template MITB Protection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: '{{template_id}}'
- name: template_modules
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: modules
    params:
      template_id: '{{template_id}}'
- name: Get Template ML Based API Protection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      template_id: required
- name: Update Template ML Based API Protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      template_id: required
- name: Get Template Machine Learning Bot Detection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      template_id: required
- name: Update Template Machine Learning Bot Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      template_id: required
- name: zone
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: template_parameter_validation
  endpoint:
    path: /template/parameter/validation
    method: GET
    data_selector: configs
    params: {}
- name: zones
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: zone
    params:
      template_id: '{{template_id}}'
- name: gslb_zones
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
- name: template_url_access
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: configs
- name: template_waiting_room_configuration
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: configs
- name: Update Template Waiting Room
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      template_id: required
- name: Get Template WebSocket Security
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      template_id: required
- name: template_xml_protection
  endpoint:
    path: /waf/apps
    method: GET
    data_selector: records
    params: {}
- name: zone
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: modules
  endpoint:
    path: /modules
    method: GET
    data_selector: modules
    params: {}
- name: application
  endpoint:
    path: /waf/apps/{{ep_id}}
    method: GET
    data_selector: records
    params: {}
- name: update_application
  endpoint:
    path: /waf/apps/{{ep_id}}
    method: PUT
    data_selector: records
    params:
      dns_resolve: boolean
- name: delete_application
  endpoint:
    path: /waf/apps/{{ep_id}}
    method: DELETE
    data_selector: records
    params: {}
- name: Update Endpoint Modules
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: Do Connection Test
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: Do DNS Lookup
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: waf_ip_address
  endpoint:
    path: /misc/management_ip
    method: GET
    data_selector: records
    params:
      filter: '{{filter}}'
- name: server_status
  endpoint:
    path: /get_server_status
    method: GET
    data_selector: records
- name: application_dashboard_widgets
  endpoint:
    path: /get_dashboard_widgets
    method: GET
    data_selector: records
    params:
      category: '{{category}}'
      timespan: '{{timespan}}'
- name: Log Settings Configuration
  endpoint:
    path: /v2/gslb/zones/{id}
    method: GET
- name: server_status
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: records
    params: {}
- name: waf_dashboard_throughput
  endpoint:
    path: /gslb/zones/{id}
    method: get
    data_selector: records
    params:
      timespan: last_hour
      local_timezone: ''
- name: application_dashboard_widgets
  endpoint:
    path: /gslb/zones/{id}
    method: get
    data_selector: records
    params:
      category: month_sum
      timespan: last_hour
      local_timezone: ''
- name: owasp_top_10
  endpoint:
    path: /gslb/zones/{id}
    method: get
    data_selector: records
    params:
      timespan: last_hour
- name: release_ip
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: ip
    params:
      ip: string
- name: threat_view_statistics
  endpoint:
    path: /threat/view/statistics
    method: GET
    data_selector: records
- name: traffic_log_agent_statistics
  endpoint:
    path: /traffic/log/agent/statistics
    method: GET
    data_selector: records
- name: threat_map
  endpoint:
    path: /threat/map
    method: GET
    data_selector: records
- name: Traffic Log URL Statics
  endpoint:
    path: /waf/apps/{ep_id}/traffic_summary/url_statistics
    method: GET
    params:
      type: summary
      start_time: '1660254330143'
      end_time: '1660340730143'
- name: Traffic Log URL Statics Detail
  endpoint:
    path: /waf/apps/:ep_id/traffic_summary/traffic_summary/url_statistics
    method: GET
    params:
      type: details
      start_time: '1660254450854'
      end_time: '1660340850854'
      page: '1'
      size: '5'
      sort_by: total_number
      filter: '{"http_url":"/"}'
- name: CRL_certificate
  endpoint:
    path: /gslb/zones/{id}
    method: GET
- name: get_ca_certificate_detail
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: get_ca_certificate
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_ca_certificate
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: gslb_zones
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: intermediate_certificate
  endpoint:
    path: /v2/intermediate_certificates/{id}
    method: GET
    data_selector: records
    params:
      id: integer
- name: intermediate_certificate
  endpoint:
    path: /v2/gslb/zones/{id}
    method: put
    data_selector: records
- name: content_routing
  endpoint:
    path: /v2/gslb/zones/{id}
    method: put
    data_selector: records
- name: Get Server CA Certificate
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      ep_id: string
- name: Do Pserver Health Check
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      ep_id: string
- name: Update Server CA Certificate
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: Get Server CA Certificate Detail
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
- name: Get Server CRL Certificate
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
- name: Update Server CRL Certificate
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: get_sni_certificate_detail
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
- name: get_sni_certificates
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params:
      forward: 'true'
      cursor: ''
      size: 20
- name: update_sni_certificate
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: anomaly_detection
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: signature_info
  endpoint:
    path: /gslb/zones/{id}
    method: get
    data_selector: signature_info
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      ep_id: '{{ep_id}}'
- name: FileProtection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: InformationLeakage
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: known_attacks
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: a_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: arecords
    params: {}
- name: caa_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: caarecords
    params: {}
- name: cname_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: cnamerecords
    params: {}
- name: ds_sets
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: dssets
    params: {}
- name: mx_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: mxrecords
    params: {}
- name: ns_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: nsrecords
    params: {}
- name: ptr_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: ptrrecords
    params: {}
- name: srv_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: srvrecords
    params: {}
- name: txt_records
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: txtrecords
    params: {}
- endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: anomaly_detection_url_stats
  endpoint:
    path: /gslb/zones/{id}
    method: GET
- name: parameter_validation
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: treeview_anomaly_detection
  endpoint:
    path: /anomaly_detection/treeview
    method: GET
    data_selector: records
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: zone
    params: {}
- name: get_exception
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_exception
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: get_csrf_protection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_csrf_protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: ip_protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: request_limits
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params: {}
- name: url_access
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params: {}
- name: advanced_bot_protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: biometrics_based_detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
- name: known_bots
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: machine_learning_bot_detection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_biometrics_based_detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: get_bot_deception
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: update_bot_deception
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: Update Machine Learning Bot Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: Get Threshold Based Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: Update Threshold Based Detection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: put
    data_selector: records
- name: WebSocket Security Configuration
  endpoint:
    path: /{id}
    method: PUT
    data_selector: configs
    params: {}
- name: Update Template Custom Rule
  endpoint:
    path: /{template_id}
    method: PUT
    data_selector: configs
    params: {}
- name: Get DDoS Prevention
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      ep_id: '{{ep_id}}'
- name: Update DDoS Prevention
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      ep_id: '{{ep_id}}'
- name: Get Custom Rule
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      ep_id: '{{ep_id}}'
- name: Update Custom Rule
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params:
      ep_id: '{{ep_id}}'
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone_records
- name: zones
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: schema
  endpoint:
    path: /path/to/schema
    method: GET
    data_selector: ''
    params: {}
- name: timeline
  endpoint:
    path: /path/to/timeline
    method: GET
    data_selector: ''
    params: {}
- name: Get Account Takeover
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
- name: update_mobile_api_protection
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: get_mobile_api_protection
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: configs
    params:
      ep_id: '{{ep_id}}'
- name: gslb_zones
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: arecords
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: arecords
    params: {}
- name: waiting_room_overview
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params:
      ep_id: string
      widget: overview
      time_range: 1h
- name: waiting_room_configuration
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: configs
    params:
      ep_id: string
      template: boolean
- name: get_asset_list
  endpoint:
    path: /application/{ep_id}/vs/get_asset_list
    method: GET
- name: get_license
  endpoint:
    path: /application/{ep_id}/vs/get_license
    method: GET
- name: scan_result
  endpoint:
    path: /application/{ep_id}/vs/scan_result
    method: GET
- name: get_config_url
  endpoint:
    path: /application/{ep_id}/vs/get_config_url
    method: GET
- name: get_report_url
  endpoint:
    path: /application/{ep_id}/vs/get_report_url
    method: GET
- name: addressgroup_list
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params: {}
- name: create_addressgroup
  endpoint:
    path: /gslb/zones
    method: POST
    data_selector: records
    params: {}
- name: a_record
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: arecords
- name: batch_remove_a_records
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: arecords
- name: delete_a_record
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: arecords
- name: addressgroup
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: batchRemoveAddressgroups
  endpoint:
    path: /gslb/zones
    method: PUT
    data_selector: records
    params: {}
- name: deleteAddressgroup
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: addressmember_list
  endpoint:
    path: /gslb/addressmembers
    method: GET
    data_selector: arecords
    params: {}
- name: create_addressmember
  endpoint:
    path: /gslb/addressmembers
    method: POST
    data_selector: ''
    params: {}
- name: application_list
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params: {}
- name: create_application
  endpoint:
    path: /gslb/zones
    method: PUT
    data_selector: records
    params: {}
- name: addressmember
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: batchRemoveAddressmembers
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: deleteAddressmember
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: zone
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: caa_record
  endpoint:
    path: /gslb/caa_records
    method: GET
    data_selector: caarecords
    params: {}
- name: batch_remove_caa_records
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: application
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: batchRemoveApplications
  endpoint:
    path: /gslb/zones
    method: PUT
    data_selector: records
    params: {}
- name: deleteApplication
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: caa_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: caarecords
    params: {}
- name: get_caa_record
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: caarecords
    params: {}
- name: delete_caa_record
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: cname_records
  endpoint:
    path: /gslb/cnamerecords
    method: GET
    data_selector: cnamerecords
    params: {}
- name: batch_remove_cname_records
  endpoint:
    path: /gslb/cnamerecords/batchremove
    method: POST
    data_selector: ''
    params: {}
- name: cname_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: cnamerecords
    params: {}
- name: delete_cname_record
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_cname_record
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: cnamerecords
    params: {}
- name: data_center_list
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: arecords
    params: {}
- name: create_data_center
  endpoint:
    path: /gslb/zones
    method: POST
    data_selector: zone
    params: {}
- name: delete_data_center
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: dsset_list
  endpoint:
    path: /gslb/dssets
    method: GET
    data_selector: dssets
    params:
      dsset_name: ''
      dsset_key: ''
      zone_id: 0
      sort: ''
      last_id: 0
      limit: ''
      order: ''
      fields: ''
- name: dssets
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: dssets
    params: {}
- name: get_query_usage_history
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: get_rps_history
  endpoint:
    path: /v2/gslb/zones/{id}
    method: PUT
    data_selector: rps
    params:
      start: required
      end: required
      count: required
- name: company_status
  endpoint:
    path: /{id}
    method: PUT
    data_selector: records
- name: server_status
  endpoint:
    path: /{id}
    method: PUT
    data_selector: records
- name: topology_status
  endpoint:
    path: /{id}
    method: PUT
    data_selector: records
- name: meter_status
  endpoint:
    path: /{id}
    method: PUT
    data_selector: records
- name: health_check_list
  endpoint:
    path: /gslb/healthchecks
    method: GET
    data_selector: arecords
    params: {}
- name: create_health_check
  endpoint:
    path: /gslb/healthchecks
    method: POST
    data_selector: ''
    params: {}
- name: batch_remove_health_checks
  endpoint:
    path: /gslb/healthchecks/batchremove
    method: POST
    data_selector: ''
    params: {}
- name: health_check
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
    params: {}
- name: host_member
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: get_host_members
  endpoint:
    path: /gslb/host_members
    method: GET
    data_selector: records
- name: BatchRemove HostMembers
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: mkeys
- name: Delete Host Member
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: ''
- name: Get Host Member by Id
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: ''
- name: Update Host Member
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: ''
- name: host_list
  endpoint:
    path: /gslb/hosts
    method: GET
    data_selector: arecords
    params: {}
- name: create_host
  endpoint:
    path: /gslb/hosts
    method: POST
    data_selector: arecords
    params: {}
- name: batch_remove_hosts
  endpoint:
    path: /gslb/hosts/batchRemove
    method: POST
    data_selector: mkeys
    params: {}
- name: mxrecords
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: mxrecords
    params: {}
- name: BatchRemoveMxRecords
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: mkeys
    params: {}
- name: update_host
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
- name: get_host_by_id
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
- name: delete_host
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
- name: mx_record
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: mxrecords
    params:
      id: string
- name: get_mx_record
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: mxrecords
    params:
      id: string
- name: update_mx_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: mxrecords
    params:
      id: string
- name: ns_record_list
  endpoint:
    path: /gslb/nsrecords
    method: GET
    data_selector: nsrecords
    params: {}
- name: create_ns_record
  endpoint:
    path: /gslb/nsrecords
    method: POST
    data_selector: nsrecords
    params: {}
- name: batch_remove_ns_records
  endpoint:
    path: /gslb/nsrecords/batch_remove
    method: POST
    data_selector: mkeys
    params: {}
- name: ns_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: nsrecords
- name: ptrrecords
  endpoint:
    path: /ptrrecords
    method: GET
    data_selector: ptrrecords
    params: {}
- name: create_ptr_record
  endpoint:
    path: /ptrrecords
    method: POST
    data_selector: ptrrecords
    params: {}
- name: batch_remove_ptr_records
  endpoint:
    path: /ptrrecords/batch
    method: DELETE
    data_selector: mkeys
    params: {}
- name: ptr_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: Get a server status list
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params: {}
- name: Get a server status by Id
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: Create a new server
  endpoint:
    path: /gslb/zones
    method: POST
    data_selector: records
    params: {}
- name: srv_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: srvrecords
- name: srv_record
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: srvrecords
    params: {}
- name: get_server_by_id
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: batch_remove_servers
  endpoint:
    path: /gslb/zones
    method: PUT
    data_selector: records
    params:
      mkeys: []
- name: delete_server
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: topology
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: topology
  endpoint:
    path: /{id}
    method: GET
    data_selector: records
    params: {}
- name: update_topology
  endpoint:
    path: /{id}
    method: PUT
    data_selector: records
    params: {}
- name: delete_topology
  endpoint:
    path: /{id}
    method: DELETE
    data_selector: records
    params: {}
- name: txt_record
  endpoint:
    path: /txtrecords
    method: GET
    data_selector: txtrecords
    params: {}
- name: batch_remove_txt_records
  endpoint:
    path: /batchremove
    method: DELETE
    data_selector: mkeys
    params: {}
- name: txtrecords
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: txtrecords
- name: virtual_server_pool
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: virtual_server_pool_list
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params: {}
- name: batch_remove_virtual_server_pools
  endpoint:
    path: /gslb/zones
    method: DELETE
    data_selector: records
    params: {}
- name: get_virtual_server_pool
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: update_virtual_server_pool
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: delete_virtual_server_pool
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: virtual_server
  endpoint:
    path: /gslb/zones
    method: GET
    data_selector: records
    params: {}
- name: virtual_server_status
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: Get a virtual server by Id
  endpoint:
    path: /gslb/zones/{id}
    method: GET
- name: Delete a virtual server
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
- name: vsp_member
  endpoint:
    path: /gslb/zones/{id}
    method: GET
    data_selector: records
    params: {}
- name: batch_remove_vsp_members
  endpoint:
    path: /gslb/zones
    method: PUT
    data_selector: records
    params: {}
- name: delete_vsp_member
  endpoint:
    path: /gslb/zones/{id}
    method: DELETE
    data_selector: records
    params: {}
- name: zone
  endpoint:
    path: /zones
    method: GET
    data_selector: records
    params: {}
- name: update_zone
  endpoint:
    path: /zones/{id}
    method: PUT
    data_selector: records
    params: {}
- name: vsp_member
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: vsp_member
- name: zone
  endpoint:
    path: /gslb/zones/{id}
    method: PUT
    data_selector: zone
- name: zone
  endpoint:
    path: /{id}
    method: GET
    data_selector: zone
    params: {}
- name: batch_remove_zones
  endpoint:
    path: /batchRemove
    method: POST
    data_selector: zones
    params: {}
- name: delete_zone
  endpoint:
    path: /{id}
    method: DELETE
    data_selector: zone
    params: {}
notes:
- Requires API key secret as Authorization request header.
- Requires setup of authorization.
- Requires API key secret as `Authorization` request header.
- Endpoint for getting, deleting, and batch removing addressmembers.
- Content type for requests should be application/json.
- Response content type is application/json
- The API supports multiple record types such as A, CAA, CNAME, MX, NS, PTR, SRV,
  and TXT records.
errors:
- '200: Get custom block page messages list successfully'
- '500: Get custom block page messages list failed'
- '400: Bad request'
- '404: Not found'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check required parameters'
- 400 Bad Request
- 404 Not Found
- 500 Internal Server Error
- '400 Bad Request: Invalid request parameters'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: Server error occurred'
- '400: Failure'
- '404: Not Found'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Verify template_id.'
- '400: Bad Request'
- '400 Bad Request: Invalid input parameters'
- '404 Not Found: Addressmember not found'
- '400 Bad Request: Check the request body or parameters'
- '404 Not Found: Ensure the ID is correct'
- '404 Not Found: Verify the endpoint and resource.'
- '400 Bad Request: Invalid parameters or request body'
auth_info:
  mentioned_objects:
  - ApiRequestAuthorizer
client:
  base_url: https://api.appsec.fortinet.com/v2/waf/settings/cbp/messages
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
