resources:
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_source
  endpoint:
    path: /api/content_source
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformation
  endpoint:
    path: /services/data/v2/images/transform
    method: POST
    data_selector: records
    params: {}
- name: cache_clear
  endpoint:
    path: /api/cache/clear
    method: POST
    data_selector: cacheStatus
    params: {}
- name: image_transformation
  endpoint:
    path: /api/v2/images/transform
    method: POST
    data_selector: transformed_images
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mx
  endpoint:
    path: /pagebuilder/mx
    method: GET
    data_selector: records
- name: update_mx_sitemapping
  endpoint:
    path: /pagebuilder/mx/sports
    method: PATCH
    data_selector: siteMappings
- name: MX Instance
  endpoint:
    path: /micro-experiences
    method: POST
    data_selector: instances
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Content API
  endpoint:
    path: /api/public-content-retrieval/content-api/
    method: GET
    data_selector: records
    params: {}
- name: Video API (Public)
  endpoint:
    path: /api/public-content-retrieval/video-api-public/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mx_rendering
  endpoint:
    path: /api/v1/page-rendering
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: update_mx
  endpoint:
    path: /pagebuilder/mx/{mx-slug}
    method: PATCH
    data_selector: siteMappings
- name: get_mx
  endpoint:
    path: /pagebuilder/mx/{mx-slug}
    method: GET
    data_selector: siteMappings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /training/events
    method: POST
- name: popularity_recommendations
  endpoint:
    path: /training/site/{site-id}/documents/recommendations
    method: GET
- name: sims_recommendations
  endpoint:
    path: /training/site/{site-id}/documents/{document-id}/recommendations
    method: GET
- name: content_ans
  endpoint:
    path: /migrations/v3/content/ans
    method: GET
- name: report_summary
  endpoint:
    path: /migrations/v3/report/summary
    method: GET
- name: webhook
  endpoint:
    path: /migrations/v3/webhook
    method: GET
- name: health
  endpoint:
    path: /v1/health/
    method: GET
- name: health_by_region
  endpoint:
    path: /v1/health/{region}/
    method: GET
- name: sign
  endpoint:
    path: /v1/sign/{app_id}/{signing_key_version}/{value}
    method: GET
- name: sign_with_url_encoding
  endpoint:
    path: /v2/sign/{app_id}/{signing_key_version}
    method: GET
- name: hierarchy
  endpoint:
    path: /hierarchy/
    method: GET
- name: link
  endpoint:
    path: /website/{_website}/link/
    method: GET
- name: navigation
  endpoint:
    path: /navigation/{_website}/
    method: GET
- name: section_group
  endpoint:
    path: /section-group
    method: GET
- name: website
  endpoint:
    path: /website/
    method: GET
- name: authentication
  endpoint:
    path: /identity/public/v1/auth/token
    method: POST
- name: cart
  endpoint:
    path: /sales/public/v1/cart
    method: GET
- name: subscriptions
  endpoint:
    path: /sales/public/v1/subscription/all
    method: GET
- name: condition_categories
  endpoint:
    path: /retail/api/v1/condition/categories
    method: POST
- name: condition_category_update
  endpoint:
    path: /retail/api/v1/condition/categories/:id
    method: PUT
- name: condition_category_delete
  endpoint:
    path: /retail/api/v1/condition/categories/:id
    method: DELETE
- name: tag
  endpoint:
    path: /api/tags
    method: GET
    data_selector: tags
- name: create_tag
  endpoint:
    path: /add
    method: POST
- name: edit_tag
  endpoint:
    path: /edit
    method: POST
- name: delete_tag
  endpoint:
    path: /delete
    method: POST
- name: search_tag
  endpoint:
    path: /search
    method: GET
- name: get_all_tags
  endpoint:
    path: /
    method: GET
- name: search_tags_by_slug
  endpoint:
    path: /v2/slugs
    method: GET
- name: search_tags_by_prefix
  endpoint:
    path: /v2/search
    method: GET
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: bundles
  endpoint:
    path: /ifx/api/v1/admin/bundles/{integrationName}/
    method: GET
- name: unsubscribe_event
  endpoint:
    path: /ifx/api/v1/admin/events/subscriptions
    method: PUT
- name: components
  endpoint:
    path: /components/
    method: GET
- name: content
  endpoint:
    path: /content/
    method: GET
- name: data
  endpoint:
    path: /data/
    method: GET
- name: environment
  endpoint:
    path: /environment/
    method: GET
- name: properties
  endpoint:
    path: /properties/
    method: GET
- name: resources
  endpoint:
    path: /resources/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/public-content-retrieval/content-api/
    method: GET
- name: content_source
  endpoint:
    path: /content/v4/
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pagebuilder_engine_logs
  endpoint:
    path: /pagebuilder/engine/logs
    method: GET
    data_selector: logs
    params: {}
- name: PageBuilder Engine
  endpoint:
    path: /api/pagebuilder/deployer-api/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: site_properties
  endpoint:
    path: /properties/index.js
    method: GET
    data_selector: properties
- name: site_specific_values
  endpoint:
    path: /properties/sites/${site}.js
    method: GET
    data_selector: properties
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: intl_json
  endpoint:
    path: /intl.json
    method: GET
    data_selector: results-list-block.see-more
- name: blocks_json
  endpoint:
    path: /blocks.json
    method: GET
    data_selector: localeList
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: siteStyles
  endpoint:
    path: /site-styles
    method: GET
    data_selector: siteStyles
    params: {}
- name: image_transformations
  endpoint:
    path: /services/data/vXX.X/sobjects/ImageTransformations
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: component_bundle
  endpoint:
    path: /api/component-bundle
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Content API
  endpoint:
    path: /api/public-content-retrieval/content-api/
    method: GET
    data_selector: records
- name: Video API
  endpoint:
    path: /api/public-content-retrieval/video-api-public/
    method: GET
    data_selector: records
- name: basic_layout
  endpoint:
    path: /components/layouts/basic.jsx
    method: GET
    data_selector: records
    params: {}
- name: article_right_rail_layout
  endpoint:
    path: /components/layouts/article-right-rail.jsx
    method: GET
    data_selector: records
    params: {}
- name: sidebar
  endpoint:
    path: /components/chains/sidebar.jsx
    method: GET
    data_selector: props.children
    params: {}
- name: content_api
  endpoint:
    path: /api/public-content-retrieval/content-api/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: MovieDetail
  endpoint:
    path: /components/features/movies/movie-detail.jsx
    method: GET
    data_selector: records
- name: MovieList
  endpoint:
    path: /components/features/movies/movie-list.jsx
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: movies
  endpoint:
    path: /components/features/movies/movie-list.jsx
    method: GET
    data_selector: Search
    params:
      query:
        movieQuery: Jurassic
      filter: '{ totalResults Search { Title Year Poster } }'
- name: movies
  endpoint:
    path: /components/features/movies/movie-list.jsx
    method: GET
    data_selector: Search
    params:
      movieQuery: Jurassic
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_source
  endpoint:
    path: /pf/api/fetch/country
    method: GET
    data_selector: body
    params: {}
- name: page_builder_editor
  endpoint:
    path: /pagebuilder/pages
    method: GET
    data_selector: .browser__list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: searchable_image
  endpoint:
    path: /pagebuilder-engine/developer-docs/consumer-api/
    method: GET
    data_selector: content
    params: {}
- name: image_resizer
  endpoint:
    path: /resizer
    method: GET
    data_selector: resized_image_url
    params: {}
- name: ssi-header
  endpoint:
    path: /ssi-header
    method: GET
    data_selector: data
    params:
      outputType: ssi
- name: section
  endpoint:
    path: /site/v3/website/{website}/section
    method: GET
    data_selector: section
    params:
      website: text
      id: text
- name: stories-by-section
  endpoint:
    path: /content/v4/search/published/
    method: GET
    data_selector: content_elements
    params:
      website: text
      section: text
      size: number
      offset: number
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: image_transformation
  endpoint:
    path: /api/v2/images/transform
    method: POST
    data_selector: data
    params: {}
- name: blocks
  endpoint:
    path: /themes/developer-docs/themes-20-upgrade-to-v2-arc-blocks/#blocksjson
    method: GET
- name: siteProperties
  endpoint:
    path: /themes/developer-docs/themes-20-upgrade-to-v2-arc-blocks/#environmentjson
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: urls
  endpoint:
    path: /check_urls
    method: GET
    data_selector: urls
    params: {}
- name: Kinesis Data Stream
  endpoint:
    path: /create-stream
    method: POST
    data_selector: StreamARN
    params:
      stream_name: ArcXPDestinationLogStream
      shard_count: 1
- name: IAM Role
  endpoint:
    path: /create-role
    method: POST
    data_selector: RoleARN
    params:
      role_name: ArcXPLogForwardingRole
      assume_role_policy_document: trust-policy.json
- name: kinesis_data_stream
  endpoint:
    path: /create-stream
    method: POST
    data_selector: StreamARN
    params:
      stream_name: ArcXPDestinationLogStream
      shard_count: 1
- name: ArcXPLogDestination
  endpoint:
    path: /logs/put-destination
    method: PUT
    data_selector: destination
    params:
      destination-name: ArcXPLogDestination
      target-arn: arn:aws:kinesis:<region>:<destinationAccountId>:stream/ArcXPDestinationLogStream
      role-arn: arn:aws:iam::<destinationAccountId>:role/ArcXPLogForwardingRole
- name: access-policy
  endpoint:
    path: /logs/put-destination-policy
    method: PUT
    data_selector: access-policy
    params:
      destination-name: ArcXPLogDestination
      access-policy: file://access-policy.json
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_sources
  endpoint:
    path: /pf/api/content
    method: GET
    data_selector: sources
- name: deployment
  endpoint:
    path: /deploy
    method: POST
    data_selector: deployment_status
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data.lambdas
- name: bundles
  endpoint:
    path: /bundles
    method: POST
    data_selector: data
- name: promote_service
  endpoint:
    path: /services/{version}/promote
    method: POST
    data_selector: data
- name: terminate_service
  endpoint:
    path: /services/{version}/terminate
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TwoChains
  endpoint:
    path: /components/chains/two-chains.jsx
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: darksky
  endpoint:
    path: https://api.darksky.net/forecast/SOME_UNENCRYPTED_API_KEY/{lat},{lon}
    method: GET
    data_selector: params
- name: author
  endpoint:
    path: /api/content-administration/author-api/
    method: GET
    data_selector: records
    params: {}
- name: contentOps
  endpoint:
    path: /api/content-administration/contentops-api/
    method: GET
    data_selector: records
    params: {}
- name: Content
  endpoint:
    path: /fusion:content
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: ArticleRightRail
  endpoint:
    path: /components/layouts/article-right-rail.jsx
    method: GET
    data_selector: sections
- name: children
  endpoint:
    path: /components/output-types/children
    method: GET
    data_selector: records
    params: {}
- name: contentCache
  endpoint:
    path: /components/output-types/contentCache
    method: GET
    data_selector: records
    params: {}
- name: metaValue
  endpoint:
    path: /components/output-types/metaValue
    method: GET
    data_selector: records
    params: {}
- name: default
  endpoint:
    path: /components/output-types/default.jsx
    method: GET
    data_selector: data
    params: {}
- name: json
  endpoint:
    path: /components/output-types/json-output.jsx
    method: GET
    data_selector: data
    params: {}
- name: content_fetch
  endpoint:
    path: /content/fetch/:content-source
    method: GET
    params:
      query: :query
      filter: :filter
      _website: ''
- name: color-picker
  endpoint:
    path: /resources/plugins/color-picker/index.html
    method: GET
    data_selector: pluginOptions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ad_tag
  endpoint:
    path: /window/PowaSettings/advertising/adTag
    method: GET
    data_selector: adTag
- name: timeouts
  endpoint:
    path: /window/PowaSettings/advertising/timeouts
    method: GET
    data_selector: timeouts
- name: mediaTailor
  endpoint:
    path: /window/PowaSettings/advertising/mediaTailor
    method: GET
    data_selector: mediaTailor
- name: ad_bar
  endpoint:
    path: /window/PowaSettings/advertising/adBar
    method: GET
    data_selector: adBar
- name: adBar
  endpoint:
    path: /PoWaSettings/advertising/adBar
    method: GET
    data_selector: adBar
    params: {}
- name: player_events
  endpoint:
    path: /events/player
    method: GET
    data_selector: events
    params: {}
- name: ads_events
  endpoint:
    path: /events/ads
    method: GET
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: loop_video
  endpoint:
    path: /video-center/loop
    method: POST
    data_selector: loopEvent
    params: {}
- name: Content API
  endpoint:
    path: /api/public-content-retrieval/content-api/
    method: GET
    data_selector: records
    params: {}
- name: Video API
  endpoint:
    path: /api/public-content-retrieval/video-api-public/
    method: GET
    data_selector: records
    params: {}
- name: image_transformation
  endpoint:
    path: /services/data/v2/images/transform
    method: POST
    data_selector: results
- name: accent
  values:
    red: 52
    green: 235
    blue: 189
- name: background
  values:
    red: 0
    green: 0
    blue: 0
- name: primary
  values:
    red: 255
    green: 255
    blue: 255
- name: round_corners
  endpoint:
    path: /video-center/developer-docs/video-center-player-round-player-corners
    method: GET
    data_selector: default
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_ans
  endpoint:
    path: /import/ans
    method: POST
    data_selector: ANS
    params: {}
- name: canonical_url_update
  endpoint:
    path: /goldfish/video/v2/url/update
    method: POST
    data_selector: url_update
    params: {}
- name: Ad Bar
  endpoint:
    path: /video-center/developer-docs/advertising-and-the-video-center-player/
    method: GET
- name: video_files
  endpoint:
    path: /api/video/files
    method: GET
    data_selector: records
- name: playlist
  endpoint:
    path: /playlist
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: default_events
  endpoint:
    data_selector: events
    params: {}
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: author
  endpoint:
    path: /api/content-administration/author-api/
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/content-administration/contentops-api/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: address
    params: {}
- name: credits.by.name
  endpoint:
    path: /credits
    method: GET
    data_selector: credits.by.name
    params: {}
- name: planning.budget_line
  endpoint:
    path: /budget_line
    method: GET
    data_selector: planning.budget_line
    params: {}
- name: comments.allow_comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments.allow_comments
    params: {}
- name: copyright
  endpoint:
    path: /copyright
    method: GET
    data_selector: copyright
    params: {}
- name: corrections
  endpoint:
    path: /corrections
    method: GET
    data_selector: corrections
    params: {}
- name: created_date
  endpoint:
    path: /created_date
    method: GET
    data_selector: created_date
    params: {}
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: description
    params: {}
- name: display_date
  endpoint:
    path: /display_date
    method: GET
    data_selector: display_date
    params: {}
- name: distributor
  endpoint:
    path: /distributor
    method: GET
    data_selector: distributor
    params: {}
- name: editor_note
  endpoint:
    path: /editor_note
    method: GET
    data_selector: editor_note
    params: {}
- name: first_publish_date
  endpoint:
    path: /first_publish_date
    method: GET
    data_selector: first_publish_date
    params: {}
- name: label
  endpoint:
    path: /label
    method: GET
    data_selector: label
    params: {}
- name: language
  endpoint:
    path: /language
    method: GET
    data_selector: language
    params: {}
- name: last_updated_date
  endpoint:
    path: /last_updated_date
    method: GET
    data_selector: last_updated_date
    params: {}
- name: geo
  endpoint:
    path: /geo
    method: GET
    data_selector: geo
    params: {}
- name: location
  endpoint:
    path: /location
    method: GET
    data_selector: location
    params: {}
- name: planning.
  endpoint:
    path: /media_planning
    method: GET
    data_selector: planning.
    params: {}
- name: content_restrictions.content_code
  endpoint:
    path: /content_restrictions
    method: GET
    data_selector: content_restrictions.content_code
    params: {}
- name: planning.story_length.character_count_planned
  endpoint:
    path: /story_length
    method: GET
    data_selector: planning.story_length.character_count_planned
    params: {}
- name: planning.story_length.inch_count_planned
  endpoint:
    path: /story_length
    method: GET
    data_selector: planning.story_length.inch_count_planned
    params: {}
- name: planning.story_length.line_count_planned
  endpoint:
    path: /story_length
    method: GET
    data_selector: planning.story_length.line_count_planned
    params: {}
- name: planning.scheduling.planned_publish_date
  endpoint:
    path: /planned_publish_date
    method: GET
    data_selector: planning.scheduling.planned_publish_date
    params: {}
- name: planning.story_length.word_count_planned
  endpoint:
    path: /story_length
    method: GET
    data_selector: planning.story_length.word_count_planned
    params: {}
- name: taxonomy.primary_site
  endpoint:
    path: /primary_site
    method: GET
    data_selector: taxonomy.primary_site
    params: {}
- name: _id.additional_properties.publish_date
  endpoint:
    path: /publish_date
    method: GET
    data_selector: _id.additional_properties.publish_date
    params: {}
- name: additional_properties.language.code
  endpoint:
    path: /quote_language
    method: GET
    data_selector: additional_properties.language.code
    params: {}
- name: related_content.redirect
  endpoint:
    path: /redirect
    method: GET
    data_selector: related_content.redirect
    params: {}
- name: taxonomy.seo_keywords
  endpoint:
    path: /seo_keywords
    method: GET
    data_selector: taxonomy.seo_keywords
    params: {}
- name: slug
  endpoint:
    path: /slug
    method: GET
    data_selector: slug
    params: {}
- name: source.system
  endpoint:
    path: /source_system
    method: GET
    data_selector: source.system
    params: {}
- name: source.source_type
  endpoint:
    path: /source_type
    method: GET
    data_selector: source.source_type
    params: {}
- name: owner.sponsored
  endpoint:
    path: /sponsored_content
    method: GET
    data_selector: owner.sponsored
    params: {}
- name: taxonomy.stock_symbols
  endpoint:
    path: /stock_symbols
    method: GET
    data_selector: taxonomy.stock_symbols
    params: {}
- name: taxonomy.tags
  endpoint:
    path: /tags
    method: GET
    data_selector: taxonomy.tags
    params: {}
- name: subtype
  endpoint:
    path: /subtype
    method: GET
    data_selector: subtype
    params: {}
- name: syndication
  endpoint:
    path: /syndication
    method: GET
    data_selector: syndication
    params: {}
- name: website_url
  endpoint:
    path: /website_url
    method: GET
    data_selector: website_url
    params: {}
- name: headlines.basic
  endpoint:
    path: /working_headline
    method: GET
    data_selector: headlines.basic
    params: {}
- name: images
  endpoint:
    path: /v1/images
    method: POST
    data_selector: data
    params: {}
- name: photos
  endpoint:
    path: /photos
    method: POST
- name: collections
  endpoint:
    path: /api/websked/collections
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/websked/events
    method: GET
    data_selector: records
- name: story_publish
  endpoint:
    path: /websked/events/story_publish
    method: POST
    data_selector: payload
- name: story_deadline
  endpoint:
    path: /websked/events/story_deadline
    method: POST
    data_selector: payload
- name: task_create
  endpoint:
    path: /websked/events/task_create
    method: POST
    data_selector: payload
- name: task_assign
  endpoint:
    path: /websked/events/task_assign
    method: POST
    data_selector: payload
- name: task_claim
  endpoint:
    path: /websked/events/task_claim
    method: POST
    data_selector: payload
- name: task_deadline
  endpoint:
    path: /websked/events/task_deadline
    method: POST
    data_selector: payload
- name: task_complete
  endpoint:
    path: /websked/events/task_complete
    method: POST
    data_selector: payload
- name: pitch_create
  endpoint:
    path: /websked/events/pitch_create
    method: POST
    data_selector: payload
- name: publication_pitch_create
  endpoint:
    path: /websked/events/publication_pitch_create
    method: POST
    data_selector: payload
- name: edition_finalize
  endpoint:
    path: /websked/events/edition_finalize
    method: POST
    data_selector: payload
- name: publication_pitch_update
  endpoint:
    path: /websked/events/publication_pitch_update
    method: POST
    data_selector: payload
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync
  endpoint:
    path: /pagebuilder/datasync/sync
    method: POST
    data_selector: null
    params: {}
- name: cancel
  endpoint:
    path: /pagebuilder/datasync/cancel/{taskId}
    method: POST
    data_selector: null
    params: {}
- name: revert
  endpoint:
    path: /pagebuilder/datasync/revert/{taskId}
    method: POST
    data_selector: null
    params: {}
- name: list
  endpoint:
    path: /pagebuilder/datasync/list
    method: GET
    data_selector: null
    params: {}
- name: status
  endpoint:
    path: /pagebuilder/datasync/status/{taskId}
    method: GET
    data_selector: null
    params: {}
- name: logs
  endpoint:
    path: /pagebuilder/datasync/logs/{taskId}
    method: GET
    data_selector: null
    params: {}
- name: global_tokens
  endpoint:
    path: /themes/styles/global.json
    method: GET
    data_selector: tokens
- name: alias_tokens
  endpoint:
    path: /themes/styles/alias.json
    method: GET
    data_selector: tokens
- name: breakpoints
  endpoint:
    path: /themes/styles/breakpoints.json
    method: GET
    data_selector: breakpoints
- name: blocks_styles
  endpoint:
    path: /themes/styles/blocks.json
    method: GET
    data_selector: styles
- name: components_styles
  endpoint:
    path: /themes/styles/components.json
    method: GET
    data_selector: styles
- name: ads-block
  endpoint:
    path: /ads-block
    method: GET
    data_selector: blocks
    params: {}
- name: alert-bar-block
  endpoint:
    path: /alert-bar-block
    method: GET
    data_selector: blocks
    params: {}
- name: article-body-block
  endpoint:
    path: /article-body-block
    method: GET
    data_selector: blocks
    params: {}
- name: article-tag-block
  endpoint:
    path: /article-tag-block
    method: GET
    data_selector: blocks
    params: {}
- name: author-bio-block
  endpoint:
    path: /author-bio-block
    method: GET
    data_selector: blocks
    params: {}
- name: byline-block
  endpoint:
    path: /byline-block
    method: GET
    data_selector: blocks
    params: {}
- name: card-list-block
  endpoint:
    path: /card-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: category-carousel-block
  endpoint:
    path: /category-carousel-block
    method: GET
    data_selector: blocks
    params: {}
- name: date-block
  endpoint:
    path: /date-block
    method: GET
    data_selector: blocks
    params: {}
- name: divider-block
  endpoint:
    path: /divider-block
    method: GET
    data_selector: blocks
    params: {}
- name: double-chain-block
  endpoint:
    path: /double-chain-block
    method: GET
    data_selector: blocks
    params: {}
- name: extra-large-manual-promo-block
  endpoint:
    path: /extra-large-manual-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: extra-large-promo-block
  endpoint:
    path: /extra-large-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: footer-block
  endpoint:
    path: /footer-block
    method: GET
    data_selector: blocks
    params: {}
- name: full-author-bio-block
  endpoint:
    path: /full-author-bio-block
    method: GET
    data_selector: blocks
    params: {}
- name: gallery-block
  endpoint:
    path: /gallery-block
    method: GET
    data_selector: blocks
    params: {}
- name: header-block
  endpoint:
    path: /header-block
    method: GET
    data_selector: blocks
    params: {}
- name: hero-block
  endpoint:
    path: /hero-block
    method: GET
    data_selector: blocks
    params: {}
- name: large-manual-promo-block
  endpoint:
    path: /large-manual-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: large-promo-block
  endpoint:
    path: /large-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: lead-art-block
  endpoint:
    path: /lead-art-block
    method: GET
    data_selector: blocks
    params: {}
- name: links-bar-block
  endpoint:
    path: /links-bar-block
    method: GET
    data_selector: blocks
    params: {}
- name: masthead-block
  endpoint:
    path: /masthead-block
    method: GET
    data_selector: blocks
    params: {}
- name: medium-manual-promo-block
  endpoint:
    path: /medium-manual-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: medium-promo-block
  endpoint:
    path: /medium-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: numbered-list-block
  endpoint:
    path: /numbered-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: overline-block
  endpoint:
    path: /overline-block
    method: GET
    data_selector: blocks
    params: {}
- name: product-assortment-carousel-block
  endpoint:
    path: /product-assortment-carousel-block
    method: GET
    data_selector: blocks
    params: {}
- name: product-content-block
  endpoint:
    path: /product-content-block
    method: GET
    data_selector: blocks
    params: {}
- name: product-featured-image-block
  endpoint:
    path: /product-featured-image-block
    method: GET
    data_selector: blocks
    params: {}
- name: product-gallery-block
  endpoint:
    path: /product-gallery-block
    method: GET
    data_selector: blocks
    params: {}
- name: product-information-block
  endpoint:
    path: /product-information-block
    method: GET
    data_selector: blocks
    params: {}
- name: quad-chain-block
  endpoint:
    path: /quad-chain-block
    method: GET
    data_selector: blocks
    params: {}
- name: quilted-image-block
  endpoint:
    path: /quilted-image-block
    method: GET
    data_selector: blocks
    params: {}
- name: results-list-block
  endpoint:
    path: /results-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: search-results-list-block
  endpoint:
    path: /search-results-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: section-title-block
  endpoint:
    path: /section-title-block
    method: GET
    data_selector: blocks
    params: {}
- name: share-bar-block
  endpoint:
    path: /share-bar-block
    method: GET
    data_selector: blocks
    params: {}
- name: simple-list-block
  endpoint:
    path: /simple-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: single-chain-block
  endpoint:
    path: /single-chain-block
    method: GET
    data_selector: blocks
    params: {}
- name: small-manual-promo-block
  endpoint:
    path: /small-manual-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: small-promo-block
  endpoint:
    path: /small-promo-block
    method: GET
    data_selector: blocks
    params: {}
- name: story-carousel-block
  endpoint:
    path: /story-carousel-block
    method: GET
    data_selector: blocks
    params: {}
- name: subheadline-block
  endpoint:
    path: /subheadline-block
    method: GET
    data_selector: blocks
    params: {}
- name: tag-title-block
  endpoint:
    path: /tag-title-block
    method: GET
    data_selector: blocks
    params: {}
- name: top-table-list-block
  endpoint:
    path: /top-table-list-block
    method: GET
    data_selector: blocks
    params: {}
- name: triple-chain-block
  endpoint:
    path: /triple-chain-block
    method: GET
    data_selector: blocks
    params: {}
- name: video-player-block
  endpoint:
    path: /video-player-block
    method: GET
    data_selector: blocks
    params: {}
- name: story
  endpoint:
    path: /search/stories/by-id
    method: GET
- name: story_by_url
  endpoint:
    path: /search/stories/by-url
    method: GET
- name: recent_stories
  endpoint:
    path: /search/stories
    method: GET
- name: stories_by_section
  endpoint:
    path: /search/stories/by-section
    method: GET
- name: stories_by_tag
  endpoint:
    path: /search/stories/by-tag
    method: GET
- name: stories_by_author
  endpoint:
    path: /search/stories/by-author
    method: GET
- name: collection_by_id
  endpoint:
    path: /search/collections/by-id
    method: GET
- name: collection_by_alias
  endpoint:
    path: /search/collections/by-alias
    method: GET
- name: website_by_id
  endpoint:
    path: /search/websites/by-id
    method: GET
- name: websites
  endpoint:
    path: /search/websites
    method: GET
- name: section_by_id
  endpoint:
    path: /search/sections/by-id
    method: GET
- name: sections
  endpoint:
    path: /search/sections
    method: GET
- name: navigation_by_id
  endpoint:
    path: /search/navigation/by-id
    method: GET
- name: authors
  endpoint:
    path: /search/authors
    method: GET
- name: author_by_id
  endpoint:
    path: /search/authors/by-id
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: cookies
    params: {}
- name: Local Storage
  endpoint:
    path: /local-storage
    method: GET
    data_selector: local_storage
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: tests
  endpoint:
    path: /tests
    method: GET
    data_selector: tests
- name: test_winners
  endpoint:
    path: /test_winners
    method: GET
    data_selector: winners
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event_response
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- Ensure to follow the API rate limits to avoid throttling.
- Check the documentation for specific endpoint settings.
- Phased migration from Resizer v1 to v2
- Arc XP leverages Okta authentication for enhanced security.
- Access to an Arc XP organization provides you with services and tools to perform
  web content-generating activities.
- PageBuilder does not cache any rendered content whether it’s HTML, XML, JSON or
  any output you may render from your content sources.
- Traffic for alternate origin content is metered and counts toward usage-based billing.
- The CDN layer shields your render stack from malicious actors who may attempt to
  overwhelm the system.
- Cloud Wrapper handles errors with resiliency logic.
- CDN may route requests to different nodes with slightly different cache expiration
  times.
- Uses OAuth2 with refresh token — requires setup of connected app in photo-center
- Some transformations may have limitations on input size
- Only the article detail page and its global content are cache-cleared and refreshed.
- Currently, only Composer stories trigger automated cache clearing.
- Micro Experiences is currently generally available to all customers in all environments.
- Micro Experiences is free, opt-in feature, available to customers with PageBuilder
  license.
- Micro Experiences is free, opt-in feature, available to customers who currently
  use PageBuilder.
- Customers can have up to five Micro Experiences including the default one.
- All MX names will be prefixed with 'PB' (e.g., PB-Sports) in Arc Home.
- New MX will be provisioned in all environments by default.
- New Micro Experiences added later will be prefixed with PB.
- Audience targeting is only available on the default MX.
- Bandito, Arc XP’s A/B testing tool, is currently limited to the default MX.
- Your shared components needs to not import and depend on PageBuilder Engine exported
  methods like `fusion:content`, `fusion:context`, `fusion:environment`, `fusion:properties`.
  Importing them may cause circular dependency issues in the build process.
- There are minimal changes you need to do in your bundle to make it MX-compatible.
- Response header 'x-arc-pb-mx-id' indicates which Micro Experience rendered the page.
- Resizer v2 error codes
- Resizer v2 Known Issues
- MX Management API responses are cached for 5 minutes.
- Expected time to see updates depends on if the URL was rendered by a page, or a
  template.
- When you render a page in PageBuilder Preview mode, links may not carry website
  and mxId parameters when you click the links in the page. So you can’t smoothly
  navigate between pages.
- Access tokens do not expire.
- Do not generate tokens on behalf of other users.
- This API is subject to rate limits.
- 'Inbound Rate-Limit: 800 requests per minute shared for read/write'
- Contact Arc XP Customer Support to get the value for any application besides `resizer`.
- Refer to the documentation for signing_key_version.
- Hostnames are different between Public & Developer APIs.
- Ensure you have the correct permissions set for API access.
- The CLI will default to ~/.env and fallback to values in ~/.arcxp-cli/.env.
- Requires OAuth2 authentication for access
- Requires setup of connected app in api
- It is recommended to create separate integrations based on their type and purpose.
- Synchronous and asynchronous handlers should not be mixed.
- Uses OAuth2 with refresh token — requires setup of connected app in Resizer
- Some operations may return nulls in deeply nested fields
- Phased migration from Resizer v1 to v2 may affect existing integrations.
- Both schemas and content filtering are optional in PageBuilder Engine.
- GraphQL schemas will not be used to verify the structure of the JSON coming back
  from your requests.
- best_variant is always the leading variant but only the convergence_winner property
  indicates whether a test has converged or not
- Serve stale is enabled by default and can be configured within your content sources
  by defining the serveStaleCache attribute.
- Backoff is enabled by default and can be configured within your content sources
  by configuring the backoff attribute.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Encrypted values are only decrypted in the production environment and are provided
  as-is in local development.
- Only the portion between the curly brackets is replaced.
- If the reference syntax has non-visible characters between the curly brackets, it
  will be treated as regular text and will not be replaced.
- By default, PageBuilder Engine renders your features with isomorphic rendering method.
- Uses access tokens for authentication — requires setup of access tokens for deployments.
- Access tokens are scoped to specific environments and cannot be used across environments.
- Page rendering needs to be completed within 10 seconds.
- Engine lambda calls need to be finished within 60 seconds.
- Production requests should be under 8,000 characters total.
- Defaults to true. Changing this to false will prevent all logging of metrics.
- Changing this to add override thresholds will cause the subject metric to be logged
  only when its value equals or exceeds the given threshold.
- Content sources are the gateway where you work with potentially private data sources.
- Never trust the objects you work with in Javascript.
- Rehydration rendering is the default in PageBuilder Engine
- Rendering server-side only can affect styling due to additional wrapping div
- Rendering client-side only could affect SEO adversely
- Site Properties are site-specific values that may be accessed anywhere in your bundle.
- Each site in your multi-site application can have its own file in the /properties/sites/
  directory that specifies properties for that site alone.
- When using `stats.json` to check the size of the final bundle, you may not see the
  same improvements locally.
- If you want to simulate a production bundle locally, you can set `MINIFY=true` in
  your `.env` file. Keep in mind that your startup and rebuild times will be slower
  if you do this.
- Service worker scripts kept in the resources directory of your PageBuilder Engine
  feature pack are automatically stored and served directly from S3.
- As of the time of writing this special routing has only been created for files ending
  in .js without an outputType query param.
- Docker helps to simulate this environment very close to how client sites run on
  Arc XP in order to give client developers a near-production development environment.
- All non-Production have much lower and fixed or static concurrency capacities.
- This error is less likely to occur in server-side renders because a server-side
  render is always single-render execution.
- In non-Production environments, because your requests are not cached, all content
  sources make an API call to Content API or your external APIs, causing high volume
  or spikes to the APIs, which may exceed rate limits.
- The PageBuilder package pulls Engine logs for a specific request ID.
- For deeper analysis, you can forward logs to your own AWS instance.
- Logs should be requested within 15 minutes of the request ID being generated.
- Uses OAuth2 with refresh token — requires setup of connected app in Resizer API
- Modules can be used in any code in your Feature Pack that gets bundled by Webpack.
- SPA support is an opt-in feature that is enabled by two triggers located inside
  your site’s Feature Pack.
- Persistent elements can remain on the page between SPA-navigation events and preserve
  their state.
- Because the encryption key is on per-client, per-region basis, as long as your environments
  all operate within the same region, you will be able to keep one encryption for
  all of the environments.
- If the encrypted key is wrong, it will fail the rest of the build process, potentially
  causing incomplete build to be deployed. Make sure to double check the keys!
- Up until Engine 3.0 version, themes and OBF bundles used to require .npmrc-encrypted
  to be able to install Arc Blocks. After 3.0 this is deprecated and Engine start
  to handle this automatically at build time.
- If a token has been exposed previously, you should create a new token and add only
  the new encrypted token to the repository or your CI/CD platform. Encrypting an
  already exposed token does not remove the risk.
- Text direction, text flow, and logical properties are supported on Arc Blocks.
- Vertical language handling is not yet fully supported on all blocks.
- Overrides can be added in the feature's directory.
- Mock resources are not available in Production.
- Local environment is disconnected from Arc XP’s permissions system.
- site-c has the value of site-a, values do not have to be unique for a given site.
- PageBuilder Engine uses /homepage path to respond to your site’s default landing
  page /.
- Ensure to use the correct API version in the endpoint paths.
- Feature components, unlike other components, are stored in directories based on
  their 'group'.
- If you provide a label in a format that maps i18n locale codes to translations,
  the Feature will automatically be translated.
- Special environment variables such as CONTENT_BASE and ARC_ACCESS_TOKEN will be
  set automatically for all deployments in the PageBuilder Deployer.
- We can make our content fetching dynamic with configurable content sources.
- Utilizes Cypress for testing
- Requires a local server setup for testing
- Arc XP handles redirects if the content page is configured with Resolver + Template
  combination, that uses a global content source.
- Arc XP does NOT handle redirects if your content source is a custom content source
  and using fetch() method.
- Must implement redirect handling in fetch method.
- Request tracing is off by default in production environments.
- Request tracing is an opt in feature.
- Requires a Thumbor resizer key for secure image resizing.
- Engine content sources are public by default. Anyone can call them.
- This method of generating an HTML fragment to be included elsewhere won’t support
  components that need client-side rendering or interactivity.
- You should not render anything that could mutate the DOM in your server-side render.
  This includes iframes and scripts.
- Partial cache is an opt-in feature and you’ll have to make some changes in order
  to use it.
- Each additional call has a time cost, even if it is just calling the cache proxy
  and checking the expiration.
- At this time, PageBuilder Engine supports only a provided configuration in your
  bundle’s `package.json` file. The `.browserslistrc` files are not supported at this
  time.
- The parallel property toggles the behavior of webpack running in a single node process
  with an Array of configs versus spawning a pool of Node processes to run the webpack
  configurations in parallel.
- If not present, the default value is false, which is the existing behavior.
- If source maps are not important to your web development workflow, setting the devtool
  option to eval is the recommended choice for development builds with maximum performance.
- Requires setup of connected app in API
- May have limitations with certain image formats
- Uses shell scripts to analyze data from PageBuilder
- Using the `d` (or `v`) parameter is currently working, but it will be refactored
  with upcoming enhancements to Engine and is planned to be re-architected.
- With the upcoming deprecation of the Theme Settings application, all organizations
  should complete deployments using the PageBuilder deployer.
- Smoke tests are lightweight, high-level validations that confirm your application
  is functioning end-to-end after a deployment.
- Automated smoke tests that follow real traffic patterns give you higher confidence.
- The AWS region for the destination account must match the Arc XP Platform deployment
  region.
- CloudWatch Logs destinations require an access policy that allows the log sender
  account to forward logs.
- Resolver logs are not useful because it’s an Arc-hosted process and it won’t populate
  debugging information in its logs.
- Engine logs are essentially very raw application output that is no different than
  what you see in your command line when you run Engine locally.
- Developers should always be aware that the content source or your feature code will
  behave according to the inputs from the Editor configuration.
- The best way to ensure the integrity of your content sources or features is to write
  tests and cover as many possible scenarios for your code as you can.
- fusion-cli prints a build-complete message when it’s done and ready to use
- When Engine builds clients bundles, it does multiple step compilation
- PageBuilder Engine will automatically look for pages at the path /error/{statusCode}
  and if found will serve these in place of the default error message.
- Uses dynamic import for code splitting to optimize load time.
- This capability does not change the client-side bundle that gets downloaded and
  used by the browser at render time.
- AWS enforces a 250 MB lambda code size limit.
- Bundles that require larger and more complex dependencies may hit these limits sooner
  than expected.
- Deployer only installs production dependencies.
- A pre-requisite for this GitHub action is to zip your bundle package as .zip file.
- Arc is heavily reliant on caching to improve performance.
- Arc XP is specifically designed to be most performant in production environments
  only.
- Slower responses in staging or local environments are expected behavior.
- Script will deploy to sandbox by default unless the --production flag is given.
- Clients who are not upgrading to 4.0 and have not pinned the FUSION_RELEASE environment
  variable, Engine will automatically try the LATEST version of docker image which
  may result in errors when running Engine locally.
- Starting with Engine 4.0, environment variables in .env will be reserved for Arc
  system environment variables.
- No changes in Arc XP functionality – Your code does not require changes in how you
  use and interact with PageBuilder Engine interfaces on React and Node.js.
- Potential dependency issues – As with any major runtime upgrade, third-party npm
  packages may require updates or introduce breaking changes.
- When you add a feature or chain to a page or template, you cannot change the path.
  If you do change the path, all instances of that feature or chain in a page or template
  throw an error and all configuration is lost.
- The sections property is required
- PageBuilder Engine requires that your output type to contain an element in the body
  that has an ID value of `fusion-app`.
- SPA rendering works only when navigating between pages of the same output type
- The `pluginOptions` object can be used to set the height and width of the plugin
  window.
- The usage of Static components with hydrateOnly is not supported and won’t work
  because React’s hydrate is effectively trading a larger JavaScript bundle for faster
  render and interactivity.
- Arc Blocks provides a set of reusable page templates, UI components, and content
  blocks that come out-of-the-box with your Arc XP bundle.
- When building and deploying a bundle, PageBuilder Engine validates the following
  requirements before making Arc Blocks available on your website.
- This guide enables you to update your mocks/siteservice/api/v3/website file, environment/index.json
  file, and the resizerURL in your blocks.json file.
- When you have reached the maximum number of deployments (10) allowed in your current
  environment, further deployments through Themes Settings or PageBuilder Deployer
  will fail.
- Terminate bundles that are no longer needed.
- Defining the ad tag function at window.PoWaSettings.advertising.adTag works for
  development, but you must provide the adTag to the Video Center Player team for
  them to include in the organization’s <org>.js configuration file.
- Mobile Safari may disallow the ad from playing if the async function takes too long
  to resolve. Approximately one second seems to be the threshold.
- You can enable looping by setting data-loop or data-loop-with-controls to true.
- Some objects like Video may return nulls in deeply nested fields
- Some transformations may not support all image formats.
- Default background color is black
- Custom background color can be white
- The default captions style can be set in the <org>.js configuration file.
- End-user can customize the display of their own browsers’ captions to meet with
  FCC regulations.
- If you would rather employ the browser’s native scrubber it can be re-enabled via
  one of two ways.
- 'The default for all players can be updated via PoWaSettings.scrubber.controls (default:
  ''powa'').'
- If something else on the host page is interfering with the player, use powaEmbed.html.
- Player settings are referenced via window.PoWaSettings.
- Remove the streams key from the ANS when making updates other than creating a new
  video version.
- Existing imported video is not affected when sending updates without the streams
  key.
- To enable the Ad Bar, configure it via PoWaSettings.
- Arc XP charges for the video files that require re-encoding onto Video Center (including
  mezzanine-only imports).
- Progressive MP4s and HLS MPEG-2 do not require re-encoding, and Arc XP does not
  charge for these specific file types.
- Discovery makes a request against the ‘playlist’ API endpoint using the value of
  `data-playlist="{Playlist Name}"` to retrieve Video Center playlists.
- Create a support ticket to enable the plugin.
- Provide your Google Analytics ID and a summary on how you plan to use the plugin.
- The Share module provides options to share to Facebook, Twitter, or via email.
- Basic customization options exist.
- Change the ‘Close’ text and sticking to the top of the viewport isn’t good enough?
- Currently the only environment supporting modifications for the Tizen platform is
  tizen.
- Running PageBuilder Locally without Arc XP Credentials is available for anyone.
- The PageBuilder Engine homepage is empty because you have not created any pages.
- Required to publish
- Requires OAuth2 setup within the Arc XP platform
- Uses OAuth2 — requires Bearer token in Authorization header
- Ensure OAuth2 setup is completed to access data.
- PageBuilder data syncs can occur only from Production and lower environments to
  a non-Production environment.
- An environment can have only one copy queued at a time.
- Styles will not be complied during a Theme Settings or PageBuilder deployment —
  they must be complied locally first.
- If a visitor opts-out from Boomerang through Cookie Consent popup, Boomerang will
  be disabled and the Boomerang cookies will be deleted.
- If a visitor opts-in to Boomerang, performance data will be sent after the consent
  is given.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '429 rate limit: Downstream API error'
- '4xx or 5xx response: Render failure handling'
- '500 application errors: No valid cache object available'
- 'INVALID_IMAGE_FORMAT: Check the image format'
- 'AUTHENTICATION_FAILED: Verify your OAuth credentials'
- '401 Unauthorized: Check token validity and permissions.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Ensure the endpoint path is correct'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- '429: PageBuilder Engine will attempt to serve stale.'
- 'ReservedFunctionConcurrentInvocationLimitExceeded: Rate Exceeded.'
- 429 rate limit error
- 'API Error (400): Bad Request: Ensure you have provided a valid request ID'
- 'No logs found for request_id: {request_id}: Refresh your browser and copy the latest
  request ID'
- '403 Forbidden: Check if your API token has the necessary permissions.'
- '404 Not Found: Verify the endpoint path is correct.'
- Not found. Are you sure you've used the right URL?
- Unhandled HTTP status
- API fetch error
- If a code split component fails to render client-side, the component will continue
  to show the server-side rendered HTML.
- 'INVALID_IMAGE_FORMAT: Check the format of the uploaded image'
- 'AUTHENTICATION_FAILED: Verify credentials and permissions'
- 'Access Denied Errors: Check the CloudWatch destination policy and IAM role permissions.'
- 'arc.fusion.content.fetch.error: Content source failed to execute and responses
  a failure response.'
- 'arc.fusion.render.error: Indicates a page render failed because of an exception.'
- '404: Not Found'
- '500: Internal Server Error'
- 'EmptyPropTypeException: Usually, this comes from having an empty object specified
  as a propType to a custom field.'
- 'CustomFieldsPropTypeException: This will likely be from having caught the above
  `EmptyPropTypeException` error.'
- 'EmptySectionsException: sections property is required'
- '{"errorType":"string","errorMessage":"{}","trace":[]}'
- 'INVALID_IMAGE_FORMAT: Check the supported formats for the transformation.'
- 'TRANSFORMATION_FAILED: Verify the parameters provided for the transformation.'
- '401 Unauthorized: Check your access token'
- '403 Forbidden: Ensure you have the right permissions'
- '401 Unauthorized: Check your authentication details.'
- '404 Not Found: Verify endpoint path.'
- 'PageBuilder data sync limit exceeded: If a copy-state is either PENDING or IN PROGRESS.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Okta
  - developer tokens
client:
  base_url: https://api.arcxp.com
  auth:
    type: apikey
source_metadata: null
