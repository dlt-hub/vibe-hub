resources:
- name: export
  endpoint:
    path: /dqr/export
    method: PUT
- name: import
  endpoint:
    path: /dqr/import
    method: POST
- name: import_history
  endpoint:
    path: /dqr/import/history
    method: GET
- name: import_history_count
  endpoint:
    path: /dqr/import/history/count
    method: GET
- name: import_history_by_id
  endpoint:
    path: /dqr/import/history/{id}
    method: GET
- name: import_queue
  endpoint:
    path: /dqr/import/queue
    method: GET
- name: import_queue_post
  endpoint:
    path: /dqr/import/queue
    method: POST
- name: import_queue_count
  endpoint:
    path: /dqr/import/queue/count
    method: GET
- name: import_queue_by_id
  endpoint:
    path: /dqr/import/queue/{id}
    method: GET
- name: delete_import_queue_by_id
  endpoint:
    path: /dqr/import/queue/{id}
    method: DELETE
- name: query_batch
  endpoint:
    path: /dqr/query/batch
    method: POST
- name: query_patients
  endpoint:
    path: /dqr/query/patients
    method: POST
- name: query_series
  endpoint:
    path: /dqr/query/series
    method: POST
- name: query_studies
  endpoint:
    path: /dqr/query/studies
    method: POST
- name: settings
  endpoint:
    path: /dqr/settings
    method: GET
- name: settings_post
  endpoint:
    path: /dqr/settings
    method: POST
- name: project_settings
  endpoint:
    path: /dqr/settings/project
    method: GET
- name: create_dqr_configuration
  endpoint:
    path: /dqr/settings/project
    method: POST
- name: project_settings_by_id
  endpoint:
    path: /dqr/settings/project/{projectId}
    method: GET
- name: update_project_settings_by_id
  endpoint:
    path: /dqr/settings/project/{projectId}
    method: PUT
- name: delete_project_settings_by_id
  endpoint:
    path: /dqr/settings/project/{projectId}
    method: DELETE
- name: project_enabled
  endpoint:
    path: /dqr/settings/project/{projectId}/enabled
    method: GET
- name: pacs
  endpoint:
    path: /pacs
    method: GET
- name: create_pacs
  endpoint:
    path: /pacs
    method: POST
- name: pacs_by_id
  endpoint:
    path: /pacs/{pacsId}
    method: GET
- name: update_pacs_by_id
  endpoint:
    path: /pacs/{pacsId}
    method: PUT
- name: delete_pacs_by_id
  endpoint:
    path: /pacs/{pacsId}
    method: DELETE
- name: pacs_availability
  endpoint:
    path: /pacs/{pacsId}/availability
    method: GET
- name: create_pacs_availability
  endpoint:
    path: /pacs/{pacsId}/availability
    method: POST
- name: validate_pacs_availability
  endpoint:
    path: /pacs/{pacsId}/availability/validate
    method: POST
- name: pacs_availability_by_id
  endpoint:
    path: /pacs/{pacsId}/availability/{availabilityId}
    method: GET
- name: update_pacs_availability_by_id
  endpoint:
    path: /pacs/{pacsId}/availability/{availabilityId}
    method: PUT
- name: delete_pacs_availability_by_id
  endpoint:
    path: /pacs/{pacsId}/availability/{availabilityId}
    method: DELETE
- name: pacs_status
  endpoint:
    path: /pacs/{pacsId}/status
    method: GET
- name: pacs_status_all
  endpoint:
    path: /pacs/{pacsId}/status/all
    method: GET
- name: pacs_status_last
  endpoint:
    path: /pacs/{pacsId}/status/last
    method: GET
- name: project_customizations
  endpoint:
    path: /data/projects/<PROJECT_ID>/config/applet/require-date
    method: PUT
    data_selector: settings
    params: {}
- name: allow_create_subject
  endpoint:
    path: /data/projects/<PROJECT_ID>/config/applet/allow-create-subject
    method: PUT
    data_selector: settings
    params: {}
- name: allow_bulk_upload
  endpoint:
    path: /data/projects/<PROJECT_ID>/config/applet/allow-bulk-upload
    method: PUT
    data_selector: settings
    params: {}
- name: default_subject_labeling_scheme
  endpoint:
    path: /data/projects/<PROJECT_ID>/config/applet/default-subject-labeling-scheme
    method: PUT
    data_selector: settings
    params: {}
- name: default_session_labeling_scheme
  endpoint:
    path: /data/projects/<PROJECT_ID>/config/applet/default-session-labeling-scheme
    method: PUT
    data_selector: settings
    params: {}
- name: subject_labeling_schemes
  endpoint:
    path: /xnat-tools/subject-and-session-labeling-schemes-for-uploads
    method: GET
    data_selector: labeling_schemes
    params: {}
- name: session_labeling_schemes
  endpoint:
    path: /xnat-tools/subject-and-session-labeling-schemes-for-uploads
    method: GET
    data_selector: labeling_schemes
    params: {}
- name: upload_image_sessions
  endpoint:
    path: /upload/image/sessions
    method: POST
    data_selector: scan_data
    params: {}
- name: image_sessions
  endpoint:
    path: /services/data/v1/image_sessions
    method: GET
    data_selector: records
- name: search_pacs
  endpoint:
    path: /xnat-tools/using-dqr-searching-the-pacs-and-importing-data
    method: GET
    data_selector: records
    params: {}
- name: bulk_query_import
  endpoint:
    path: /xnat-tools/using-dqr-bulk-querying-and-importing-via-csv-file
    method: GET
    data_selector: records
    params: {}
- name: export_to_pacs
  endpoint:
    path: /xnat-tools/using-dqr-exporting-data-to-pacs
    method: GET
    data_selector: records
    params: {}
- name: query_history
  endpoint:
    path: /xnat-tools/using-dqr-checking-your-query-history
    method: GET
    data_selector: records
    params: {}
- name: query_history
  endpoint:
    path: /dqr/query/history
    method: GET
    data_selector: records
- name: PACS Configuration
  endpoint:
    path: /admin/plugin-settings/dicom-query-retrieve/dqr-settings
    method: POST
    data_selector: configuration
    params: {}
- name: pacs_connection
  endpoint:
    path: /manage_connected_pacs
    method: POST
    data_selector: connection_details
    params: {}
- name: availability_schedule
  endpoint:
    path: /dqr/admin/schedule
    method: GET
    data_selector: schedule
- name: PACS Connection
  endpoint:
    path: /xnat-tools/dqr-admin-connecting-xnat-with-a-pacs-for-dqr-usag
    method: GET
    data_selector: settings
    params: {}
- name: SCP Receiver Configuration
  endpoint:
    path: /xnat-tools/dqr-admin-assigning-a-dqr-enabled-scp-receiver
    method: GET
    data_selector: settings
    params: {}
- name: DICOM SCP Receiver
  endpoint:
    path: /dqr/scp_receiver
    method: POST
    data_selector: receiver
    params: {}
- name: csv_import
  endpoint:
    path: /import/csv
    method: POST
    data_selector: response
    params: {}
- name: PACS Query
  endpoint:
    path: /services/dqr/query
    method: POST
    data_selector: results
    params: {}
- name: PACS Import
  endpoint:
    path: /services/dqr/import
    method: POST
    data_selector: importStatus
    params: {}
- name: import_queue
  endpoint:
    path: /upload/import_queue
    method: GET
    data_selector: items
    params: {}
- name: import_history
  endpoint:
    path: /upload/import_history
    method: GET
    data_selector: history
    params: {}
- name: alterPixels
  endpoint:
    path: /alterPixels
    method: POST
    data_selector: None
- name: blankValues
  endpoint:
    path: /blankValues
    method: POST
    data_selector: None
- name: collectValues
  endpoint:
    path: /collectValues
    method: POST
    data_selector: None
- name: concatenate
  endpoint:
    path: /concatenate
    method: POST
    data_selector: None
- name: delete
  endpoint:
    path: /delete
    method: POST
    data_selector: None
- name: format
  endpoint:
    path: /format
    method: POST
    data_selector: None
- name: getURL
  endpoint:
    path: /getURL
    method: POST
    data_selector: None
- name: hashUID
  endpoint:
    path: /hashUID
    method: POST
    data_selector: None
- name: hashUIDList
  endpoint:
    path: /hashUIDList
    method: POST
    data_selector: None
- name: ismatch
  endpoint:
    path: /ismatch
    method: POST
    data_selector: None
- name: isPresent
  endpoint:
    path: /isPresent
    method: POST
    data_selector: None
- name: lookup
  endpoint:
    path: /lookup
    method: POST
    data_selector: None
- name: lowercase
  endpoint:
    path: /lowercase
    method: POST
    data_selector: None
- name: mapReferencedUIDs
  endpoint:
    path: /mapReferencedUIDs
    method: POST
    data_selector: None
- name: match
  endpoint:
    path: /match
    method: POST
    data_selector: None
- name: newUID
  endpoint:
    path: /newUID
    method: POST
    data_selector: None
- name: normalizeString
  endpoint:
    path: /normalizeString
    method: POST
    data_selector: None
- name: reject
  endpoint:
    path: /reject
    method: POST
    data_selector: None
- name: removeTags
  endpoint:
    path: /removeTags
    method: POST
    data_selector: None
- name: replace
  endpoint:
    path: /replace
    method: POST
    data_selector: None
- name: retainPrivateTags
  endpoint:
    path: /retainPrivateTags
    method: POST
    data_selector: None
- name: scalePatientAgeAndDobFromStudyDate
  endpoint:
    path: /scalePatientAgeAndDobFromStudyDate
    method: POST
    data_selector: None
- name: set
  endpoint:
    path: /set
    method: POST
    data_selector: None
- name: shiftDateByIncrement
  endpoint:
    path: /shiftDateByIncrement
    method: POST
    data_selector: None
- name: shiftDateTimeByIncrement
  endpoint:
    path: /shiftDateTimeByIncrement
    method: POST
    data_selector: None
- name: shiftDateTimeSequenceByIncrement
  endpoint:
    path: /shiftDateTimeSequenceByIncrement
    method: POST
    data_selector: None
- name: shiftDateTimeListByIncrement
  endpoint:
    path: /shiftDateTimeListByIncrement
    method: POST
    data_selector: None
- name: substring
  endpoint:
    path: /substring
    method: POST
    data_selector: None
- name: uppercase
  endpoint:
    path: /uppercase
    method: POST
    data_selector: None
- name: remapping_config
  endpoint:
    path: /remap-config
    method: POST
    data_selector: configuration
- name: dicom_summarize
  endpoint:
    path: /dicom-summarize
    method: POST
    data_selector: summary
- name: dicom_remap
  endpoint:
    path: /dicom-remap
    method: POST
    data_selector: remapped_files
- name: DICOM files
  endpoint:
    path: /dicom/files
    method: GET
    data_selector: files
    params: {}
- name: workflow_monitor
  endpoint:
    path: /workflows
    method: POST
- name: kill_active_workflows
  endpoint:
    path: /workflows/{containerName}/killactive
    method: POST
- name: get_workflow
  endpoint:
    path: /workflows/{wfid}
    method: GET
- name: get_build_dir
  endpoint:
    path: /workflows/{wfid}/build_dir
    method: GET
- name: get_build_dir_contd
  endpoint:
    path: /workflows/{wfid}/build_dir_contd
    method: GET
- name: get_file
  endpoint:
    path: /workflows/{wfid}/get_file
    method: GET
- name: get_zip
  endpoint:
    path: /workflows/{wfid}/get_zip
    method: POST
- name: kill_process
  endpoint:
    path: /workflows/{workflowId}/kill
    method: POST
- name: get_container_id
  endpoint:
    path: /workflows/{workflowid}/container
    method: GET
- name: get_logs
  endpoint:
    path: /workflows/{workflowid}/logs/{file}
    method: GET
- name: workflow
  endpoint:
    path: /xnat/tools/batch-launch/workflows
    method: GET
    data_selector: processes
- name: version_compatibility
  endpoint:
    path: /batch-launch-plugin/version-compatibility
    method: GET
    data_selector: data
    params: {}
- name: processing_dashboard
  endpoint:
    path: /processing/dashboard
    method: GET
    data_selector: jobs
    params: {}
- name: version_compatibility_matrix
  endpoint:
    path: /openid-authentication-plugin
    method: GET
    data_selector: matrix
- name: FaceMasking
  endpoint:
    path: /xnat/tools/face-masking
    method: POST
    data_selector: mask_face
    params: {}
- name: ec2-server
  endpoint:
    path: Host ec2-server
    method: GET
    data_selector: HostName
    params:
      User: ec2-user
      IdentityFile: ~/.ssh/ec2-server.pem
- name: DICOM Transfer
  endpoint:
    path: /jaat/dicom/transfer
    method: POST
    data_selector: transferResults
- name: Anonymization Configuration
  endpoint:
    path: /jaat/anonymization/configure
    method: POST
    data_selector: configResults
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: required_properties
  endpoint:
    path: /required_properties
    method: GET
    data_selector: records
    params: {}
- name: optional_properties
  endpoint:
    path: /optional_properties
    method: GET
    data_selector: records
    params: {}
- name: test_structure
  endpoint:
    path: /xnat-tools/test-structure
    method: GET
    data_selector: records
- folder: DATA
  secondaryResources: QC_files
  complexFiles:
  - name: generated_values.txt
    comparator: text_equals
    mutator: timestamp
    expectedText: 44.4 | 55.5 | 99.9 | DATE
  - name: snapshot.png
    comparator: images_equal
    compareTo: original_snapshot.png
  - name: generated.nii.gz
    comparator: images_equal
    mutator: ungzip
  files:
  - otherdata1.txt
  - otherdata2.txt
- folder: LOG
  files:
  - logfile.log
- name: ElementComparator
  endpoint:
    path: /advanced-usage/element-comparators
    method: GET
    data_selector: comparators
    params: {}
- name: jira_tests
  endpoint:
    path: /rest/api/latest/issue
    method: POST
    data_selector: issues
    params: {}
- name: protocol
  endpoint:
    path: /tools/manage_protocols/start_new_protocol
    method: POST
    data_selector: protocols
    params: {}
- name: visit
  endpoint:
    path: /add_your_first_visit
    method: POST
    data_selector: visits
    params: {}
- name: protocols
  endpoint:
    path: /data/projects/{PROJECT_ID}/visit/report
    method: GET
- name: repository
  endpoint:
    path: /xnat-tools/xnat-desktop
    method: GET
    data_selector: records
    params: {}
- name: Automatic tag assignment
  endpoint:
    path: /automatic/tag/assignment
    method: GET
    data_selector: tags
    params: {}
- name: File collections
  endpoint:
    path: /file/collections
    method: GET
    data_selector: collections
    params: {}
- name: Using advanced data views
  endpoint:
    path: /advanced/data/views
    method: GET
    data_selector: views
    params: {}
- name: Exchanging Files Between xnd Installations
  endpoint:
    path: /exchanging/files
    method: GET
    data_selector: exchange
    params: {}
- name: Uploading data to XNAT
  endpoint:
    path: /uploading/data
    method: POST
    data_selector: upload
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: items
- name: remote_dicom_device
  endpoint:
    path: /Dicom.RemoteAEs
    method: GET
    data_selector: Dicom.RemoteAEs
    params: {}
- name: xnat_server
  endpoint:
    path: /XNATServers
    method: GET
    data_selector: XNATServers
    params: {}
- name: OsiriX Listener
  endpoint:
    path: /xnat-tools/xnat-gateway-server-user-manual
    method: GET
    data_selector: listener_configuration
    params: {}
- name: OsiriX Locations
  endpoint:
    path: /xnat-tools/xnat-dicom-gateway
    method: GET
    data_selector: locations_configuration
    params: {}
- name: DICOM Query/Retrieve
  endpoint:
    path: /xnat-tools/xnat-dicom-gateway
    method: GET
    data_selector: query_retrieve
    params: {}
- name: pipelines
  endpoint:
    path: /app/action/ManagePipelines
    method: POST
    data_selector: pipelines
    params: {}
- name: anon
  endpoint:
    path: /anon
    method: POST
    data_selector: anon
    params: {}
- name: dataTypes
  endpoint:
    path: /dataTypes
    method: POST
    data_selector: dataTypes
    params: {}
- name: searches
  endpoint:
    path: /searches
    method: POST
    data_selector: searches
    params: {}
- name: images
  endpoint:
    path: /images
    method: POST
    data_selector: images
    params: {}
- name: test_control
  endpoint:
    path: /test/control
    method: GET
    data_selector: annotations
    params: {}
- name: investigators
  endpoint:
    path: investigators
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: MFA Configuration
  endpoint:
    path: /xapi/mfa/configure
    method: POST
    params:
      requireAdminMfa: '[true/false]'
      requireMfa: '[true/false]'
- name: Preferred MFA Method
  endpoint:
    path: /xapi/mfa/preferred/{mfaMethod}
    method: POST
- name: Email Backup MFA
  endpoint:
    path: /xapi/mfa/emailbackup
    method: POST
    params:
      emailbackup: '[TRUE/FALSE]'
      mfaAdminEmailNotification: '[TRUE/FALSE]'
- name: MFA User Management
  endpoint:
    path: /xapi/mfa/exempt/{username}/[true/false]
    method: POST
- name: Reset MFA Method
  endpoint:
    path: /xapi/mfa/{username}/unregister
    method: POST
- name: XNAT Desktop Client
  endpoint:
    path: /xnat-tools/xnat-desktop-client-dxm
    method: GET
- name: DicomEdit
  endpoint:
    path: /xnat-tools/dicomedit
    method: GET
- name: Face_Masking
  endpoint:
    path: /xnat-tools/face-masking
    method: GET
- name: XNAT Populate
  endpoint:
    path: /xnat-tools/xnat-populate
    method: GET
- name: XNAT REST Tests
  endpoint:
    path: /xnat-tools/xnat-rest-tests
    method: GET
- name: NRG_Selenium
  endpoint:
    path: /xnat-tools/nrg_selenium
    method: GET
- name: PyXNAT
  endpoint:
    path: /xnat-tools/pyxnat
    method: GET
- name: XTOLM
  endpoint:
    path: /xnat-tools/xtolm
    method: GET
- name: Arc-Sync
  endpoint:
    path: /xnat-tools/arc-sync
    method: GET
- name: DicomBrowser
  endpoint:
    path: /xnat-tools/dicombrowser
    method: GET
- name: JAAT
  endpoint:
    path: /xnat-tools/jaat
    method: GET
- name: XNAT Client Tools
  endpoint:
    path: /xnat-tools/xnat-web-services-client-tools
    method: GET
- name: XNAT-DICOM Gateway
  endpoint:
    path: /xnat-tools/xnat-dicom-gateway
    method: GET
- name: XNAT ML Plugins
  endpoint:
    path: /ml/
    method: GET
- name: Legacy Image Viewer
  endpoint:
    path: /xnat-tools/legacy-image-viewer
    method: GET
- name: XNAT Upload Assistant
  endpoint:
    path: /documentation/using-the-desktop-upload-assistant
    method: GET
- name: XNAT Data Client
  endpoint:
    path: /xnat-tools/xnatdataclient
    method: GET
- name: XNAT Desktop
  endpoint:
    path: /xnat-tools/xnat-desktop
    method: GET
notes:
- The Desktop Client never saves XNAT account passwords and always requires users
  to reauthenticate in order to log in.
- Streaming files into a ZIP for upload is more stable and performant than bundling
  a ZIP locally before transferring.
- Pixel anonymization via DicomEdit 6.3 works with all versions of XNAT supported
  by the client app, including XNAT 1.7.6.
- Password is never saved, it is only used to log in.
- Requests with authentication tokens are handled as application URLs.
- The DXM Settings Plugin is supported by XNAT versions 1.7.6 and up.
- The Desktop Client supports multiple common labeling schemes for uploads, including
  custom labels entered by the user.
- The Desktop Client requires an embedded JRE, which for some reason is not supported
  in any of the virtual environments that we have tested.
- If these scripts exist, then DicomEdit anonymization will run on your data during
  the upload process.
- It's typical for an XNAT to have either site-wide or project-specific anonymization,
  but not both.
- Selecting 'I don't know the dates of these sessions' will let you proceed without
  this check, but you may be violating your project's recommended business processes.
- You are not required to search for PHI, and you are not required to draw any rectangles
  on any scan.
- Some objects may return nulls in deeply nested fields
- This is the initial production release of the XNAT Desktop Client.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Introduced support for uploading multiple image sessions at a time.
- The DXM Settings plugin can be downloaded from the XNAT Downloads page.
- There is a known issue that can occur when queueing up large numbers of image sessions
  to upload concurrently.
- This issue is being addressed for the DXM 3.2.0 release.
- One common troubleshooting tip for users with blocked or slow uploads has been to
  clear the application cache, which had to be done manually.
- New in version 3.2, the 'Debug' tab within the Application Settings has the ability
  to clear the cache with a simple button click.
- We resolved a series of bugs in versions 3.1 and 3.2 where large manifests of files
  queued for upload could overload the internal logging and staging of files prior
  to committing the upload.
- Version 3.2 cleans up remaining performance issues.
- The 3.2.5 release of the XNAT Desktop Client is a maintenance release to ensure
  compatibility with XNAT 1.8.10, by adding support for the DicomEdit 6.6 library
  as well as supporting dependency upgrades.
- DicomEdit 6.6 adds support for instance file rejection, which means that an anonymization
  script defined at the site or the project level that rejects incoming scans will
  be applied within the Desktop Client before they are sent.
- Your XNAT system must be able to accept PHI when using the DQR Plugin.
- This is the default state of the DQR plugin when it is first installed. Nonetheless,
  it's useful to check to be sure.
- Each release of the Dicom Query-Retrieve plugin is dependent on the version of core
  XNAT that you are running.
- The DQR plugin jar includes several dependent libraries, and is packaged as an "xnatPluginJar".
- Only DICOM-formatted resources can be exported.
- No data can be sent from XNAT via DICOMweb
- No XNAT that has data coming in directly from a PACS system can be considered free
  of PHI.
- Some XNAT systems find ways of working around this constraint by routing incoming
  data through a CTP Relay or by using an external system such as JAAT to route data
  through an external anonymization process in between the PACS system and XNAT.
- Labels must be globally unique across all PACS connections within a given XNAT instance.
- The 'http/s' protocol must be omitted in the Host field.
- Different PACS platforms have different means of configuration.
- Ensure PACS is running and available on your network.
- Time intervals cannot overlap.
- Setting threads or utilization to 0 prevents data import but allows search requests.
- PACS connections require configuration at both ends.
- DQR Plugin requires a custom-defined DICOM Object Identifier to function properly.
- Identifiers designed to work with DQR should include 'dqr' in their name.
- The CSV file must contain a header row that defines search terms and remapping fields.
- A CSV file can contain any number of rows, where each row is a new query.
- XNAT does not have a good way to throttle its requests to a PACS system when requesting
  scan info for all of the selected image sessions.
- Each line can also match as many studies in the PACS as you want.
- DQR plugin requires XNAT to be connected to a PACS system.
- DQR-enabled project and user permissions are necessary for usage.
- The DQR Query History panel can contain PHI.
- Queued requests are displayed by default with the most recent request at the top.
- XSync connects two XNATs to each other, both XNATs must be running compatible versions
  of the plugin
- Uses the 'ascp' command line client on the server running XSync.
- The DICOM Inbox location is configured in the destination XNAT.
- If Aspera server mount location differs from destination XNAT mount location, the
  Aspera configuration will use the Aspera server mount location.
- Requires XNAT 1.9.0 or newer
- Requires XNAT 1.8.10 or newer
- Requires XNAT 1.8.3 or newer
- DicomEdit is embedded within each XNAT release, meaning that there is no action
  required for XNAT admins to enable the functionality described in this documentation.
- DicomEdit version 6.0 introduced some changes to the scripting language that are
  not backward compatible with previous versions of DicomEdit.
- assigning to any type of tagpath representing 'many' is still NOT supported
- DicomEdit 6.3 is backwards compatible with 6.0, 6.1, and 6.2. All previous 6.x scripts
  should work unchanged.
- DicomEdit's implementation has been reworked to leverage advances in the underlying
  technologies.
- Some changes in the scripting language are not compatible with previous versions.
- DicomEdit 6.6 is backwards compatible with 6.0 through 6.5. All previous 6.x scripts
  should work unchanged.
- It is essential that all types of data from all data sources processed by alterPixels
  be vetted for expected behavior.
- DicomEdit 6.7 is backwards compatible with all version 6 releases.
- This release also includes updates to ensure accurate application of anonymization
  scripts when importing under extremely heavy load conditions.
- This set of tools has been developed to interact with XNAT servers.
- Works with Python 2.x (preferably 2.7) but not Python 3.x.
- The UNIX tar archive (.tgz) distribution of DicomBrowser includes command-line tools
  for scriptable DICOM workflow.
- Anonymization scripts can be added when running the remapper.
- Ensure to verify the output directory after processing.
- DicomBrowser can load many thousands of files, but performance may be sluggish with
  large datasets.
- The LDAP Authentication Plugin is compatible with XNAT versions 1.7.5 and later
- One can use the files ldap1-provider-sample.properties and ldap2-provider-sample.properties
  as starting points for their own provider configurations.
- The Batch Launch Plugin was written as a companion service for data processing and
  depends on the Container Service plugin in order to run.
- There is no admin configuration required for this plugin.
- User Dashboard functionality included with the Batch Launch plugin provides users
  with the ability to monitor, inspect and terminate various workflow-associated processes
  in XNAT.
- The Batch Launch Plugin is highly version dependent.
- Prior to version 0.6.0, the Batch Launch Plugin is dependent on having an installed
  version of the XNAT Pipeline Engine. As of 0.7.0, this is no longer required.
- Project permissions issues dictate whether containers can be run or data can be
  stored back to shared data objects.
- When upgrading from earlier versions of XNAT, previous properties are no longer
  supported.
- Pipeline should be run on xnat:mrSessionData datatype.
- Face masking is effective for high resolution scans only.
- A Docker image supporting XNAT 1.7 container service is released.
- Converting Nifti to DICOM can lead to unexpected orientations
- Additional DICOM attributes may need to be set using DicomEdit
- Provide a strong password to protect your key
- Don't store them in a git repository or stash them in a publicly accessible location
- Store backup copies in a secret manager like LastPass or similar application
- Only store working copies in properly secured .ssh folders
- Don't lose the files!
- 'UseKeychain yes # OS X only'
- 'AddKeysToAgent yes # OS X only'
- IdentitiesOnly yes
- ForwardAgent yes
- Handling SSH keys with ssh-agent allows for storing live copies of private keys.
- The level of anonymization required must be specified by the researcher.
- Input must be in CSV format for processing.
- Some objects like Contact may return nulls in deeply nested fields
- If properties are defined both in the .properties file and on the command line,
  command line takes precedence.
- The framework looks for a properties file in src/test/resources/config.
- Currently supported out-of-the-box are the options 1.7 and 1.6dev.
- Testing a pipeline should be split up into two steps.
- FileComparator and FileMutator allow for file validation and modification before
  comparison.
- One of the simplest comparators provided is MD5_Comparator.
- FileSizeComparator allows an optional 'tolerance' property (assumed to be 0 if not
  included).
- TextComparator is satisfied if and only if the contents of the file are equal to
  the value in the file's 'expectedText' property.
- 'The next comparator is actually a family of comparators: ImageComparator.'
- 'ImageDeviationComparator extends ImageComparator and allows two optional properties
  (assumed to be 0 if not supplied): ''gray'' and ''color''.'
- PercentPixelsComparator extends ImageComparator
- If false, this class will simply leave the test methods in the order in which they
  were defined within the class.
- Using this feature then requires additional properties to be set.
- There are two annotations to use when writing pipeline tests.
- All properties except the last two are required.
- Defaults to 'Selenium test suite cycle' for cycle name.
- The NRG_Selenium framework allows REST calls, XNAT database access, and SSH connections.
- The name assigned to the protocol must be unique.
- Users can only create Ad Hoc visits if 'Allow Unexpected (Ad Hoc) Visits Other Than
  Terminal Visit' is set to Yes in the protocol definition.
- Adding unexpected experiments to a subject can only be done if 'Allow Unexpected
  Experiments' is set to 'Yes' in the protocol definition.
- XDC adds a layer of XNAT 'awareness' to its HTTP capabilities.
- XNAT Desktop application is a graphical user interface purposed for organizing local
  files of arbitrary content
- Upload to XNAT Enterprise currently works with XNAT.
- Currently, uploading files with the same project/subject/experiment combination
  repeatedly will result each time in re-creating of the session, so previous session
  data will be deleted.
- Uses XML file for naming rule customization
- XNAT Desktop is a file-centric architecture for managing local research files.
- Gateway doesn't run properly from location that contains spaces; this is a bug in
  the current version.
- Please do not edit the properties file while the application is running.
- If there is an error in the properties file that setting is ignored, and a backup
  properties file is created.
- OsiriX must be configured to communicate with the XNAT Gateway.
- Verify connection after adding nodes in OsiriX.
- The YAML file must be titled "$projectId_metadata.yaml".
- The data folder should contain individually zipped sessions at the top level.
- All YAML used in XNAT Populate should be formatted to use four standard spaces to
  mark indentation.
- Script may appear to hang for a couple minutes when running for the first time.
- XNATRestClient is deprecated. Use XnatDataClient instead.
- TestNG provides various annotations to control test execution.
- JUnit reinstantiate test class for each @Test method, while TestNG only once per
  class.
- Defining custom REST calls
- Uses basic authentication with username and password
- Requires setup of connected app in XNAT
- Ensure to modify CSV files to meet the API requirements
- The Pipeline Engine Plugin is compatible with XNAT 1.9.0 and up.
- Plugin leaves no trace — can be easily installed or uninstalled without leaving
  any artifact on your system.
- The MFA plugin has not been extensively tested on earlier versions of XNAT, but
  is likely to work as far back as XNAT 1.8.4. It has been tested in XNAT 1.8.10.5
  and above.
- MFA plugin comes preconfigured to work with Google Authenticator Service.
- Users can receive one-time-passcodes via email as a fallback method.
- MFA adds a layer of security to login.
- Email may be used as a fallback MFA method.
- There are some conditions in the Plugin Settings UI where a site admin can require
  their own MFA registration, which should immediately log the user out. Intermittently,
  this logout does not happen.
- On application startup, there can be a race condition where MFA registration pages
  do not load correctly, with a javascript failure. This can be resolved with a tomcat
  restart.
- The fallback to email screen has a nuisance dialog stating “Refreshing Datatype
  Cache” that cannot be dismissed. Otherwise the page functions as it should.
errors:
- The XNAT Desktop Client waits until it has confirmation of image sessions being
  received and built before declaring success.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'QUEUED: request is in the Import Queue and has not been submitted to PACS'
- 'PROCESSING: request is being processed for submission to the PACS'
- 'ISSUED: request has been issued to the PACS'
- 'FAILED: request has been denied by the PACS or the PACS was offline'
- 'RECEIVED: request has been approved by the PACS and data has been received'
- Add a null check when parsing newlines
- Inline comments within definition lists caused parsing errors
- Unexpected orientations due to lack of header information in Nifti
- Files ... are mismatched and should be regenerated
- 'Server startup error! Permission denied (Bind failed): Use server port number >
  1024.'
- DICOM Query is by default restricted to specified DICOM Application Entities (AEs).
- 'DANGEROUS: Use of ''--clean'' flag can delete preexisting XNAT projects.'
- URL encoding issues may occur for parameters in the -remote parameter.
- '401 Unauthorized: Recheck API key or user credentials'
- 'MFA-23: Intermittent logout issue after requiring MFA registration.'
- 'MFA-25: JavaScript failure on startup due to race condition.'
- 'MFA-26: Nuisance dialog on fallback to email screen.'
auth_info:
  mentioned_objects:
  - XdatUserAuthService.LDAP
  - OauthToken
  - AuthProvider
  - NamedCredential
  - XnatInterface
  - mainUser
  - mainAdmin
  - Google Authenticator
  - email
  - LDAP
  - OpenID
  - MFA
client:
  base_url: https://www.xnat.org
  headers:
    Accept: application/json
source_metadata: null
