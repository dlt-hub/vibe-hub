resources:
- name: CoinFlipGame
  endpoint:
    path: /script/DeployCoinFlipGame.s.sol
    method: POST
    data_selector: CoinFlipGame
    params: {}
- name: eth_chainId
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      method: eth_chainId
      jsonrpc: '2.0'
      id: 1
      params: []
- name: create_project
  endpoint:
    path: /create
    method: POST
    data_selector: result
- name: local_dev
  endpoint:
    path: /dev
    method: GET
    data_selector: result
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: result
- name: transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: result
- name: wallet
  endpoint:
    path: /wallet
    method: GET
    data_selector: result
- name: bridge
  endpoint:
    path: /bridge
    method: POST
    data_selector: result
- name: config_chains
  endpoint:
    path: /config/chains
    method: POST
    data_selector: result
- name: native_bridge
  endpoint:
    path: /bridge/native
    method: GET
- name: mainnet_bridge
  endpoint:
    path: /bridge/mainnet
    method: GET
- name: testnet_bridge
  endpoint:
    path: /bridge/testnet
    method: GET
- name: third_party_bridges
  endpoint:
    path: /bridge/third-party
    method: GET
- name: Triangle faucet
  endpoint:
    path: https://faucet.triangleplatform.com/abstract/testnet
    method: GET
- name: Thirdweb faucet
  endpoint:
    path: https://thirdweb.com/abstract-testnet
    method: GET
- name: Ethereum Ecosystem Sepolia PoW faucet
  endpoint:
    path: https://www.ethereum-ecosystem.com/faucets/ethereum-sepolia
    method: GET
- name: Sepolia PoW faucet
  endpoint:
    path: https://sepolia-faucet.pk910.de/
    method: GET
- name: Google Cloud Sepolia faucet
  endpoint:
    path: https://cloud.google.com/application/web3/faucet/ethereum/sepolia
    method: GET
- name: Grabteeth Sepolia faucet
  endpoint:
    path: https://grabteeth.xyz/
    method: GET
- name: Infura Sepolia faucet
  endpoint:
    path: https://www.infura.io/faucet/sepolia
    method: GET
- name: Chainstack Sepolia faucet
  endpoint:
    path: https://faucet.chainstack.com/sepolia-testnet-faucet
    method: GET
- name: Alchemy Sepolia faucet
  endpoint:
    path: https://www.alchemy.com/faucets/ethereum-sepolia
    method: GET
- name: Currencies
  endpoint:
    path: /tooling/deployed-contracts/currencies
    method: GET
    data_selector: data
    params: {}
- name: NFT Markets
  endpoint:
    path: /tooling/deployed-contracts/nft-markets
    method: GET
    data_selector: data
    params: {}
- name: Uniswap V2
  endpoint:
    path: /tooling/deployed-contracts/uniswap-v2
    method: GET
    data_selector: data
    params: {}
- name: Uniswap V3
  endpoint:
    path: /tooling/deployed-contracts/uniswap-v3
    method: GET
    data_selector: data
    params: {}
- name: Safe
  endpoint:
    path: /tooling/deployed-contracts/safe
    method: GET
    data_selector: data
    params: {}
- name: eth_chainId
  endpoint:
    path: /eth_chainId
    method: POST
    data_selector: result
    params: {}
- name: eth_call
  endpoint:
    path: /eth_call
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_call
      params:
      - to: '0xc94770007dda54cF92009BFF0dE90c06F603a09f'
      - latest
- name: eth_estimateGas
  endpoint:
    path: /eth_estimateGas
    method: POST
    data_selector: result
    params: {}
- name: eth_gasPrice
  endpoint:
    path: /eth_gasPrice
    method: POST
    data_selector: result
    params: {}
- name: eth_newFilter
  endpoint:
    path: /eth_newFilter
    method: POST
    data_selector: result
    params: {}
- name: eth_newBlockFilter
  endpoint:
    path: /eth_newBlockFilter
    method: POST
    data_selector: result
    params: {}
- name: eth_uninstallFilter
  endpoint:
    path: /eth_uninstallFilter
    method: POST
    data_selector: result
    params:
      id: 1
- name: eth_newPendingTransactionFilter
  endpoint:
    path: /eth_newPendingTransactionFilter
    method: POST
    data_selector: result
    params: {}
- name: eth_getLogs
  endpoint:
    path: /eth_getLogs
    method: POST
    data_selector: result
    params:
      fromBlock: '0x1'
      toBlock: '0x2'
      address: '0x8320fe7702b96808f7bbc0d4a888ed1468216cfd'
      topics:
      - '0xd78a0cb8bb633d06981248b816e7bd33c2a35a6089241d099fa519e361cab902'
- name: eth_getFilterLogs
  endpoint:
    path: /eth_getFilterLogs
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getFilterLogs
      params:
      - '0xb415d4b0e6ca750802be8c84c99a68170deeb9ed09c4e2eb0dc5299ab715e978'
- name: eth_getFilterChanges
  endpoint:
    path: /eth_getFilterChanges
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getFilterChanges
      params:
      - '0xb415d4b0e6ca750802be8c84c99a68170deeb9ed09c4e2eb0dc5299ab715e978'
- name: eth_getBalance
  endpoint:
    path: /eth_getBalance
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
- name: web3_clientVersion
  endpoint:
    path: /web3_clientVersion
    method: POST
    data_selector: result
    params: {}
- name: eth_getBlockByNumber
  endpoint:
    path: /eth_getBlockByNumber
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getBlockByNumber
      params:
      - '0x1b4'
      - false
- name: eth_getBlockByHash
  endpoint:
    path: /eth_getBlockByHash
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getBlockByHash
      params:
      - '0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae'
      - false
- name: eth_getBlockTransactionCountByNumber
  endpoint:
    path: /eth_getBlockTransactionCountByNumber
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getBlockTransactionCountByNumber
      params:
      - '0x1b4'
- name: eth_getBlockReceipts
  endpoint:
    path: /eth_getBlockReceipts
    method: POST
    data_selector: result
    params:
      id: 1
      jsonrpc: '2.0'
      method: eth_getBlockReceipts
      params:
      - '0x1b4'
- name: eth_getBlockTransactionCountByHash
  endpoint:
    path: /eth_getBlockTransactionCountByHash
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getBlockTransactionCountByHash
      params:
      - '0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae'
- name: eth_getCode
  endpoint:
    path: /eth_getCode
    method: POST
    data_selector: result
    params: {}
- name: eth_getStorageAt
  endpoint:
    path: /eth_getStorageAt
    method: POST
    data_selector: result
    params: {}
- name: eth_getTransactionCount
  endpoint:
    path: /eth_getTransactionCount
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: eth_getTransactionCount
- name: eth_sendRawTransaction
  endpoint:
    path: /eth_sendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: eth_feeHistory
  endpoint:
    path: /eth_feeHistory
    method: POST
    data_selector: result
    params: {}
- name: zks_estimateFee
  endpoint:
    path: /zks_estimateFee
    method: POST
    data_selector: result
    params: {}
- name: zks_estimateGasL1ToL2
  endpoint:
    path: /zks_estimateGasL1ToL2
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 2
      method: zks_estimateGasL1ToL2
- name: zks_getBridgehubContract
  endpoint:
    path: /zks_getBridgehubContract
    method: POST
    data_selector: result
    params: {}
- name: zks_getMainContract
  endpoint:
    path: /zks_getMainContract
    method: POST
    data_selector: result
    params: {}
- name: testnet_paymaster
  endpoint:
    path: /zks_getTestnetPaymaster
    method: POST
    data_selector: result
    params: {}
- name: zks_getL1BatchBlockRange
  endpoint:
    path: /zks_getL1BatchBlockRange
    method: POST
    data_selector: result
- name: zks_getL1BatchDetails
  endpoint:
    path: /zks_getL1BatchDetails
    method: POST
    data_selector: result
    params:
      id: 1
- name: confirmed_tokens
  endpoint:
    path: /zks_getConfirmedTokens
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: zks_getConfirmedTokens
      params:
      - 0
      - 10
- name: getAllAccountBalances
  endpoint:
    path: /zks_getAllAccountBalances
    method: POST
    data_selector: result
    params: {}
- name: zks_getTransactionDetails
  endpoint:
    path: /zks_getTransactionDetails
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: zks_getTransactionDetails
      params:
      - '0x5e4243c644d2f1cd5a7ad6ef7b4bb233a3ed7eac71b7bd4fb71e2c62929a69ab'
- name: zks_getBlockDetails
  endpoint:
    path: /zks_getBlockDetails
    method: POST
    data_selector: result
    params: {}
- name: bridge_contracts
  endpoint:
    path: /zks_getBridgeContracts
    method: POST
    data_selector: result
    params: {}
- name: zks_getBaseTokenL1Address
  endpoint:
    path: /zks_getBaseTokenL1Address
    method: POST
    data_selector: result
    params: {}
- name: zks_getL2ToL1MsgProof
  endpoint:
    path: /zks_getL2ToL1MsgProof
    method: POST
    data_selector: result
    params: {}
- name: zks_getL2ToL1LogProof
  endpoint:
    path: /zks_getL2ToL1LogProof
    method: POST
    data_selector: result
    params: {}
- name: raw_block_transactions
  endpoint:
    path: /zks_getRawBlockTransactions
    method: POST
    data_selector: result
    params: {}
- name: zks_getBytecodeByHash
  endpoint:
    path: /zks_getBytecodeByHash
    method: POST
    data_selector: result
    params: {}
- name: zks_getL1GasPrice
  endpoint:
    path: /zks_getL1GasPrice
    method: POST
    data_selector: result
    params: {}
- name: zks_getFeeParams
  endpoint:
    path: /zks_getFeeParams
    method: POST
    data_selector: result.V2
    params: {}
- name: zks_getProtocolVersion
  endpoint:
    path: /zks_getProtocolVersion
    method: POST
    data_selector: result
    params: {}
- name: zks_getProof
  endpoint:
    path: /zks_getProof
    method: POST
    data_selector: result
    params: {}
- name: zks_sendRawTransactionWithDetailedOutput
  endpoint:
    path: /zks_sendRawTransactionWithDetailedOutput
    method: POST
    data_selector: result
    params: {}
- name: debug_traceBlockByNumber
  endpoint:
    path: /debug_traceBlockByNumber
    method: POST
    data_selector: result
    params: {}
- name: debug_traceTransaction
  endpoint:
    path: /debug_traceTransaction
    method: POST
    data_selector: result
    params: {}
- name: debug_traceCall
  endpoint:
    path: /debug_traceCall
    method: POST
    data_selector: result
- name: eth_subscribe
  endpoint:
    path: /eth_subscribe
    method: POST
    data_selector: result
    params: {}
- name: eth_unsubscribe
  endpoint:
    path: /eth_unsubscribe
    method: POST
    data_selector: result
    params: {}
notes:
- The Proof of Play vRNG contracts currently require your contract address to be whitelisted
  to enable the randomNumberCallback function to be called.
- Deposits from L1 to L2 take around ~15 minutes
- Withdrawals from L2 to L1 currently take up to 24 hours due to the built-in withdrawal
  delay
- Returns the current client version
- Submits a pre-signed transaction for broadcast
- Retrieves the bridge hub contract address
- This method is only applicable for Abstract Sepolia Testnet (i.e. not mainnet).
- Returns data pertaining to a specific L1 batch
- Gets all account balances for a given address. The method returns an object with
  token addresses as keys and their corresponding balances as values.
- No parameters required for the method
- No parameters required
- Retrieves the log proof for an L2 to L1 transaction
- Lists transactions in a block without processing them
- Generates Merkle proofs for one or more storage values associated with a specific
  account, accompanied by a proof of their authenticity
- Executes a transaction and returns its hash, storage logs, and events.
- Returns debug trace of a call
- Creates a new subscription for events.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200: Returns the debug trace'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.mainnet.abs.xyz
  headers:
    Content-Type: application/json
  resources:
  - name: eth_accounts
    endpoint:
      path: /eth_accounts
      method: POST
      data_selector: result
      params: {}
source_metadata: null
