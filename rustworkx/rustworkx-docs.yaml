resources:
- name: digraph
  endpoint:
    path: /api/digraph
    method: GET
    data_selector: records
    params: {}
- name: graph
  endpoint:
    path: /api/graph
    method: GET
    data_selector: records
    params: {}
- name: PyGraph
  endpoint:
    path: /api/rustworkx.PyGraph
    method: GET
    data_selector: records
    params: {}
- name: PyDiGraph
  endpoint:
    path: /api/rustworkx.PyDiGraph
    method: GET
    data_selector: records
    params: {}
- name: graph
  endpoint:
    path: /path/to/graph/endpoint
    method: POST
    data_selector: graph_data
    params: {}
- name: directed_graph
  endpoint:
    path: /directed_graph
    method: GET
    data_selector: nodes
    params: {}
- name: directed_acyclic_graph
  endpoint:
    path: /directed_acyclic_graph
    method: GET
    data_selector: nodes
    params: {}
- name: digraph_is_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_isomorphic
    method: GET
- name: digraph_is_subgraph_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_subgraph_isomorphic
    method: GET
- name: digraph_vf2_mapping
  endpoint:
    path: /apiref/rustworkx.digraph_vf2_mapping
    method: GET
- name: digraph_distance_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_distance_matrix
    method: GET
- name: digraph_floyd_warshall
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall
    method: GET
- name: digraph_floyd_warshall_numpy
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_numpy
    method: GET
- name: digraph_floyd_warshall_successor_and_distance
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_successor_and_distance
    method: GET
- name: digraph_adjacency_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_adjacency_matrix
    method: GET
- name: digraph_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_simple_paths
    method: GET
- name: digraph_all_pairs_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_all_simple_paths
    method: GET
- name: digraph_astar_shortest_path
  endpoint:
    path: /apiref/rustworkx.digraph_astar_shortest_path
    method: GET
- name: digraph_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_paths
    method: GET
- name: digraph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: digraph_dijkstra_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_path_lengths
    method: GET
- name: digraph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_path_lengths
    method: GET
- name: digraph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_bellman_ford_shortest_path_lengths
    method: GET
- name: digraph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_shortest_paths
    method: GET
- name: digraph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_path_lengths
    method: GET
- name: digraph_k_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_k_shortest_path_lengths
    method: GET
- name: digraph_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_shortest_paths
    method: GET
- name: digraph_single_source_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_single_source_all_shortest_paths
    method: GET
- name: digraph_dfs_edges
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_edges
    method: GET
- name: digraph_dfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_search
    method: GET
- name: digraph_find_cycle
  endpoint:
    path: /apiref/rustworkx.digraph_find_cycle
    method: GET
- name: digraph_transitivity
  endpoint:
    path: /apiref/rustworkx.digraph_transitivity
    method: GET
- name: digraph_core_number
  endpoint:
    path: /apiref/rustworkx.digraph_core_number
    method: GET
- name: digraph_complement
  endpoint:
    path: /apiref/rustworkx.digraph_complement
    method: GET
- name: digraph_union
  endpoint:
    path: /apiref/rustworkx.digraph_union
    method: GET
- name: digraph_tensor_product
  endpoint:
    path: /apiref/rustworkx.digraph_tensor_product
    method: GET
- name: digraph_cartesian_product
  endpoint:
    path: /apiref/rustworkx.digraph_cartesian_product
    method: GET
- name: digraph_random_layout
  endpoint:
    path: /apiref/rustworkx.digraph_random_layout
    method: GET
- name: digraph_bipartite_layout
  endpoint:
    path: /apiref/rustworkx.digraph_bipartite_layout
    method: GET
- name: digraph_circular_layout
  endpoint:
    path: /apiref/rustworkx.digraph_circular_layout
    method: GET
- name: digraph_shell_layout
  endpoint:
    path: /apiref/rustworkx.digraph_shell_layout
    method: GET
- name: digraph_spiral_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spiral_layout
    method: GET
- name: digraph_spring_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spring_layout
    method: GET
- name: digraph_num_shortest_paths_unweighted
  endpoint:
    path: /apiref/rustworkx.digraph_num_shortest_paths_unweighted
    method: GET
- name: digraph_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_betweenness_centrality
    method: GET
- name: digraph_edge_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_edge_betweenness_centrality
    method: GET
- name: digraph_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_closeness_centrality
    method: GET
- name: digraph_newman_weighted_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_newman_weighted_closeness_centrality
    method: GET
- name: digraph_eigenvector_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_eigenvector_centrality
    method: GET
- name: digraph_katz_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_katz_centrality
    method: GET
- name: digraph_unweighted_average_shortest_path_length
  endpoint:
    path: /apiref/rustworkx.digraph_unweighted_average_shortest_path_length
    method: GET
- name: digraph_bfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_bfs_search
    method: GET
- name: digraph_dijkstra_search
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_search
    method: GET
- name: digraph_node_link_json
  endpoint:
    path: /apiref/rustworkx.digraph_node_link_json
    method: GET
- name: digraph_longest_simple_path
  endpoint:
    path: /apiref/rustworkx.digraph_longest_simple_path
    method: GET
- name: digraph_is_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_isomorphic.html
    method: GET
- name: digraph_is_subgraph_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_subgraph_isomorphic.html
    method: GET
- name: digraph_vf2_mapping
  endpoint:
    path: /apiref/rustworkx.digraph_vf2_mapping.html
    method: GET
- name: digraph_distance_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_distance_matrix.html
    method: GET
- name: digraph_floyd_warshall
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall.html
    method: GET
- name: digraph_floyd_warshall_numpy
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_numpy.html
    method: GET
- name: digraph_floyd_warshall_successor_and_distance
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_successor_and_distance.html
    method: GET
- name: digraph_adjacency_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_adjacency_matrix.html
    method: GET
- name: digraph_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_simple_paths.html
    method: GET
- name: digraph_all_pairs_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_all_simple_paths.html
    method: GET
- name: digraph_astar_shortest_path
  endpoint:
    path: /apiref/rustworkx.digraph_astar_shortest_path.html
    method: GET
- name: digraph_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_paths.html
    method: GET
- name: digraph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_shortest_paths.html
    method: GET
- name: digraph_dijkstra_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_path_lengths.html
    method: GET
- name: digraph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_path_lengths.html
    method: GET
- name: digraph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_bellman_ford_shortest_path_lengths.html
    method: GET
- name: digraph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_shortest_paths.html
    method: GET
- name: digraph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_path_lengths.html
    method: GET
- name: digraph_k_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_k_shortest_path_lengths.html
    method: GET
- name: digraph_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_shortest_paths.html
    method: GET
- name: digraph_single_source_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_single_source_all_shortest_paths.html
    method: GET
- name: digraph_dfs_edges
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_edges.html
    method: GET
- name: digraph_dfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_search.html
    method: GET
- name: digraph_find_cycle
  endpoint:
    path: /apiref/rustworkx.digraph_find_cycle.html
    method: GET
- name: digraph_transitivity
  endpoint:
    path: /apiref/rustworkx.digraph_transitivity.html
    method: GET
- name: digraph_core_number
  endpoint:
    path: /apiref/rustworkx.digraph_core_number.html
    method: GET
- name: digraph_complement
  endpoint:
    path: /apiref/rustworkx.digraph_complement.html
    method: GET
- name: digraph_union
  endpoint:
    path: /apiref/rustworkx.digraph_union.html
    method: GET
- name: digraph_tensor_product
  endpoint:
    path: /apiref/rustworkx.digraph_tensor_product.html
    method: GET
- name: digraph_cartesian_product
  endpoint:
    path: /apiref/rustworkx.digraph_cartesian_product.html
    method: GET
- name: digraph_random_layout
  endpoint:
    path: /apiref/rustworkx.digraph_random_layout.html
    method: GET
- name: digraph_bipartite_layout
  endpoint:
    path: /apiref/rustworkx.digraph_bipartite_layout.html
    method: GET
- name: digraph_circular_layout
  endpoint:
    path: /apiref/rustworkx.digraph_circular_layout.html
    method: GET
- name: digraph_shell_layout
  endpoint:
    path: /apiref/rustworkx.digraph_shell_layout.html
    method: GET
- name: digraph_spiral_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spiral_layout.html
    method: GET
- name: digraph_spring_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spring_layout.html
    method: GET
- name: digraph_num_shortest_paths_unweighted
  endpoint:
    path: /apiref/rustworkx.digraph_num_shortest_paths_unweighted.html
    method: GET
- name: digraph_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_betweenness_centrality.html
    method: GET
- name: digraph_edge_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_edge_betweenness_centrality.html
    method: GET
- name: digraph_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_closeness_centrality.html
    method: GET
- name: digraph_newman_weighted_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_newman_weighted_closeness_centrality.html
    method: GET
- name: digraph_eigenvector_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_eigenvector_centrality.html
    method: GET
- name: digraph_katz_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_katz_centrality.html
    method: GET
- name: digraph_unweighted_average_shortest_path_length
  endpoint:
    path: /apiref/rustworkx.digraph_unweighted_average_shortest_path_length.html
    method: GET
- name: digraph_bfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_bfs_search.html
    method: GET
- name: digraph_dijkstra_search
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_search.html
    method: GET
- name: digraph_node_link_json
  endpoint:
    path: /apiref/rustworkx.digraph_node_link_json.html
    method: GET
- name: digraph_longest_simple_path
  endpoint:
    path: /apiref/rustworkx.digraph_longest_simple_path.html
    method: GET
- name: betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.betweenness_centrality
    method: GET
    data_selector: CentralityMapping
    params: {}
- name: ProductNodeMap
  endpoint:
    path: /apiref/rustworkx.ProductNodeMap
    method: GET
- name: BiconnectedComponents
  endpoint:
    path: /apiref/rustworkx.BiconnectedComponents
    method: GET
- name: RelationalCoarsestPartition
  endpoint:
    path: /apiref/rustworkx.RelationalCoarsestPartition
    method: GET
- name: IndexPartitionBlock
  endpoint:
    path: /apiref/rustworkx.IndexPartitionBlock
    method: GET
- name: Visualization
  endpoint:
    path: /visualization
    method: GET
- name: betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.betweenness_centrality
    method: GET
    data_selector: CentralityMapping
    params: {}
- name: graphviz_draw
  endpoint:
    path: /apiref/rustworkx.visualization.graphviz_draw
    method: GET
    data_selector: graph
    params: {}
- name: PyGraph
  endpoint:
    path: /apiref/rustworkx.PyGraph.html
    method: GET
- name: PyDiGraph
  endpoint:
    path: /apiref/rustworkx.PyDiGraph.html
    method: GET
- name: add_edge
  endpoint:
    path: /PyGraph/add_edge
    method: POST
    data_selector: edge
    params: {}
- name: add_edges_from_no_data
  endpoint:
    path: /add_edges_from_no_data
    method: GET
- name: PyGraph
  endpoint:
    path: /rustworkx.PyGraph.add_node
    method: GET
- name: PyDiGraph
  endpoint:
    path: /rustworkx.PyDiGraph.add_node
    method: GET
- name: PyDAG
  endpoint:
    path: /rustworkx.PyDAG
    method: GET
- name: add_edge
  endpoint:
    path: /rustworkx/PyGraph/add_edge
    method: POST
    data_selector: edge
    params: {}
- name: PyGraph
  endpoint:
    path: /rustworkx/PyGraph/add_edges_from
    method: GET
- name: PyDiGraph
  endpoint:
    path: /rustworkx/PyDiGraph/add_edges_from
    method: GET
- name: add_nodes_from
  endpoint:
    path: /rustworkx/PyGraph/add_nodes_from
    method: GET
    data_selector: parameters
    params: {}
- name: PyGraph
  endpoint:
    path: /PyGraph/add_node
    method: POST
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph/add_node
    method: POST
- name: PyDAG
  endpoint:
    path: /PyDAG/add_node
    method: POST
- name: PyGraph.add_nodes_from
  endpoint:
    path: /rustworkx/PyGraph.add_nodes_from
    method: GET
- name: compose
  endpoint:
    path: /rustworkx/PyGraph/compose
    method: GET
- name: add_nodes_from
  endpoint:
    path: /PyGraph/add_nodes_from
    method: POST
    data_selector: indices
    params: {}
- name: adjacency
  endpoint:
    path: /PyGraph/adj
    method: GET
    data_selector: neighbors
- name: degree
  endpoint:
    path: /PyGraph/degree
    method: GET
    data_selector: degree
    params:
      node: int
- name: compose
  endpoint:
    path: /PyGraph/compose
    method: GET
- name: compose
  endpoint:
    path: /rustworkx/PyGraph/compose
    method: GET
    data_selector: returns
    params: {}
- name: edge_indices
  endpoint:
    path: rustworkx.PyGraph.edge_indices
    method: GET
- name: edge_indices
  endpoint:
    path: /rustworkx/PyGraph/edge_indices
    method: GET
    data_selector: EdgeIndices
- name: copy
  endpoint:
    path: /PyGraph/copy
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: /rustworkx/PyGraph/edge_indices_from_endpoints
    method: GET
    data_selector: edge_indices
    params: {}
- name: edge_list
  endpoint:
    path: /rustworkx/PyGraph/edge_list
    method: GET
- name: degree
  endpoint:
    path: /PyGraph/degree
    method: GET
    data_selector: degree
    params:
      node: int
- name: edge_index_map
  endpoint:
    path: /rustworkx.PyGraph.edge_index_map
    method: GET
- name: edge_list
  endpoint:
    path: /edge_list
    method: GET
    data_selector: tuple
    params: {}
- name: edge_subgraph
  endpoint:
    path: /rustworkx.PyGraph.edge_subgraph
    method: GET
- name: edge_subgraph
  endpoint:
    path: /PyGraph/edge_subgraph
    method: GET
    data_selector: subgraph
    params: {}
- name: edges
  endpoint:
    path: /edges
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: /rustworkx.PyGraph.edge_indices_from_endpoints
    method: GET
- name: edge_list
  endpoint:
    path: rustworkx.PyGraph.edge_list
    method: GET
- name: extend_from_weighted_edge_list
  endpoint:
    path: /extend_from_weighted_edge_list
    method: GET
    data_selector: records
- name: edge_list
  endpoint:
    path: /rustworkx/PyGraph/edge_list
    method: GET
    data_selector: edge_list
- name: edge_subgraph
  endpoint:
    path: /rustworkx.PyGraph.edge_subgraph
    method: GET
- name: filter_edges
  endpoint:
    path: /filter_edges
    method: GET
    data_selector: ''
    params: {}
- name: edge_subgraph
  endpoint:
    path: /rustworkx/PyGraph/edge_subgraph
    method: GET
    data_selector: subgraph
    params: {}
- name: filter_edges
  endpoint:
    path: /rustworkx/PyGraph/filter_edges
    method: GET
    data_selector: EdgeIndices
- name: extend_from_edge_list
  endpoint:
    path: /extend_from_edge_list
    method: GET
- name: filter_nodes
  endpoint:
    path: /rustworkx/PyGraph/filter_nodes
    method: GET
    data_selector: node indices
    params: {}
- name: find_node_by_weight
  endpoint:
    path: /find_node_by_weight
    method: GET
    data_selector: records
- name: find_node_by_weight
  endpoint:
    path: /find_node_by_weight
    method: GET
    data_selector: returns
    params: {}
- name: filter_edges
  endpoint:
    path: /rustworkx/PyGraph/filter_edges
    method: GET
    data_selector: edge_indices
    params: {}
- name: PyGraph
  endpoint:
    path: /PyGraph/from_adjacency_matrix
    method: static
    data_selector: ''
    params: {}
- name: filter_nodes
  endpoint:
    path: /rustworkx/PyGraph/filter_nodes
    method: GET
    data_selector: node_indices
    params: {}
- name: PyGraph
  endpoint:
    path: /rustworkx/PyGraph/from_complex_adjacency_matrix
    method: GET
    data_selector: PyGraph
    params:
      matrix: ndarray
      null_value: float
- name: find_node_by_weight
  endpoint:
    path: rustworkx.PyGraph.find_node_by_weight
    method: GET
- name: get_all_edge_data
  endpoint:
    path: rustworkx.PyGraph.get_all_edge_data
    method: GET
- name: find_node_by_weight
  endpoint:
    path: /find_node_by_weight
    method: GET
    data_selector: node_index
    params: {}
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
    data_selector: list[T]
    params: {}
- name: PyGraph.get_edge_data
  endpoint:
    path: /PyGraph/get_edge_data
    method: GET
- name: PyGraph
  endpoint:
    path: /PyGraph/from_adjacency_matrix
    method: POST
    data_selector: response
    params:
      null_value: '0.0'
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
    data_selector: edge_data
    params: {}
- name: PyGraph
  endpoint:
    path: /rustworkx/PyGraph/from_complex_adjacency_matrix
    method: GET
    data_selector: 'null'
    params: {}
- name: get_edge_data_by_index
  endpoint:
    path: /rustworkx/PyGraph/get_edge_data_by_index
    method: GET
    data_selector: data object for the edge
    params:
      edge_index: int
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /rustworkx/PyGraph/get_all_edge_data
    method: GET
    data_selector: edges
    params: {}
- name: get_edge_endpoints_by_index
  endpoint:
    path: /rustworkx/PyGraph/get_edge_endpoints_by_index
    method: GET
    data_selector: endpoint tuple
    params:
      edge_index: int
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
- name: get_node_data
  endpoint:
    path: /get_node_data
    method: GET
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
    data_selector: data
    params: {}
- name: has_edge
  endpoint:
    path: /rustworkx/PyGraph/has_edge
    method: GET
    data_selector: bool
    params:
      node_a: int
      node_b: int
- name: get_edge_data_by_index
  endpoint:
    path: /rustworkx/PyGraph/get_edge_data_by_index
    method: GET
    data_selector: data object for the edge
    params:
      edge_index: int
- name: get_edge_endpoints_by_index
  endpoint:
    path: /rustworkx/PyGraph/get_edge_endpoints_by_index
    method: GET
    data_selector: endpoint_tuple
    params:
      edge_index: int
- name: in_edge_indices
  endpoint:
    path: /rustworkx.PyGraph.in_edge_indices
    method: GET
- name: get_node_data
  endpoint:
    path: /rustworkx/PyGraph/get_node_data
    method: GET
    data_selector: node_data
    params:
      node: int
- name: in_edge_indices
  endpoint:
    path: /rustworkx/PyGraph/in_edge_indices
    method: GET
    data_selector: edge indices
    params:
      node: int
- name: in_edges
  endpoint:
    path: /rustworkx/PyGraph/in_edges
    method: GET
    data_selector: list of tuples
    params:
      node: int
- name: has_parallel_edges
  endpoint:
    path: /rustworkx.PyGraph.has_parallel_edges
    method: GET
- name: in_edge_indices
  endpoint:
    path: /rustworkx/PyGraph/in_edge_indices
    method: GET
    data_selector: edge indices
    params:
      node: int
- name: in_edges
  endpoint:
    path: /PyGraph/in_edges
    method: GET
- name: in_edges
  endpoint:
    path: /PyGraph/in_edges
    method: GET
    data_selector: tuples
    params:
      node: int
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyGraph/incident_edge_index_map
    method: GET
    data_selector: mapping
    params:
      node: int
- name: incident_edges
  endpoint:
    path: /PyGraph/incident_edges
    method: GET
    data_selector: edge indices
    params:
      node: int
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
    data_selector: neighbor_node_indices
    params:
      node: int
- name: node_indices
  endpoint:
    path: rustworkx.PyGraph.node_indices
    method: GET
- name: nodes
  endpoint:
    path: rustworkx.PyGraph.nodes
    method: GET
- name: num_nodes
  endpoint:
    path: /num_nodes
    method: GET
    data_selector: records
- name: out_edge_indices
  endpoint:
    path: /rustworkx.PyGraph.out_edge_indices
    method: GET
- name: incident_edges
  endpoint:
    path: /PyGraph/incident_edges
    method: GET
    data_selector: edge_indices
    params:
      node: int
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
- name: out_edges
  endpoint:
    path: rustworkx.PyGraph.out_edges
    method: GET
    data_selector: records
- name: out_edges
  endpoint:
    path: /rustworkx/PyGraph/out_edges
    method: GET
    data_selector: out_edges
    params: {}
- name: neighbors
  endpoint:
    path: /PyGraph/neighbors
    method: GET
    data_selector: neighbor node indices
    params:
      node: int
- name: read_edge_list
  endpoint:
    path: /read_edge_list
    method: GET
    data_selector: records
    params: {}
- name: num_edges
  endpoint:
    path: /rustworkx.PyGraph.num_edges
    method: GET
- name: remove_edges_from
  endpoint:
    path: rustworkx.PyGraph.remove_edges_from
    method: GET
- name: out_edge_indices
  endpoint:
    path: /out_edge_indices
    method: GET
- name: out_edge_indices
  endpoint:
    path: /rustworkx/PyGraph/out_edge_indices
    method: GET
    data_selector: edge_indices
- name: remove_node
  endpoint:
    path: /rustworkx/PyGraph/remove_node
    method: POST
    data_selector: node
    params: {}
- name: remove_nodes_from
  endpoint:
    path: /remove_nodes_from
    method: GET
- name: out_edges
  endpoint:
    path: /rustworkx/PyGraph/out_edges
    method: GET
    data_selector: out_edges
- name: edge_list
  endpoint:
    path: /read_edge_list
    method: GET
- name: PyGraph
  endpoint:
    path: /rustworkx/PyGraph/read_edge_list
    method: GET
    data_selector: records
- name: remove_edge
  endpoint:
    path: /rustworkx.PyGraph.remove_edge
    method: GET
- name: subgraph
  endpoint:
    path: /PyGraph/subgraph
    method: GET
    data_selector: PyGraph
    params: {}
- name: remove_edge
  endpoint:
    path: /rustworkx/PyGraph/remove_edge
    method: POST
    data_selector: parameters
    params: {}
- name: remove_edges_from
  endpoint:
    path: /remove_edges_from
    method: GET
- name: to_dot
  endpoint:
    path: /rustworkx.PyGraph.to_dot
    method: GET
- name: to_dot
  endpoint:
    path: /rustworkx/PyGraph/to_dot
    method: GET
    data_selector: results
- name: remove_node
  endpoint:
    path: /rustworkx/PyGraph/remove_node
    method: POST
    data_selector: parameters
    params:
      node: int
- name: remove_nodes_from
  endpoint:
    path: /remove_nodes_from
    method: GET
- name: update_edge
  endpoint:
    path: /rustworkx.PyGraph.update_edge
    method: GET
- name: remove_nodes_from
  endpoint:
    path: /remove_nodes_from
    method: POST
    data_selector: index_list
    params: {}
- name: subgraph
  endpoint:
    path: /rustworkx/PyGraph/subgraph
    method: GET
- name: update_edge
  endpoint:
    path: /update_edge
    method: POST
    data_selector: parameters
    params: {}
- name: update_edge_by_index
  endpoint:
    path: /update_edge_by_index
    method: POST
    data_selector: parameters
    params: {}
- name: subgraph
  endpoint:
    path: /PyGraph/subgraph
    method: GET
    data_selector: subgraph
    params: {}
- name: subgraph_with_nodemap
  endpoint:
    path: /PyGraph/subgraph_with_nodemap
    method: GET
- name: subgraph_with_nodemap
  endpoint:
    path: /rustworkx/PyGraph/subgraph_with_nodemap
    method: GET
    data_selector: tuple
    params: {}
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyGraph/weighted_edge_list
    method: GET
    data_selector: edge_list_with_weights
    params: {}
- name: write_edge_list
  endpoint:
    path: /PyGraph/write_edge_list
    method: POST
    data_selector: parameters
    params:
      path: path
      deliminator: deliminator
      weight_fn: weight_fn
- name: to_dot
  endpoint:
    path: /rustworkx/PyGraph/to_dot
    method: GET
    data_selector: dot file contents
    params: {}
- name: update_edge
  endpoint:
    path: /update_edge
    method: GET
- name: update_edge
  endpoint:
    path: /rustworkx/PyGraph/update_edge
    method: POST
    data_selector: parameters
    params: {}
- name: update_edge_by_index
  endpoint:
    path: /rustworkx/PyGraph/update_edge_by_index
    method: POST
    data_selector: parameters
    params: {}
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyGraph/weighted_edge_list
    method: GET
    data_selector: edge_list_with_weights
- name: PyGraph
  endpoint:
    path: /write_edge_list
    method: POST
    data_selector: output
    params:
      deliminator: ','
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: add_edge
  endpoint:
    path: /rustworkx/PyDiGraph/add_edge
    method: POST
    data_selector: index
    params: {}
- name: add_edges_from_no_data
  endpoint:
    path: /PyDiGraph/add_edges_from_no_data
    method: GET
    data_selector: ''
    params: {}
- name: PyDiGraph.add_nodes_from
  endpoint:
    path: /rustworkx/PyDiGraph/add_nodes_from
    method: GET
- name: PyDiGraph.add_parent
  endpoint:
    path: /rustworkx/PyDiGraph/add_parent
    method: GET
- name: add_child
  endpoint:
    path: /add_child
    method: GET
    data_selector: records
- name: add_edge
  endpoint:
    path: /add_edge
    method: GET
    data_selector: records
- name: add_edges_from
  endpoint:
    path: /add_edges_from
    method: GET
    data_selector: records
- name: add_edges_from_no_data
  endpoint:
    path: /add_edges_from_no_data
    method: GET
    data_selector: records
- name: add_node
  endpoint:
    path: /add_node
    method: GET
    data_selector: records
- name: add_nodes_from
  endpoint:
    path: /add_nodes_from
    method: GET
    data_selector: records
- name: add_parent
  endpoint:
    path: /add_parent
    method: GET
    data_selector: records
- name: adj
  endpoint:
    path: /adj
    method: GET
    data_selector: records
- name: adj_direction
  endpoint:
    path: /adj_direction
    method: GET
    data_selector: records
- name: can_contract_without_cycle
  endpoint:
    path: /can_contract_without_cycle
    method: GET
    data_selector: records
- name: clear
  endpoint:
    path: /clear
    method: GET
    data_selector: records
- name: clear_edges
  endpoint:
    path: /clear_edges
    method: GET
    data_selector: records
- name: compose
  endpoint:
    path: /compose
    method: GET
    data_selector: records
- name: contract_nodes
  endpoint:
    path: /contract_nodes
    method: GET
    data_selector: records
- name: copy
  endpoint:
    path: /copy
    method: GET
    data_selector: records
- name: edge_index_map
  endpoint:
    path: /edge_index_map
    method: GET
    data_selector: records
- name: edge_indices
  endpoint:
    path: /edge_indices
    method: GET
    data_selector: records
- name: edge_indices_from_endpoints
  endpoint:
    path: /edge_indices_from_endpoints
    method: GET
    data_selector: records
- name: edge_list
  endpoint:
    path: /edge_list
    method: GET
    data_selector: records
- name: edge_subgraph
  endpoint:
    path: /edge_subgraph
    method: GET
    data_selector: records
- name: edges
  endpoint:
    path: /edges
    method: GET
    data_selector: records
- name: extend_from_edge_list
  endpoint:
    path: /extend_from_edge_list
    method: GET
    data_selector: records
- name: extend_from_weighted_edge_list
  endpoint:
    path: /extend_from_weighted_edge_list
    method: GET
    data_selector: records
- name: filter_edges
  endpoint:
    path: /filter_edges
    method: GET
    data_selector: records
- name: filter_nodes
  endpoint:
    path: /filter_nodes
    method: GET
    data_selector: records
- name: find_adjacent_node_by_edge
  endpoint:
    path: /find_adjacent_node_by_edge
    method: GET
    data_selector: records
- name: find_node_by_weight
  endpoint:
    path: /find_node_by_weight
    method: GET
    data_selector: records
- name: find_predecessor_node_by_edge
  endpoint:
    path: /find_predecessor_node_by_edge
    method: GET
    data_selector: records
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
    data_selector: records
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
    data_selector: records
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
    data_selector: records
- name: from_adjacency_matrix
  endpoint:
    path: /from_adjacency_matrix
    method: GET
    data_selector: records
- name: from_complex_adjacency_matrix
  endpoint:
    path: /from_complex_adjacency_matrix
    method: GET
    data_selector: records
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
    data_selector: records
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
    data_selector: records
- name: get_edge_data_by_index
  endpoint:
    path: /get_edge_data_by_index
    method: GET
    data_selector: records
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
    data_selector: records
- name: get_node_data
  endpoint:
    path: /get_node_data
    method: GET
    data_selector: records
- name: has_edge
  endpoint:
    path: /has_edge
    method: GET
    data_selector: records
- name: has_node
  endpoint:
    path: /has_node
    method: GET
    data_selector: records
- name: has_parallel_edges
  endpoint:
    path: /has_parallel_edges
    method: GET
    data_selector: records
- name: in_degree
  endpoint:
    path: /in_degree
    method: GET
    data_selector: records
- name: in_edge_indices
  endpoint:
    path: /in_edge_indices
    method: GET
    data_selector: records
- name: in_edges
  endpoint:
    path: /in_edges
    method: GET
    data_selector: records
- name: incident_edge_index_map
  endpoint:
    path: /incident_edge_index_map
    method: GET
    data_selector: records
- name: incident_edges
  endpoint:
    path: /incident_edges
    method: GET
    data_selector: records
- name: insert_node_on_in_edges
  endpoint:
    path: /insert_node_on_in_edges
    method: GET
    data_selector: records
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /insert_node_on_in_edges_multiple
    method: GET
    data_selector: records
- name: insert_node_on_out_edges
  endpoint:
    path: /insert_node_on_out_edges
    method: GET
    data_selector: records
- name: insert_node_on_out_edges_multiple
  endpoint:
    path: /insert_node_on_out_edges_multiple
    method: GET
    data_selector: records
- name: is_symmetric
  endpoint:
    path: /is_symmetric
    method: GET
    data_selector: records
- name: make_symmetric
  endpoint:
    path: /make_symmetric
    method: GET
    data_selector: records
- name: merge_nodes
  endpoint:
    path: /merge_nodes
    method: GET
    data_selector: records
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
    data_selector: records
- name: neighbors_undirected
  endpoint:
    path: /neighbors_undirected
    method: GET
    data_selector: records
- name: node_indexes
  endpoint:
    path: /node_indexes
    method: GET
    data_selector: records
- name: node_indices
  endpoint:
    path: /node_indices
    method: GET
    data_selector: records
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: records
- name: num_edges
  endpoint:
    path: /num_edges
    method: GET
    data_selector: records
- name: num_nodes
  endpoint:
    path: /num_nodes
    method: GET
    data_selector: records
- name: out_degree
  endpoint:
    path: /out_degree
    method: GET
    data_selector: records
- name: out_edge_indices
  endpoint:
    path: /out_edge_indices
    method: GET
    data_selector: records
- name: out_edges
  endpoint:
    path: /out_edges
    method: GET
    data_selector: records
- name: predecessor_indices
  endpoint:
    path: /predecessor_indices
    method: GET
    data_selector: records
- name: predecessors
  endpoint:
    path: /predecessors
    method: GET
    data_selector: records
- name: read_edge_list
  endpoint:
    path: /read_edge_list
    method: GET
    data_selector: records
- name: remove_edge
  endpoint:
    path: /remove_edge
    method: GET
    data_selector: records
- name: remove_edge_from_index
  endpoint:
    path: /remove_edge_from_index
    method: GET
    data_selector: records
- name: remove_edges_from
  endpoint:
    path: /remove_edges_from
    method: GET
    data_selector: records
- name: remove_node
  endpoint:
    path: /remove_node
    method: GET
    data_selector: records
- name: remove_node_retain_edges
  endpoint:
    path: /remove_node_retain_edges
    method: GET
    data_selector: records
- name: remove_node_retain_edges_by_id
  endpoint:
    path: /remove_node_retain_edges_by_id
    method: GET
    data_selector: records
- name: remove_node_retain_edges_by_key
  endpoint:
    path: /remove_node_retain_edges_by_key
    method: GET
    data_selector: records
- name: remove_nodes_from
  endpoint:
    path: /remove_nodes_from
    method: GET
    data_selector: records
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: records
- name: subgraph
  endpoint:
    path: /subgraph
    method: GET
    data_selector: records
- name: subgraph_with_nodemap
  endpoint:
    path: /subgraph_with_nodemap
    method: GET
    data_selector: records
- name: substitute_node_with_subgraph
  endpoint:
    path: /substitute_node_with_subgraph
    method: GET
    data_selector: records
- name: successor_indices
  endpoint:
    path: /successor_indices
    method: GET
    data_selector: records
- name: successors
  endpoint:
    path: /successors
    method: GET
    data_selector: records
- name: to_dot
  endpoint:
    path: /to_dot
    method: GET
    data_selector: records
- name: to_undirected
  endpoint:
    path: /to_undirected
    method: GET
    data_selector: records
- name: update_edge
  endpoint:
    path: /update_edge
    method: GET
    data_selector: records
- name: update_edge_by_index
  endpoint:
    path: /update_edge_by_index
    method: GET
    data_selector: records
- name: weighted_edge_list
  endpoint:
    path: /weighted_edge_list
    method: GET
    data_selector: records
- name: write_edge_list
  endpoint:
    path: /write_edge_list
    method: GET
    data_selector: records
- name: PyDiGraph.add_child
  endpoint:
    path: rustworkx.PyDiGraph.add_child
    method: GET
- name: adj
  endpoint:
    path: /PyDiGraph/adj
    method: GET
    data_selector: dict[int, T]
    params:
      node: int
- name: PyDiGraph.adj_direction
  endpoint:
    path: /PyDiGraph/adj_direction
    method: GET
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: add_edge
  endpoint:
    path: /rustworkx/PyDiGraph/add_edge
    method: POST
    data_selector: edge
    params: {}
- name: add_edges_from
  endpoint:
    path: /PyDiGraph/add_edges_from
    method: GET
- name: add_edges_from_no_data
  endpoint:
    path: /rustworkx/PyDiGraph/add_edges_from_no_data
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /PyDiGraph/can_contract_without_cycle
    method: GET
- name: PyDiGraph.clear
  endpoint:
    path: /PyDiGraph/clear
    method: GET
- name: clear_edges
  endpoint:
    path: /rustworkx/PyDiGraph/clear_edges
    method: GET
- name: add_parent
  endpoint:
    path: /PyDiGraph/add_parent
    method: GET
- name: adj
  endpoint:
    path: /PyDiGraph/adj
    method: GET
    data_selector: dict[int, T]
    params:
      node: int
- name: contract_nodes
  endpoint:
    path: /PyDiGraph/contract_nodes
    method: GET
    data_selector: nodes
- name: copy
  endpoint:
    path: /PyDiGraph/copy
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /can_contract_without_cycle
    method: GET
- name: edge_index_map
  endpoint:
    path: /rustworkx.PyDiGraph.edge_index_map
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: /PyDiGraph/edge_indices_from_endpoints
    method: GET
    data_selector: indices
    params:
      node_a: int
      node_b: int
- name: compose
  endpoint:
    path: /rustworkx/PyDiGraph/compose
    method: GET
    data_selector: new_node_ids
    params: {}
- name: edge_list
  endpoint:
    path: /PyDiGraph/edge_list
    method: GET
    data_selector: edge list
- name: contract_nodes
  endpoint:
    path: rustworkx.PyDiGraph.contract_nodes
    method: GET
- name: edge_subgraph
  endpoint:
    path: /rustworkx/PyDiGraph/edge_subgraph
    method: GET
- name: edge_subgraph
  endpoint:
    path: /edge_subgraph
    method: GET
    data_selector: edge_list
    params: {}
- name: contract_nodes
  endpoint:
    path: /rustworkx/PyDiGraph/contract_nodes
    method: POST
    data_selector: parameters
    params: {}
- name: edges
  endpoint:
    path: /PyDiGraph.edges
    method: GET
- name: PyDiGraph.copy
  endpoint:
    path: rustworkx.PyDiGraph.copy
    method: GET
- name: edge_index_map
  endpoint:
    path: /rustworkx/PyDiGraph/edge_index_map
    method: GET
- name: extend_from_weighted_edge_list
  endpoint:
    path: /rustworkx.PyDiGraph/extend_from_weighted_edge_list
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /extend_from_weighted_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: edge_indices_from_endpoints
  endpoint:
    path: /rustworkx/PyDiGraph/edge_indices_from_endpoints
    method: GET
    data_selector: edge_indices
    params: {}
- name: edge_list
  endpoint:
    path: rustworkx.PyDiGraph.edge_list
    method: GET
- name: edge_list
  endpoint:
    path: /PyDiGraph/edge_list
    method: GET
    data_selector: edge_list
    params: {}
- name: find_adjacent_node_by_edge
  endpoint:
    path: /find_adjacent_node_by_edge
    method: GET
- name: edge_subgraph
  endpoint:
    path: /rustworkx.PyDiGraph.edge_subgraph
    method: GET
- name: edge_subgraph
  endpoint:
    path: PyDiGraph.edge_subgraph
    method: GET
    data_selector: edge_list
    params: {}
- name: find_node_by_weight
  endpoint:
    path: /rustworkx.PyDiGraph.find_node_by_weight
    method: GET
- name: PyDiGraph
  endpoint:
    path: /rustworkx/PyDiGraph
    method: GET
- name: extend_from_weighted_edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/extend_from_weighted_edge_list
    method: GET
- name: find_predecessor_node_by_edge
  endpoint:
    path: /PyDiGraph/find_predecessor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: weighted_edge_list
  endpoint:
    path: /extend_from_weighted_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
- name: filter_edges
  endpoint:
    path: /rustworkx.PyDiGraph.filter_edges
    method: GET
- name: find_predecessors_by_edge
  endpoint:
    path: /PyDiGraph/find_predecessors_by_edge
    method: GET
    data_selector: node_data
    params: {}
- name: find_successor_node_by_edge
  endpoint:
    path: /PyDiGraph/find_successor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: filter_nodes
  endpoint:
    path: /rustworkx/PyDiGraph/filter_nodes
    method: GET
    data_selector: node indices
    params: {}
- name: find_adjacent_node_by_edge
  endpoint:
    path: rustworkx.PyDiGraph.find_adjacent_node_by_edge
    method: GET
    data_selector: records
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
    data_selector: successors
    params: {}
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
    data_selector: records
- name: find_node_by_weight
  endpoint:
    path: /rustworkx/PyDiGraph/find_node_by_weight
    method: GET
    data_selector: returns
    params: {}
- name: find_predecessor_node_by_edge
  endpoint:
    path: /rustworkx/PyDiGraph/find_predecessor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: PyDiGraph
  endpoint:
    path: /from_complex_adjacency_matrix
    method: POST
    data_selector: graph_object
    params:
      matrix: ndarray
      null_value: complex
- name: get_all_edge_data
  endpoint:
    path: /PyDiGraph/get_all_edge_data
    method: GET
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
    data_selector: list[S]
    params: {}
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
    data_selector: list[T]
    params: {}
- name: get_edge_data
  endpoint:
    path: /rustworkx/PyDiGraph/get_edge_data
    method: GET
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
- name: find_successor_node_by_edge
  endpoint:
    path: /PyDiGraph/find_successor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: edge_data
  endpoint:
    path: /get_edge_data
    method: GET
    data_selector: data object
    params: {}
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
- name: get_edge_data_by_index
  endpoint:
    path: /rustworkx.PyDiGraph.get_edge_data_by_index
    method: GET
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
    data_selector: successors
    params: {}
- name: edge_data
  endpoint:
    path: /get_edge_data_by_index
    method: GET
    data_selector: data
    params:
      edge_index: int
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: get_edge_endpoints_by_index
  endpoint:
    path: rustworkx.PyDiGraph.get_edge_endpoints_by_index
    method: GET
- name: PyDiGraph
  endpoint:
    path: /from_adjacency_matrix
    method: POST
    data_selector: new_graph_object
    params:
      matrix: ndarray
      null_value: float
- name: get_edge_endpoints_by_index
  endpoint:
    path: /PyDiGraph/get_edge_endpoints_by_index
    method: GET
    data_selector: endpoint tuple
    params:
      edge_index: int
- name: get_node_data
  endpoint:
    path: /rustworkx/PyDiGraph/get_node_data
    method: GET
- name: PyDiGraph
  endpoint:
    path: /rustworkx/PyDiGraph/from_complex_adjacency_matrix
    method: GET
    data_selector: matrix
    params:
      null_value: 0.0+0.0j
- name: get_all_edge_data
  endpoint:
    path: /PyDiGraph/get_all_edge_data
    method: GET
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /rustworkx/PyDiGraph/get_all_edge_data
    method: GET
    data_selector: list[T]
    params: {}
- name: has_edge
  endpoint:
    path: /rustworkx/PyDiGraph/has_edge
    method: GET
    data_selector: returns
    params: {}
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
- name: PyDiGraph
  endpoint:
    path: /api/PyDiGraph
    method: GET
    data_selector: nodes
- name: get_edge_data_by_index
  endpoint:
    path: /PyDiGraph/get_edge_data_by_index
    method: GET
- name: has_node
  endpoint:
    path: /rustworkx/PyDiGraph/has_node
    method: GET
    data_selector: returns
    params:
      node: int
- name: has_parallel_edges
  endpoint:
    path: rustworkx.PyDiGraph.has_parallel_edges
    method: GET
- name: get_edge_data_by_index
  endpoint:
    path: /rustworkx/PyDiGraph/get_edge_data_by_index
    method: GET
    data_selector: data object for the edge
    params:
      edge_index: int
- name: get_edge_endpoints_by_index
  endpoint:
    path: rustworkx.PyDiGraph.get_edge_endpoints_by_index
    method: GET
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
    data_selector: endpoint_tuple
    params:
      edge_index: int
- name: get_node_data
  endpoint:
    path: rustworkx.PyDiGraph.get_node_data
    method: GET
- name: in_edges
  endpoint:
    path: /in_edges
    method: GET
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: in_edges
  endpoint:
    path: /PyDiGraph/in_edges
    method: GET
    data_selector: tuples
    params:
      node: int
- name: has_edge
  endpoint:
    path: rustworkx.PyDiGraph.has_edge
    method: GET
    data_selector: bool
    params: {}
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyDiGraph/incident_edge_index_map
    method: GET
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: incident_edge_index_map
  endpoint:
    path: /PyDiGraph/incident_edge_index_map
    method: GET
    data_selector: mapping
    params: {}
- name: has_parallel_edges
  endpoint:
    path: rustworkx.PyDiGraph.has_parallel_edges
    method: GET
- name: incident_edges
  endpoint:
    path: /PyDiGraph/incident_edges
    method: GET
    data_selector: edge_indices
    params:
      node: int
      all_edges: bool
- name: in_degree
  endpoint:
    path: rustworkx.PyDiGraph.in_degree
    method: GET
- name: in_degree
  endpoint:
    path: /PyDiGraph/in_degree
    method: GET
    data_selector: inbound_edges
    params:
      node: int
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /rustworkx.PyDiGraph.insert_node_on_in_edges_multiple
    method: GET
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /rustworkx/PyDiGraph/insert_node_on_in_edges_multiple
    method: GET
    data_selector: parameters
    params: {}
- name: insert_node_on_out_edges_multiple
  endpoint:
    path: /rustworkx.PyDiGraph.insert_node_on_out_edges_multiple
    method: GET
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyDiGraph/incident_edge_index_map
    method: GET
- name: insert_node_on_out_edges_multiple
  endpoint:
    path: /insert_node_on_out_edges_multiple
    method: POST
    data_selector: parameters
    params: {}
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyDiGraph/incident_edge_index_map
    method: GET
    data_selector: EdgeIndexMap
    params: {}
- name: PyDiGraph.is_symmetric
  endpoint:
    path: /PyDiGraph/is_symmetric
    method: GET
- name: incident_edges
  endpoint:
    path: /PyDiGraph/incident_edges
    method: GET
    data_selector: edge_indices
    params:
      node: int
      all_edges: bool
- name: neighbors
  endpoint:
    path: /PyDiGraph/neighbors
    method: GET
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
    data_selector: NodeIndices
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /rustworkx/PyDiGraph/insert_node_on_in_edges_multiple
    method: GET
    data_selector: parameters
    params: {}
- name: insert_node_on_out_edges
  endpoint:
    path: /insert_node_on_out_edges
    method: GET
- name: node_indexes
  endpoint:
    path: rustworkx.PyDiGraph.node_indexes
    method: GET
- name: node_indices
  endpoint:
    path: rustworkx.PyDiGraph.node_indices
    method: GET
    data_selector: records
- name: PyDAG
  endpoint:
    path: /api/pydag
    method: GET
    data_selector: nodes
    params: {}
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph
    method: GET
- name: num_edges
  endpoint:
    path: /PyDiGraph.num_edges
    method: GET
    data_selector: '#'
- name: make_symmetric
  endpoint:
    path: /rustworkx/PyDiGraph/make_symmetric
    method: GET
    data_selector: edge_payload
    params: {}
- name: merge_nodes
  endpoint:
    path: /rustworkx/PyDiGraph/merge_nodes
    method: GET
- name: out_degree
  endpoint:
    path: /rustworkx/PyDiGraph/out_degree
    method: GET
- name: out_edge_indices
  endpoint:
    path: /out_edge_indices
    method: GET
    data_selector: outgoing_edges
    params:
      node: int
- name: node_indices
  endpoint:
    path: rustworkx.PyDiGraph.node_indices
    method: GET
- name: out_edges
  endpoint:
    path: /rustworkx/PyDiGraph/out_edges
    method: GET
    data_selector: out_edges
- name: predecessors
  endpoint:
    path: /rustworkx/PyDiGraph/predecessors
    method: GET
- name: predecessors
  endpoint:
    path: /predecessors
    method: GET
    data_selector: node_data
    params:
      node: node_index
- name: out_degree
  endpoint:
    path: /PyDiGraph/out_degree
    method: GET
    data_selector: records
- name: read_edge_list
  endpoint:
    path: /PyDiGraph/read_edge_list
    method: GET
- name: edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/read_edge_list
    method: GET
    data_selector: edge_list
    params: {}
- name: remove_edge
  endpoint:
    path: /rustworkx/PyDiGraph/remove_edge
    method: GET
- name: out_edge_indices
  endpoint:
    path: /rustworkx.PyDiGraph.out_edge_indices
    method: GET
    data_selector: outgoing edge indices
    params: {}
- name: out_edges
  endpoint:
    path: /rustworkx/PyDiGraph/out_edges
    method: GET
    data_selector: out_edges
    params:
      node: int
- name: remove_edges_from
  endpoint:
    path: /PyDiGraph/remove_edges_from
    method: GET
- name: predecessor_indices
  endpoint:
    path: /rustworkx/PyDiGraph/predecessor_indices
    method: GET
    data_selector: NodeIndices
- name: remove_node
  endpoint:
    path: /PyDiGraph/remove_node
    method: POST
- name: read_edge_list
  endpoint:
    path: rustworkx.PyDiGraph.read_edge_list
    method: GET
- name: read_edge_list
  endpoint:
    path: /PyDiGraph/read_edge_list
    method: GET
    data_selector: records
    params: {}
- name: remove_node_retain_edges
  endpoint:
    path: /rustworkx/PyDiGraph/remove_node_retain_edges
    method: GET
    data_selector: ''
    params: {}
- name: remove_edge
  endpoint:
    path: /rustworkx/PyDiGraph/remove_edge
    method: GET
- name: remove_node_retain_edges_by_id
  endpoint:
    path: /rustworkx.PyDiGraph.remove_node_retain_edges_by_id
    method: GET
- name: remove_edge_from_index
  endpoint:
    path: /rustworkx/PyDiGraph/remove_edge_from_index
    method: GET
- name: remove_edges_from
  endpoint:
    path: /rustworkx/PyDiGraph/remove_edges_from
    method: GET
- name: remove_nodes_from
  endpoint:
    path: rustworkx.PyDiGraph.remove_nodes_from
    method: GET
- name: PyDiGraph.remove_node
  endpoint:
    path: /rustworkx.PyDiGraph.remove_node
    method: GET
- name: remove_node_retain_edges
  endpoint:
    path: /rustworkx/PyDiGraph/remove_node_retain_edges
    method: GET
- name: subgraph_with_nodemap
  endpoint:
    path: /subgraph_with_nodemap
    method: GET
    data_selector: tuple
    params: {}
- name: substitute_node_with_subgraph
  endpoint:
    path: rustworkx.PyDiGraph.substitute_node_with_subgraph
    method: GET
- name: remove_node_retain_edges
  endpoint:
    path: /rustworkx/PyDiGraph/remove_node_retain_edges
    method: GET
    data_selector: parameters
    params: {}
- name: successor_indices
  endpoint:
    path: /PyDiGraph/successor_indices
    method: GET
    data_selector: NodeIndices
- name: successors
  endpoint:
    path: /PyDiGraph/successors
    method: GET
    data_selector: NodeIndices
- name: find_successors_by_edge
  endpoint:
    path: /PyDiGraph/find_successors_by_edge
    method: GET
    data_selector: NodeIndices
- name: predecessor_indices
  endpoint:
    path: /PyDiGraph/predecessor_indices
    method: GET
    data_selector: NodeIndices
- name: neighbors
  endpoint:
    path: /PyGraph/neighbors
    method: GET
    data_selector: NodeIndices
- name: successors
  endpoint:
    path: /rustworkx/PyDiGraph.successors
    method: GET
- name: PyDiGraph.to_dot
  endpoint:
    path: rustworkx.PyDiGraph.to_dot
    method: GET
- name: PyDiGraph_to_dot
  endpoint:
    path: /rustworkx/PyDiGraph/to_dot
    method: GET
    data_selector: dot_file_contents
    params: {}
- name: to_undirected
  endpoint:
    path: /to_undirected
    method: GET
- name: PyDiGraph.to_undirected
  endpoint:
    path: /rustworkx/PyDiGraph/to_undirected
    method: GET
    data_selector: PyGraph
    params: {}
- name: PyDiGraph.update_edge
  endpoint:
    path: rustworkx.PyDiGraph.update_edge
    method: GET
- name: substitute_node_with_subgraph
  endpoint:
    path: /PyDiGraph/substitute_node_with_subgraph
    method: GET
- name: update_edge_by_index
  endpoint:
    path: /rustworkx/PyDiGraph/update_edge_by_index
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/weighted_edge_list
    method: GET
- name: successor_indices
  endpoint:
    path: /successor_indices
    method: GET
    data_selector: NodeIndices
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/weighted_edge_list
    method: GET
    data_selector: edge_list_with_weights
- name: successors
  endpoint:
    path: /PyDiGraph/successors
    method: GET
    data_selector: node data
    params: {}
- name: PyDiGraph.to_dot
  endpoint:
    path: /PyDiGraph/to_dot
    method: GET
- name: write_edge_list
  endpoint:
    path: /PyDiGraph/write_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: PyDiGraph.to_dot
  endpoint:
    path: /PyDiGraph/to_dot
    method: GET
    data_selector: dot_file_contents
- name: update_edge
  endpoint:
    path: /PyDiGraph/update_edge
    method: POST
    data_selector: parameters
    params:
      source: int
      target: int
- name: update_edge_by_index
  endpoint:
    path: /update_edge_by_index
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/weighted_edge_list
    method: GET
    data_selector: edge_list
    params: {}
- name: write_edge_list
  endpoint:
    path: /rustworkx/PyDiGraph/write_edge_list
    method: GET
- name: edge_list
  endpoint:
    path: /PyDiGraph/write_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: add_child
  endpoint:
    path: /add_child
    method: GET
- name: add_edge
  endpoint:
    path: /add_edge
    method: GET
- name: add_edges_from
  endpoint:
    path: /add_edges_from
    method: GET
- name: add_edges_from_no_data
  endpoint:
    path: /add_edges_from_no_data
    method: GET
- name: add_node
  endpoint:
    path: /add_node
    method: GET
- name: add_nodes_from
  endpoint:
    path: /add_nodes_from
    method: GET
- name: add_parent
  endpoint:
    path: /add_parent
    method: GET
- name: adj
  endpoint:
    path: /adj
    method: GET
- name: adj_direction
  endpoint:
    path: /adj_direction
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /can_contract_without_cycle
    method: GET
- name: clear
  endpoint:
    path: /clear
    method: GET
- name: clear_edges
  endpoint:
    path: /clear_edges
    method: GET
- name: compose
  endpoint:
    path: /compose
    method: GET
- name: contract_nodes
  endpoint:
    path: /contract_nodes
    method: GET
- name: copy
  endpoint:
    path: /copy
    method: GET
- name: edge_index_map
  endpoint:
    path: /edge_index_map
    method: GET
- name: edge_indices
  endpoint:
    path: /edge_indices
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: /edge_indices_from_endpoints
    method: GET
- name: edge_list
  endpoint:
    path: /edge_list
    method: GET
- name: edge_subgraph
  endpoint:
    path: /edge_subgraph
    method: GET
- name: edges
  endpoint:
    path: /edges
    method: GET
- name: extend_from_edge_list
  endpoint:
    path: /extend_from_edge_list
    method: GET
- name: extend_from_weighted_edge_list
  endpoint:
    path: /extend_from_weighted_edge_list
    method: GET
- name: filter_edges
  endpoint:
    path: /filter_edges
    method: GET
- name: filter_nodes
  endpoint:
    path: /filter_nodes
    method: GET
- name: find_adjacent_node_by_edge
  endpoint:
    path: /find_adjacent_node_by_edge
    method: GET
- name: find_node_by_weight
  endpoint:
    path: /find_node_by_weight
    method: GET
- name: find_predecessor_node_by_edge
  endpoint:
    path: /find_predecessor_node_by_edge
    method: GET
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
- name: from_adjacency_matrix
  endpoint:
    path: /from_adjacency_matrix
    method: GET
- name: from_complex_adjacency_matrix
  endpoint:
    path: /from_complex_adjacency_matrix
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
- name: get_edge_data_by_index
  endpoint:
    path: /get_edge_data_by_index
    method: GET
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
- name: get_node_data
  endpoint:
    path: /get_node_data
    method: GET
- name: has_edge
  endpoint:
    path: /has_edge
    method: GET
- name: has_node
  endpoint:
    path: /has_node
    method: GET
- name: has_parallel_edges
  endpoint:
    path: /has_parallel_edges
    method: GET
- name: in_degree
  endpoint:
    path: /in_degree
    method: GET
- name: in_edge_indices
  endpoint:
    path: /in_edge_indices
    method: GET
- name: in_edges
  endpoint:
    path: /in_edges
    method: GET
- name: incident_edge_index_map
  endpoint:
    path: /incident_edge_index_map
    method: GET
- name: incident_edges
  endpoint:
    path: /incident_edges
    method: GET
- name: insert_node_on_in_edges
  endpoint:
    path: /insert_node_on_in_edges
    method: GET
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /insert_node_on_in_edges_multiple
    method: GET
- name: insert_node_on_out_edges
  endpoint:
    path: /insert_node_on_out_edges
    method: GET
- name: insert_node_on_out_edges_multiple
  endpoint:
    path: /insert_node_on_out_edges_multiple
    method: GET
- name: is_symmetric
  endpoint:
    path: /is_symmetric
    method: GET
- name: make_symmetric
  endpoint:
    path: /make_symmetric
    method: GET
- name: merge_nodes
  endpoint:
    path: /merge_nodes
    method: GET
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
- name: neighbors_undirected
  endpoint:
    path: /neighbors_undirected
    method: GET
- name: node_indexes
  endpoint:
    path: /node_indexes
    method: GET
- name: node_indices
  endpoint:
    path: /node_indices
    method: GET
- name: nodes
  endpoint:
    path: /nodes
    method: GET
- name: num_edges
  endpoint:
    path: /num_edges
    method: GET
- name: num_nodes
  endpoint:
    path: /num_nodes
    method: GET
- name: out_degree
  endpoint:
    path: /out_degree
    method: GET
- name: out_edge_indices
  endpoint:
    path: /out_edge_indices
    method: GET
- name: out_edges
  endpoint:
    path: /out_edges
    method: GET
- name: predecessor_indices
  endpoint:
    path: /predecessor_indices
    method: GET
- name: predecessors
  endpoint:
    path: /predecessors
    method: GET
- name: read_edge_list
  endpoint:
    path: /read_edge_list
    method: GET
- name: remove_edge
  endpoint:
    path: /remove_edge
    method: GET
- name: remove_edge_from_index
  endpoint:
    path: /remove_edge_from_index
    method: GET
- name: remove_edges_from
  endpoint:
    path: /remove_edges_from
    method: GET
- name: remove_node
  endpoint:
    path: /remove_node
    method: GET
- name: remove_node_retain_edges
  endpoint:
    path: /remove_node_retain_edges
    method: GET
- name: remove_node_retain_edges_by_id
  endpoint:
    path: /remove_node_retain_edges_by_id
    method: GET
- name: remove_node_retain_edges_by_key
  endpoint:
    path: /remove_node_retain_edges_by_key
    method: GET
- name: remove_nodes_from
  endpoint:
    path: /remove_nodes_from
    method: GET
- name: reverse
  endpoint:
    path: /reverse
    method: GET
- name: subgraph
  endpoint:
    path: /subgraph
    method: GET
- name: subgraph_with_nodemap
  endpoint:
    path: /subgraph_with_nodemap
    method: GET
- name: substitute_node_with_subgraph
  endpoint:
    path: /substitute_node_with_subgraph
    method: GET
- name: successor_indices
  endpoint:
    path: /successor_indices
    method: GET
- name: successors
  endpoint:
    path: /successors
    method: GET
- name: to_dot
  endpoint:
    path: /to_dot
    method: GET
- name: to_undirected
  endpoint:
    path: /to_undirected
    method: GET
- name: update_edge
  endpoint:
    path: /update_edge
    method: GET
- name: update_edge_by_index
  endpoint:
    path: /update_edge_by_index
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /weighted_edge_list
    method: GET
- name: write_edge_list
  endpoint:
    path: /write_edge_list
    method: GET
- name: add_child
  endpoint:
    path: /rustworkx.PyDAG.add_child
    method: GET
- name: add_edge
  endpoint:
    path: /PyDAG/add_edge
    method: GET
- name: add_child
  endpoint:
    path: /add_child
    method: POST
    data_selector: result
    params: {}
- name: add_edge
  endpoint:
    path: /add_edge
    method: POST
    data_selector: result
    params: {}
- name: add_edges_from
  endpoint:
    path: /add_edges_from
    method: POST
    data_selector: result
    params: {}
- name: add_edges_from_no_data
  endpoint:
    path: /add_edges_from_no_data
    method: POST
    data_selector: result
    params: {}
- name: add_node
  endpoint:
    path: /add_node
    method: POST
    data_selector: result
    params: {}
- name: add_nodes_from
  endpoint:
    path: /add_nodes_from
    method: POST
    data_selector: result
    params: {}
- name: add_parent
  endpoint:
    path: /add_parent
    method: POST
    data_selector: result
    params: {}
- name: adj
  endpoint:
    path: /adj
    method: GET
    data_selector: result
    params: {}
- name: add_edges_from
  endpoint:
    path: /rustworkx/PyDAG/add_edges_from
    method: GET
    data_selector: records
- name: PyDAG_add_edges_from
  endpoint:
    path: /rustworkx/PyDAG/add_edges_from
    method: POST
    data_selector: return_value
    params: {}
- name: add_edges_from
  endpoint:
    path: /PyDAG/add_edges_from
    method: GET
- name: add_edges_from_no_data
  endpoint:
    path: /PyDAG/add_edges_from_no_data
    method: GET
- name: add_edges_from_no_data
  endpoint:
    path: /PyDiGraph/add_edges_from_no_data
    method: GET
- name: add_node
  endpoint:
    path: /rustworkx.PyDAG.add_node
    method: GET
- name: add_node
  endpoint:
    path: rustworkx.PyDAG.add_node
    method: GET
- name: add_nodes_from
  endpoint:
    path: /rustworkx/PyDAG/add_nodes_from
    method: GET
    data_selector: records
- name: adj
  endpoint:
    path: /PyDAG/adj
    method: GET
- name: add_parent
  endpoint:
    path: /add_parent
    method: GET
- name: adjacency
  endpoint:
    path: /PyDAG/adj
    method: GET
    data_selector: neighbors
    params:
      node: int
- name: adj_direction
  endpoint:
    path: /rustworkx/PyDAG/adj_direction
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /rustworkx/PyDAG/can_contract_without_cycle
    method: GET
- name: adj_direction
  endpoint:
    path: /rustworkx/PyDAG/adj_direction
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /rustworkx/PyDAG/can_contract_without_cycle
    method: GET
    data_selector: parameters
    params: {}
- name: can_contract_without_cycle
  endpoint:
    path: /api/PyDAG/can_contract_without_cycle
    method: GET
- name: can_contract_without_cycle
  endpoint:
    path: /rustworkx/PyDAG/can_contract_without_cycle
    method: GET
    data_selector: results
    params: {}
- name: compose
  endpoint:
    path: /PyDAG/compose
    method: GET
- name: clear_edges
  endpoint:
    path: /rustworkx/PyDAG/clear_edges
    method: GET
- name: compose
  endpoint:
    path: /rustworkx/PyDAG/compose
    method: POST
    data_selector: new_node_ids
- name: compose
  endpoint:
    path: /PyDAG/compose
    method: GET
    data_selector: ''
    params: {}
- name: contract_nodes
  endpoint:
    path: /rustworkx/PyDAG/contract_nodes
    method: GET
    data_selector: parameters
    params:
      nodes: list[int]
      obj: S
      check_cycle: bool
      weight_combo_fn: Callable
- name: copy
  endpoint:
    path: /PyDAG/copy
    method: GET
- name: compose
  endpoint:
    path: /PyDAG/compose
    method: POST
    data_selector: new_node_ids
- name: contract_nodes
  endpoint:
    path: /rustworkx/PyDAG/contract_nodes
    method: GET
    data_selector: return_value
    params: {}
- name: copy
  endpoint:
    path: /rustworkx.PyDAG.copy
    method: GET
- name: edge_indices
  endpoint:
    path: /api/edge_indices
    method: GET
    data_selector: records
- name: edge_indices_from_endpoints
  endpoint:
    path: /rustworkx.PyDAG.edge_indices_from_endpoints
    method: GET
- name: edge_indices
  endpoint:
    path: /PyDAG/edge_indices
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: /rustworkx/PyDAG/edge_indices_from_endpoints
    method: GET
    data_selector: edge_indices
    params: {}
- name: edge_list
  endpoint:
    path: /PyDAG/edge_list
    method: GET
- name: edge_indices_from_endpoints
  endpoint:
    path: rustworkx.PyDAG.edge_indices_from_endpoints
    method: GET
- name: edge_list
  endpoint:
    path: /PyDAG/edge_list
    method: GET
    data_selector: edge list without weights
- name: edge_list
  endpoint:
    path: /PyDAG/edge_list
    method: GET
- name: edge_list
  endpoint:
    path: /rustworkx/PyDAG/edge_list
    method: GET
    data_selector: edge_list
    params: {}
- name: edge_subgraph
  endpoint:
    path: /edge_subgraph
    method: GET
    data_selector: subgraph
- name: extend_from_edge_list
  endpoint:
    path: /rustworkx/PyDAG/extend_from_edge_list
    method: GET
    data_selector: parameters
    params: {}
- name: extend_from_weighted_edge_list
  endpoint:
    path: /rustworkx/PyDAG/extend_from_weighted_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: PyDAG
  endpoint:
    path: /extend_from_edge_list
    method: POST
    data_selector: edge_list
    params: {}
- name: filter_edges
  endpoint:
    path: /PyDAG/filter_edges
    method: GET
- name: extend_from_weighted_edge_list
  endpoint:
    path: /api/rustworkx/PyDAG/extend_from_weighted_edge_list
    method: GET
    data_selector: records
- name: filter_edges
  endpoint:
    path: /rustworkx/PyDAG/filter_edges
    method: GET
    data_selector: edge_indices
    params: {}
- name: extend_from_weighted_edge_list
  endpoint:
    path: /rustworkx/PyDAG/extend_from_weighted_edge_list
    method: GET
    data_selector: parameters
    params: {}
- name: filter_nodes
  endpoint:
    path: /filter_nodes
    method: GET
    data_selector: node_indices
    params: {}
- name: filter_edges
  endpoint:
    path: /rustworkx/PyDAG/filter_edges
    method: GET
    data_selector: edge_indices
- name: find_adjacent_node_by_edge
  endpoint:
    path: /PyDAG/find_adjacent_node_by_edge
    method: GET
- name: filter_nodes
  endpoint:
    path: /PyDAG/filter_nodes
    method: GET
- name: find_adjacent_node_by_edge
  endpoint:
    path: /find_adjacent_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: filter_nodes
  endpoint:
    path: /filter_nodes
    method: POST
    data_selector: node_indices
    params: {}
- name: find_node_by_weight
  endpoint:
    path: /rustworkx/PyDAG/find_node_by_weight
    method: GET
- name: find_adjacent_node_by_edge
  endpoint:
    path: /find_adjacent_node_by_edge
    method: GET
- name: find_predecessor_node_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_predecessor_node_by_edge
    method: GET
- name: find_predecessor_node_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_predecessor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
    data_selector: node_data
    params: {}
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
- name: find_successor_node_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_successor_node_by_edge
    method: GET
    data_selector: successor_node
    params: {}
- name: find_successors_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_successors_by_edge
    method: GET
    data_selector: successors
    params: {}
- name: PyDAG
  endpoint:
    path: /PyDAG/from_adjacency_matrix
    method: GET
- name: PyGraph
  endpoint:
    path: /PyGraph/from_adjacency_matrix
    method: GET
- name: PyDiGraph
  endpoint:
    path: /PyDiGraph/from_adjacency_matrix
    method: GET
- name: PyDAG
  endpoint:
    path: /rustworkx/PyDAG/from_adjacency_matrix
    method: GET
    data_selector: matrix
    params:
      null_value: 0.0
- name: from_complex_adjacency_matrix
  endpoint:
    path: /from_complex_adjacency_matrix
    method: GET
- name: graph_is_isomorphic
  endpoint:
    path: /rustworkx/graph_is_isomorphic
    method: GET
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /rustworkx/graph_is_subgraph_isomorphic
    method: GET
- name: graph_vf2_mapping
  endpoint:
    path: /rustworkx/graph_vf2_mapping
    method: GET
- name: graph_distance_matrix
  endpoint:
    path: /rustworkx/graph_distance_matrix
    method: GET
- name: graph_floyd_warshall
  endpoint:
    path: /rustworkx/graph_floyd_warshall
    method: GET
- name: graph_floyd_warshall_numpy
  endpoint:
    path: /rustworkx/graph_floyd_warshall_numpy
    method: GET
- name: graph_floyd_warshall_successor_and_distance
  endpoint:
    path: /rustworkx/graph_floyd_warshall_successor_and_distance
    method: GET
- name: graph_adjacency_matrix
  endpoint:
    path: /rustworkx/graph_adjacency_matrix
    method: GET
- name: graph_all_simple_paths
  endpoint:
    path: /rustworkx/graph_all_simple_paths
    method: GET
- name: graph_all_pairs_all_simple_paths
  endpoint:
    path: /rustworkx/graph_all_pairs_all_simple_paths
    method: GET
- name: graph_astar_shortest_path
  endpoint:
    path: /rustworkx/graph_astar_shortest_path
    method: GET
- name: graph_dijkstra_shortest_paths
  endpoint:
    path: /rustworkx/graph_dijkstra_shortest_paths
    method: GET
- name: graph_dijkstra_shortest_path_lengths
  endpoint:
    path: /rustworkx/graph_dijkstra_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /rustworkx/graph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: graph_k_shortest_path_lengths
  endpoint:
    path: /rustworkx/graph_k_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /rustworkx/graph_all_pairs_dijkstra_path_lengths
    method: GET
- name: graph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /rustworkx/graph_bellman_ford_shortest_path_lengths
    method: GET
- name: graph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /rustworkx/graph_all_pairs_bellman_ford_shortest_paths
    method: GET
- name: graph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /rustworkx/graph_all_pairs_bellman_ford_path_lengths
    method: GET
- name: graph_all_shortest_paths
  endpoint:
    path: /rustworkx/graph_all_shortest_paths
    method: GET
- name: graph_single_source_all_shortest_paths
  endpoint:
    path: /rustworkx/graph_single_source_all_shortest_paths
    method: GET
- name: graph_dfs_edges
  endpoint:
    path: /rustworkx/graph_dfs_edges
    method: GET
- name: graph_dfs_search
  endpoint:
    path: /rustworkx/graph_dfs_search
    method: GET
- name: graph_transitivity
  endpoint:
    path: /rustworkx/graph_transitivity
    method: GET
- name: graph_core_number
  endpoint:
    path: /rustworkx/graph_core_number
    method: GET
- name: graph_complement
  endpoint:
    path: /rustworkx/graph_complement
    method: GET
- name: graph_union
  endpoint:
    path: /rustworkx/graph_union
    method: GET
- name: graph_tensor_product
  endpoint:
    path: /rustworkx/graph_tensor_product
    method: GET
- name: graph_token_swapper
  endpoint:
    path: /rustworkx/graph_token_swapper
    method: GET
- name: graph_cartesian_product
  endpoint:
    path: /rustworkx/graph_cartesian_product
    method: GET
- name: graph_random_layout
  endpoint:
    path: /rustworkx/graph_random_layout
    method: GET
- name: graph_bipartite_layout
  endpoint:
    path: /rustworkx/graph_bipartite_layout
    method: GET
- name: graph_circular_layout
  endpoint:
    path: /rustworkx/graph_circular_layout
    method: GET
- name: graph_shell_layout
  endpoint:
    path: /rustworkx/graph_shell_layout
    method: GET
- name: graph_spiral_layout
  endpoint:
    path: /rustworkx/graph_spiral_layout
    method: GET
- name: graph_spring_layout
  endpoint:
    path: /rustworkx/graph_spring_layout
    method: GET
- name: graph_num_shortest_paths_unweighted
  endpoint:
    path: /rustworkx/graph_num_shortest_paths_unweighted
    method: GET
- name: graph_betweenness_centrality
  endpoint:
    path: /rustworkx/graph_betweenness_centrality
    method: GET
- name: graph_edge_betweenness_centrality
  endpoint:
    path: /rustworkx/graph_edge_betweenness_centrality
    method: GET
- name: graph_closeness_centrality
  endpoint:
    path: /rustworkx/graph_closeness_centrality
    method: GET
- name: graph_newman_weighted_closeness_centrality
  endpoint:
    path: /rustworkx/graph_newman_weighted_closeness_centrality
    method: GET
- name: graph_eigenvector_centrality
  endpoint:
    path: /rustworkx/graph_eigenvector_centrality
    method: GET
- name: graph_katz_centrality
  endpoint:
    path: /rustworkx/graph_katz_centrality
    method: GET
- name: graph_unweighted_average_shortest_path_length
  endpoint:
    path: /rustworkx/graph_unweighted_average_shortest_path_length
    method: GET
- name: graph_bfs_search
  endpoint:
    path: /rustworkx/graph_bfs_search
    method: GET
- name: graph_dijkstra_search
  endpoint:
    path: /rustworkx/graph_dijkstra_search
    method: GET
- name: graph_node_link_json
  endpoint:
    path: /rustworkx/graph_node_link_json
    method: GET
- name: graph_longest_simple_path
  endpoint:
    path: /rustworkx/graph_longest_simple_path
    method: GET
- name: find_adjacent_node_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_adjacent_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: PyDAG
  endpoint:
    path: /rustworkx/PyDAG/from_complex_adjacency_matrix
    method: GET
    data_selector: graph
    params:
      matrix: ndarray
      null_value: complex
- name: find_node_by_weight
  endpoint:
    path: /rustworkx/PyDAG/find_node_by_weight
    method: GET
    data_selector: returns
    params: {}
- name: find_predecessor_node_by_edge
  endpoint:
    path: /PyDAG/find_predecessor_node_by_edge
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /rustworkx.PyDAG.get_all_edge_data
    method: GET
    data_selector: list[T]
    params:
      node_a: int
      node_b: int
- name: find_predecessor_node_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_predecessor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
- name: get_edge_data_by_index
  endpoint:
    path: /PyDAG/get_edge_data_by_index
    method: GET
- name: find_predecessors_by_edge
  endpoint:
    path: /find_predecessors_by_edge
    method: GET
    data_selector: node_data
    params: {}
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
    data_selector: successor
- name: edge_data
  endpoint:
    path: /get_edge_data_by_index
    method: GET
    data_selector: data
    params:
      edge_index: int
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
- name: find_successor_node_by_edge
  endpoint:
    path: /find_successor_node_by_edge
    method: GET
    data_selector: node
    params: {}
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
    data_selector: endpoint tuple
    params:
      edge_index: int
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
- name: find_successors_by_edge
  endpoint:
    path: /rustworkx/PyDAG/find_successors_by_edge
    method: GET
    data_selector: list[S]
    params: {}
- name: from_adjacency_matrix
  endpoint:
    path: /PyDAG/from_adjacency_matrix
    method: GET
- name: has_edge
  endpoint:
    path: /rustworkx/PyDAG/has_edge
    method: GET
- name: PyDAG
  endpoint:
    path: /PyDAG/from_complex_adjacency_matrix
    method: static
    data_selector: graph
    params:
      matrix: ndarray
      null_value: complex
- name: has_parallel_edges
  endpoint:
    path: /rustworkx/PyDAG/has_parallel_edges
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /get_all_edge_data
    method: GET
    data_selector: data
    params: {}
- name: in_degree
  endpoint:
    path: /api/in_degree
    method: GET
- name: get_all_edge_data
  endpoint:
    path: /rustworkx/PyDAG/get_all_edge_data
    method: GET
    data_selector: list[T]
    params: {}
- name: in_degree
  endpoint:
    path: /PyDAG/in_degree
    method: GET
    data_selector: inbound_degree
    params:
      node: int
- name: get_edge_data
  endpoint:
    path: /get_edge_data
    method: GET
    data_selector: edge_data
    params: {}
- name: in_edge_indices
  endpoint:
    path: /in_edge_indices
    method: GET
    data_selector: incoming_edge_indices
    params:
      node: int
- name: get_edge_data_by_index
  endpoint:
    path: /rustworkx/PyDAG/get_edge_data_by_index
    method: GET
    data_selector: edge_data
- name: edge_data
  endpoint:
    path: /get_edge_data_by_index
    method: GET
    data_selector: data
    params:
      edge_index: int
- name: in_edges
  endpoint:
    path: /rustworkx/PyDAG/in_edges
    method: GET
    data_selector: list of tuples
    params:
      node: int
- name: get_edge_endpoints_by_index
  endpoint:
    path: /get_edge_endpoints_by_index
    method: GET
- name: incident_edge_index_map
  endpoint:
    path: /PyDAG/incident_edge_index_map
    method: GET
    data_selector: records
- name: get_edge_endpoints_by_index
  endpoint:
    path: /rustworkx/PyDAG/get_edge_endpoints_by_index
    method: GET
    data_selector: tuple[int, int]
    params:
      edge_index: int
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyDAG/incident_edge_index_map
    method: GET
    data_selector: mapping of incident edge indices
    params:
      node: int
      all_edges: bool
- name: get_node_data
  endpoint:
    path: /PyDAG/get_node_data
    method: GET
- name: incident_edges
  endpoint:
    path: /PyDAG.incident_edges
    method: GET
- name: incident_edges
  endpoint:
    path: /PyDAG/incident_edges
    method: GET
    data_selector: edge_indices
    params: {}
- name: has_edge
  endpoint:
    path: /PyDAG/has_edge
    method: GET
- name: insert_node_on_in_edges
  endpoint:
    path: /rustworkx.PyDAG.insert_node_on_in_edges
    method: GET
- name: insert_node_on_out_edges_multiple
  endpoint:
    path: /rustworkx/PyDAG/insert_node_on_out_edges_multiple
    method: GET
- name: is_symmetric
  endpoint:
    path: /rustworkx/PyDAG/is_symmetric
    method: GET
- name: make_symmetric
  endpoint:
    path: /rustworkx.PyDAG.make_symmetric
    method: GET
- name: merge_nodes
  endpoint:
    path: /PyDAG/merge_nodes
    method: GET
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
    data_selector: NodeIndices
- name: neighbors_undirected
  endpoint:
    path: /PyDAG/neighbors_undirected
    method: GET
- name: node_indexes
  endpoint:
    path: /PyDAG/node_indexes
    method: GET
- name: node_indices
  endpoint:
    path: /rustworkx.PyDAG.node_indices
    method: GET
- name: has_edge
  endpoint:
    path: /has_edge
    method: GET
    data_selector: exists
    params: {}
- name: num_edges
  endpoint:
    path: /rustworkx/PyDAG/num_edges
    method: GET
- name: out_degree
  endpoint:
    path: /PyDAG/out_degree
    method: GET
- name: in_degree
  endpoint:
    path: /PyDAG/in_degree
    method: GET
- name: in_degree
  endpoint:
    path: /rustworkx/PyDAG/in_degree
    method: GET
    data_selector: inbound_degree
    params:
      node: int
- name: out_edge_indices
  endpoint:
    path: /rustworkx/PyDAG/out_edge_indices
    method: GET
    data_selector: outgoing edge indices
    params:
      node: int
- name: out_edges
  endpoint:
    path: /rustworkx/PyDAG/out_edges
    method: GET
    data_selector: out_edges
    params:
      node: '*int*'
- name: predecessor_indices
  endpoint:
    path: /PyDAG/predecessor_indices
    method: GET
    data_selector: NodeIndices
- name: predecessors
  endpoint:
    path: /PyDAG/predecessors
    method: GET
    data_selector: node data of all node's predecessors
    params:
      node: int
- name: read_edge_list
  endpoint:
    path: /rustworkx/PyDAG/read_edge_list
    method: GET
    data_selector: records
    params: {}
- name: graph_is_isomorphic
  endpoint:
    path: /graph_is_isomorphic
    method: GET
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /graph_is_subgraph_isomorphic
    method: GET
- name: graph_vf2_mapping
  endpoint:
    path: /graph_vf2_mapping
    method: GET
- name: graph_distance_matrix
  endpoint:
    path: /graph_distance_matrix
    method: GET
- name: graph_floyd_warshall
  endpoint:
    path: /graph_floyd_warshall
    method: GET
- name: graph_floyd_warshall_numpy
  endpoint:
    path: /graph_floyd_warshall_numpy
    method: GET
- name: graph_floyd_warshall_successor_and_distance
  endpoint:
    path: /graph_floyd_warshall_successor_and_distance
    method: GET
- name: graph_adjacency_matrix
  endpoint:
    path: /graph_adjacency_matrix
    method: GET
- name: graph_all_simple_paths
  endpoint:
    path: /graph_all_simple_paths
    method: GET
- name: graph_all_pairs_all_simple_paths
  endpoint:
    path: /graph_all_pairs_all_simple_paths
    method: GET
- name: graph_astar_shortest_path
  endpoint:
    path: /graph_astar_shortest_path
    method: GET
- name: graph_dijkstra_shortest_paths
  endpoint:
    path: /graph_dijkstra_shortest_paths
    method: GET
- name: graph_dijkstra_shortest_path_lengths
  endpoint:
    path: /graph_dijkstra_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /graph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: graph_k_shortest_path_lengths
  endpoint:
    path: /graph_k_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /graph_all_pairs_dijkstra_path_lengths
    method: GET
- name: graph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /graph_bellman_ford_shortest_path_lengths
    method: GET
- name: graph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /graph_all_pairs_bellman_ford_shortest_paths
    method: GET
- name: graph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /graph_all_pairs_bellman_ford_path_lengths
    method: GET
- name: graph_all_shortest_paths
  endpoint:
    path: /graph_all_shortest_paths
    method: GET
- name: graph_single_source_all_shortest_paths
  endpoint:
    path: /graph_single_source_all_shortest_paths
    method: GET
- name: graph_dfs_edges
  endpoint:
    path: /graph_dfs_edges
    method: GET
- name: graph_dfs_search
  endpoint:
    path: /graph_dfs_search
    method: GET
- name: graph_transitivity
  endpoint:
    path: /graph_transitivity
    method: GET
- name: graph_core_number
  endpoint:
    path: /graph_core_number
    method: GET
- name: graph_complement
  endpoint:
    path: /graph_complement
    method: GET
- name: graph_union
  endpoint:
    path: /graph_union
    method: GET
- name: graph_tensor_product
  endpoint:
    path: /graph_tensor_product
    method: GET
- name: graph_token_swapper
  endpoint:
    path: /graph_token_swapper
    method: GET
- name: graph_cartesian_product
  endpoint:
    path: /graph_cartesian_product
    method: GET
- name: graph_random_layout
  endpoint:
    path: /graph_random_layout
    method: GET
- name: graph_bipartite_layout
  endpoint:
    path: /graph_bipartite_layout
    method: GET
- name: graph_circular_layout
  endpoint:
    path: /graph_circular_layout
    method: GET
- name: graph_shell_layout
  endpoint:
    path: /graph_shell_layout
    method: GET
- name: graph_spiral_layout
  endpoint:
    path: /graph_spiral_layout
    method: GET
- name: graph_spring_layout
  endpoint:
    path: /graph_spring_layout
    method: GET
- name: graph_num_shortest_paths_unweighted
  endpoint:
    path: /graph_num_shortest_paths_unweighted
    method: GET
- name: graph_betweenness_centrality
  endpoint:
    path: /graph_betweenness_centrality
    method: GET
- name: graph_edge_betweenness_centrality
  endpoint:
    path: /graph_edge_betweenness_centrality
    method: GET
- name: graph_closeness_centrality
  endpoint:
    path: /graph_closeness_centrality
    method: GET
- name: graph_newman_weighted_closeness_centrality
  endpoint:
    path: /graph_newman_weighted_closeness_centrality
    method: GET
- name: graph_eigenvector_centrality
  endpoint:
    path: /graph_eigenvector_centrality
    method: GET
- name: graph_katz_centrality
  endpoint:
    path: /graph_katz_centrality
    method: GET
- name: graph_unweighted_average_shortest_path_length
  endpoint:
    path: /graph_unweighted_average_shortest_path_length
    method: GET
- name: graph_bfs_search
  endpoint:
    path: /graph_bfs_search
    method: GET
- name: graph_dijkstra_search
  endpoint:
    path: /graph_dijkstra_search
    method: GET
- name: graph_node_link_json
  endpoint:
    path: /graph_node_link_json
    method: GET
- name: graph_longest_simple_path
  endpoint:
    path: /graph_longest_simple_path
    method: GET
- name: in_edges
  endpoint:
    path: /in_edges
    method: GET
- name: remove_edges_from
  endpoint:
    path: /PyDAG/remove_edges_from
    method: GET
- name: in_edges
  endpoint:
    path: /rustworkx/PyDAG/in_edges
    method: GET
    data_selector: list of tuples
    params:
      node: int
- name: incident_edge_index_map
  endpoint:
    path: /PyDAG/incident_edge_index_map
    method: GET
- name: incident_edge_index_map
  endpoint:
    path: /rustworkx/PyDAG/incident_edge_index_map
    method: GET
    data_selector: incident_edge_index_map
    params: {}
- name: remove_node_retain_edges
  endpoint:
    path: /remove_node_retain_edges
    method: GET
- name: incident_edges
  endpoint:
    path: /rustworkx/PyDAG/incident_edges
    method: GET
- name: incident_edges
  endpoint:
    path: /PyDAG/incident_edges
    method: GET
    data_selector: edge_indices
    params:
      node: int
      all_edges: bool
- name: remove_node_retain_edges
  endpoint:
    path: /rustworkx/PyDAG/remove_node_retain_edges
    method: POST
    data_selector: parameters
    params: {}
- name: insert_node_on_in_edges
  endpoint:
    path: /rustworkx.PyDAG.insert_node_on_in_edges
    method: GET
- name: insert_node_on_in_edges_multiple
  endpoint:
    path: /rustworkx/insert_node_on_in_edges_multiple
    method: POST
    data_selector: parameters
    params: {}
- name: remove_nodes_from
  endpoint:
    path: /PyDAG/remove_nodes_from
    method: GET
- name: substitute_node_with_subgraph
  endpoint:
    path: /PyDAG/substitute_node_with_subgraph
    method: GET
- name: successor_indices
  endpoint:
    path: /rustworkx/PyDAG/successor_indices
    method: GET
    data_selector: NodeIndices
    params: {}
- name: successors
  endpoint:
    path: /rustworkx/PyDAG/successors
    method: GET
    data_selector: NodeIndices
    params: {}
- name: successors
  endpoint:
    path: /PyDAG/successors
    method: GET
    data_selector: list
- name: graph_is_isomorphic
  endpoint:
    path: /graph_is_isomorphic
    method: GET
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /graph_is_subgraph_isomorphic
    method: GET
- name: graph_vf2_mapping
  endpoint:
    path: /graph_vf2_mapping
    method: GET
- name: graph_distance_matrix
  endpoint:
    path: /graph_distance_matrix
    method: GET
- name: graph_floyd_warshall
  endpoint:
    path: /graph_floyd_warshall
    method: GET
- name: graph_floyd_warshall_numpy
  endpoint:
    path: /graph_floyd_warshall_numpy
    method: GET
- name: graph_floyd_warshall_successor_and_distance
  endpoint:
    path: /graph_floyd_warshall_successor_and_distance
    method: GET
- name: graph_adjacency_matrix
  endpoint:
    path: /graph_adjacency_matrix
    method: GET
- name: graph_all_simple_paths
  endpoint:
    path: /graph_all_simple_paths
    method: GET
- name: graph_all_pairs_all_simple_paths
  endpoint:
    path: /graph_all_pairs_all_simple_paths
    method: GET
- name: graph_astar_shortest_path
  endpoint:
    path: /graph_astar_shortest_path
    method: GET
- name: graph_dijkstra_shortest_paths
  endpoint:
    path: /graph_dijkstra_shortest_paths
    method: GET
- name: graph_dijkstra_shortest_path_lengths
  endpoint:
    path: /graph_dijkstra_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /graph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: graph_k_shortest_path_lengths
  endpoint:
    path: /graph_k_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /graph_all_pairs_dijkstra_path_lengths
    method: GET
- name: graph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /graph_bellman_ford_shortest_path_lengths
    method: GET
- name: graph_all_shortest_paths
  endpoint:
    path: /graph_all_shortest_paths
    method: GET
- name: graph_single_source_all_shortest_paths
  endpoint:
    path: /graph_single_source_all_shortest_paths
    method: GET
- name: graph_dfs_edges
  endpoint:
    path: /graph_dfs_edges
    method: GET
- name: graph_dfs_search
  endpoint:
    path: /graph_dfs_search
    method: GET
- name: graph_transitivity
  endpoint:
    path: /graph_transitivity
    method: GET
- name: graph_core_number
  endpoint:
    path: /graph_core_number
    method: GET
- name: graph_complement
  endpoint:
    path: /graph_complement
    method: GET
- name: graph_union
  endpoint:
    path: /graph_union
    method: GET
- name: graph_tensor_product
  endpoint:
    path: /graph_tensor_product
    method: GET
- name: graph_token_swapper
  endpoint:
    path: /graph_token_swapper
    method: GET
- name: graph_cartesian_product
  endpoint:
    path: /graph_cartesian_product
    method: GET
- name: graph_random_layout
  endpoint:
    path: /graph_random_layout
    method: GET
- name: graph_bipartite_layout
  endpoint:
    path: /graph_bipartite_layout
    method: GET
- name: graph_circular_layout
  endpoint:
    path: /graph_circular_layout
    method: GET
- name: graph_shell_layout
  endpoint:
    path: /graph_shell_layout
    method: GET
- name: graph_spiral_layout
  endpoint:
    path: /graph_spiral_layout
    method: GET
- name: graph_spring_layout
  endpoint:
    path: /graph_spring_layout
    method: GET
- name: graph_num_shortest_paths_unweighted
  endpoint:
    path: /graph_num_shortest_paths_unweighted
    method: GET
- name: graph_betweenness_centrality
  endpoint:
    path: /graph_betweenness_centrality
    method: GET
- name: graph_edge_betweenness_centrality
  endpoint:
    path: /graph_edge_betweenness_centrality
    method: GET
- name: graph_closeness_centrality
  endpoint:
    path: /graph_closeness_centrality
    method: GET
- name: graph_newman_weighted_closeness_centrality
  endpoint:
    path: /graph_newman_weighted_closeness_centrality
    method: GET
- name: graph_eigenvector_centrality
  endpoint:
    path: /graph_eigenvector_centrality
    method: GET
- name: graph_katz_centrality
  endpoint:
    path: /graph_katz_centrality
    method: GET
- name: graph_unweighted_average_shortest_path_length
  endpoint:
    path: /graph_unweighted_average_shortest_path_length
    method: GET
- name: graph_bfs_search
  endpoint:
    path: /graph_bfs_search
    method: GET
- name: graph_dijkstra_search
  endpoint:
    path: /graph_dijkstra_search
    method: GET
- name: graph_node_link_json
  endpoint:
    path: /graph_node_link_json
    method: GET
- name: graph_longest_simple_path
  endpoint:
    path: /graph_longest_simple_path
    method: GET
- name: PyDAG.to_dot
  endpoint:
    path: /PyDAG/to_dot
    method: GET
- name: insert_node_on_out_edges
  endpoint:
    path: /rustworkx/PyDAG/insert_node_on_out_edges
    method: GET
    data_selector: parameters
    params: {}
- name: to_dot
  endpoint:
    path: /PyDAG/to_dot
    method: GET
    data_selector: dot_file_contents
- name: make_symmetric
  endpoint:
    path: /PyDAG/make_symmetric
    method: GET
- name: update_edge_by_index
  endpoint:
    path: /rustworkx.PyDAG.update_edge_by_index
    method: GET
- name: PyDAG
  endpoint:
    path: /rustworkx/PyDAG
    method: GET
    data_selector: records
- name: make_symmetric
  endpoint:
    path: /rustworkx/PyDAG/make_symmetric
    method: GET
    data_selector: edge_payload
    params: {}
- name: merge_nodes
  endpoint:
    path: /rustworkx.PyDAG.merge_nodes
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyDAG/weighted_edge_list
    method: GET
- name: neighbors
  endpoint:
    path: /PyDAG/neighbors
    method: GET
- name: neighbors
  endpoint:
    path: /PyDAG/neighbors
    method: GET
    data_selector: node_indices
    params: {}
- name: neighbors_undirected
  endpoint:
    path: /neighbors_undirected
    method: GET
- name: neighbors_undirected
  endpoint:
    path: /PyDAG/neighbors_undirected
    method: GET
    data_selector: NodeIndices
    params:
      node: int
- name: num_edges
  endpoint:
    path: /rustworkx.PyDAG.num_edges
    method: GET
- name: betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.betweenness_centrality
    method: GET
    data_selector: returns the betweenness centrality of each node in the graph.
- name: degree_centrality
  endpoint:
    path: /apiref/rustworkx.degree_centrality
    method: GET
    data_selector: compute the degree centrality of each node in a graph object.
- name: edge_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.edge_betweenness_centrality
    method: GET
    data_selector: compute the edge betweenness centrality of all edges in a graph.
- name: eigenvector_centrality
  endpoint:
    path: /apiref/rustworkx.eigenvector_centrality
    method: GET
    data_selector: compute the eigenvector centrality of a graph.
- name: katz_centrality
  endpoint:
    path: /apiref/rustworkx.katz_centrality
    method: GET
    data_selector: compute the Katz centrality of a graph.
- name: closeness_centrality
  endpoint:
    path: /apiref/rustworkx.closeness_centrality
    method: GET
    data_selector: compute the closeness centrality of each node in a graph object.
- name: newman_weighted_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.newman_weighted_closeness_centrality
    method: GET
    data_selector: compute the weighted closeness centrality of each node in the graph.
- name: in_degree_centrality
  endpoint:
    path: /apiref/rustworkx.in_degree_centrality
    method: GET
    data_selector: compute the in-degree centrality for nodes in a PyDiGraph.
- name: out_degree_centrality
  endpoint:
    path: /apiref/rustworkx.out_degree_centrality
    method: GET
    data_selector: compute the out-degree centrality for nodes in a PyDiGraph.
- name: out_degree
  endpoint:
    path: /out_degree
    method: GET
    data_selector: records
- name: out_edge_indices
  endpoint:
    path: /rustworkx/PyDAG/out_edge_indices
    method: GET
    data_selector: outgoing edge indices
- name: degree_centrality
  endpoint:
    path: /degree_centrality
    method: GET
    data_selector: degree centrality score
    params:
      graph: input graph
- name: out_edges
  endpoint:
    path: /rustworkx/PyDAG/out_edges
    method: GET
- name: out_edges
  endpoint:
    path: /out_edges
    method: GET
    data_selector: out_edges
    params:
      node: int
- name: edge_betweenness_centrality
  endpoint:
    path: /edge_betweenness_centrality
    method: GET
    data_selector: scores
    params:
      normalized: true
      parallel_threshold: 50
- name: predecessor_indices
  endpoint:
    path: /PyDAG/predecessor_indices
    method: GET
    data_selector: NodeIndices
    params:
      node: int
- name: katz_centrality
  endpoint:
    path: /katz_centrality
    method: GET
    data_selector: centrality_scores
    params:
      alpha: 0.1
      beta: 1.0
      default_weight: 1.0
      max_iter: 100
      tol: 1.0e-06
- name: closeness_centrality
  endpoint:
    path: /closeness_centrality
    method: GET
    data_selector: centrality_values
    params:
      wf_improved: true
- name: newman_weighted_closeness_centrality
  endpoint:
    path: /newman_weighted_closeness_centrality
    method: GET
    data_selector: closeness
    params:
      default_weight: 1.0
      wf_improved: true
      parallel_threshold: 50
- name: in_degree_centrality
  endpoint:
    path: /rustworkx/in_degree_centrality
    method: GET
    data_selector: centrality_scores
    params: {}
- name: out_degree_centrality
  endpoint:
    path: /rustworkx/out_degree_centrality
    method: GET
    data_selector: centrality_score
- name: graph_is_isomorphic
  endpoint:
    path: /graph_is_isomorphic
    method: GET
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /graph_is_subgraph_isomorphic
    method: GET
- name: graph_vf2_mapping
  endpoint:
    path: /graph_vf2_mapping
    method: GET
- name: graph_distance_matrix
  endpoint:
    path: /graph_distance_matrix
    method: GET
- name: graph_floyd_warshall
  endpoint:
    path: /graph_floyd_warshall
    method: GET
- name: graph_floyd_warshall_numpy
  endpoint:
    path: /graph_floyd_warshall_numpy
    method: GET
- name: graph_floyd_warshall_successor_and_distance
  endpoint:
    path: /graph_floyd_warshall_successor_and_distance
    method: GET
- name: graph_adjacency_matrix
  endpoint:
    path: /graph_adjacency_matrix
    method: GET
- name: graph_all_simple_paths
  endpoint:
    path: /graph_all_simple_paths
    method: GET
- name: graph_all_pairs_all_simple_paths
  endpoint:
    path: /graph_all_pairs_all_simple_paths
    method: GET
- name: graph_astar_shortest_path
  endpoint:
    path: /graph_astar_shortest_path
    method: GET
- name: graph_dijkstra_shortest_paths
  endpoint:
    path: /graph_dijkstra_shortest_paths
    method: GET
- name: graph_dijkstra_shortest_path_lengths
  endpoint:
    path: /graph_dijkstra_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /graph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: graph_k_shortest_path_lengths
  endpoint:
    path: /graph_k_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /graph_all_pairs_dijkstra_path_lengths
    method: GET
- name: graph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /graph_bellman_ford_shortest_path_lengths
    method: GET
- name: graph_all_shortest_paths
  endpoint:
    path: /graph_all_shortest_paths
    method: GET
- name: graph_single_source_all_shortest_paths
  endpoint:
    path: /graph_single_source_all_shortest_paths
    method: GET
- name: graph_dfs_edges
  endpoint:
    path: /graph_dfs_edges
    method: GET
- name: graph_dfs_search
  endpoint:
    path: /graph_dfs_search
    method: GET
- name: graph_transitivity
  endpoint:
    path: /graph_transitivity
    method: GET
- name: graph_core_number
  endpoint:
    path: /graph_core_number
    method: GET
- name: graph_complement
  endpoint:
    path: /graph_complement
    method: GET
- name: graph_union
  endpoint:
    path: /graph_union
    method: GET
- name: graph_tensor_product
  endpoint:
    path: /graph_tensor_product
    method: GET
- name: graph_token_swapper
  endpoint:
    path: /graph_token_swapper
    method: GET
- name: graph_cartesian_product
  endpoint:
    path: /graph_cartesian_product
    method: GET
- name: graph_random_layout
  endpoint:
    path: /graph_random_layout
    method: GET
- name: graph_bipartite_layout
  endpoint:
    path: /graph_bipartite_layout
    method: GET
- name: graph_circular_layout
  endpoint:
    path: /graph_circular_layout
    method: GET
- name: graph_shell_layout
  endpoint:
    path: /graph_shell_layout
    method: GET
- name: graph_spiral_layout
  endpoint:
    path: /graph_spiral_layout
    method: GET
- name: graph_spring_layout
  endpoint:
    path: /graph_spring_layout
    method: GET
- name: graph_num_shortest_paths_unweighted
  endpoint:
    path: /graph_num_shortest_paths_unweighted
    method: GET
- name: graph_betweenness_centrality
  endpoint:
    path: /graph_betweenness_centrality
    method: GET
- name: graph_edge_betweenness_centrality
  endpoint:
    path: /graph_edge_betweenness_centrality
    method: GET
- name: graph_closeness_centrality
  endpoint:
    path: /graph_closeness_centrality
    method: GET
- name: graph_newman_weighted_closeness_centrality
  endpoint:
    path: /graph_newman_weighted_closeness_centrality
    method: GET
- name: graph_eigenvector_centrality
  endpoint:
    path: /graph_eigenvector_centrality
    method: GET
- name: graph_katz_centrality
  endpoint:
    path: /graph_katz_centrality
    method: GET
- name: graph_unweighted_average_shortest_path_length
  endpoint:
    path: /graph_unweighted_average_shortest_path_length
    method: GET
- name: graph_bfs_search
  endpoint:
    path: /graph_bfs_search
    method: GET
- name: graph_dijkstra_search
  endpoint:
    path: /graph_dijkstra_search
    method: GET
- name: graph_node_link_json
  endpoint:
    path: /graph_node_link_json
    method: GET
- name: graph_longest_simple_path
  endpoint:
    path: /graph_longest_simple_path
    method: GET
- name: predecessors
  endpoint:
    path: /PyDAG/predecessors
    method: GET
    data_selector: node data
- name: read_edge_list
  endpoint:
    path: /rustworkx/PyDAG/read_edge_list
    method: GET
    data_selector: ''
    params: {}
- name: Degree
  endpoint:
    path: /rustworkx.ColoringStrategy.Degree
    method: GET
- name: IndependentSet
  endpoint:
    path: /rustworkx.ColoringStrategy.IndependentSet
    method: GET
- name: Saturation
  endpoint:
    path: /rustworkx.ColoringStrategy.Saturation
    method: GET
- name: remove_edge_from_index
  endpoint:
    path: /rustworkx.PyDAG.remove_edge_from_index
    method: GET
- name: remove_edges_from
  endpoint:
    path: /PyDAG/remove_edges_from
    method: GET
- name: remove_edges_from
  endpoint:
    path: /rustworkx/PyDAG/remove_edges_from
    method: POST
    data_selector: index_list
    params: {}
- name: graph_bipartite_edge_color
  endpoint:
    path: /graph/bipartite/edge/color
    method: GET
    data_selector: dictionary
    params:
      graph: PyGraph
- name: remove_node
  endpoint:
    path: /rustworkx/PyDAG/remove_node
    method: GET
    data_selector: records
- name: graph_greedy_edge_color
  endpoint:
    path: /rustworkx/graph_greedy_edge_color
    method: GET
    data_selector: edge_colors
    params: {}
- name: graph_misra_gries_edge_color
  endpoint:
    path: /graph_misra_gries_edge_color
    method: GET
    data_selector: edge_colors
- name: remove_node_retain_edges_by_key
  endpoint:
    path: /rustworkx.PyDAG.remove_node_retain_edges_by_key
    method: GET
- name: two_color
  endpoint:
    path: /api/two_color
    method: POST
    data_selector: result
    params:
      graph: input_graph
- name: remove_nodes_from
  endpoint:
    path: /PyDAG/remove_nodes_from
    method: GET
- name: remove_nodes_from
  endpoint:
    path: /PyDAG/remove_nodes_from
    method: POST
    data_selector: index_list
    params: {}
- name: number_connected_components
  endpoint:
    path: /apiref/rustworkx.number_connected_components
    method: GET
- name: connected_components
  endpoint:
    path: /apiref/rustworkx.connected_components
    method: GET
- name: node_connected_component
  endpoint:
    path: /apiref/rustworkx.node_connected_component
    method: GET
- name: is_connected
  endpoint:
    path: /apiref/rustworkx.is_connected
    method: GET
- name: number_strongly_connected_components
  endpoint:
    path: /apiref/rustworkx.number_strongly_connected_components
    method: GET
- name: strongly_connected_components
  endpoint:
    path: /apiref/rustworkx.strongly_connected_components
    method: GET
- name: is_strongly_connected
  endpoint:
    path: /apiref/rustworkx.is_strongly_connected
    method: GET
- name: number_weakly_connected_components
  endpoint:
    path: /apiref/rustworkx.number_weakly_connected_components
    method: GET
- name: weakly_connected_components
  endpoint:
    path: /apiref/rustworkx.weakly_connected_components
    method: GET
- name: is_weakly_connected
  endpoint:
    path: /apiref/rustworkx.is_weakly_connected
    method: GET
- name: cycle_basis
  endpoint:
    path: /apiref/rustworkx.cycle_basis
    method: GET
- name: simple_cycles
  endpoint:
    path: /apiref/rustworkx.simple_cycles
    method: GET
- name: digraph_find_cycle
  endpoint:
    path: /apiref/rustworkx.digraph_find_cycle
    method: GET
- name: articulation_points
  endpoint:
    path: /apiref/rustworkx.articulation_points
    method: GET
- name: bridges
  endpoint:
    path: /apiref/rustworkx.bridges
    method: GET
- name: biconnected_components
  endpoint:
    path: /apiref/rustworkx.biconnected_components
    method: GET
- name: chain_decomposition
  endpoint:
    path: /apiref/rustworkx.chain_decomposition
    method: GET
- name: all_simple_paths
  endpoint:
    path: /apiref/rustworkx.all_simple_paths
    method: GET
- name: all_pairs_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.all_pairs_all_simple_paths
    method: GET
- name: stoer_wagner_min_cut
  endpoint:
    path: /apiref/rustworkx.stoer_wagner_min_cut
    method: GET
- name: longest_simple_path
  endpoint:
    path: /apiref/rustworkx.longest_simple_path
    method: GET
- name: is_bipartite
  endpoint:
    path: /apiref/rustworkx.is_bipartite
    method: GET
- name: isolates
  endpoint:
    path: /apiref/rustworkx.isolates
    method: GET
- name: has_path
  endpoint:
    path: /apiref/rustworkx.has_path
    method: GET
- name: connected_subgraphs
  endpoint:
    path: /apiref/rustworkx.connected_subgraphs
    method: GET
- name: number_connected_components
  endpoint:
    path: /number_connected_components
    method: GET
    data_selector: connected_components
    params:
      graph: PyGraph
- name: connected_components
  endpoint:
    path: /rustworkx/connected_components
    method: GET
    data_selector: list[set[int]]
    params:
      graph: PyGraph
- name: node_connected_component
  endpoint:
    path: /rustworkx/node_connected_component
    method: GET
    data_selector: set
    params: {}
- name: number_strongly_connected_components
  endpoint:
    path: /number_strongly_connected_components
    method: GET
    data_selector: number of strongly connected components
    params: {}
- name: strongly_connected_components
  endpoint:
    path: /strongly_connected_components
    method: GET
    data_selector: list[list[int]]
- name: is_strongly_connected
  endpoint:
    path: /is_strongly_connected
    method: GET
    data_selector: result
    params: {}
- name: number_weakly_connected_components
  endpoint:
    path: /number_weakly_connected_components
    method: GET
    data_selector: number_of_components
    params: {}
- name: graph_is_isomorphic
  endpoint:
    path: /rustworkx/graph_is_isomorphic
    method: GET
    data_selector: records
    params: {}
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /rustworkx/graph_is_subgraph_isomorphic
    method: GET
    data_selector: records
    params: {}
- name: subgraph_with_nodemap
  endpoint:
    path: /rustworkx/PyDAG/subgraph_with_nodemap
    method: GET
    data_selector: tuple
    params: {}
- name: weakly_connected_components
  endpoint:
    path: /weakly_connected_components
    method: GET
    data_selector: components
    params: {}
- name: substitute_node_with_subgraph
  endpoint:
    path: /rustworkx/PyDAG/substitute_node_with_subgraph
    method: GET
- name: successor_indices
  endpoint:
    path: /rustworkx/PyDAG/successor_indices
    method: GET
- name: is_weakly_connected
  endpoint:
    path: /is_weakly_connected
    method: GET
    data_selector: result
- name: successor_indices
  endpoint:
    path: /successor_indices
    method: GET
    data_selector: NodeIndices
- name: successors
  endpoint:
    path: /successors
    method: GET
    data_selector: NodeIndices
- name: find_successors_by_edge
  endpoint:
    path: /find_successors_by_edge
    method: GET
    data_selector: NodeIndices
- name: predecessor_indices
  endpoint:
    path: /predecessor_indices
    method: GET
    data_selector: NodeIndices
- name: neighbors
  endpoint:
    path: /neighbors
    method: GET
    data_selector: NodeIndices
- name: successors
  endpoint:
    path: /api/v0.17/successors
    method: GET
    data_selector: successors
    params: {}
- name: digraph_find_cycle
  endpoint:
    path: /digraph_find_cycle
    method: GET
    data_selector: cycle
    params:
      graph: PyDiGraph
      source: int
- name: PyDAG.to_dot
  endpoint:
    path: /rustworkx/PyDAG/to_dot
    method: GET
    data_selector: return_type
    params: {}
- name: update_edge
  endpoint:
    path: /update_edge
    method: POST
    data_selector: records
- name: update_edge_by_index
  endpoint:
    path: /rustworkx.PyDAG.update_edge_by_index
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /PyDAG/weighted_edge_list
    method: GET
- name: weighted_edge_list
  endpoint:
    path: /rustworkx/PyDAG/weighted_edge_list
    method: GET
    data_selector: edge list with weights
- name: all_pairs_all_simple_paths
  endpoint:
    path: /all_pairs_all_simple_paths
    method: GET
    data_selector: paths
    params:
      min_depth: None
      cutoff: None
- name: write_edge_list
  endpoint:
    path: /rustworkx/PyDAG/write_edge_list
    method: POST
    data_selector: parameters
    params: {}
- name: stoer_wagner_min_cut
  endpoint:
    path: /stoer_wagner_min_cut
    method: POST
    data_selector: result
    params: {}
- name: longest_simple_path
  endpoint:
    path: /longest_simple_path
    method: GET
    data_selector: path
    params: {}
- name: is_bipartite
  endpoint:
    path: /rustworkx/is_bipartite
    method: GET
    data_selector: bool
    params: {}
- name: isolates
  endpoint:
    path: /isolates
    method: GET
    data_selector: node_indices
    params:
      graph: input_graph
- name: has_path
  endpoint:
    path: /rustworkx/has_path
    method: GET
    data_selector: bool
    params: {}
- name: connected_subgraphs
  endpoint:
    path: /connected_subgraphs
    method: GET
    data_selector: subgraphs
    params: {}
- name: dag_longest_path
  endpoint:
    path: /apiref/rustworkx.dag_longest_path
    method: GET
- name: dag_longest_path_length
  endpoint:
    path: /apiref/rustworkx.dag_longest_path_length
    method: GET
- name: dag_weighted_longest_path
  endpoint:
    path: /apiref/rustworkx.dag_weighted_longest_path
    method: GET
- name: dag_weighted_longest_path_length
  endpoint:
    path: /apiref/rustworkx.dag_weighted_longest_path_length
    method: GET
- name: is_directed_acyclic_graph
  endpoint:
    path: /apiref/rustworkx.is_directed_acyclic_graph
    method: GET
- name: layers
  endpoint:
    path: /apiref/rustworkx.layers
    method: GET
- name: transitive_reduction
  endpoint:
    path: /apiref/rustworkx.transitive_reduction
    method: GET
- name: topological_generations
  endpoint:
    path: /apiref/rustworkx.topological_generations
    method: GET
- name: digraph_is_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_isomorphic.html
    method: GET
- name: digraph_is_subgraph_isomorphic
  endpoint:
    path: /apiref/rustworkx.digraph_is_subgraph_isomorphic.html
    method: GET
- name: digraph_vf2_mapping
  endpoint:
    path: /apiref/rustworkx.digraph_vf2_mapping.html
    method: GET
- name: digraph_distance_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_distance_matrix.html
    method: GET
- name: digraph_floyd_warshall
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall.html
    method: GET
- name: digraph_floyd_warshall_numpy
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_numpy.html
    method: GET
- name: digraph_floyd_warshall_successor_and_distance
  endpoint:
    path: /apiref/rustworkx.digraph_floyd_warshall_successor_and_distance.html
    method: GET
- name: digraph_adjacency_matrix
  endpoint:
    path: /apiref/rustworkx.digraph_adjacency_matrix.html
    method: GET
- name: digraph_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_simple_paths.html
    method: GET
- name: digraph_all_pairs_all_simple_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_all_simple_paths.html
    method: GET
- name: digraph_astar_shortest_path
  endpoint:
    path: /apiref/rustworkx.digraph_astar_shortest_path.html
    method: GET
- name: digraph_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_paths.html
    method: GET
- name: digraph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_shortest_paths.html
    method: GET
- name: digraph_dijkstra_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_shortest_path_lengths.html
    method: GET
- name: digraph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_dijkstra_path_lengths.html
    method: GET
- name: digraph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_bellman_ford_shortest_path_lengths.html
    method: GET
- name: digraph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_shortest_paths.html
    method: GET
- name: digraph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_all_pairs_bellman_ford_path_lengths.html
    method: GET
- name: digraph_k_shortest_path_lengths
  endpoint:
    path: /apiref/rustworkx.digraph_k_shortest_path_lengths.html
    method: GET
- name: digraph_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_all_shortest_paths.html
    method: GET
- name: digraph_single_source_all_shortest_paths
  endpoint:
    path: /apiref/rustworkx.digraph_single_source_all_shortest_paths.html
    method: GET
- name: digraph_dfs_edges
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_edges.html
    method: GET
- name: digraph_dfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_dfs_search.html
    method: GET
- name: digraph_find_cycle
  endpoint:
    path: /apiref/rustworkx.digraph_find_cycle.html
    method: GET
- name: digraph_transitivity
  endpoint:
    path: /apiref/rustworkx.digraph_transitivity.html
    method: GET
- name: digraph_core_number
  endpoint:
    path: /apiref/rustworkx.digraph_core_number.html
    method: GET
- name: digraph_complement
  endpoint:
    path: /apiref/rustworkx.digraph_complement.html
    method: GET
- name: digraph_union
  endpoint:
    path: /apiref/rustworkx.digraph_union.html
    method: GET
- name: digraph_tensor_product
  endpoint:
    path: /apiref/rustworkx.digraph_tensor_product.html
    method: GET
- name: digraph_cartesian_product
  endpoint:
    path: /apiref/rustworkx.digraph_cartesian_product.html
    method: GET
- name: digraph_random_layout
  endpoint:
    path: /apiref/rustworkx.digraph_random_layout.html
    method: GET
- name: digraph_bipartite_layout
  endpoint:
    path: /apiref/rustworkx.digraph_bipartite_layout.html
    method: GET
- name: digraph_circular_layout
  endpoint:
    path: /apiref/rustworkx.digraph_circular_layout.html
    method: GET
- name: digraph_shell_layout
  endpoint:
    path: /apiref/rustworkx.digraph_shell_layout.html
    method: GET
- name: digraph_spiral_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spiral_layout.html
    method: GET
- name: digraph_spring_layout
  endpoint:
    path: /apiref/rustworkx.digraph_spring_layout.html
    method: GET
- name: digraph_num_shortest_paths_unweighted
  endpoint:
    path: /apiref/rustworkx.digraph_num_shortest_paths_unweighted.html
    method: GET
- name: digraph_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_betweenness_centrality.html
    method: GET
- name: digraph_edge_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_edge_betweenness_centrality.html
    method: GET
- name: digraph_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_closeness_centrality.html
    method: GET
- name: digraph_eigenvector_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_eigenvector_centrality.html
    method: GET
- name: digraph_katz_centrality
  endpoint:
    path: /apiref/rustworkx.digraph_katz_centrality.html
    method: GET
- name: digraph_unweighted_average_shortest_path_length
  endpoint:
    path: /apiref/rustworkx.digraph_unweighted_average_shortest_path_length.html
    method: GET
- name: digraph_bfs_search
  endpoint:
    path: /apiref/rustworkx.digraph_bfs_search.html
    method: GET
- name: digraph_dijkstra_search
  endpoint:
    path: /apiref/rustworkx.digraph_dijkstra_search.html
    method: GET
- name: digraph_node_link_json
  endpoint:
    path: /apiref/rustworkx.digraph_node_link_json.html
    method: GET
- name: digraph_longest_simple_path
  endpoint:
    path: /apiref/rustworkx.digraph_longest_simple_path.html
    method: GET
- name: betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.betweenness_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: degree_centrality
  endpoint:
    path: /apiref/rustworkx.degree_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: edge_betweenness_centrality
  endpoint:
    path: /apiref/rustworkx.edge_betweenness_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: eigenvector_centrality
  endpoint:
    path: /apiref/rustworkx.eigenvector_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: katz_centrality
  endpoint:
    path: /apiref/rustworkx.katz_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: closeness_centrality
  endpoint:
    path: /apiref/rustworkx.closeness_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: newman_weighted_closeness_centrality
  endpoint:
    path: /apiref/rustworkx.newman_weighted_closeness_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: in_degree_centrality
  endpoint:
    path: /apiref/rustworkx.in_degree_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: out_degree_centrality
  endpoint:
    path: /apiref/rustworkx.out_degree_centrality
    method: GET
    data_selector: centrality
    params: {}
- name: betweenness_centrality
  endpoint:
    params:
      normalized: true
      endpoints: false
      parallel_threshold: 50
- name: degree_centrality
  endpoint:
    path: /degree_centrality
    method: POST
    data_selector: centrality_scores
    params:
      graph: input_graph
- name: edge_betweenness_centrality
  endpoint:
    path: /edge_betweenness_centrality
    method: GET
    data_selector: betweenness_scores
    params:
      normalized: true
      parallel_threshold: 50
- name: graph_is_isomorphic
  endpoint:
    path: /rustworkx.graph_is_isomorphic
    method: GET
- name: graph_is_subgraph_isomorphic
  endpoint:
    path: /rustworkx.graph_is_subgraph_isomorphic
    method: GET
- name: graph_vf2_mapping
  endpoint:
    path: /rustworkx.graph_vf2_mapping
    method: GET
- name: graph_distance_matrix
  endpoint:
    path: /rustworkx.graph_distance_matrix
    method: GET
- name: graph_floyd_warshall
  endpoint:
    path: /rustworkx.graph_floyd_warshall
    method: GET
- name: graph_floyd_warshall_numpy
  endpoint:
    path: /rustworkx.graph_floyd_warshall_numpy
    method: GET
- name: graph_floyd_warshall_successor_and_distance
  endpoint:
    path: /rustworkx.graph_floyd_warshall_successor_and_distance
    method: GET
- name: graph_adjacency_matrix
  endpoint:
    path: /rustworkx.graph_adjacency_matrix
    method: GET
- name: graph_all_simple_paths
  endpoint:
    path: /rustworkx.graph_all_simple_paths
    method: GET
- name: graph_all_pairs_all_simple_paths
  endpoint:
    path: /rustworkx.graph_all_pairs_all_simple_paths
    method: GET
- name: graph_astar_shortest_path
  endpoint:
    path: /rustworkx.graph_astar_shortest_path
    method: GET
- name: graph_dijkstra_shortest_paths
  endpoint:
    path: /rustworkx.graph_dijkstra_shortest_paths
    method: GET
- name: graph_dijkstra_shortest_path_lengths
  endpoint:
    path: /rustworkx.graph_dijkstra_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_shortest_paths
  endpoint:
    path: /rustworkx.graph_all_pairs_dijkstra_shortest_paths
    method: GET
- name: graph_k_shortest_path_lengths
  endpoint:
    path: /rustworkx.graph_k_shortest_path_lengths
    method: GET
- name: graph_all_pairs_dijkstra_path_lengths
  endpoint:
    path: /rustworkx.graph_all_pairs_dijkstra_path_lengths
    method: GET
- name: graph_bellman_ford_shortest_path_lengths
  endpoint:
    path: /rustworkx.graph_bellman_ford_shortest_path_lengths
    method: GET
- name: graph_all_pairs_bellman_ford_shortest_paths
  endpoint:
    path: /rustworkx.graph_all_pairs_bellman_ford_shortest_paths
    method: GET
- name: graph_all_pairs_bellman_ford_path_lengths
  endpoint:
    path: /rustworkx.graph_all_pairs_bellman_ford_path_lengths
    method: GET
- name: graph_all_shortest_paths
  endpoint:
    path: /rustworkx.graph_all_shortest_paths
    method: GET
- name: graph_single_source_all_shortest_paths
  endpoint:
    path: /rustworkx.graph_single_source_all_shortest_paths
    method: GET
- name: graph_dfs_edges
  endpoint:
    path: /rustworkx.graph_dfs_edges
    method: GET
- name: graph_dfs_search
  endpoint:
    path: /rustworkx.graph_dfs_search
    method: GET
- name: graph_transitivity
  endpoint:
    path: /rustworkx.graph_transitivity
    method: GET
- name: graph_core_number
  endpoint:
    path: /rustworkx.graph_core_number
    method: GET
- name: graph_complement
  endpoint:
    path: /rustworkx.graph_complement
    method: GET
- name: graph_union
  endpoint:
    path: /rustworkx.graph_union
    method: GET
- name: graph_tensor_product
  endpoint:
    path: /rustworkx.graph_tensor_product
    method: GET
- name: graph_token_swapper
  endpoint:
    path: /rustworkx.graph_token_swapper
    method: GET
- name: graph_cartesian_product
  endpoint:
    path: /rustworkx.graph_cartesian_product
    method: GET
- name: graph_random_layout
  endpoint:
    path: /rustworkx.graph_random_layout
    method: GET
- name: graph_bipartite_layout
  endpoint:
    path: /rustworkx.graph_bipartite_layout
    method: GET
- name: graph_circular_layout
  endpoint:
    path: /rustworkx.graph_circular_layout
    method: GET
- name: graph_shell_layout
  endpoint:
    path: /rustworkx.graph_shell_layout
    method: GET
- name: graph_spiral_layout
  endpoint:
    path: /rustworkx.graph_spiral_layout
    method: GET
- name: graph_spring_layout
  endpoint:
    path: /rustworkx.graph_spring_layout
    method: GET
- name: graph_num_shortest_paths_unweighted
  endpoint:
    path: /rustworkx.graph_num_shortest_paths_unweighted
    method: GET
- name: graph_betweenness_centrality
  endpoint:
    path: /rustworkx.graph_betweenness_centrality
    method: GET
- name: graph_edge_betweenness_centrality
  endpoint:
    path: /rustworkx.graph_edge_betweenness_centrality
    method: GET
- name: graph_closeness_centrality
  endpoint:
    path: /rustworkx.graph_closeness_centrality
    method: GET
- name: graph_newman_weighted_closeness_centrality
  endpoint:
    path: /rustworkx.graph_newman_weighted_closeness_centrality
    method: GET
- name: graph_eigenvector_centrality
  endpoint:
    path: /rustworkx.graph_eigenvector_centrality
    method: GET
- name: graph_katz_centrality
  endpoint:
    path: /rustworkx.graph_katz_centrality
    method: GET
- name: graph_unweighted_average_shortest_path_length
  endpoint:
    path: /rustworkx.graph_unweighted_average_shortest_path_length
    method: GET
- name: graph_bfs_search
  endpoint:
    path: /rustworkx.graph_bfs_search
    method: GET
- name: graph_dijkstra_search
  endpoint:
    path: /rustworkx.graph_dijkstra_search
    method: GET
- name: graph_node_link_json
  endpoint:
    path: /rustworkx.graph_node_link_json
    method: GET
- name: graph_longest_simple_path
  endpoint:
    path: /rustworkx.graph_longest_simple_path
    method: GET
- name: katz_centrality
  endpoint:
    path: /katz_centrality
    method: GET
    data_selector: centrality_scores
    params:
      alpha: 0.1
      beta: 1.0
      max_iter: 100
      tol: 1.0e-06
- name: dag_longest_path_length
  endpoint:
    path: /rustworkx/dag_longest_path_length
    method: GET
    data_selector: returns
- name: closeness_centrality
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      wf_improved: true
      parallel_threshold: 50
- name: dag_weighted_longest_path
  endpoint:
    path: /rustworkx/dag_weighted_longest_path
    method: POST
    data_selector: NodeIndices
- name: newman_weighted_closeness_centrality
  endpoint:
    path: /rustworkx/newman_weighted_closeness_centrality
    method: GET
    data_selector: CentralityMapping
- name: dag_weighted_longest_path_length
  endpoint:
    path: /rustworkx/dag_weighted_longest_path_length
    method: GET
    data_selector: longest_path_length
    params: {}
- name: in_degree_centrality
  endpoint:
    path: /in_degree_centrality
    method: GET
    data_selector: centrality_scores
    params: {}
- name: out_degree_centrality
  endpoint:
    path: /rustworkx/out_degree_centrality
    method: GET
    data_selector: centrality_scores
    params: {}
- name: layers
  endpoint:
    path: /layers
    method: GET
    data_selector: list
    params: {}
- name: transitive_reduction
  endpoint:
    path: /transitive_reduction
    method: POST
    data_selector: result
    params:
      graph: PyDiGraph
- name: topological_generations
  endpoint:
    path: /topological_generations
    method: GET
    data_selector: generations
- name: Degree
  endpoint:
    path: /coloring_strategy/degree
    method: GET
- name: Saturation
  endpoint:
    path: /coloring_strategy/saturation
    method: GET
- name: IndependentSet
  endpoint:
    path: /coloring_strategy/independent_set
    method: GET
- name: immediate_dominators
  endpoint:
    path: /api/rustworkx/immediate_dominators
    method: GET
    data_selector: dominators
    params: {}
- name: dominance_frontiers
  endpoint:
    path: /api/rustworkx/dominance_frontiers
    method: GET
    data_selector: frontiers
    params: {}
- name: graph_bipartite_edge_color
  endpoint:
    path: /graph_bipartite_edge_color
    method: GET
    data_selector: dict
    params: {}
- name: graph_greedy_edge_color
  endpoint:
    path: /graph/greedy_edge_color
    method: GET
    data_selector: edge_colors
- name: two_color
  endpoint:
    path: /rustworkx/two_color
    method: GET
    data_selector: returns
    params: {}
- name: number_connected_components
  endpoint:
    path: /number_connected_components
    method: GET
    data_selector: number_of_connected_components
    params:
      graph: PyGraph
- name: connected_components
  endpoint:
    path: /connected_components
    method: GET
    data_selector: list[set[int]]
- name: is_connected
  endpoint:
    path: /is_connected
    method: GET
    data_selector: bool
    params:
      graph: PyGraph
- name: number_strongly_connected_components
  endpoint:
    path: /number_strongly_connected_components
    method: GET
    data_selector: number_of_components
    params: {}
- name: strongly_connected_components
  endpoint:
    path: /rustworkx/strongly_connected_components
    method: GET
    data_selector: list[list[int]]
- name: is_strongly_connected
  endpoint:
    path: /is_strongly_connected
    method: GET
    data_selector: result
    params:
      graph: PyGraph
- name: number_weakly_connected_components
  endpoint:
    path: /number_weakly_connected_components
    method: GET
    data_selector: components
    params:
      graph: PyDiGraph
- name: weakly_connected_components
  endpoint:
    path: /weakly_connected_components
    method: GET
    data_selector: components
- name: is_weakly_connected
  endpoint:
    path: /is_weakly_connected
    method: GET
    data_selector: ''
    params: {}
- name: articulation_points
  endpoint:
    path: /articulation_points
    method: GET
    data_selector: articulation_points
    params: {}
- name: all_simple_paths
  endpoint:
    path: /all_simple_paths
    method: GET
    data_selector: list
    params: {}
- name: all_pairs_all_simple_paths
  endpoint:
    path: /rustworkx/all_pairs_all_simple_paths
    method: GET
    data_selector: paths
    params:
      min_depth: None
      cutoff: None
- name: stoer_wagner_min_cut
  endpoint:
    path: /stoer_wagner_min_cut
    method: POST
    data_selector: result
    params: {}
- name: longest_simple_path
  endpoint:
    path: /longest_simple_path
    method: GET
    data_selector: longest_path
- name: is_bipartite
  endpoint:
    path: /rustworkx/is_bipartite
    method: GET
    data_selector: result
    params:
      graph: input_graph
- name: isolates
  endpoint:
    path: /isolates
    method: GET
    data_selector: node_indices
    params:
      graph: input_graph
- name: connected_subgraphs
  endpoint:
    path: /connected_subgraphs
    method: GET
    data_selector: subgraphs
    params: {}
- name: dag_longest_path
  endpoint:
    path: /apiref/rustworkx.dag_longest_path
    method: GET
- name: dag_longest_path_length
  endpoint:
    path: /apiref/rustworkx.dag_longest_path_length
    method: GET
- name: dag_weighted_longest_path
  endpoint:
    path: /apiref/rustworkx.dag_weighted_longest_path
    method: GET
- name: dag_weighted_longest_path_length
  endpoint:
    path: /apiref/rustworkx.dag_weighted_longest_path_length
    method: GET
- name: is_directed_acyclic_graph
  endpoint:
    path: /apiref/rustworkx.is_directed_acyclic_graph
    method: GET
- name: layers
  endpoint:
    path: /apiref/rustworkx.layers
    method: GET
- name: transitive_reduction
  endpoint:
    path: /apiref/rustworkx.transitive_reduction
    method: GET
- name: topological_generations
  endpoint:
    path: /apiref/rustworkx.topological_generations
    method: GET
- name: dag_longest_path
  endpoint:
    path: /dag_longest_path
    method: GET
    data_selector: node_indices
    params: {}
- name: dag_longest_path_length
  endpoint:
    path: /dag_longest_path_length
    method: GET
    data_selector: length
    params: {}
- name: dag_weighted_longest_path
  endpoint:
    path: /dag_weighted_longest_path
    method: GET
    data_selector: node_indices
    params: {}
- name: dag_weighted_longest_path_length
  endpoint:
    path: /dag_weighted_longest_path_length
    method: GET
    data_selector: longest_path_length
    params: {}
- name: layers
  endpoint:
    path: /layers
    method: GET
    data_selector: list
    params: {}
- name: transitive_reduction
  endpoint:
    path: /transitive_reduction
    method: GET
    data_selector: graph
    params: {}
- name: topological_generations
  endpoint:
    path: /topological_generations
    method: GET
    data_selector: list
    params: {}
- name: immediate_dominators
  endpoint:
    path: /immediate_dominators
    method: GET
    data_selector: dict[int, int]
    params: {}
notes:
- To build from source you will need to ensure you have pip >=19.0.0 installed, which
  supports PEP-517, or that you have manually installed setuptools-rust prior to running
  pip install rustworkx.
- To build from source you will need to ensure you have pip >=19.0.0 installed, which
  supports PEP-517.
- Support for Tier 4 platforms are best effort only.
- rustworkx allows any Python object as the data payload for nodes and edges.
- By default a PyGraph is a multigraph (meaning there can be parallel edges between
  nodes) however this can be disabled by setting the multigraph kwarg to False when
  calling the PyGraph constructor.
- This method does not preserve the ordering of endpoints in edge tuple representations.
- Uses OAuth2 with refresh token — requires setup of connected app in rustworkx
- Some objects may return nulls in deeply nested fields
- The input numpy array adjacency matrix must be a 2 dimensional array and be a float/np.float64
  data type.
- An optional float that will be treated as a null value is 0.0.
- If there are no edges between a specified pair of nodes, NoEdgeBetweenNodes will
  be raised.
- Returns the indices of all edges connected to the provided node. In undirected graphs,
  all edges connected to the node are returned.
- To return a NodeMap object that maps the nodes of the subgraph to the nodes of the
  original graph, use `subgraph_with_nodemap()`.
- This method is identical to subgraph() but includes a NodeMap object that maps the
  nodes of the subgraph to the nodes of the original graph.
- Using this method enables you to leverage graphviz to visualize a rustworkx.PyGraph
  object.
- The return type is a rustworkx.NodeMap which is an unordered type. So it does not
  provide a deterministic ordering between objects when iterated over.
- By default the real time cycle checking feature is disabled for performance
- By default a PyDiGraph is a multigraph (meaning there can be parallel edges between
  nodes)
- Whether cycle checking is enabled for the DiGraph/DAG.
- If set to True adding new edges that would introduce a cycle will raise a DAGWouldCycle
  exception.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Use add_child() or add_parent() to create a node with an edge at the same time for
  better performance.
- Allows for adding duplicate edges between nodes if the multigraph attribute is set
  to True.
- If empty, this method behaves like add_node() (but slower).
- If set to True, validates that the contraction will not introduce cycles before
  modifying the graph.
- If check_cycle is True, validates that the contraction will not introduce cycles
  before modifying the graph.
- This function takes in a function as an argument to filter nodes.
- A predecessor is defined as a node that has a directed edge pointing to the specified
  node.
- Input matrix must be a 2 dimensional array and be a complex/np.complex128 data type.
- If any element in the input matrix is null_value, it will be treated as not an edge.
- Returns a list of predecessor node indices in a directed graph
- In a multigraph, each predecessor node index is returned only once
- Note if there are multiple edges between the specified nodes only one will be removed.
- If there are multiple edges between the specified nodes only one will be removed.
- This method modifies the graph instance to reverse the direction of all edges.
- To return a NodeMap object that maps the nodes of the subgraph to the nodes of the
  original graph, use subgraph_with_nodemap()
- To return a NodeMap object that maps the nodes of the subgraph to the nodes of the
  original graph, use subgraph_with_nodemap.
- The node indices in the output PyGraph may differ if nodes have been removed.
- This method is identical to `subgraph()` but includes a NodeMap object that maps
  the nodes of the subgraph to the nodes of the original graph.
- The return type is a `rustworkx.NodeMap` which is an unordered type. So it does
  not provide a deterministic ordering between objects when iterated over.
- The key and value of attributes must be strings.
- Update an edge’s weight/data payload in place by the edge index
- Returns one arbitrary node where the edge matches the condition
- Raises NoSuitableNeighbors if there are no suitable nodes
- Includes multiple graph algorithms and utilities.
- This method is used to find a target node that is adjacent to a given node as a
  successor given an edge condition.
- The input adjacency matrix must be a 2 dimensional array and be a float/np.float64
  data type.
- If any element in the input matrix is the null_value, it will be treated as not
  an edge.
- Some objects like Contact may return nulls in deeply nested fields
- This essentially iterates over all edges leading into the reference nodes specified
  in the ref_nodes parameter, removes those edges and then adds 2 edges, one from
  the predecessor of ref_node to node and the other one from node to ref_node.
- The edge payloads of the two newly created edges are copied by reference from the
  original edge that gets removed.
- If there is no edge between the nodes specified
- To return a NodeMap object that maps the nodes of the subgraph to the nodes of the
  original graph, use subgraph_with_nodemap().
- If a node index is included that is not present in the graph it will silently be
  ignored.
- If set to True the attributes of the PyDiGraph will be copied by reference to be
  the attributes of the output subgraph. By default this is set to False and the attrs
  attribute will be None in the subgraph.
- No authentication required.
- Raises IndexError when there is no edge present with the provided index
- The function is multithreaded and will run in parallel if the number of nodes in
  the graph is above the value of `parallel_threshold`.
- The expected format for the edge list file is a line separated list of delimited
  node ids.
- The coloring problem is NP-hard and this is a heuristic algorithm which may not
  return an optimal solution.
- If rx.is_strongly_connected(G) is True then rx.number_strongly_connected_components(G)
  == 1.
- The return type is a rustworkx.NodeMap which is an unordered type. So it does not
  provide a deterministic ordering between objects when iterated over (although the
  same object will have a consistent order when iterated over multiple times).
- A directed graph is considered weakly connected if there is a path between every
  pair of vertices when the direction of edges is ignored.
- The function implicitly assumes that there are no parallel edges.
- It may produce incorrect/unexpected results if the input graph has parallel edges.
- The function implicitly assumes that there are no parallel edges or self loops.
  It may produce incorrect/unexpected results if the input graph has self loops or
  parallel edges.
- This function is multithreaded and will launch a thread pool with threads equal
  to the number of CPUs by default.
- This function is multithreaded and will run in parallel if the number of nodes in
  the graph is above the value of `parallel_threshold` (it defaults to 50).
- This function requires a weight_fn parameter that is expected to return a float.
- A layer is a subgraph whose nodes are disjoint, i.e., a layer has depth 1.
- Uses Degree strategy by default if strategy is not specified.
- An undirected graph is considered connected if there is a path between every pair
  of vertices.
- Check if a directed graph is strongly connected
- The input object must be a DAG without a cycle.
- Function traverses in topological order and only checks incoming edges to each node.
- Function finds the length of the longest path in a DAG
- Input object must be a DAG without a cycle
- A python callable that will be passed the 3 positional arguments, the source node,
  the target node, and the edge weight for each edge as the function traverses the
  graph.
- Returns a list of layers, each layer is a list of node data or indices if index_output
  is True.
- A topological generation is a collection of nodes where all ancestors of a node
  are guaranteed to be in a previous generation, and all descendants of a node are
  guaranteed to be in a subsequent generation.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'NoEdgeBetweenNodes: When there is no edge between nodes'
- 'NoEdgeBetweenNodes: when there is no edge between the provided nodes'
- 'IndexError: when there is no edge present with the provided index'
- 'IndexError: when an invalid node index is provided'
- 'NoEdgeBetweenNodes: If there is no edge between the nodes specified'
- 'NoEdgeBetweenNodes: If there are no edges between a specified pair of nodes.'
- 'PyIndexError: When the new edge would create a cycle'
- 'DAGWouldCycle: The cycle check is enabled and the contraction would introduce cycle(s).'
- 'NoSuitableNeighbors: If there are no suitable nodes'
- 'NoEdgeBetweenNodes: When there is no edge between the nodes'
- 'TypeError: Raised if keys or values are not strings.'
- 'InvalidNode: When an invalid node index is provided'
- 'NullGraph: If an empty graph is passed in'
- 'ValueError: If `k` is larger than the number of nodes in `graph`'
- DAGHasCycle
- DAGWouldCycle
- FailedToConverge
- GraphNotBipartite
- InvalidMapping
- InvalidNode
- JSONDeserializationError
- JSONSerializationError
- NegativeCycle
- NoEdgeBetweenNodes
- NoPathFound
- NoSuitableNeighbors
- NullGraph
- 'Exception: If an unexpected error occurs or a path can’t be found'
- 'DAGHasCycle: If the input PyDiGraph has a cycle'
- 'DAGHasCycle: If the input PyDiGraph has a cycle.'
- 'InvalidNode: If a node index in first_layer is not in the graph'
- 'PyValueError: if `graph` is not a DAG'
- 'DAGHasCycle: if a cycle is encountered while processing the graph'
- 'NullGraph: the passed graph is empty'
- 'InvalidNode: the start node is not in the graph'
- 'DAGHasCycle: if a cycle is encountered while processing the graph.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://pypi.org/project/rustworkx
  auth: {}
  headers: {}
  paginator: {}
source_metadata: null
