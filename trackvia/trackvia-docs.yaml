resources:
- name: API User
  endpoint:
    path: /api/users
    method: POST
    data_selector: user
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: records
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: records
- name: views
  endpoint:
    path: /views
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
    data_selector: records
- name: flows
  endpoint:
    path: /flows
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: records
- name: views
  endpoint:
    path: /api/views
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /api/records
    method: GET
    data_selector: records
- name: integrations
  endpoint:
    path: /api/integrations
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
- name: microservice_upload
  endpoint:
    path: /microservices/upload
    method: POST
    data_selector: results
notes:
- API Users are unable to use either the TrackVia web or mobile applications.
- API Users bypass SSO login in order to prevent their access tokens from inadvertently
  expiring due to SSO policies.
- API Users are exempt from TrackVia password expiration policies.
- The API can only interact with Users, Applications, Views, Records, Integrations,
  and Files.
- API Key is unique to your TrackVia account and is a required component for accessing
  the TrackVia API.
- Only active users, designated as an API User, will be shown in the window for creating
  auth tokens.
- Node SDK is the preferred SDK for developing applications with the TrackVia API.
- All TrackVia API endpoints are defined for you in a Postman Collection.
- Avoid making API calls against the default view.
- Build a custom view to make API calls against.
- Use indexing to improve response times.
- Follow the principle of least privilege.
- Test in a sandbox environment before releasing to production.
- Make the fewest number of API calls possible.
- TrackVia has API rate limits in place to ensure system stability. There are two
  rate limits; per minute and per month. The rate limit per minute is 1,200 API calls.
  The per month rate limit is 11M API calls.
- Request only what you need, and only when you need it.
- Default JS file needs to be named index.js and must be at the top level of the zip.
- Run Asynchronously checkbox allows the microservice to run asynchronously.
- Super Admin permissions are required to work with microservices.
- Microservices can be written in Node or Python
- Microservices run on a serverless implementation of Node.js.
- 512 MB of memory available to the microservice
- Execution timeout of 1 minute
- Microservices are limited to a total runtime of 15 minutes.
- Microservices do not have access to IAM or other AWS services.
- Microservices packages (ZIP) may only be 40MB in size.
- Microservices are standalone - there is no access to layers.
- All microservices are subject to TrackVia's Terms of Service and security policies.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- DENIED!!! - View XXXX either does not exist or you do not have access to it.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://go.trackvia.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
