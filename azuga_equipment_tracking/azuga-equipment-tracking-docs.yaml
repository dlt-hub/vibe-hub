resources:
- name: accident_detection
  endpoint:
    path: /webhook/events/accident_detection
    method: POST
- name: accelerometer_impact_event
  endpoint:
    path: /webhook/events/accelerometer_impact_event
    method: POST
- name: accelerometer_y_axis
  endpoint:
    path: /webhook/events/accelerometer_y_axis
    method: POST
- name: battery_voltage_restored
  endpoint:
    path: /battery_voltage_restored
    method: POST
    data_selector: input
    params: {}
- name: cam_button_pressed
  endpoint:
    path: /cam_button_pressed
    method: POST
    data_selector: input
    params: {}
- name: cam_distracted_driving
  endpoint:
    path: /cam_distracted_driving
    method: POST
    data_selector: input
    params: {}
- name: CAM_EATING_DRINKING
  endpoint:
    path: /CAM_EATING_DRINKING
    method: GET
    data_selector: records
    params: {}
- name: CAM_IMPACT
  endpoint:
    path: /CAM_IMPACT
    method: GET
    data_selector: records
    params: {}
- name: CAM_PHONE_USE
  endpoint:
    path: /CAM_PHONE_USE
    method: GET
    data_selector: records
    params: {}
- name: CAM_SMOKING
  endpoint:
    path: /CAM_SMOKING
    method: GET
    data_selector: records
    params: {}
- name: accident_detection
  endpoint:
    path: /webhooks/accident_detection
    method: POST
    data_selector: inputBit7
    params: {}
- name: accelerometer_impact_event
  endpoint:
    path: /webhooks/accelerometer_impact_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: accelerometer_y_axis
  endpoint:
    path: /webhooks/accelerometer_y_axis
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Tampered
  endpoint:
    path: /CAM_Tampered
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Unbelted
  endpoint:
    path: /CAM_Unbelted
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Left_Turn
  endpoint:
    path: /CAM_Violent_Left_Turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Right_Turn
  endpoint:
    path: /CAM_Violent_Right_Turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: Battery_Voltage_Restored
  endpoint:
    path: /Battery_Voltage_Restored
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Button_Pressed
  endpoint:
    path: /CAM_Button_Pressed
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Distracted_Driving
  endpoint:
    path: /CAM_Distracted_Driving
    method: POST
    data_selector: inputBit7
    params: {}
- name: charging_concern_dtc
  endpoint:
    path: /charging_concern_dtc
    method: POST
    data_selector: inputBit7
    params: {}
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: critical_battery_voltage
  endpoint:
    path: /critical_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: disconnect
  endpoint:
    path: /disconnect
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_EATING_DRINKING
  endpoint:
    path: /CAM_EATING_DRINKING
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_IMPACT
  endpoint:
    path: /CAM_IMPACT
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_PHONE_USE
  endpoint:
    path: /CAM_PHONE_USE
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_SMOKING
  endpoint:
    path: /CAM_SMOKING
    method: POST
    data_selector: inputBit7
    params: {}
- name: DTC_Message
  endpoint:
    path: /DTC_Message
    method: POST
    data_selector: dtcMessageRecords
    params: {}
- name: Engine_Hours_Start
  endpoint:
    path: /Engine_Hours_Start
    method: POST
    data_selector: records
    params: {}
- name: Engine_Hours_End
  endpoint:
    path: /Engine_Hours_End
    method: POST
    data_selector: records
    params: {}
- name: Entered_Geofence
  endpoint:
    path: /Entered_Geofence
    method: POST
    data_selector: records
    params: {}
- name: CAM_Tampered
  endpoint:
    path: /webhook/events/CAM_Tampered
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Unbelted
  endpoint:
    path: /webhook/events/CAM_Unbelted
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Left_Turn
  endpoint:
    path: /webhook/events/CAM_Violent_Left_Turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Right_Turn
  endpoint:
    path: /webhook/events/CAM_Violent_Right_Turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: Event_Report_Message
  endpoint:
    path: /event_report_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: Excessive_Drain_Alert
  endpoint:
    path: /excessive_drain_alert
    method: POST
    data_selector: inputBit7
    params: {}
- name: Excessive_Drain_Reset
  endpoint:
    path: /excessive_drain_reset
    method: POST
    data_selector: inputBit7
    params: {}
- name: Charging_Concern_DTC
  endpoint:
    path: /charging_concern_dtc
    method: POST
    data_selector: inputBit7
    params: {}
- name: Connect
  endpoint:
    path: /connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Critical_Battery_Voltage
  endpoint:
    path: /critical_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: Disconnect
  endpoint:
    path: /disconnect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Exit_Geofence
  endpoint:
    path: /webhook/exit_geofence
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_1_End
  endpoint:
    path: /webhook/extension_1_end
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_1_Start
  endpoint:
    path: /webhook/extension_1_start
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_2_End
  endpoint:
    path: /webhook/extension_2_end
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_2_Start
  endpoint:
    path: /webhook/extension_2_start
    method: POST
    data_selector: inputBit7
    params: {}
- name: DTC_Message
  endpoint:
    path: /DTC_Message
    method: GET
    data_selector: dtcMessageRecords
- name: Engine_Hours_Start
  endpoint:
    path: /Engine_Hours_Start
    method: GET
    data_selector: records
- name: Engine_Hours_End
  endpoint:
    path: /Engine_Hours_End
    method: GET
    data_selector: records
- name: Entered_Geofence
  endpoint:
    path: /Entered_Geofence
    method: GET
    data_selector: records
- name: firmware_update
  endpoint:
    path: /firmware_update
    method: POST
    data_selector: inputBit7
    params: {}
- name: fuel_decrease
  endpoint:
    path: /fuel_decrease
    method: POST
    data_selector: inputBit7
    params: {}
- name: fuel_increase
  endpoint:
    path: /fuel_increase
    method: POST
    data_selector: inputBit7
    params: {}
- name: geofence_entry
  endpoint:
    path: /geofence_entry
    method: POST
    data_selector: inputBit7
    params: {}
- name: Event_Report_Message
  endpoint:
    path: /Event_Report_Message
    method: POST
    data_selector: payload
    params: {}
- name: Excessive_Drain_Alert
  endpoint:
    path: /Excessive_Drain_Alert
    method: POST
    data_selector: payload
    params: {}
- name: Excessive_Drain_Reset
  endpoint:
    path: /Excessive_Drain_Reset
    method: POST
    data_selector: payload
    params: {}
- name: geofence_exit
  endpoint:
    path: /geofence/exit
    method: POST
    data_selector: message
    params: {}
- name: geofence_timer_not_in
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: message
    params: {}
- name: geofence_timer_not_out
  endpoint:
    path: /geofence/timer/notout
    method: POST
    data_selector: message
    params: {}
- name: gps_message
  endpoint:
    path: /gps/message
    method: POST
    data_selector: message
    params: {}
- name: Exit_Geofence
  endpoint:
    path: /webhook/events/Exit_Geofence
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_1_End
  endpoint:
    path: /webhook/events/Extension_1_End
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_1_Start
  endpoint:
    path: /webhook/events/Extension_1_Start
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_2_End
  endpoint:
    path: /webhook/events/Extension_2_End
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension_2_Start
  endpoint:
    path: /webhook/events/Extension_2_Start
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_acceleration_message
  endpoint:
    path: /hard_acceleration_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_breaking_message
  endpoint:
    path: /hard_breaking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_core_braking_message
  endpoint:
    path: /hard_core_braking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: high_tire_pressure
  endpoint:
    path: /high_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: idling_ended
  endpoint:
    path: /idling_ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: Firmware_Update
  endpoint:
    path: /firmware_update
    method: POST
    data_selector: payload
    params: {}
- name: Fuel_Decrease
  endpoint:
    path: /fuel_decrease
    method: POST
    data_selector: payload
    params: {}
- name: Fuel_Increase
  endpoint:
    path: /fuel_increase
    method: POST
    data_selector: payload
    params: {}
- name: Geofence_Entry
  endpoint:
    path: /geofence_entry
    method: POST
    data_selector: payload
    params: {}
- name: idling_when_steamer_on
  endpoint:
    path: /webhook/idling_when_steamer_on
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_battery_voltage
  endpoint:
    path: /webhook/low_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_tire_pressure
  endpoint:
    path: /webhook/low_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_fuel
  endpoint:
    path: /webhook/low_fuel
    method: POST
    data_selector: inputBit7
    params: {}
- name: Geofence_Exit
  endpoint:
    path: /geofence/exit
    method: POST
    data_selector: inputBit7
    params: {}
- name: Geofence_Timer_NotIn
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: inputBit7
    params: {}
- name: Geofence_Timer_NotOut
  endpoint:
    path: /geofence/timer/notout
    method: POST
    data_selector: inputBit7
    params: {}
- name: GPS_Message
  endpoint:
    path: /gps/message
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_blocked
  endpoint:
    path: /mobile/event/call/blocked
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_ended
  endpoint:
    path: /mobile/event/call/ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_made
  endpoint:
    path: /mobile/event/call/made
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_made_headset
  endpoint:
    path: /mobile/event/call/made/headset
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_acceleration_message
  endpoint:
    path: /hard_acceleration_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_breaking_message
  endpoint:
    path: /hard_breaking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_core_braking_message
  endpoint:
    path: /hard_core_braking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: high_tire_pressure
  endpoint:
    path: /high_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: idling_ended
  endpoint:
    path: /idling_ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_received
  endpoint:
    path: /mobile/events/call/received
    method: POST
    data_selector: records
    params: {}
- name: mobile_event_call_received_headset
  endpoint:
    path: /mobile/events/call/received/headset
    method: POST
    data_selector: records
    params: {}
- name: mobile_event_drive_safe_call_end
  endpoint:
    path: /mobile/events/drive_safe/call/end
    method: POST
    data_selector: records
    params: {}
- name: mobile_event_drivesafe_activated
  endpoint:
    path: /mobile/events/drivesafe/activated
    method: POST
    data_selector: records
    params: {}
- name: Idling_When_Steamer_On
  endpoint:
    path: /webhook/idling_when_steamer_on
    method: POST
    data_selector: inputBit7
    params: {}
- name: Low_Battery_Voltage
  endpoint:
    path: /webhook/low_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: Low_Tire_Pressure
  endpoint:
    path: /webhook/low_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: Low_Fuel
  endpoint:
    path: /webhook/low_fuel
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_drivesafe_deactivated
  endpoint:
    path: /mobile_events/drivesafe_deactivated
    method: POST
    data_selector: payload
    params: {}
- name: mobile_event_emergency_number_dialed
  endpoint:
    path: /mobile_events/emergency_number_dialed
    method: POST
    data_selector: payload
    params: {}
- name: mobile_event_missed_call
  endpoint:
    path: /mobile_events/missed_call
    method: POST
    data_selector: payload
    params: {}
- name: mobile_event_navigation_launched
  endpoint:
    path: /mobile_events/navigation_launched
    method: POST
    data_selector: payload
    params: {}
- name: Mobile_Event_Call_Blocked
  endpoint:
    path: /mobile_event/call_blocked
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Call_Ended
  endpoint:
    path: /mobile_event/call_ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Call_Made
  endpoint:
    path: /mobile_event/call_made
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Call_Made_Headset
  endpoint:
    path: /mobile_event/call_made_headset
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_SMS_Received
  endpoint:
    path: /mobile/event/sms/received
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_SMS_Sent
  endpoint:
    path: /mobile/event/sms/sent
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Whitelisted_App_Launched
  endpoint:
    path: /mobile/event/whitelisted/app/launched
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Whitelisted_Call_Made
  endpoint:
    path: /mobile/event/whitelisted/call/made
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_received
  endpoint:
    path: /mobile/event/call/received
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_call_received_headset
  endpoint:
    path: /mobile/event/call/received/headset
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_drive_safe_call_end
  endpoint:
    path: /mobile/event/drive/safe/call/end
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_drivesafe_activated
  endpoint:
    path: /mobile/event/drivesafe/activated
    method: POST
    data_selector: input
    params: {}
- name: Mobile_Event_Whitelisted_App_Received
  endpoint:
    path: /mobile_event/whitelisted_app_received
    method: POST
    data_selector: records
- name: Over_Speeding_Ended
  endpoint:
    path: /over_speeding/ended
    method: POST
    data_selector: records
- name: Over_Speeding_Message
  endpoint:
    path: /over_speeding/message
    method: POST
    data_selector: records
- name: mobile_event_drivesafe_deactivated
  endpoint:
    path: /mobile_event/drivesafe_deactivated
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_emergency_number_dialed
  endpoint:
    path: /mobile_event/emergency_number_dialed
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_missed_call
  endpoint:
    path: /mobile_event/missed_call
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_navigation_launched
  endpoint:
    path: /mobile_event/navigation_launched
    method: POST
    data_selector: inputBit7
    params: {}
- name: pair_message
  endpoint:
    path: /pair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: panic_message
  endpoint:
    path: /panic_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: pending_dtc_info
  endpoint:
    path: /pending_dtc_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: peripheral_connect
  endpoint:
    path: /peripheral_connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_SMS_Received
  endpoint:
    path: /mobile/event/sms/received
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_SMS_Sent
  endpoint:
    path: /mobile/event/sms/sent
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Whitelisted_App_Launched
  endpoint:
    path: /mobile/event/whitelisted/app/launched
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Whitelisted_Call_Made
  endpoint:
    path: /mobile/event/whitelisted/call/made
    method: POST
    data_selector: inputBit7
    params: {}
- name: peripheral_disconnect
  endpoint:
    path: /peripheral/disconnect
    method: POST
    data_selector: event
    params: {}
- name: posted_speed_limit
  endpoint:
    path: /posted/speed_limit
    method: POST
    data_selector: event
    params: {}
- name: power_take_off
  endpoint:
    path: /power/take_off
    method: POST
    data_selector: event
    params: {}
- name: pulse_width_duration
  endpoint:
    path: /pulse/width_duration
    method: POST
    data_selector: event
    params: {}
- name: Mobile_Event_Whitelisted_App_Received
  endpoint:
    path: /mobile/event/whitelisted/call/received
    method: POST
    data_selector: message
    params: {}
- name: Over_Speeding_Ended
  endpoint:
    path: /over/speeding/ended
    method: POST
    data_selector: message
    params: {}
- name: Over_Speeding_Message
  endpoint:
    path: /over/speeding/message
    method: POST
    data_selector: message
    params: {}
- name: real_time_disconnect_event
  endpoint:
    path: /real_time_disconnect_event
    method: GET
    data_selector: payload
- name: stop_time_message
  endpoint:
    path: /stop_time_message
    method: GET
    data_selector: payload
- name: temperature_1
  endpoint:
    path: /temperature_1
    method: GET
    data_selector: payload
- name: temperature_2
  endpoint:
    path: /temperature_2
    method: GET
    data_selector: payload
- name: temperature_3
  endpoint:
    path: /temperature_3
    method: GET
    data_selector: payload
- name: pair_message
  endpoint:
    path: /pair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: panic_message
  endpoint:
    path: /panic_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: pending_dtc_info
  endpoint:
    path: /pending_dtc_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: peripheral_connect
  endpoint:
    path: /peripheral_connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_4
  endpoint:
    path: /events/temperature/4
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_5
  endpoint:
    path: /events/temperature/5
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_6
  endpoint:
    path: /events/temperature/6
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_7
  endpoint:
    path: /events/temperature/7
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_8
  endpoint:
    path: /events/temperature/8
    method: POST
    data_selector: inputBit7
    params: {}
- name: tpms_resolved_event
  endpoint:
    path: /events/tpms/resolved
    method: POST
    data_selector: fixQuality
    params: {}
- name: Peripheral_Disconnect
  endpoint:
    path: /WebhookEvents/Peripheral_Disconnect
    method: POST
    data_selector: records
    params: {}
- name: Posted_Speed_Limit
  endpoint:
    path: /WebhookEvents/Posted_Speed_Limit
    method: POST
    data_selector: records
    params: {}
- name: Power_Take_Off
  endpoint:
    path: /WebhookEvents/Power_Take_Off
    method: POST
    data_selector: records
    params: {}
- name: Pulse_Width_Duration
  endpoint:
    path: /WebhookEvents/Pulse_Width_Duration
    method: POST
    data_selector: records
    params: {}
- name: real_time_disconnect_event
  endpoint:
    path: /real_time_disconnect_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: stop_time_message
  endpoint:
    path: /stop_time_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_1
  endpoint:
    path: /temperature_1
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_2
  endpoint:
    path: /temperature_2
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_3
  endpoint:
    path: /temperature_3
    method: POST
    data_selector: inputBit7
    params: {}
- name: Trip_End_Message
  endpoint:
    path: /trip_end_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: Trip_Start_Message
  endpoint:
    path: /trip_start_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: Unauthorized_Vehicle_Usage
  endpoint:
    path: /unauthorized_vehicle_usage
    method: POST
    data_selector: inputBit7
    params: {}
- name: Unknown_Driver
  endpoint:
    path: /unknown_driver
    method: POST
    data_selector: inputBit7
    params: {}
- name: unpair_message
  endpoint:
    path: /unpair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_backup_event
  endpoint:
    path: /vehicle_backup_event
    method: POST
    data_selector: zipCode
    params: {}
- name: vehicle_mil_info
  endpoint:
    path: /vehicle_mil_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_not_tracking
  endpoint:
    path: /vehicle_not_tracking
    method: POST
    data_selector: inputBit7
    params: {}
- name: VIN_Change_Event
  endpoint:
    path: /webhook/vin_change_event
    method: POST
    data_selector: messageType
    params: {}
- name: temperature_4
  endpoint:
    path: /webhook/events/temperature_4
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_5
  endpoint:
    path: /webhook/events/temperature_5
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_6
  endpoint:
    path: /webhook/events/temperature_6
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_7
  endpoint:
    path: /webhook/events/temperature_7
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_8
  endpoint:
    path: /webhook/events/temperature_8
    method: POST
    data_selector: inputBit7
    params: {}
- name: tpms_resolved_event
  endpoint:
    path: /webhook/events/tpms_resolved_event
    method: POST
    data_selector: fixQuality
    params: {}
- name: trip_end_message
  endpoint:
    path: /trip_end_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: trip_start_message
  endpoint:
    path: /trip_start_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: unauthorized_vehicle_usage
  endpoint:
    path: /unauthorized_vehicle_usage
    method: POST
    data_selector: inputBit7
    params: {}
- name: unknown_driver
  endpoint:
    path: /unknown_driver
    method: POST
    data_selector: inputBit7
    params: {}
- name: accident_detection
  endpoint:
    path: /webhook-events/accident_detection
    method: GET
    data_selector: payload
    params: {}
- name: accelerometer_impact_event
  endpoint:
    path: /webhook-events/accelerometer_impact_event
    method: GET
    data_selector: payload
    params: {}
- name: accelerometer_y_axis
  endpoint:
    path: /webhook-events/accelerometer_y_axis
    method: GET
    data_selector: payload
    params: {}
- name: battery_voltage_restored
  endpoint:
    path: /battery_voltage_restored
    method: POST
    data_selector: payload
    params: {}
- name: cam_button_pressed
  endpoint:
    path: /cam_button_pressed
    method: POST
    data_selector: payload
    params: {}
- name: cam_distracted_driving
  endpoint:
    path: /cam_distracted_driving
    method: POST
    data_selector: payload
    params: {}
- name: unpair_message
  endpoint:
    path: /unpair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_backup_event
  endpoint:
    path: /vehicle_backup_event
    method: POST
    data_selector: zipCode
    params: {}
- name: vehicle_mil_info
  endpoint:
    path: /vehicle_mil_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_not_tracking
  endpoint:
    path: /vehicle_not_tracking
    method: POST
    data_selector: inputBit7
    params: {}
- name: VIN_Change_Event
  endpoint:
    path: /webhook_events/vin_change_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_EATING_DRINKING
  endpoint:
    path: /path/to/CAM_EATING_DRINKING
    method: POST
    data_selector: records
- name: CAM_IMPACT
  endpoint:
    path: /path/to/CAM_IMPACT
    method: POST
    data_selector: records
- name: CAM_PHONE_USE
  endpoint:
    path: /path/to/CAM_PHONE_USE
    method: POST
    data_selector: records
- name: CAM_SMOKING
  endpoint:
    path: /path/to/CAM_SMOKING
    method: POST
    data_selector: records
- name: CAM_Tampered
  endpoint:
    path: /webhook/cam_tampered
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Unbelted
  endpoint:
    path: /webhook/cam_unbelted
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Left_Turn
  endpoint:
    path: /webhook/cam_violent_left_turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Right_Turn
  endpoint:
    path: /webhook/cam_violent_right_turn
    method: POST
    data_selector: inputBit7
    params: {}
- name: Charging_Concern_DTC
  endpoint:
    path: /charging_concern_dtc
    method: POST
    data_selector: records
- name: Connect
  endpoint:
    path: /connect
    method: POST
    data_selector: records
- name: Critical_Battery_Voltage
  endpoint:
    path: /critical_battery_voltage
    method: POST
    data_selector: records
- name: Disconnect
  endpoint:
    path: /disconnect
    method: POST
    data_selector: records
- name: accident_detection
  endpoint:
    path: /webhook/accident_detection
    method: POST
    data_selector: inputBit7
    params: {}
- name: accelerometer_impact_event
  endpoint:
    path: /webhook/accelerometer_impact_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: accelerometer_y_axis
  endpoint:
    path: /webhook/accelerometer_y_axis
    method: POST
    data_selector: inputBit7
    params: {}
- name: DTC_Message
  endpoint:
    path: /DTC_Message
    method: POST
    data_selector: dtcMessageRecords
    params: {}
- name: Engine_Hours_Start
  endpoint:
    path: /Engine_Hours_Start
    method: POST
    data_selector: records
    params: {}
- name: Engine_Hours_End
  endpoint:
    path: /Engine_Hours_End
    method: POST
    data_selector: records
    params: {}
- name: Entered_Geofence
  endpoint:
    path: /Entered_Geofence
    method: POST
    data_selector: records
    params: {}
- name: Battery_Voltage_Restored
  endpoint:
    path: /battery/voltage/restored
    method: POST
    data_selector: event
    params: {}
- name: CAM_Button_Pressed
  endpoint:
    path: /camera/button/pressed
    method: POST
    data_selector: event
    params: {}
- name: CAM_Distracted_Driving
  endpoint:
    path: /camera/distracted/driving
    method: POST
    data_selector: event
    params: {}
- name: CAM_EATING_DRINKING
  endpoint:
    path: /webhook/cam_eating_drinking
    method: POST
    data_selector: records
- name: CAM_IMPACT
  endpoint:
    path: /webhook/cam_impact
    method: POST
    data_selector: records
- name: CAM_PHONE_USE
  endpoint:
    path: /webhook/cam_phone_use
    method: POST
    data_selector: records
- name: CAM_SMOKING
  endpoint:
    path: /webhook/cam_smoking
    method: POST
    data_selector: records
- name: Event_Report_Message
  endpoint:
    path: /events/report/message
    method: POST
    data_selector: inputBit7
    params: {}
- name: Excessive_Drain_Alert
  endpoint:
    path: /events/excessive/drain/alert
    method: POST
    data_selector: inputBit7
    params: {}
- name: Excessive_Drain_Reset
  endpoint:
    path: /events/excessive/drain/reset
    method: POST
    data_selector: inputBit7
    params: {}
- name: CAM_Tampered
  endpoint:
    path: /CAM_Tampered
    method: GET
    data_selector: inputBit7
    params: {}
- name: CAM_Unbelted
  endpoint:
    path: /CAM_Unbelted
    method: GET
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Left_Turn
  endpoint:
    path: /CAM_Violent_Left_Turn
    method: GET
    data_selector: inputBit7
    params: {}
- name: CAM_Violent_Right_Turn
  endpoint:
    path: /CAM_Violent_Right_Turn
    method: GET
    data_selector: inputBit7
    params: {}
- name: Exit_Geofence
  endpoint:
    path: /exit_geofence
    method: GET
    data_selector: inputBit7
    params: {}
- name: Extension_1_End
  endpoint:
    path: /extension_1_end
    method: GET
    data_selector: inputBit7
    params: {}
- name: Extension_1_Start
  endpoint:
    path: /extension_1_start
    method: GET
    data_selector: inputBit7
    params: {}
- name: Extension_2_End
  endpoint:
    path: /extension_2_end
    method: GET
    data_selector: inputBit7
    params: {}
- name: Extension_2_Start
  endpoint:
    path: /extension_2_start
    method: GET
    data_selector: inputBit7
    params: {}
- name: Firmware_Update
  endpoint:
    path: /firmware_update
    method: POST
    data_selector: inputBit7
    params: {}
- name: Fuel_Decrease
  endpoint:
    path: /fuel_decrease
    method: POST
    data_selector: inputBit7
    params: {}
- name: Fuel_Increase
  endpoint:
    path: /fuel_increase
    method: POST
    data_selector: inputBit7
    params: {}
- name: Geofence_Entry
  endpoint:
    path: /geofence_entry
    method: POST
    data_selector: inputBit7
    params: {}
- name: charging_concern_dtc
  endpoint:
    path: /charging_concern_dtc
    method: POST
    data_selector: inputBit7
    params: {}
- name: connect
  endpoint:
    path: /connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: critical_battery_voltage
  endpoint:
    path: /critical_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: disconnect
  endpoint:
    path: /disconnect
    method: POST
    data_selector: inputBit7
    params: {}
- name: geofence_exit
  endpoint:
    path: /geofence/exit
    method: POST
    data_selector: payload
- name: geofence_timer_notin
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: payload
- name: geofence_timer_notout
  endpoint:
    path: /geofence/timer/notout
    method: POST
    data_selector: payload
- name: gps_message
  endpoint:
    path: /gps/message
    method: POST
    data_selector: payload
- name: DTC_Message
  endpoint:
    path: /DTC_Message
    method: POST
    data_selector: dtcMessageRecords
    params: {}
- name: Engine_Hours_Start
  endpoint:
    path: /Engine_Hours_Start
    method: POST
    data_selector: records
    params: {}
- name: Engine_Hours_End
  endpoint:
    path: /Engine_Hours_End
    method: POST
    data_selector: records
    params: {}
- name: Entered_Geofence
  endpoint:
    path: /Entered_Geofence
    method: POST
    data_selector: records
    params: {}
- name: Event_Report_Message
  endpoint:
    path: /Event_Report_Message
    method: POST
    data_selector: records
- name: Excessive_Drain_Alert
  endpoint:
    path: /Excessive_Drain_Alert
    method: POST
    data_selector: records
- name: Excessive_Drain_Reset
  endpoint:
    path: /Excessive_Drain_Reset
    method: POST
    data_selector: records
- name: hard_acceleration_message
  endpoint:
    path: /hard_acceleration_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_breaking_message
  endpoint:
    path: /hard_breaking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_core_braking_message
  endpoint:
    path: /hard_core_braking_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: high_tire_pressure
  endpoint:
    path: /high_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: idling_ended
  endpoint:
    path: /idling_ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: Exit_Geofence
  endpoint:
    path: /Exit_Geofence
    method: POST
    data_selector: records
    params: {}
- name: Extension_1_End
  endpoint:
    path: /Extension_1_End
    method: POST
    data_selector: records
    params: {}
- name: Extension_1_Start
  endpoint:
    path: /Extension_1_Start
    method: POST
    data_selector: records
    params: {}
- name: Extension_2_End
  endpoint:
    path: /Extension_2_End
    method: POST
    data_selector: records
    params: {}
- name: Extension_2_Start
  endpoint:
    path: /Extension_2_Start
    method: POST
    data_selector: records
    params: {}
- name: idling_when_steamer_on
  endpoint:
    path: /webhook/idling_when_steamer_on
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_battery_voltage
  endpoint:
    path: /webhook/low_battery_voltage
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_tire_pressure
  endpoint:
    path: /webhook/low_tire_pressure
    method: POST
    data_selector: inputBit7
    params: {}
- name: low_fuel
  endpoint:
    path: /webhook/low_fuel
    method: POST
    data_selector: inputBit7
    params: {}
- name: Firmware_Update
  endpoint:
    path: /firmware_update
    method: POST
    data_selector: payload
- name: Fuel_Decrease
  endpoint:
    path: /fuel_decrease
    method: POST
    data_selector: payload
- name: Fuel_Increase
  endpoint:
    path: /fuel_increase
    method: POST
    data_selector: payload
- name: Geofence_Entry
  endpoint:
    path: /geofence_entry
    method: POST
    data_selector: payload
- name: mobile_event_call_blocked
  endpoint:
    path: /Mobile_Event_Call_Blocked
    method: POST
    data_selector: records
- name: mobile_event_call_ended
  endpoint:
    path: /Mobile_Event_Call_Ended
    method: POST
    data_selector: records
- name: mobile_event_call_made
  endpoint:
    path: /Mobile_Event_Call_Made
    method: POST
    data_selector: records
- name: mobile_event_call_made_headset
  endpoint:
    path: /Mobile_Event_Call_Made_Headset
    method: POST
    data_selector: records
- name: geofence_exit
  endpoint:
    path: /geofence/exit
    method: POST
    data_selector: inputBit7
    params: {}
- name: geofence_timer_notin
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: inputBit7
    params: {}
- name: geofence_timer_notout
  endpoint:
    path: /geofence/timer/notout
    method: POST
    data_selector: inputBit7
    params: {}
- name: gps_message
  endpoint:
    path: /gps/message
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_received
  endpoint:
    path: /mobile_event_call_received
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_call_received_headset
  endpoint:
    path: /mobile_event_call_received_headset
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_drive_safe_call_end
  endpoint:
    path: /mobile_event_drive_safe_call_end
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_drivesafe_activated
  endpoint:
    path: /mobile_event_drivesafe_activated
    method: POST
    data_selector: input
    params: {}
- name: hard_acceleration_message
  endpoint:
    path: /hard_acceleration_message
    method: POST
    data_selector: records
- name: hard_breaking_message
  endpoint:
    path: /hard_breaking_message
    method: POST
    data_selector: records
- name: hard_core_braking_message
  endpoint:
    path: /hard_core_braking_message
    method: POST
    data_selector: records
- name: high_tire_pressure
  endpoint:
    path: /high_tire_pressure
    method: POST
    data_selector: records
- name: idling_ended
  endpoint:
    path: /idling_ended
    method: POST
    data_selector: records
- name: mobile_event_drivesafe_deactivated
  endpoint:
    path: /Mobile_Event_Drivesafe_Deactivated
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_emergency_number_dialed
  endpoint:
    path: /Mobile_Event_Emergency_Number_Dialed
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_missed_call
  endpoint:
    path: /Mobile_Event_Missed_Call
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_navigation_launched
  endpoint:
    path: /Mobile_Event_Navigation_Launched
    method: POST
    data_selector: inputBit7
    params: {}
- name: idling_when_steamer_on
  endpoint:
    path: /idling_when_steamer_on
    method: POST
    data_selector: inputBit7
- name: low_battery_voltage
  endpoint:
    path: /low_battery_voltage
    method: POST
    data_selector: inputBit7
- name: low_tire_pressure
  endpoint:
    path: /low_tire_pressure
    method: POST
    data_selector: inputBit7
- name: low_fuel
  endpoint:
    path: /low_fuel
    method: POST
    data_selector: inputBit7
- name: mobile_event_sms_received
  endpoint:
    path: /mobile_event/sms_received
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_sms_sent
  endpoint:
    path: /mobile_event/sms_sent
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_whitelisted_app_launched
  endpoint:
    path: /mobile_event/whitelisted_app_launched
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_whitelisted_call_made
  endpoint:
    path: /mobile_event/whitelisted_call_made
    method: POST
    data_selector: input
    params: {}
- name: mobile_event_call_blocked
  endpoint:
    path: /mobile_event_call_blocked
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_ended
  endpoint:
    path: /mobile_event_call_ended
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_made
  endpoint:
    path: /mobile_event_call_made
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_made_headset
  endpoint:
    path: /mobile_event_call_made_headset
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_whitelisted_call_received
  endpoint:
    path: /mobile_event_whitelisted_call_received
    method: GET
    data_selector: records
- name: over_speeding_ended
  endpoint:
    path: /over_speeding_ended
    method: GET
    data_selector: records
- name: over_speeding_message
  endpoint:
    path: /over_speeding_message
    method: GET
    data_selector: records
- name: mobile_event_call_received
  endpoint:
    path: /Mobile_Event_Call_Received
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_call_received_headset
  endpoint:
    path: /Mobile_Event_Call_Received_Headset
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_drive_safe_call_end
  endpoint:
    path: /Mobile_Event_Drive_Safe_Call_End
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_drivesafe_activated
  endpoint:
    path: /Mobile_Event_Drivesafe_Activated
    method: POST
    data_selector: inputBit7
    params: {}
- name: pair_message
  endpoint:
    path: /pair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: panic_message
  endpoint:
    path: /panic_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: pending_dtc_info
  endpoint:
    path: /pending_dtc_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: peripheral_connect
  endpoint:
    path: /peripheral_connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Drivesafe_Deactivated
  endpoint:
    path: /Mobile_Event_Drivesafe_Deactivated
    method: POST
    data_selector: payload
- name: Mobile_Event_Emergency_Number_Dialed
  endpoint:
    path: /Mobile_Event_Emergency_Number_Dialed
    method: POST
    data_selector: payload
- name: Mobile_Event_Missed_Call
  endpoint:
    path: /Mobile_Event_Missed_Call
    method: POST
    data_selector: payload
- name: Mobile_Event_Navigation_Launched
  endpoint:
    path: /Mobile_Event_Navigation_Launched
    method: POST
    data_selector: payload
- name: Peripheral_Disconnect
  endpoint:
    path: /webhook/events/peripheral_disconnect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Posted_Speed_Limit
  endpoint:
    path: /webhook/events/posted_speed_limit
    method: POST
    data_selector: inputBit7
    params: {}
- name: Power_Take_Off
  endpoint:
    path: /webhook/events/power_take_off
    method: POST
    data_selector: inputBit7
    params: {}
- name: Pulse_Width_Duration
  endpoint:
    path: /webhook/events/pulse_width_duration
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_sms_received
  endpoint:
    path: /mobile_event/sms_received
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_sms_sent
  endpoint:
    path: /mobile_event/sms_sent
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_whitelisted_app_launched
  endpoint:
    path: /mobile_event/whitelisted_app_launched
    method: POST
    data_selector: inputBit7
    params: {}
- name: mobile_event_whitelisted_call_made
  endpoint:
    path: /mobile_event/whitelisted_call_made
    method: POST
    data_selector: inputBit7
    params: {}
- name: real_time_disconnect_event
  endpoint:
    path: /real_time_disconnect_event
    method: GET
    data_selector: inputBit7
    params: {}
- name: stop_time_message
  endpoint:
    path: /stop_time_message
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_1
  endpoint:
    path: /temperature_1
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_2
  endpoint:
    path: /temperature_2
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_3
  endpoint:
    path: /temperature_3
    method: GET
    data_selector: inputBit7
    params: {}
- name: Mobile_Event_Whitelisted_App_Received
  endpoint:
    path: /mobile_event_whitelisted_app_received
    method: POST
    data_selector: records
- name: Over_Speeding_Ended
  endpoint:
    path: /over_speeding_ended
    method: POST
    data_selector: records
- name: Over_Speeding_Message
  endpoint:
    path: /over_speeding_message
    method: POST
    data_selector: records
- name: temperature_4
  endpoint:
    path: /temperature/4
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_5
  endpoint:
    path: /temperature/5
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_6
  endpoint:
    path: /temperature/6
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_7
  endpoint:
    path: /temperature/7
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_8
  endpoint:
    path: /temperature/8
    method: POST
    data_selector: inputBit7
    params: {}
- name: tpms_resolved_event
  endpoint:
    path: /tpms/resolved
    method: POST
    data_selector: fixQuality
    params: {}
- name: pair_message
  endpoint:
    path: /pair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: panic_message
  endpoint:
    path: /panic_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: pending_dtc_info
  endpoint:
    path: /pending_dtc_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: peripheral_connect
  endpoint:
    path: /peripheral_connect
    method: POST
    data_selector: inputBit7
    params: {}
- name: Trip_End_Message
  endpoint:
    path: /trip_end_message
    method: POST
    data_selector: records
    params: {}
- name: Trip_Start_Message
  endpoint:
    path: /trip_start_message
    method: POST
    data_selector: records
    params: {}
- name: Unauthorized_Vehicle_Usage
  endpoint:
    path: /unauthorized_vehicle_usage
    method: POST
    data_selector: records
    params: {}
- name: Unknown_Driver
  endpoint:
    path: /unknown_driver
    method: POST
    data_selector: records
    params: {}
- name: peripheral_disconnect
  endpoint:
    path: /peripheral_disconnect
    method: POST
    data_selector: records
    params: {}
- name: posted_speed_limit
  endpoint:
    path: /posted_speed_limit
    method: POST
    data_selector: records
    params: {}
- name: power_take_off
  endpoint:
    path: /power_take_off
    method: POST
    data_selector: records
    params: {}
- name: pulse_width_duration
  endpoint:
    path: /pulse_width_duration
    method: POST
    data_selector: records
    params: {}
- name: unpair_message
  endpoint:
    path: /unpair_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_backup_event
  endpoint:
    path: /vehicle_backup_event
    method: POST
    data_selector: zipCode
    params: {}
- name: vehicle_mil_info
  endpoint:
    path: /vehicle_mil_info
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_not_tracking
  endpoint:
    path: /vehicle_not_tracking
    method: POST
    data_selector: inputBit7
    params: {}
- name: Real_Time_Disconnect_Event
  endpoint:
    path: /real_time_disconnect_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: Stop_Time_Message
  endpoint:
    path: /stop_time_message
    method: POST
    data_selector: inputBit7
    params: {}
- name: Temperature_1
  endpoint:
    path: /temperature_1
    method: POST
    data_selector: inputBit7
    params: {}
- name: Temperature_2
  endpoint:
    path: /temperature_2
    method: POST
    data_selector: inputBit7
    params: {}
- name: Temperature_3
  endpoint:
    path: /temperature_3
    method: POST
    data_selector: inputBit7
    params: {}
- name: vin_change_event
  endpoint:
    path: /webhook/vin_change_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: temperature_4
  endpoint:
    path: /temperature/4
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_5
  endpoint:
    path: /temperature/5
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_6
  endpoint:
    path: /temperature/6
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_7
  endpoint:
    path: /temperature/7
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_8
  endpoint:
    path: /temperature/8
    method: GET
    data_selector: inputBit7
    params: {}
- name: tpms_resolved_event
  endpoint:
    path: /tpms/resolved_event
    method: GET
    data_selector: fixQuality
    params: {}
- name: Webhook Events
  endpoint:
    path: /webhook-events
    method: GET
- name: Alert Events
  endpoint:
    path: /alert-events
    method: GET
- name: Asset Events
  endpoint:
    path: /asset-events
    method: GET
- name: Device Events
  endpoint:
    path: /device-events
    method: GET
- name: Driver Events
  endpoint:
    path: /driver-events
    method: GET
- name: Equipment Tracking Events
  endpoint:
    path: /equipment-tracking-events
    method: GET
- name: Fuel Events
  endpoint:
    path: /fuel-events
    method: GET
- name: Geofence Events
  endpoint:
    path: /geofence-events
    method: GET
- name: GPS Message
  endpoint:
    path: /gps-message
    method: GET
- name: Trip Events
  endpoint:
    path: /trip-events
    method: GET
- name: User Events
  endpoint:
    path: /user-events
    method: GET
- name: Vehicle Events
  endpoint:
    path: /vehicle-events
    method: GET
- name: trip_end_message
  endpoint:
    path: /trips/end
    method: POST
    data_selector: inputBit7
    params: {}
- name: trip_start_message
  endpoint:
    path: /trips/start
    method: POST
    data_selector: inputBit7
    params: {}
- name: unauthorized_vehicle_usage
  endpoint:
    path: /vehicles/unauthorized
    method: POST
    data_selector: inputBit7
    params: {}
- name: unknown_driver
  endpoint:
    path: /drivers/unknown
    method: POST
    data_selector: inputBit7
    params: {}
- name: alert_create
  endpoint:
    path: /alert/create
    method: POST
    data_selector: eventInfo
    params: {}
- name: unpair_message
  endpoint:
    path: /unpair_message
    method: POST
    data_selector: inputBit7
- name: vehicle_backup_event
  endpoint:
    path: /vehicle_backup_event
    method: POST
    data_selector: zipCode
- name: vehicle_mil_info
  endpoint:
    path: /vehicle_mil_info
    method: POST
    data_selector: milDistance
- name: vehicle_not_tracking
  endpoint:
    path: /vehicle_not_tracking
    method: POST
    data_selector: messageType
- name: alert_delete
  endpoint:
    path: /webhooks/alert-delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: VIN_Change_Event
  endpoint:
    path: /webhook/vin_change_event
    method: POST
    data_selector: inputBit7
    params: {}
- name: alert_update
  endpoint:
    path: /alert/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_creation
  endpoint:
    path: /docs/asset-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: alert_create
  endpoint:
    path: /docs/alert-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_deletion
  endpoint:
    path: /asset/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: alert_deletion
  endpoint:
    path: /alert/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_update
  endpoint:
    path: /asset-update
    method: POST
    data_selector: eventInfo
- name: alert_update
  endpoint:
    path: /alert/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: device_creation
  endpoint:
    path: /device/create
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_creation
  endpoint:
    path: /docs/asset-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: device_deletion
  endpoint:
    path: /device-delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: device_updation
  endpoint:
    path: /device/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_delete
  endpoint:
    path: /webhooks/asset_delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: driver_create
  endpoint:
    path: /driver-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: asset_update
  endpoint:
    path: /asset/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: driver_deletion
  endpoint:
    path: /driver/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: device_creation
  endpoint:
    path: /device-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: driver_update
  endpoint:
    path: /driver-update
    method: POST
    data_selector: eventInfo
    params: {}
- name: DTC_MESSAGE
  endpoint:
    path: /docs/dtc-message
    method: GET
    data_selector: event
    params: {}
- name: device_deletion
  endpoint:
    path: /device/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: BLE Beacon Create
  endpoint:
    path: /docs/ble-beacon-create
    method: POST
    data_selector: data
    params: {}
- name: DEVICE_UPDATE
  endpoint:
    path: /device/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: BLE Beacon Create
  endpoint:
    path: /docs/ble-beacon-create
    method: POST
    data_selector: data
    params: {}
- name: driver_creation
  endpoint:
    path: /driver-create
    method: POST
    data_selector: eventInfo
- name: BLE Beacon Update
  endpoint:
    path: /docs/ble-beacon-update
    method: POST
    data_selector: data
    params: {}
- name: driver_deletion
  endpoint:
    path: /driver/deletion
    method: POST
    data_selector: eventInfo
    params: {}
- name: ble_beacon_delete
  endpoint:
    path: /ble-beacon-delete
    method: POST
    data_selector: data
    params: {}
- name: driver_update
  endpoint:
    path: /driver/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: BLE Equipment Pair
  endpoint:
    path: /ble-equipment-pair
    method: POST
    data_selector: payload
    params: {}
- name: DTC_MESSAGE
  endpoint:
    path: /dtc-message
    method: POST
    data_selector: inputBit7
- name: ble_equipment_unpair
  endpoint:
    path: /ble/equipment/unpair
    method: POST
    data_selector: payload
    params: {}
- name: ble_beacon_create
  endpoint:
    path: /ble-beacon-create
    method: POST
    data_selector: data
- name: category_create
  endpoint:
    path: /docs/category-create
    method: POST
    data_selector: data
    params: {}
- name: ble_beacon_create
  endpoint:
    path: /docs/ble-beacon-create
    method: POST
    data_selector: data
    params: {}
- name: category_update
  endpoint:
    path: /docs/category-update
    method: POST
    data_selector: data
    params: {}
- name: category_delete
  endpoint:
    path: /docs/category-delete
    method: POST
    data_selector: data
- name: BLE Beacon Update
  endpoint:
    path: /docs/ble-beacon-update
    method: POST
    data_selector: data
    params: {}
- name: equipment_create
  endpoint:
    path: /equipment/create
    method: POST
    data_selector: data
    params: {}
- name: BLE Beacon Delete Event
  endpoint:
    path: /ble-beacon-delete
    method: POST
    data_selector: data
    params: {}
- name: equipment_update
  endpoint:
    path: /webhooks/equipment_update
    method: POST
    data_selector: data
    params: {}
- name: ble_equipment_pair
  endpoint:
    path: /docs/ble-equipement-pair
    method: POST
    data_selector: payload
    params: {}
- name: equipment_delete
  endpoint:
    path: /equipment/delete
    method: POST
    data_selector: data
    params: {}
- name: BLE Equipment UnPair
  endpoint:
    path: /ble/equipment/unpair
    method: POST
    data_selector: payload
    params: {}
- name: Extension_1_End
  endpoint:
    path: /docs/extension-1-end
    method: POST
    data_selector: message
    params: {}
- name: Extension 1 Start
  endpoint:
    path: /webhooks/extension_1_start
    method: POST
    data_selector: message
    params: {}
- name: category_create
  endpoint:
    path: /category-create
    method: POST
    data_selector: data
    params: {}
- name: Extension 2 End
  endpoint:
    path: /webhooks/Extension_2_End
    method: POST
    data_selector: inputBit7
- name: category_update
  endpoint:
    path: /webhooks/category-update
    method: POST
    data_selector: data
    params: {}
- name: Extension_2_Start
  endpoint:
    path: /Extension_2_Start
    method: GET
    data_selector: records
    params: {}
- name: category_delete
  endpoint:
    path: /docs/category-delete
    method: POST
    data_selector: data
- name: fuel_decrease_event
  endpoint:
    path: /docs/fuel-decrease-event
    method: GET
    data_selector: payload
    params: {}
- name: equipment_create
  endpoint:
    path: /equipment/create
    method: POST
    data_selector: data
    params: {}
- name: fuel_increase_event
  endpoint:
    path: /fuel-increase-event
    method: POST
    data_selector: event
    params: {}
- name: equipment_update
  endpoint:
    path: /equipment/update
    method: POST
    data_selector: data
    params: {}
- name: fuel_level_event
  endpoint:
    path: /fuel-level-remaining
    method: POST
    data_selector: messageEventType
- name: equipment_delete
  endpoint:
    path: /equipment/delete
    method: POST
    data_selector: data
- name: LOW_FUEL
  endpoint:
    path: /low-fuel
    method: POST
    data_selector: inputBit7
    params: {}
- name: Extension 1 End
  endpoint:
    path: /extension_1_end
    method: POST
    data_selector: event
    params: {}
- name: GEOFENCE
  endpoint:
    path: /geofence
    method: POST
    data_selector: input
    params: {}
- name: extension_1_start
  endpoint:
    path: /extension_1_start
    method: POST
    data_selector: inputBit7
    params: {}
- name: entered_geofence
  endpoint:
    path: /entered-geofence
    method: POST
    data_selector: inputBit7
    params: {}
- name: EXIT_GEOFENCE
  endpoint:
    path: /geofence/exit
    method: POST
    data_selector: messageType
    params: {}
- name: Extension 2 End
  endpoint:
    path: /extension_2_end
    method: POST
    data_selector: inputBit7
    params: {}
- name: GEOFENCE_TIMER_NOTIN
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: inputBit7
- name: Extension 2 Start
  endpoint:
    path: /webhook/Extension_2_Start
    method: POST
    data_selector: inputBit7
    params: {}
- name: GEOFENCE_TIMER_NOTOUT
  endpoint:
    path: /geofence/timer/notout
    method: POST
    data_selector: inputBit7
    params: {}
- name: GPS_MESSAGE
  endpoint:
    path: /gps-message
    method: POST
    data_selector: payload
    params: {}
- name: fuel_decrease_event
  endpoint:
    path: /fuel-decrease-event
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_acceleration_event
  endpoint:
    path: /hard-acceleration
    method: POST
    data_selector: HARD_ACCELERATION_MESSAGE
    params: {}
- name: fuel_increase_event
  endpoint:
    path: /docs/fuel-increase-event
    method: POST
    data_selector: inputBit7
    params: {}
- name: hard_break
  endpoint:
    path: /hard_break
    method: GET
    data_selector: HARD_BREAKING_MESSAGE
    params: {}
- name: fuel_level_event
  endpoint:
    path: /fuel-level-remaining
    method: GET
    data_selector: messageEventType
    params: {}
- name: hard_core_braking
  endpoint:
    path: /hard-core-breaking
    method: GET
    data_selector: event
    params: {}
- name: low_fuel_event
  endpoint:
    path: /low-fuel
    method: POST
    data_selector: event
    params: {}
- name: geofence
  endpoint:
    path: /geofence
    method: GET
    data_selector: GEOFENCE
    params: {}
- name: over_speeding
  endpoint:
    path: /over-speeding
    method: GET
    data_selector: records
    params: {}
- name: entered_geofence
  endpoint:
    path: /entered-geofence
    method: POST
    data_selector: messageType
    params: {}
- name: over_speeding_ended
  endpoint:
    path: /over-speeding
    method: POST
    data_selector: input
    params: {}
- name: EXIT_GEOFENCE
  endpoint:
    path: /exit_geofence
    method: POST
    data_selector: event
- name: oil_life_event
  endpoint:
    path: /docs/oil-life-remaining
    method: GET
    data_selector: messageEventType
    params: {}
- name: GEOFENCE_TIMER_NOTIN
  endpoint:
    path: /geofence/timer/notin
    method: POST
    data_selector: inputBit7
    params: {}
- name: role_creation
  endpoint:
    path: /role-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: GEOFENCE_TIMER_NOTOUT
  endpoint:
    path: /events/geofence/timer/out
    method: POST
    data_selector: inputBit7
    params: {}
- name: role_deletion
  endpoint:
    path: /docs/role-delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: gps_message
  endpoint:
    path: /gps-message
    method: POST
    data_selector: payload
    params: {}
- name: role_update
  endpoint:
    path: /role-update
    method: POST
    data_selector: eventInfo
    params: {}
- name: hard_acceleration
  endpoint:
    path: /hard-acceleration
    method: POST
    data_selector: HARD_ACCELERATION_MESSAGE
    params: {}
- name: seat_belt
  endpoint:
    path: /docs/seat-belt
    method: GET
    data_selector: SEAT_BELT
    params: {}
- name: temperature_1
  endpoint:
    path: /docs/temperature-1
    method: GET
    data_selector: event_info
    params: {}
- name: hard_break
  endpoint:
    path: /webhooks/hard_break
    method: POST
    data_selector: message
    params: {}
- name: TEMPERATURE_2
  endpoint:
    path: /temperature-2
    method: GET
    data_selector: eventInfo
- name: hard_core_braking
  endpoint:
    path: /hard-core-breaking
    method: GET
    data_selector: HARD_CORE_BRAKING_MESSAGE
    params: {}
- name: TEMPERATURE_3
  endpoint:
    path: /temperature_3
    method: POST
    data_selector: event
    params: {}
- name: over_speeding
  endpoint:
    path: /docs/over-speeding
    method: GET
    data_selector: OVER_SPEEDING_MESSAGE
    params: {}
- name: TEMPERATURE_4
  endpoint:
    path: /temperature_4
    method: POST
    data_selector: inputBit7
    params: {}
- name: over_speeding_ended
  endpoint:
    path: /over-speeding
    method: GET
    data_selector: event
    params: {}
- name: temperature_5
  endpoint:
    path: /temperature/5
    method: POST
    data_selector: data
    params: {}
- name: oil_life_event
  endpoint:
    path: /docs/oil-life-remaining
    method: GET
    data_selector: messageEventType
    params: {}
- name: TEMPERATURE_6
  endpoint:
    path: /api/temperature_6
    method: GET
    data_selector: event
    params: {}
- name: TEMPERATURE_7
  endpoint:
    path: /temperature/7
    method: GET
    data_selector: data
    params: {}
- name: role_create
  endpoint:
    path: /role-create
    method: POST
    data_selector: eventInfo
    params: {}
- name: temperature_8
  endpoint:
    path: /temperature/events
    method: POST
    data_selector: data
    params: {}
- name: role_deletion
  endpoint:
    path: /docs/role-delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: ROLE_UPDATE
  endpoint:
    path: /webhook/role-update
    method: POST
    data_selector: eventInfo
- name: trip_start_message
  endpoint:
    path: /trip-start-message
    method: POST
    data_selector: inputBit7
    params: {}
- name: trip_end_message
  endpoint:
    path: /trip-end-message
    method: POST
    data_selector: inputBit7
    params: {}
- name: seat_belt
  endpoint:
    path: /docs/seat-belt
    method: POST
    data_selector: event
    params: {}
- name: user_creation
  endpoint:
    path: /user-create
    method: POST
    data_selector: eventInfo
- name: temperature_event
  endpoint:
    path: /docs/temperature-1
    method: GET
    data_selector: TEMPERATURE_1
- name: user_deletion
  endpoint:
    path: /user/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: TEMPERATURE_2
  endpoint:
    path: /event/TEMPERATURE_2
    method: POST
    data_selector: inputBit7
    params: {}
- name: user_update
  endpoint:
    path: /user/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: temperature_3_event
  endpoint:
    path: /temperature/3
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_creation
  endpoint:
    path: /vehicle-creation
    method: POST
    data_selector: eventInfo
    params: {}
- name: temperature_4
  endpoint:
    path: /temperature-4
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_update
  endpoint:
    path: /vehicle-updation
    method: POST
    data_selector: eventInfo
- name: temperature_5
  endpoint:
    path: /temperature_5
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_deletion
  endpoint:
    path: /vehicle-deletion
    method: POST
    data_selector: eventInfo
    params: {}
- name: TEMPERATURE_6
  endpoint:
    path: /temperature/6
    method: POST
    data_selector: input
    params: {}
- name: vehicle_backup_event
  endpoint:
    path: /vehicle-backup-event
    method: POST
    data_selector: payload
    params: {}
- name: temperature_7
  endpoint:
    path: /temperature/7
    method: GET
    data_selector: records
- name: vehicle_mil_info
  endpoint:
    path: /vehicle-mil-info
    method: GET
    data_selector: inputBit7
    params: {}
- name: temperature_8
  endpoint:
    path: /temperature-8
    method: GET
    data_selector: inputBit7
    params: {}
- name: vehicle_not_tracking
  endpoint:
    path: /event/VEHICLE_NOT_TRACKING
    method: POST
    data_selector: inputBit7
    params: {}
- name: trip_start_message
  endpoint:
    path: /trip-start-message
    method: POST
    data_selector: inputBit7
    params: {}
- name: vehicle_pairing
  endpoint:
    path: /vehicle-pairing
    method: POST
    data_selector: eventInfo
    params: {}
- name: trip_end_message
  endpoint:
    path: /docs/trip-end-message
    method: POST
    data_selector: inputBit7
    params: {}
- name: vin_change_event
  endpoint:
    path: /vin-change
    method: POST
    data_selector: inputBit7
    params: {}
- name: user_creation
  endpoint:
    path: /user-create
    method: POST
    data_selector: eventInfo
- name: user_deletion
  endpoint:
    path: /user/delete
    method: POST
    data_selector: eventInfo
    params: {}
- name: user_update
  endpoint:
    path: /user/update
    method: POST
    data_selector: eventInfo
    params: {}
- name: Assets
  endpoint:
    path: /reference/view-all-assets
    method: POST
- name: Vehicles
  endpoint:
    path: /reference/view-all-vehicles-1
    method: POST
- name: Users
  endpoint:
    path: /reference/view-users
    method: POST
- name: Drivers
  endpoint:
    path: /reference/view-all-drivers
    method: POST
- name: Devices
  endpoint:
    path: /reference/view-all-devices-1
    method: POST
- name: Groups
  endpoint:
    path: /reference/view-all-groups
    method: POST
- name: Geofences
  endpoint:
    path: /reference/view-geofences
    method: POST
- name: Webhooks
  endpoint:
    path: /reference/view-2
    method: GET
- name: Alerts
  endpoint:
    path: /reference/get-all-alerts
    method: POST
- name: vehicle_creation
  endpoint:
    path: /vehicle-creation
    method: POST
    data_selector: eventInfo
    params: {}
- name: vehicle_updation
  endpoint:
    path: /vehicle-updation
    method: POST
    data_selector: eventInfo
    params: {}
- name: vehicle_deletion
  endpoint:
    path: /vehicle-deletion
    method: POST
    data_selector: eventInfo
    params: {}
- name: trackees
  endpoint:
    path: /trackees
    method: POST
    data_selector: records
    params:
      lastSyncTime: '0'
- name: vehicle_backup_event
  endpoint:
    path: /vehicle-backup-event
    method: POST
    data_selector: event
    params: {}
- name: vehicle_mil_info
  endpoint:
    path: /vehicle/mil/info
    method: GET
    data_selector: records
- name: vehicle_not_tracking
  endpoint:
    path: /vehicle-not-tracking
    method: POST
    data_selector: event
    params: {}
- name: Refresh Token
  endpoint:
    path: /oauth2/oauthtoken/refresh
    method: GET
    data_selector: data
    params:
      userName: string
      clientId: string
      refresh_token: string
      access_token: string
- name: vehicle_pairing
  endpoint:
    path: /vehicle/pairing
    method: POST
    data_selector: eventInfo
- name: vin_change_event
  endpoint:
    path: /vin-change
    method: POST
    data_selector: records
    params: {}
- name: score_report
  endpoint:
    path: /reports/v3/reports/score
    method: POST
    data_selector: data.result
    params:
      appId: FLEET
      startDate: '2023-03-02T15:46:48.285Z'
      endDate: '2023-03-02T15:46:48.285Z'
      browserTimezone: US/Eastern
      reportFilter: default
      index: 0
      size: 50
      desc: false
- name: score_report
  endpoint:
    path: /reports/v3/reports/score
    method: POST
    data_selector: object
    params:
      appId: FLEET
- name: alerts_report
  endpoint:
    path: /reports/v3/reports/allalertreport
    method: POST
    data_selector: results
    params:
      startDate: '2022-10-12T04:00:00.000Z'
      endDate: '2022-10-19T03:59:59.676Z'
      alertTypeId: -1
      browserTimezone: US/Eastern
- name: Assets
  endpoint:
    path: /reference/view-all-assets
    method: POST
- name: Vehicles
  endpoint:
    path: /reference/view-all-vehicles-1
    method: POST
- name: Users
  endpoint:
    path: /reference/view-users
    method: POST
- name: Drivers
  endpoint:
    path: /reference/view-all-drivers
    method: POST
- name: Devices
  endpoint:
    path: /reference/view-all-devices-1
    method: POST
- name: Groups
  endpoint:
    path: /reference/view-all-groups
    method: POST
- name: Geofences
  endpoint:
    path: /reference/view-geofences
    method: POST
- name: Alerts
  endpoint:
    path: /reference/get-all-alerts
    method: POST
- name: Webhooks
  endpoint:
    path: /reference/view-2
    method: GET
- name: Configurations
  endpoint:
    path: /reference/read-configs
    method: GET
- name: Maintenance
  endpoint:
    path: /reference/view-maintenance-history
    method: POST
- name: alert_report
  endpoint:
    path: /reports/v3/reports/allalertreport
    method: POST
    data_selector: result
    params:
      alertTypeId: -1
      browserTimezone: US/Eastern
      index: 0
      size: 100
- name: users
  endpoint:
    path: /reference/view-users
    method: post
- name: vehicles
  endpoint:
    path: /reference/view-all-vehicles-1
    method: post
- name: drivers
  endpoint:
    path: /reference/view-all-drivers
    method: post
- name: assets
  endpoint:
    path: /reference/view-all-assets
    method: post
- name: trip_report
  endpoint:
    path: /reports/v3/reports/trip
    method: POST
    data_selector: response
    params: {}
- name: breadcrumb_report
  endpoint:
    path: /reports/v3/reports/breadcrumb
    method: POST
    data_selector: result
    params: {}
- name: diagnostics_report
  endpoint:
    path: /reports/v3/reports/classic/diagnostics
    method: POST
    data_selector: result
- name: geofence_report
  endpoint:
    path: /reports/v3/reports/classic/geofence
    method: POST
- name: assets
  endpoint:
    path: /assets.json
    method: POST
    data_selector: records
    params:
      limit: 50
      offset: 0
- name: refresh_token
  endpoint:
    path: /oauth2/oauthtoken/refresh
    method: GET
    params:
      userName: string
      clientId: 5decccae0a214939a77411a77eeff8fc
      refresh_token: string
      access_token: string
- name: asset
  endpoint:
    path: /assets/{assetId}
    method: GET
    data_selector: data
- name: score_report
  endpoint:
    path: /reports/v3/reports/score
    method: POST
    data_selector: data.result
    params:
      appId: FLEET
      startDate: '2023-03-02T15:46:48.285Z'
      endDate: '2023-03-02T15:46:48.285Z'
      browserTimezone: US/Eastern
      reportFilter: default
      index: 0
      size: 50
      desc: false
- name: create_asset
  endpoint:
    path: /v3/assets/create.json
    method: POST
- name: score_report
  endpoint:
    path: /reports/v3/reports/score
    method: POST
    data_selector: results
    params:
      appId: FLEET
      startDate: '2023-03-02T15:46:48.285Z'
      endDate: '2023-03-02T15:46:48.285Z'
      browserTimezone: US/Eastern
      reportFilter: default
      index: 0
      size: 50
- name: asset
  endpoint:
    path: /api/v1/assets
    method: POST
    data_selector: data
    params: {}
- name: alerts_report
  endpoint:
    path: /reports/v3/reports/allalertreport
    method: POST
    data_selector: alerts
    params:
      startDate: '2022-10-12T04:00:00.000Z'
      endDate: '2022-10-19T03:59:59.676Z'
      alertTypeId: -1
      browserTimezone: US/Eastern
- name: asset
  endpoint:
    path: /assets/create.json
    method: POST
    data_selector: object
- name: alert_report
  endpoint:
    path: /reports/v3/reports/allalertreport
    method: POST
    data_selector: result
    params:
      alertTypeId: -1
      browserTimezone: US/Eastern
      index: 0
      size: 100
- name: update_asset
  endpoint:
    path: /assets/{assetId}.json
    method: PUT
- name: trips_report
  endpoint:
    path: /reports/v3/reports/trip
    method: POST
    data_selector: report
    params: {}
- name: breadcrumb_report
  endpoint:
    path: /reports/v3/reports/breadcrumb
    method: POST
    data_selector: result
    params: {}
- name: delete_asset
  endpoint:
    path: /v3/assets.json
    method: DELETE
    params:
      ids: ''
- name: diagnostics_report
  endpoint:
    path: /reports/v3/reports/classic/diagnostics
    method: POST
- name: view_all_extensions
  endpoint:
    path: /asset/extension/list.json
    method: POST
    data_selector: data
    params:
      limit: '999999'
- name: geofence_report
  endpoint:
    path: /reports/v3/reports/classic/geofence
    method: POST
    data_selector: data
    params:
      index: 0
      size: 100
      filter:
        orFilter: {}
        matchFilter:
          vehicleIds:
          - 48d5b931-f050-11ee-aedc-fb780c4eac6c
          geoFenceIds:
          - d6683484-189d-11ef-96df-e96b2e0ce90f
      startDate: '2024-07-25T08:00:00.000Z'
      endDate: '2024-08-02T07:59:59.999Z'
      reportFilter: entryexit
      browserTimezone: US/Alaska
- name: view_single_extension
  endpoint:
    path: /asset/extension/{extensionId}
    method: GET
    data_selector: response.data
- name: assets
  endpoint:
    path: /assets.json
    method: POST
    data_selector: records
- name: create_extension
  endpoint:
    path: /asset/extension.json
    method: POST
- name: view_single_asset
  endpoint:
    path: /assets/{assetId}
    method: GET
- name: update_extension
  endpoint:
    path: /v3/asset/extension/{extensionId}.json
    method: PUT
- name: create_asset
  endpoint:
    path: /assets/create.json
    method: POST
- name: delete_extension
  endpoint:
    path: /asset/extension/{extensionId}.json
    method: DELETE
    data_selector: response
- name: view_all_vehicles
  endpoint:
    path: /trackees
    method: POST
- name: asset
  endpoint:
    path: /assets
    method: POST
    data_selector: data
    params: {}
- name: trackees
  endpoint:
    path: /trackees
    method: POST
    data_selector: data
- name: create_asset
  endpoint:
    path: /assets/create.json
    method: POST
- name: update_asset
  endpoint:
    path: /v3/assets/{assetId}.json
    method: PUT
- name: view_vehicle_summary
  endpoint:
    path: /v3/trackee/summary
    method: POST
    data_selector: vehicleData
    params:
      fromDate: 2023-08-01 00:00:00 AM
      toDate: 2023-08-10 00:00:00 PM
- name: view_single_vehicle
  endpoint:
    path: /v3/trackees/{trackeeId}
    method: GET
- name: vehicle
  endpoint:
    path: /api/vehicles
    method: GET
    data_selector: records
    params:
      trackeeId: string
      trackeeTypeId: string
- name: delete_asset
  endpoint:
    path: /v3/assets.json
    method: DELETE
    params:
      ids: comma-separated assetIds
- name: trackee
  endpoint:
    path: /trackees/trackeeId
    method: GET
- name: view_all_extensions
  endpoint:
    path: /asset/extension/list.json
    method: POST
    data_selector: data
    params:
      limit: 999999
- name: create_vehicle
  endpoint:
    path: /v3/trackees/create
    method: POST
    data_selector: data
    params: {}
- name: extension
  endpoint:
    path: /asset/extension/{extensionId}
    method: GET
- name: trackees
  endpoint:
    path: /trackees/create
    method: POST
- name: update_vehicle
  endpoint:
    path: /v3/trackees/{trackeeId}
    method: PUT
- name: create_extension
  endpoint:
    path: /asset/extension.json
    method: POST
    data_selector: data
- name: vehicle_types
  endpoint:
    path: /trackees/types
    method: GET
    data_selector: data
- name: update_extension
  endpoint:
    path: /asset/extension/{extensionId}.json
    method: PUT
- name: vehicle_fuel_types
  endpoint:
    path: /v3/trackees/fuelTypes
    method: GET
- name: vehicle_owner_types
  endpoint:
    path: /v3/trackees/ownerTypes
    method: GET
    data_selector: records
- name: delete_extension
  endpoint:
    path: /v3/asset/extension/{extensionId}.json
    method: DELETE
- name: delete_vehicle
  endpoint:
    path: /trackees/{trackeeId}
    method: DELETE
- name: vehicles
  endpoint:
    path: /trackees
    method: POST
    data_selector: trackees
    params: {}
- name: trackees
  endpoint:
    path: /trackees
    method: POST
    data_selector: data
- name: users
  endpoint:
    path: /users.json
    method: POST
    data_selector: users
    params: {}
- name: vehicle_summary
  endpoint:
    path: /trackee/summary
    method: POST
    params:
      fromDate: 2023-08-01 00:00:00 AM
      toDate: 2023-08-10 00:00:00 PM
      vehicleIds: f165905c-d228-11e8-s417-fde07081wqr15
- name: vehicle
  endpoint:
    path: /trackees/{trackeeId}
    method: GET
- name: user
  endpoint:
    path: /v3/users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: vehicle
  endpoint:
    path: /api/vehicle
    method: GET
    data_selector: vehicle
    params:
      trackeeId: string
      trackeeTypeId: string
- name: contact_details
  endpoint:
    path: /v3/users/contactDetails
    method: POST
    data_selector: ''
- name: trackee
  endpoint:
    path: /trackees/trackeeId
    method: GET
- name: create_user
  endpoint:
    path: /user/create.json
    method: POST
    data_selector: data
- name: create_vehicle
  endpoint:
    path: /trackees/create
    method: POST
    data_selector: data
- name: update_user
  endpoint:
    path: /v3/users/{userId}
    method: PATCH
- name: delete_user
  endpoint:
    path: /v3/users/{userId}
    method: DELETE
- name: update_vehicle
  endpoint:
    path: /v3/trackees/{trackeeId}
    method: PUT
- name: vehicle_types
  endpoint:
    path: /trackees/types
    method: GET
    data_selector: data
- name: drivers
  endpoint:
    path: /users
    method: POST
    data_selector: data
    params:
      limit: 2
      offset: 1
      userType: driver
- name: users
  endpoint:
    path: /users.json
    method: POST
    data_selector: result
    params:
      limit: '2'
      offset: '1'
      userType: driver
- name: fuel_types
  endpoint:
    path: /v3/trackees/fuelTypes
    method: GET
    data_selector: fuelTypes
- name: vehicle_owner_types
  endpoint:
    path: /v3/trackees/ownerTypes
    method: GET
- name: driver
  endpoint:
    path: /users/{driverId}
    method: GET
    data_selector: data
    params: {}
- name: drivers
  endpoint:
    path: /users/driverId
    method: GET
- name: Delete Vehicle
  endpoint:
    path: /trackees/{trackeeId}
    method: DELETE
    data_selector: error
    params: {}
- name: create_driver
  endpoint:
    path: /v3/drivers/create.json
    method: POST
- name: update_driver
  endpoint:
    path: /v3/user/update.json
    method: PATCH
- name: delete_driver
  endpoint:
    path: /users/{driverId}
    method: DELETE
- name: latest_location_of_vehicles
  endpoint:
    path: /vehicles/latestlocation
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/get
    method: POST
    data_selector: data
    params:
      limit: '500'
- name: users
  endpoint:
    path: /users.json
    method: POST
- name: single_device
  endpoint:
    path: /v3/devices/{deviceId}.json
    method: GET
- name: single_user
  endpoint:
    path: /users/{userId}
    method: GET
- name: contact_details
  endpoint:
    path: /v3/users/contactDetails
    method: POST
- name: beacons
  endpoint:
    path: /beacons
    method: POST
    data_selector: data
    params:
      limit: 50
- name: single_beacon
  endpoint:
    path: /v3/beacons/{beaconId}.json
    method: GET
- name: create_user
  endpoint:
    path: /v3/user/create.json
    method: POST
    data_selector: data
- name: sensors
  endpoint:
    path: /sensors/temperature.json
    method: GET
    data_selector: data
    params:
      limit: '50'
- name: user
  endpoint:
    path: /users/{userId}
    method: PATCH
- name: sensor
  endpoint:
    path: /v3/sensors/temperature/{assetSensorId}.json
    method: GET
    data_selector: data
- name: delete_user
  endpoint:
    path: /v3/users/{userId}
    method: DELETE
- name: tablets
  endpoint:
    path: /tablets/get.json
    method: POST
    data_selector: data
    params:
      limit: '50'
- name: users
  endpoint:
    path: /users.json
    method: POST
    data_selector: data
    params:
      userType: driver
- name: tablet
  endpoint:
    path: /v3/tablets/{tabletId}.json
    method: GET
- name: users
  endpoint:
    path: /users.json
    method: POST
    data_selector: result
    params:
      limit: '2'
      offset: '1'
      userType: driver
- name: create_group
  endpoint:
    path: /groups/create.json
    method: POST
    data_selector: data
    params: {}
- name: driver
  endpoint:
    path: /users/{driverId}
    method: GET
- name: drivers
  endpoint:
    path: /users/driverId
    method: GET
- name: group
  endpoint:
    path: /v3/groups/{groupId}.json
    method: GET
- name: create_driver
  endpoint:
    path: /v3/drivers/create.json
    method: POST
- name: groups
  endpoint:
    path: /groups.json
    method: POST
    data_selector: data
- name: update_driver
  endpoint:
    path: /v3/user/update.json
    method: PATCH
- name: update_group
  endpoint:
    path: /v3/groups/{groupId}.json
    method: PUT
- name: delete_driver
  endpoint:
    path: /users/{driverId}
    method: DELETE
- name: delete_group
  endpoint:
    path: /v3/groups/{groupId}.json
    method: DELETE
- name: create_trackme_link
  endpoint:
    path: /trackme/create
    method: POST
- name: devices
  endpoint:
    path: /devices/get
    method: POST
    data_selector: data
    params:
      limit: '500'
- name: trackme_link_status
  endpoint:
    path: /v3/trackme/alive
    method: GET
    params: {}
- name: trackme_links
  endpoint:
    path: /trackme/links
    method: GET
    data_selector: data
- name: single_device
  endpoint:
    path: /v3/devices/{deviceId}.json
    method: GET
    data_selector: data
- name: keep_alive
  endpoint:
    path: /v3/trackme/keepalive
    method: POST
    data_selector: code
    params: {}
- name: beacons
  endpoint:
    path: /v3/beacons
    method: POST
    data_selector: data
    params:
      limit: 50
- name: TrackMe - Delete Link
  endpoint:
    path: /trackme/expire/
    method: DELETE
- name: beacon
  endpoint:
    path: /v3/beacons/{beaconId}.json
    method: GET
    data_selector: data
    params: {}
- name: geofence
  endpoint:
    path: /v3/geomarks/create.json
    method: POST
- name: geofence
  endpoint:
    path: /v3/geomarks/{fenceId}.json
    method: GET
    data_selector: data
- name: sensors
  endpoint:
    path: /v3/sensors/temperature.json
    method: GET
    data_selector: data
- name: geofences
  endpoint:
    path: /geomarks.json
    method: POST
    data_selector: data
- name: sensor
  endpoint:
    path: /v3/sensors/temperature/{assetSensorId}.json
    method: GET
    data_selector: data
- name: geofence
  endpoint:
    path: /v3/geomarks/update/{fenceId}.json
    method: PATCH
- name: tablets
  endpoint:
    path: /tablets/get.json
    method: POST
    data_selector: data
    params:
      limit: '50'
- name: geofence
  endpoint:
    path: /geomarks/{fenceId}
    method: DELETE
- name: tablet
  endpoint:
    path: /tablets/{tabletId}.json
    method: GET
- name: categories
  endpoint:
    path: /landmark/categories.json
    method: GET
    data_selector: data
    params: {}
- name: create_group
  endpoint:
    path: /groups/create.json
    method: POST
- name: create_group
  endpoint:
    path: /groups/create.json
    method: POST
    data_selector: object
- name: bulk_upload_geofences
  endpoint:
    path: /bulkUpload.json
    method: POST
- name: group
  endpoint:
    path: /groups/{groupId}.json
    method: GET
    data_selector: data
    params: {}
- name: geofence
  endpoint:
    path: /geomarks/bulkUpload.json
    method: POST
    data_selector: data
- name: live_streaming
  endpoint:
    path: /reference/live-streaming
    method: GET
    data_selector: videoUrls
    params: {}
- name: camera_wakeup
  endpoint:
    path: /reference/camera-wake-up
    method: POST
    data_selector: status
    params: {}
- name: groups
  endpoint:
    path: /groups.json
    method: POST
    data_selector: data
    params:
      limit: '50'
- name: update_group
  endpoint:
    path: /v3/groups/{groupId}.json
    method: PUT
- name: live_stream
  endpoint:
    path: /v3/liveStream
    method: GET
    data_selector: data
    params:
      cameraSerialNum: int32
- name: delete_group
  endpoint:
    path: /v3/groups/{groupId}.json
    method: DELETE
- name: camera_wakeup
  endpoint:
    path: /v3/livestreamrequest/wakeup
    method: POST
    data_selector: data
    params: {}
- name: trackme_create
  endpoint:
    path: /trackme/create
    method: POST
- name: safety_cam
  endpoint:
    path: /v3/dashcam/{dashcamId}.json
    method: GET
    data_selector: data
- name: trackme_link_status
  endpoint:
    path: /v3/trackme/alive
    method: GET
    data_selector: code
- name: safety_cams
  endpoint:
    path: /dashcam/get.json
    method: POST
    data_selector: data
    params:
      limit: 50
- name: trackme_links
  endpoint:
    path: /trackme/links
    method: GET
    data_selector: data
- name: event_videos
  endpoint:
    path: /v3/eventVideos.json
    method: POST
    data_selector: data
- name: keep_alive
  endpoint:
    path: /v3/trackme/keepalive
    method: POST
    data_selector: code
    params: {}
- name: create_request_video
  endpoint:
    path: /v3/createRequestVideo.json
    method: POST
    data_selector: data
- name: trackme_delete_link
  endpoint:
    path: /trackme/expire
    method: DELETE
    data_selector: response
    params: {}
- name: create_geofence
  endpoint:
    path: /v3/geomarks/create.json
    method: POST
- name: alert_types
  endpoint:
    path: /v3/alerts/types.json
    method: GET
    data_selector: alertTypes
- name: geofence
  endpoint:
    path: /v3/geomarks/{fenceId}.json
    method: GET
    data_selector: data
    params: {}
- name: create_alert
  endpoint:
    path: /alerts/create.json
    method: POST
- name: alerts
  endpoint:
    path: /alerts.json
    method: POST
    data_selector: data
- name: geofences
  endpoint:
    path: /geomarks
    method: POST
    data_selector: data
    params:
      limit: 50
      offset: 0
      geoMarkType: 0
- name: geofence
  endpoint:
    path: /geomarks/update/{fenceId}.json
    method: PATCH
- name: delete_geofence
  endpoint:
    path: /v3/geomarks/{fenceId}.json
    method: DELETE
- name: alert
  endpoint:
    path: /alerts/{alertId}.json
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /landmark/categories.json
    method: GET
    data_selector: data
- name: alerts
  endpoint:
    path: /alerts/alertId.json
    method: GET
    data_selector: object
- name: edit_alert
  endpoint:
    path: /alerts/{alertId}.json
    method: PUT
- name: bulk_upload_geofences
  endpoint:
    path: /bulkUpload.json
    method: POST
- name: geofence
  endpoint:
    path: /azuga-ws-oauth/v3/geomarks/bulkUpload.json
    method: POST
- name: delete_alert
  endpoint:
    path: /v3/alerts/{alertId}.json
    method: DELETE
- name: Live Streaming
  endpoint:
    path: /reference/live-streaming
    method: GET
    data_selector: parameters
    params: {}
- name: Camera Wakeup
  endpoint:
    path: /reference/camera-wake-up
    method: GET
    data_selector: parameters
    params: {}
- name: events
  endpoint:
    path: /reference/events-types
    method: GET
- name: live_stream
  endpoint:
    path: /v3/liveStream
    method: GET
    data_selector: data
    params:
      cameraSerialNum: int32
- name: webhook
  endpoint:
    path: /webhooks.json
    method: POST
    data_selector: data
- name: webhooks
  endpoint:
    path: /v3/webhooks.json
    method: GET
- name: camera_wakeup
  endpoint:
    path: /v3/livestreamrequest/wakeup
    method: POST
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: GET
    data_selector: data
    params: {}
- name: safety_cam
  endpoint:
    path: /v3/dashcam/{dashcamId}.json
    method: GET
    data_selector: data
- name: event_types
  endpoint:
    path: /v3/eventtypes.json
    method: GET
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: PUT
- name: safety_cams
  endpoint:
    path: /v3/dashcam/get.json
    method: POST
    data_selector: data
    params:
      limit: 50
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: DELETE
- name: event_videos
  endpoint:
    path: /eventVideos.json
    method: POST
    data_selector: data
    params: {}
- name: create_config
  endpoint:
    path: /configs/create.json
    method: POST
- name: create_request_video
  endpoint:
    path: /v3/createRequestVideo.json
    method: POST
- name: configs
  endpoint:
    path: /configs/create.json
    method: POST
- name: all_configs
  endpoint:
    path: /configs/read-configs
    method: GET
- name: requested_video
  endpoint:
    path: /v3/requestedVideos/{eventVideoId}
    method: DELETE
- name: configs
  endpoint:
    path: /configs.json
    method: GET
- name: alert_types
  endpoint:
    path: /v3/alerts/types.json
    method: GET
- name: configs
  endpoint:
    path: /configs/
    method: GET
- name: create_alert
  endpoint:
    path: /alerts/create.json
    method: POST
- name: configs
  endpoint:
    path: /configs/{configId}
    method: PUT
- name: alerts
  endpoint:
    path: /alerts.json
    method: POST
    data_selector: data
    params: {}
- name: delete_config
  endpoint:
    path: /v3/configs/{configurationId}
    method: DELETE
- name: alerts
  endpoint:
    path: /alerts.json
    method: POST
- name: create_reminder
  endpoint:
    path: /maintanance/add
    method: POST
- name: alert
  endpoint:
    path: /alerts/{alertId}.json
    method: GET
    data_selector: data
- name: view_reminder
  endpoint:
    path: /alerts/{alertId}
    method: GET
    data_selector: data
    params: {}
- name: alerts
  endpoint:
    path: /alerts/alertId.json
    method: GET
- name: alerts
  endpoint:
    path: /alerts/{alertId}
    method: GET
    data_selector: data
- name: update_reminder
  endpoint:
    path: /maintanance/update.json
    method: POST
- name: edit_alert
  endpoint:
    path: /alerts/{alertId}.json
    method: PUT
- name: maintenance_update
  endpoint:
    path: /maintanance/update.json
    method: POST
    data_selector: data
- name: delete_reminder
  endpoint:
    path: /v3/maintanance/{alertId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_types
  endpoint:
    path: /maintanance/servicetypes.json
    method: GET
    data_selector: data
- name: webhook
  endpoint:
    path: /v3/webhooks.json
    method: POST
    data_selector: data
- name: reminders_by_count
  endpoint:
    path: /maintanance/remainder/v2.json
    method: GET
- name: webhooks
  endpoint:
    path: /v3/webhooks.json
    method: GET
    data_selector: webhooks
- name: maintenance_reminder
  endpoint:
    path: /maintanance/remainder/v2.json
    method: GET
    params:
      filter: days
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: GET
    data_selector: data
    params: {}
- name: maintenance_history
  endpoint:
    path: /maintanance/reports/scheduledreport.json
    method: POST
    data_selector: data
    params:
      startTime: YYYY-MM-DD hh:mm:ss A
      endTime: YYYY-MM-DD hh:mm:ss A
      isCount: boolean
- name: event_types
  endpoint:
    path: /v3/eventtypes.json
    method: GET
    data_selector: data
- name: scheduled_report
  endpoint:
    path: /maintanance/reports/scheduledreport.json
    method: POST
    params:
      startTime: 2023-02-01 12:00:00 AM
      endTime: 2023-02-06 11:59:59 PM
      isCount: 'false'
- name: DTC Descriptions
  endpoint:
    path: /dtc/
    method: GET
    data_selector: data
- name: valid_preferences
  endpoint:
    path: /reference/valid-preferences
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: PUT
    data_selector: data
    params: {}
- name: preferences
  endpoint:
    path: /preferences
    method: GET
    data_selector: preferences
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{token}.json
    method: DELETE
    data_selector: data
    params: {}
- name: create_config
  endpoint:
    path: /configs/create.json
    method: POST
- name: configs
  endpoint:
    path: /configs/create.json
    method: POST
- name: configs
  endpoint:
    path: /configs.json
    method: GET
- name: configs
  endpoint:
    path: /configs/
    method: GET
- name: configs
  endpoint:
    path: /configs/{configId}
    method: PUT
- name: delete_config
  endpoint:
    path: /v3/configs/{configurationId}
    method: DELETE
- name: create_reminder
  endpoint:
    path: /maintanance/add
    method: POST
- name: View a Reminder
  endpoint:
    path: /alerts/{alertId}
    method: GET
    data_selector: data
- name: alerts
  endpoint:
    path: /alerts/{alertId}
    method: GET
- name: Update a Reminder
  endpoint:
    path: /v3/maintanance/update.json
    method: POST
- name: reminder
  endpoint:
    path: /maintanance/update.json
    method: POST
- name: service_types
  endpoint:
    path: /maintanance/servicetypes.json
    method: GET
    data_selector: data
- name: view_reminders_by_count
  endpoint:
    path: /maintanance/remainder/v2.json
    method: GET
- name: maintenance_remainder
  endpoint:
    path: /maintanance/remainder/v2.json
    method: GET
    params:
      filter: days
- name: maintenance_history
  endpoint:
    path: /maintanance/reports/scheduledreport.json
    method: POST
    data_selector: data
    params:
      startTime: YYYY-MM-DD hh:mm:ss A
      endTime: YYYY-MM-DD hh:mm:ss A
      isCount: boolean
- name: Preferences
  endpoint:
    path: /reference/view-the-preferences
    method: GET
- name: scheduled_report
  endpoint:
    path: /maintanance/reports/scheduledreport.json
    method: POST
    params:
      startTime: 2023-02-01 12:00:00 AM
      endTime: 2023-02-06 11:59:59 PM
      isCount: 'false'
- name: preferences
  endpoint:
    path: /v3/preferences.json
    method: GET
    params:
      isWebV2: 'true'
- name: DTC Descriptions
  endpoint:
    path: /v3/dtc/
    method: GET
    data_selector: data
- name: update_preferences
  endpoint:
    path: /preferences/add.json
    method: POST
- name: valid_preferences
  endpoint:
    path: /reference/valid-preferences
    method: GET
- name: reseller_customers
  endpoint:
    path: /v3/reseller/customers.json
    method: GET
    data_selector: dataList
    params:
      limit: '50'
      offset: '0'
- name: preferences
  endpoint:
    path: /api/preferences
    method: GET
    data_selector: preferences
    params: {}
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: Health Report
  endpoint:
    path: /v4/reference/gethealthreport
    method: GET
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: users
  endpoint:
    path: /v4/reference/users
    method: GET
    data_selector: records
- name: vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
    data_selector: records
- name: drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
    data_selector: records
- name: beacons
  endpoint:
    path: /v4/reference/getallblebeacons
    method: GET
- name: vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: ble_beacons
  endpoint:
    path: /ble-beacons
    method: GET
    data_selector: data.bles
    params:
      limit: 50
      offset: 0
- name: ble_beacons
  endpoint:
    path: /api/v4/ble-beacons
    method: GET
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: GET
    data_selector: data
    params: {}
- name: ble_beacons
  endpoint:
    path: /
    method: GET
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: PUT
    data_selector: data
    params: {}
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: DELETE
    data_selector: object
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: data.categories
    params:
      limit: 50
      offset: 0
      sort: name
      order: DESC
- name: categories
  endpoint:
    path: /api/v4/categories
    method: GET
    data_selector: records
    params:
      sort: name
      order: DESC
      offset: 0
      limit: 50
- name: Add a New Category with Subcategories
  endpoint:
    path: /categories
    method: POST
- name: valid_preferences
  endpoint:
    path: /reference/valid-preferences
    method: GET
- name: preferences
  endpoint:
    path: /reference/view-the-preferences
    method: GET
- name: categories
  endpoint:
    path: /api/v4/categories
    method: POST
- name: categories
  endpoint:
    path: /categories/{categoryId}
    method: PUT
- name: preferences
  endpoint:
    path: /preferences.json
    method: GET
    data_selector: data
    params:
      isWebV2: 'true'
- name: preferences
  endpoint:
    path: /preferences/add.json
    method: POST
- name: Delete Category
  endpoint:
    path: /api/v4/categories/{categoryId}
    method: DELETE
- name: reseller_customers
  endpoint:
    path: /reseller/customers.json
    method: GET
    data_selector: dataList
    params:
      limit: 50
      offset: 0
- name: categories
  endpoint:
    path: /categories/{categoryId}
    method: GET
    data_selector: data
    params:
      categoryId: string
- name: categories
  endpoint:
    path: /api/v4/categories/
    method: GET
    data_selector: object
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: category_equipment
  endpoint:
    path: /categories/{categoryId}/equipment
    method: GET
    data_selector: data.equipment
    params:
      limit: '50'
      offset: '0'
      sort: lastContactedTime
      order: DESC
- name: category_equipment
  endpoint:
    path: /api/v4/categories/{categoryId}/equipment
    method: GET
    data_selector: object
    params: {}
- name: BLE Beacons
  endpoint:
    path: /v4/reference/getallblebeacons
    method: GET
- name: Categories
  endpoint:
    path: /v4/reference/getallcategories-1
    method: GET
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Service Entry
  endpoint:
    path: /v4/reference/getallserviceentries
    method: GET
- name: Health Report
  endpoint:
    path: /v4/reference/gethealthreport
    method: GET
- name: Dataloggers
  endpoint:
    path: /v4/reference/getalldataloggers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: uncategorized_equipment
  endpoint:
    path: /categories/uncategorized/equipment
    method: GET
    data_selector: data.equipment
    params:
      offset: 0
      limit: 50
      sort: lastContactedTime
      order: DESC
- name: category_equipment
  endpoint:
    path: /api/v4/categories/uncategorized/equipment
    method: GET
    data_selector: object
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: GET
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: POST
- name: ble_beacons
  endpoint:
    path: /getallblebeacons
    method: GET
- name: categories
  endpoint:
    path: /getallcategories-1
    method: GET
- name: equipment
  endpoint:
    path: /getallequipments
    method: GET
- name: vehicles
  endpoint:
    path: /getallvehicles
    method: GET
- name: users
  endpoint:
    path: /getallusers
    method: GET
- name: drivers
  endpoint:
    path: /getalldrivers
    method: GET
- name: service_entries
  endpoint:
    path: /getallserviceentries
    method: GET
- name: alert_types
  endpoint:
    path: /getallalerttypes
    method: GET
- name: equipment
  endpoint:
    path: /v4/equipment
    method: GET
- name: equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: PUT
    data_selector: data
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: PUT
- name: get_equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: GET
- name: Equipment
  endpoint:
    path: /v4/reference/getallequipments
    method: GET
- name: Vehicles
  endpoint:
    path: /v4/reference/getallvehicles
    method: GET
- name: Users
  endpoint:
    path: /v4/reference/getallusers
    method: GET
- name: Drivers
  endpoint:
    path: /v4/reference/getalldrivers
    method: GET
- name: Alerts
  endpoint:
    path: /v4/reference/getallalerts
    method: GET
- name: equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: GET
    data_selector: data
- name: ble_beacons
  endpoint:
    path: /ble-beacons
    method: GET
    data_selector: data.bles
    params:
      macAddress: string
      equipmentId: uuid
      pairingStatus: string
      isCategorized: boolean
      search: string
      sort: string
      order: string
      offset: integer
      limit: integer
- name: update_equipment_categories
  endpoint:
    path: /equipment/update-category
    method: PATCH
    data_selector: data
    params:
      categoryId: required
- name: equipment
  endpoint:
    path: /v4/equipment/update-category
    method: PATCH
- name: ble_beacons
  endpoint:
    path: /api/v4/ble-beacons
    method: GET
    data_selector: records
    params:
      sort: macAddress
      order: ASC
      offset: 0
      limit: 50
- name: equipment_live_map
  endpoint:
    path: /equipment/map/trackers
    method: GET
    data_selector: data.trackers
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: GET
    data_selector: data
    params: {}
- name: trackers
  endpoint:
    path: /api/v4/equipment/map/trackers
    method: GET
- name: ble_beacons
  endpoint:
    path: /api/v4/ble-beacons/
    method: GET
- name: dropped_equipment_location
  endpoint:
    path: /equipment/map/dropped-locations
    method: GET
    data_selector: data.droppedOffLocation
    params:
      limit: 50
      offset: 0
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: PUT
    data_selector: data
    params: {}
- name: dropped_locations
  endpoint:
    path: /api/v4/equipment/map/dropped-locations
    method: GET
    data_selector: object
- name: equipment_locations
  endpoint:
    path: /api/v4/equipment/locations
    method: GET
- name: ble_beacon
  endpoint:
    path: /ble-beacons/{bleId}
    method: DELETE
- name: equipment_location
  endpoint:
    path: /equipment/{equipmentId}/locations
    method: GET
    data_selector: data
    params:
      limit: 50
      offset: 0
      days: 14
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: data.categories
    params:
      offset: 0
      limit: 50
- name: equipment_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: object
    params:
      sort: locationTime
      order: DESC
      offset: 0
      limit: 50
      days: 14
- name: categories
  endpoint:
    path: /api/v4/categories
    method: GET
    data_selector: object
- name: pair_ble_beacon
  endpoint:
    path: /pairings
    method: POST
    data_selector: data
    params: {}
- name: add_category
  endpoint:
    path: /categories
    method: POST
- name: categories
  endpoint:
    path: /api/v4/categories
    method: GET
- name: pairing
  endpoint:
    path: /pairings
    method: PUT
    data_selector: object
    params: {}
- name: categories
  endpoint:
    path: /categories/{categoryId}
    method: PUT
- name: pairing_status
  endpoint:
    path: /pairings/{macAddress}
    method: GET
    data_selector: object
    params: {}
- name: Delete Category
  endpoint:
    path: /api/v4/categories/{categoryId}
    method: DELETE
- name: vehicle
  endpoint:
    path: /api/v4/vehicles
    method: POST
- name: categories
  endpoint:
    path: /categories/{categoryId}
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/v4/categories/
    method: GET
- name: category_equipment
  endpoint:
    path: /categories/{categoryId}/equipment
    method: GET
    data_selector: data.equipment
    params:
      limit: 50
      offset: 0
      sort: lastContactedTime
      order: DESC
- name: category_equipment
  endpoint:
    path: /categories/{categoryId}/equipment
    method: GET
    data_selector: object
    params:
      sort: lastContactedTime
      order: DESC
      offset: '0'
      limit: '50'
- name: uncategorized_equipment
  endpoint:
    path: /categories/uncategorized/equipment
    method: GET
    data_selector: data.equipment
    params:
      offset: 0
      limit: 50
      sort: lastContactedTime
      order: DESC
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: vehicles
- name: category_equipment
  endpoint:
    path: /v4/categories/uncategorized/equipment
    method: GET
- name: vehicle
  endpoint:
    path: /v4/vehicles
    method: GET
    data_selector: vehicles
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: GET
    data_selector: equipment
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles/{vehicleId}
    method: PUT
    data_selector: response
    params: {}
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: POST
- name: vehicle
  endpoint:
    path: /vehicles/{vehicleId}
    method: PUT
    data_selector: object
    params: {}
- name: all_vehicles
  endpoint:
    path: /vehicles
    method: GET
    data_selector: object
    params: {}
- name: delete_equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: DELETE
- name: vehicle
  endpoint:
    path: /vehicles/{vehicleId}
    method: DELETE
- name: equipment
  endpoint:
    path: /api/v4/equipment/
    method: DELETE
    data_selector: object
    params: {}
- name: vehicle
  endpoint:
    path: /vehicles/{vehicleId}
    method: GET
- name: equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: PUT
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: POST
- name: equipment
  endpoint:
    path: /api/v4/equipment/{equipmentId}
    method: PUT
- name: equipment
  endpoint:
    path: /equipment/{equipmentId}
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /users/{userId}
    method: PUT
- name: update_equipment_categories
  endpoint:
    path: /equipment/update-category
    method: PATCH
    params:
      categoryId: string
- name: PatchUpdateUser
  endpoint:
    path: /users/{userId}
    method: PATCH
- name: update_category
  endpoint:
    path: /update-category
    method: PATCH
- name: users
  endpoint:
    path: /users/{userId}
    method: DELETE
- name: driver
  endpoint:
    path: /drivers
    method: POST
    data_selector: data
    params: {}
- name: fetch_all_drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: data
    params: {}
- name: equipment_live_map_trackers
  endpoint:
    path: /equipment/map/trackers
    method: GET
    data_selector: data.trackers
    params:
      offset: 0
      limit: 50
- name: drivers
  endpoint:
    path: /v4/drivers
    method: POST
    data_selector: drivers
    params: {}
- name: equipment_trackers
  endpoint:
    path: /api/v4/equipment/map/trackers
    method: GET
- name: drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: drivers
    params:
      limit: 50
      offset: 0
- name: dropped_equipment_location
  endpoint:
    path: /equipment/map/dropped-locations
    method: GET
    data_selector: data.droppedOffLocation
    params:
      offset: 0
      limit: 50
- name: dropped_locations
  endpoint:
    path: /api/v4/equipment/map/dropped-locations
    method: GET
    data_selector: object
    params:
      offset: 0
      limit: 50
      sort: lastContactedTime
      order: DESC
- name: drivers
  endpoint:
    path: /api/v4/drivers
    method: GET
    data_selector: object
    params: {}
- name: equipment_locations
  endpoint:
    path: /api/v4/equipment/locations
    method: GET
- name: driver
  endpoint:
    path: /drivers/{driverId}
    method: PUT
    data_selector: data
    params: {}
- name: equipment_location
  endpoint:
    path: /equipment/{equipmentId}/locations
    method: GET
    data_selector: data.locationHistory
    params:
      limit: 50
      offset: 0
      days: 14
- name: drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: records
- name: equipment_locations
  endpoint:
    path: /equipment/{equipmentId}/locations
    method: GET
- name: pairing
  endpoint:
    path: /pairings
    method: POST
    data_selector: data
    params: {}
- name: driver
  endpoint:
    path: /v4/drivers/{driverId}
    method: GET
    data_selector: object
- name: pairing
  endpoint:
    path: /pairings
    method: PUT
    data_selector: message
    params: {}
- name: driver
  endpoint:
    path: /drivers/{driverId}
    method: GET
    data_selector: data
    params: {}
- name: driver
  endpoint:
    path: /drivers/{driverId}
    method: GET
    data_selector: object
- name: service_entry
  endpoint:
    path: /service-entry-1
    method: GET
    data_selector: object
- name: validate_ble_beacon_pairing_status
  endpoint:
    path: /pairings/{macAddress}
    method: GET
    data_selector: data
    params: {}
- name: pairings
  endpoint:
    path: /api/v4/pairings/
    method: GET
- name: service_entries
  endpoint:
    path: /maintenance/service-entries
    method: GET
    data_selector: serviceEntries
- name: vehicle
  endpoint:
    path: /vehicles
    method: POST
- name: vehicles
  endpoint:
    path: /vehicles
    method: GET
    params:
      offset: 0
      limit: 50
- name: service_entry
  endpoint:
    path: /maintenance/service-entries
    method: POST
    data_selector: data
- name: service_entries
  endpoint:
    path: /v4/maintenance/service-entries
    method: GET
    data_selector: object
- name: vehicles
  endpoint:
    path: /api/v4/vehicles
    method: GET
    data_selector: vehicles
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: GET
    data_selector: response
    params: {}
- name: vehicles
  endpoint:
    path: /vehicles/{vehicleId}
    method: PUT
    data_selector: data
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: PUT
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: PATCH
- name: vehicle
  endpoint:
    path: /v4/vehicles
    method: PUT
    data_selector: data
    params: {}
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: DELETE
- name: vehicle
  endpoint:
    path: /vehicles/{vehicleId}
    method: DELETE
- name: service_type
  endpoint:
    path: /maintenance/service-types
    method: POST
- name: vehicle
  endpoint:
    path: /vehicles/{vehicleId}
    method: GET
- name: service_types
  endpoint:
    path: /maintenance/service-types
    method: GET
    data_selector: data.serviceTypes
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: service_types
  endpoint:
    path: /api/v4/maintenance/service-types
    method: GET
    params:
      limit: '50'
      offset: '0'
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: GET
    data_selector: data
    params:
      serviceTypeId: uuid
- name: user
  endpoint:
    path: /users/{userId}
    method: PUT
- name: service_type
  endpoint:
    path: /service-types/{serviceTypeId}
    method: GET
- name: user
  endpoint:
    path: /users/{userId}
    method: PATCH
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PUT
    data_selector: data
    params: {}
- name: service_type
  endpoint:
    path: /{serviceTypeId}
    method: PUT
- name: driver
  endpoint:
    path: /drivers
    method: POST
    data_selector: data
- name: fetch_all_drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: data
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PATCH
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PATCH
- name: drivers
  endpoint:
    path: /drivers
    method: GET
    data_selector: drivers
    params:
      limit: 50
      offset: 0
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: DELETE
    data_selector: response
    params: {}
- name: drivers
  endpoint:
    path: /api/v4/drivers
    method: GET
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: DELETE
- name: health_report
  endpoint:
    path: /safetycam/health/report
    method: GET
- name: driver
  endpoint:
    path: /drivers/{driverId}
    method: PUT
    data_selector: data
- name: scheduled_health_reports
  endpoint:
    path: /safetycam/health/report/schedule
    method: GET
- name: drivers
  endpoint:
    path: /v4/drivers
    method: GET
    data_selector: records
- name: health_report
  endpoint:
    path: /safetycam/health/report/schedule
    method: POST
- name: Health Report
  endpoint:
    path: /safetycam/health/report/schedule/{scheduledReportId}
    method: PATCH
- name: delete_scheduled_health_report
  endpoint:
    path: /safetycam/health/report/schedule/{scheduledReportId}
    method: DELETE
- name: drivers
  endpoint:
    path: /drivers/{driverId}
    method: DELETE
- name: driver
  endpoint:
    path: /driver
    method: GET
- name: validate_report_name
  endpoint:
    path: /safetycam/health/report/schedule/validate/{reportName}
    method: GET
- name: reboot_safety_cam
  endpoint:
    path: /safetycam/reboot/{safetyCamDeviceId}
    method: POST
- name: driver
  endpoint:
    path: /drivers/{driverId}
    method: GET
    data_selector: data
    params: {}
- name: calibrate_safety_cam
  endpoint:
    path: /api/v4/safetycam/calibrate/{safetyCamDeviceId}
    method: POST
- name: format_sd_card
  endpoint:
    path: /safetycam/formatSdCard/{safetyCamDeviceId}
    method: POST
- name: service_entry
  endpoint:
    path: /maintenance/service-entries
    method: GET
    data_selector: serviceEntries
    params:
      limit: '50'
      offset: '0'
- name: dataloggers
  endpoint:
    path: /dataloggers
    method: GET
    data_selector: records
- name: datalogger
  endpoint:
    path: /dataloggers/{dataloggerId}
    method: GET
- name: service_entry
  endpoint:
    path: /api/v4/maintenance/service-entries
    method: GET
    data_selector: records
    params:
      offset: 0
- name: driver_beacon
  endpoint:
    path: /driver-beacons
    method: GET
    data_selector: driverBeacons
    params:
      offset: 0
      limit: 50
- name: service_entry
  endpoint:
    path: /maintenance/service-entries
    method: POST
    data_selector: data
- name: service_entry
  endpoint:
    path: /v4/maintenance/service-entries
    method: POST
    data_selector: object
    params: {}
- name: driver_beacon
  endpoint:
    path: /driver-beacons/{driverBeaconId}
    method: GET
    data_selector: data
    params: {}
- name: driver_beacons
  endpoint:
    path: /driver-beacons/{driverBeaconId}
    method: GET
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: GET
    data_selector: null
    params: {}
- name: asset_tracker
  endpoint:
    path: /asset-trackers
    method: GET
    data_selector: records
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: PUT
- name: asset_tracker
  endpoint:
    path: /asset-trackers/{assetTrackerId}
    method: GET
    data_selector: ''
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: PATCH
- name: sensors
  endpoint:
    path: /sensors
    method: GET
    data_selector: records
- name: service_entry
  endpoint:
    path: /maintenance/service-entries/{serviceEntryId}
    method: DELETE
- name: sensor
  endpoint:
    path: /sensors/{assetSensorId}
    method: GET
- name: service_type
  endpoint:
    path: /maintenance/service-types
    method: POST
- name: alerts
  endpoint:
    path: /v4/alerts
    method: GET
    data_selector: alerts
- name: alerts
  endpoint:
    path: /v4/alerts
    method: POST
- name: service_types
  endpoint:
    path: /maintenance/service-types
    method: GET
    data_selector: serviceTypes
- name: alert
  endpoint:
    path: /v4/alerts/{alertId}
    method: PATCH
- name: service_types
  endpoint:
    path: /maintenance/service-types
    method: GET
    data_selector: object
    params:
      limit: 50
      offset: 0
- name: alert
  endpoint:
    path: /v4/alerts/{alertId}
    method: GET
- name: alerts
  endpoint:
    path: /alerts/{alertId}
    method: PUT
    data_selector: object
    params: {}
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: GET
    data_selector: data
    params:
      serviceTypeId: uuid
- name: alerts
  endpoint:
    path: /alerts
    method: GET
- name: service_types
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: GET
- name: alerts
  endpoint:
    path: /v4/alerts/{alertId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PUT
- name: alert_types
  endpoint:
    path: /v4/alert-types
    method: GET
    data_selector: data
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PATCH
- name: roles
  endpoint:
    path: /alert-types/roles
    method: GET
    data_selector: data
    params: {}
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: PATCH
    data_selector: object
- name: alert_policy
  endpoint:
    path: /alert-policies
    method: GET
    data_selector: alertPolicies
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: DELETE
- name: alert_policies
  endpoint:
    path: /v4/alert-policies
    method: GET
- name: service_type
  endpoint:
    path: /maintenance/service-types/{serviceTypeId}
    method: DELETE
- name: alert_policy
  endpoint:
    path: /alert-policies
    method: POST
    data_selector: object
- name: health_report
  endpoint:
    path: /safetycam/health/report
    method: GET
- name: alert_policies
  endpoint:
    path: /v4/alert-policies
    method: POST
    data_selector: ''
- name: fetch_all_alert_policies
  endpoint:
    path: /v4/alert-policies
    method: GET
    data_selector: ''
- name: scheduled_health_reports
  endpoint:
    path: /safetycam/health/report/schedule
    method: GET
- name: alert_policies
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: PUT
    data_selector: object
    params: {}
- name: health_report
  endpoint:
    path: /safetycam/health/report/schedule
    method: POST
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: PUT
- name: health_report
  endpoint:
    path: /safetycam/health/report/schedule/{scheduledReportId}
    method: PATCH
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: DELETE
    data_selector: object
- name: Delete a Scheduled Health Report
  endpoint:
    path: /safetycam/health/report/schedule/{scheduledReportId}
    method: DELETE
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: GET
    data_selector: data
    params:
      alertPolicyId: string
- name: validate_report_name
  endpoint:
    path: /safetycam/health/report/schedule/validate/{reportName}
    method: GET
- name: reboot_safetycam
  endpoint:
    path: /safetycam/reboot/{safetyCamDeviceId}
    method: POST
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: GET
- name: alert_policies_count
  endpoint:
    path: /alert-policies/total/count
    method: GET
- name: calibrate_safetycam
  endpoint:
    path: /safetycam/calibrate/{safetyCamDeviceId}
    method: POST
- name: format_sd_card
  endpoint:
    path: /safetycam/formatSdCard/{safetyCamDeviceId}
    method: POST
- name: authentication
  endpoint:
    path: /azuga-as/oauth2/login/oauthtoken.json
    method: POST
    data_selector: data
    params:
      loginType: 1
- name: dataloggers
  endpoint:
    path: /dataloggers
    method: GET
- name: ble_beacons
  endpoint:
    path: /ble-beacons
    method: GET
    data_selector: data.bles
    params:
      limit: 50
      offset: 0
- name: datalogger
  endpoint:
    path: /dataloggers/{dataloggerId}
    method: GET
- name: ble_beacons
  endpoint:
    path: /api/v4/ble-beacons
    method: GET
    data_selector: object
    params:
      sort: macAddress
      order: ASC
      offset: 0
      limit: 50
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: data.categories
    params:
      limit: 50
      offset: 0
      sort: name
      order: DESC
- name: driver_beacon
  endpoint:
    path: /driver-beacons
    method: GET
    data_selector: driverBeacons
    params:
      offset: 0
      limit: 50
- name: categories
  endpoint:
    path: /v4/categories
    method: GET
- name: DriverBeacon
  endpoint:
    path: /v4/driver-beacons
    method: GET
- name: driver_beacon
  endpoint:
    path: /driver-beacons/{driverBeaconId}
    method: GET
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: GET
- name: driver_beacon
  endpoint:
    path: /driver-beacons/{driverBeaconId}
    method: GET
- name: live_map_tracker
  endpoint:
    path: /api/v4/equipment/map/trackers
    method: GET
- name: asset_tracker
  endpoint:
    path: /asset-trackers
    method: GET
    data_selector: records
- name: equipment_locations
  endpoint:
    path: /equipment/locations
    method: GET
    data_selector: data.equipment
    params:
      offset: 0
      limit: 50
      days: 14
- name: asset_tracker
  endpoint:
    path: /asset-trackers/{assetTrackerId}
    method: GET
    data_selector: ''
- name: dropped_equipment_location
  endpoint:
    path: /v4/equipment/locations
    method: GET
- name: specific_equipment_location
  endpoint:
    path: /v4/equipment/locationhistory
    method: GET
- name: pair_ble_beacon
  endpoint:
    path: /pairings
    method: POST
- name: sensors
  endpoint:
    path: /api/v4/sensors
    method: GET
    data_selector: records
- name: sensor
  endpoint:
    path: /sensors/{assetSensorId}
    method: GET
    data_selector: ''
- name: vehicle
  endpoint:
    path: /vehicles
    method: POST
    data_selector: RequestBody
    params: {}
- name: fetch_all_vehicles
  endpoint:
    path: /getallvehicles
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /v4/alerts
    method: GET
    data_selector: alerts
- name: alerts
  endpoint:
    path: /v4/alerts
    method: POST
- name: alert
  endpoint:
    path: /v4/alerts/{alertId}
    method: PATCH
- name: create_vehicle
  endpoint:
    path: /
    method: POST
    data_selector: data
- name: fetch_all_vehicles
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: retrieve_vehicle
  endpoint:
    path: /{vehicleId}
    method: GET
    data_selector: data
- name: modify_vehicle
  endpoint:
    path: /{vehicleId}
    method: PUT
    data_selector: data
- name: delete_vehicle
  endpoint:
    path: /{vehicleId}
    method: DELETE
    data_selector: data
- name: alerts
  endpoint:
    path: /v4/alerts/{alertId}
    method: GET
    data_selector: alert details
- name: alert
  endpoint:
    path: /alerts/{alertId}
    method: PUT
- name: alert
  endpoint:
    path: /v4/alerts/{alertId}
    method: GET
- name: driver
  endpoint:
    path: /api/v4/drivers
    method: POST
    data_selector: null
    params: {}
- name: alerts
  endpoint:
    path: /v4/alerts/{alertId}
    method: DELETE
- name: service_entries
  endpoint:
    path: /maintenance/service-entries
    method: GET
    data_selector: serviceEntries
- name: alert_types
  endpoint:
    path: /alert-types
    method: GET
    data_selector: data
- name: service_type
  endpoint:
    path: /maintenance/service-types
    method: POST
    data_selector: data
- name: roles
  endpoint:
    path: /alert-types/roles
    method: GET
    data_selector: data
- name: health_report
  endpoint:
    path: /safetycam/health/report
    method: GET
    data_selector: data
    params: {}
- name: alert_policy
  endpoint:
    path: /alert-policies
    method: GET
    data_selector: alertPolicies
    params:
      resellerProfileId: ''
      resellerName: ''
      alertPolicyId: ''
      alertPolicyName: ''
      alertTypeId: ''
      alertTypeName: ''
      alertMode: ''
      allowOverride: ''
      isApplicableToAll: ''
      isMuted: ''
      recordStatus: ''
      createdBy: ''
      createdByName: ''
      updatedBy: ''
      updatedByName: ''
      searchValue: ''
      searchColumn: ''
      sortValue: ''
      sortColumn: ''
      limit: ''
      offset: ''
- name: safetycam_reboot
  endpoint:
    path: /safetycam/reboot/{safetyCamDeviceId}
    method: POST
- name: alert_policy
  endpoint:
    path: /v4/alert-policies
    method: GET
- name: dataloggers
  endpoint:
    path: /dataloggers
    method: GET
    data_selector: dataloggers
    params:
      offset: 0
      limit: 50
- name: alert_policy
  endpoint:
    path: /alert-policies
    method: POST
- name: dataloggers
  endpoint:
    path: /dataloggers
    method: GET
    params:
      offset: '0'
      limit: '50'
- name: alert_policy
  endpoint:
    path: /v4/alert-policies
    method: GET
    data_selector: object
- name: driver_beacons
  endpoint:
    path: /driver-beacons
    method: GET
    data_selector: driverBeacons
    params:
      offset: 0
      limit: 50
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: PUT
    data_selector: object
    params: {}
- name: driver_beacon
  endpoint:
    path: /api/v4/driver-beacons
    method: GET
    data_selector: object
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: PUT
- name: asset_tracker
  endpoint:
    path: /asset-trackers
    method: GET
    data_selector: records
- name: sensors
  endpoint:
    path: /api/v4/sensors
    method: GET
    data_selector: records
- name: alertPolicy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: DELETE
- name: alerts
  endpoint:
    path: /v4/alerts
    method: GET
    data_selector: alerts
- name: alert-policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: GET
    data_selector: data
    params:
      alertPolicyId: string
- name: alert_types
  endpoint:
    path: /alert-types
    method: GET
    data_selector: alertTypes
- name: alert_policy
  endpoint:
    path: /alert-policies/{alertPolicyId}
    method: GET
- name: alert_policies
  endpoint:
    path: /alert-policies
    method: GET
    data_selector: alertPolicies
    params:
      resellerProfileId: ''
      resellerName: ''
      alertPolicyId: ''
      alertPolicyName: ''
      alertTypeId: ''
      alertTypeName: ''
      alertMode: ''
      allowOverride: ''
      isApplicableToAll: ''
      isMuted: ''
      recordStatus: ''
      createdBy: ''
      createdByName: ''
      updatedBy: ''
      updatedByName: ''
      searchValue: ''
      searchColumn: ''
      sortValue: ''
      sortColumn: ''
      limit: ''
      offset: ''
- name: alert_policies_count
  endpoint:
    path: /alert-policies/total/count
    method: GET
    data_selector: data
    params:
      resellerProfileId: ''
      searchValue: ''
      searchColumn: ''
- name: alert_policies
  endpoint:
    path: /v4/alert-policies
    method: GET
    data_selector: object
    params: {}
- name: authentication
  endpoint:
    path: /azuga-as/oauth2/login/oauthtoken.json
    method: POST
    params:
      loginType: 1
- name: ble_beacons
  endpoint:
    path: /ble-beacons
    method: GET
    data_selector: data.bles
    params:
      limit: 50
      offset: 0
- name: ble_beacons
  endpoint:
    path: /ble-beacons
    method: GET
    data_selector: records
    params:
      sort: macAddress
      order: ASC
      offset: 0
      limit: 50
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: data.categories
    params:
      limit: 50
      offset: 0
      sort: name
      order: DESC
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: equipment
  endpoint:
    path: /api/v4/equipment
    method: GET
    data_selector: existing equipment
    params: {}
- name: live_map_tracker
  endpoint:
    path: /api/v4/equipment/map/trackers
    method: GET
- name: equipment_locations
  endpoint:
    path: /equipment/locations
    method: GET
    data_selector: data.equipment
    params:
      limit: 50
      offset: 0
      days: 14
- name: equipment_locations
  endpoint:
    path: /v4/equipment/locations
    method: GET
    data_selector: object
- name: pair_bluetooth_equipment
  endpoint:
    path: /pairings
    method: POST
    data_selector: data
    params: {}
- name: vehicle
  endpoint:
    path: /vehicles
    method: POST
- name: vehicle
  endpoint:
    path: /v4/vehicles
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
- name: driver
  endpoint:
    path: /drivers
    method: POST
- name: service_entry
  endpoint:
    path: /maintenance/service-entries
    method: GET
- name: service_type
  endpoint:
    path: /maintenance/service-types
    method: POST
    data_selector: data
- name: health_report
  endpoint:
    path: /health/report
    method: GET
- name: reboot_safetycam
  endpoint:
    path: /safetycam/reboot/{safetyCamDeviceId}
    method: POST
- name: datalogger
  endpoint:
    path: /dataloggers
    method: GET
    data_selector: dataloggers
    params:
      offset: 0
      limit: 50
- name: datalogger
  endpoint:
    path: /dataloggers
    method: GET
    data_selector: object
- name: driver_beacon
  endpoint:
    path: /driver-beacons
    method: GET
    data_selector: driverBeacons
    params:
      offset: 0
      limit: 50
- name: driver_beacon
  endpoint:
    path: /v4/driver-beacons
    method: GET
    data_selector: object
    params:
      offset: '0'
      limit: '50'
- name: asset_tracker
  endpoint:
    path: /asset-trackers
    method: GET
- name: sensors
  endpoint:
    path: /sensors
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /alerts
    method: GET
- name: alert_types
  endpoint:
    path: /v4/alert-types
    method: GET
    data_selector: null
    params: {}
- name: alert_policies
  endpoint:
    path: /alert-policies
    method: GET
    data_selector: alertPolicies
    params:
      resellerProfileId: ''
      resellerName: ''
      alertPolicyId: ''
      alertPolicyName: ''
      alertTypeId: ''
      alertTypeName: ''
      alertMode: ''
      allowOverride: ''
      isApplicableToAll: ''
      isMuted: ''
      recordStatus: ''
      createdBy: ''
      createdByName: ''
      updatedBy: ''
      updatedByName: ''
      searchValue: ''
      searchColumn: ''
      sortValue: ''
      sortColumn: ''
      limit: ''
      offset: ''
- name: alert_policy
  endpoint:
    path: /v4/alert-policies
    method: GET
notes:
- Events are triggered in real-time as mobile events occur.
- Supports single and multiple updates in the same request
- Ability to sort, filter, limit, and search while making a request
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The v3 APIs are an evolution from the v1 and v2 versions that allow for a wide range
  of access to data and building seamless workflows for integrations.
- Supports single and multiple updates in the same request.
- Payload structure may vary based on event type
- To receive immediate notifications, a subscription to the ALERT_CREATE webhook event
  is mandatory.
- To receive immediate, real-time notifications whenever an alert is deleted within
  the system, a subscription to the ALERT_DELETE webhook event is mandatory.
- The Alert Update Event is used to notify whenever an existing alert configuration
  is modified.
- A webhook (also called a web callback or HTTP push API) is a real-time data delivery
  mechanism that allows applications to receive updates automatically.
- Subscription to the ASSET_CREATE event is mandatory. This event is triggered in
  real-time upon asset creation.
- To receive immediate, real-time notifications whenever a new alert is generated
  within the system, a subscription to the ALERT_CREATE webhook event is mandatory.
- Subscription to the ASSET_DELETE event is mandatory. This event is triggered in
  real-time upon asset deletion.
- Subscription to the ALERT_UPDATE event is mandatory. This event is triggered in
  real-time upon asset modification.
- Subscription to the DEVICE_CREATION event is mandatory.
- Subscription to the DEVICE_UPDATE event is mandatory.
- This event is triggered in real-time when a device is updated.
- Subscription to the ASSET_DELETE event is mandatory.
- This event is triggered in real-time upon asset deletion.
- Subscription to the DRIVER_DELETE event is mandatory. This event is triggered in
  real-time when a driver is deleted.
- Subscription to the DTC_MESSAGE event is mandatory.
- This event is triggered instantly when a Diagnostic Trouble Code is reported from
  the vehicle.
- Subscription to the DEVICE_DELETE event is mandatory.
- This event is triggered in real-time when a device is deleted.
- Subscription to the Equipment Tracking Package is mandatory.
- Subscription to the DEVICE_UPDATE event is mandatory. This event is triggered in
  real-time when a device is updated.
- Subscription to the DRIVER_CREATE event is mandatory. This event is triggered in
  real-time when a driver is added.
- Subscription to the DRIVER_DELETE event is mandatory
- This event is triggered in real-time when a driver is deleted
- Subscription to the DRIVER_UPDATE event is mandatory.
- This event is triggered in real-time when a driver detail is updated.
- Subscription to the BLE_EQUIPMENT_PAIR event is mandatory.
- Subscription to the BLE_EQUIPMENT_UNPAIR event is mandatory.
- This event is triggered when power through Extension Wire 2 is turned off or disconnected.
- Subscription to the Extension_2_Start event is mandatory.
- Subscribing to the FUEL_INCREASE webhook event is required.
- This event is triggered if the fuel tank capacity has increased by 30% or more.
- This event is triggered in real-time when an Equipment detail is updated/modified
  in the system.
- Subscription to FUEL_LEVEL_EVENT webhook is a must.
- A webhook providing the current fuel level as a percentage of the tank capacity
  is triggered every 5mins while the vehicle is on an active trip.
- Triggered when fuel level falls below 50% of tank capacity.
- Subscription to the `Extension_1_End` event is mandatory.
- This event is triggered when the power supply to Extension Wire 1 stops and is used
  with Asset Trackers.
- Subscription to the Extension_1_Start event is mandatory.
- Subscription to the ENTERED_GEOFENCE event is mandatory.
- The event is triggered instantly when a vehicle crosses into the boundary of a created
  geofence region.
- The EXIT_GEOFENCE event is used to notify when a vehicle exits a predefined geofence
  region.
- Subscription to the `Extension_2_End` event is mandatory.
- Subscription to the GEOFENCE_TIMER_NOTIN event is mandatory.
- Subscription to the Extension_2_Start event is mandatory. The event is triggered
  immediately when the Asset Tracker device begins receiving power through Extension
  Wire 2.
- Notifies when a fuel drop is detected
- Triggers when a trip begins or if fuel tank drops by 30% or more
- Subscription to the HARD_ACCELERATION_MESSAGE event is mandatory. The event is triggered
  immediately when a vehicle, already traveling above 3 MPH, accelerates by more than
  8 MPH within one second.
- Event is triggered if the fuel tank capacity has increased by 30% or more.
- The event is triggered instantly when a vehicle moving at more than 30 MPH decelerates
  at a rate between 13–18 MPH per second.
- Event is triggered when a vehicle shows a decrease in speed at a rate exceeding
  18 MPH per second.
- Event is triggered whenever the fuel level falls below 50% of the tank capacity.
- The Over Speeding event is triggered when the vehicle exceeds the configured speed
  threshold (default 65 kilometers per hour).
- Subscription to the OVER_SPEEDING_ENDED webhook is mandatory.
- Triggered in real-time when the vehicle's speed decreases below the configured overspeed
  threshold, set to 65 km/h by default.
- Subscription to the EXIT_GEOFENCE event is mandatory.
- Subscription to the OIL_LIFE_EVENT event is mandatory. This event is triggered in
  real-time at the end of each trip.
- The ROLE_DELETE event is used to notify when a role is deleted in the system.
- Subscription to the ROLE_DELETE event is mandatory.
- Webhook subscription to the GPS_MESSAGE event is mandatory.
- The tracking frequency must be configured at the customer level. If not explicitly
  set, the system defaults to a 2 minute tracking frequency.
- Subscription to the ROLE_UPDATE event is mandatory. This event is triggered in real-time
  when a role is updated in the system.
- Subscription to the HARD_ACCELERATION_MESSAGE event is mandatory.
- Triggered when a vehicle accelerates by more than 8 MPH within one second.
- Subscription to the TEMPERATURE_1 event is mandatory.
- This event is triggered in real time whenever the asset tracker device receives
  updated input from the connected temperature sensor.
- The HARD_BREAKING_MESSAGE event is used to notify when a vehicle experiences a sudden
  and significant reduction in speed.
- Subscription to the TEMPERATURE_2 event is mandatory.
- Subscription to the HARD_CORE_BRAKING_MESSAGE event is mandatory.
- The event is triggered when a vehicle moving at a speed of more than 30 MPH shows
  a decrease in speed at a rate exceeding 18 MPH per second.
- Subscription to the TEMPERATURE_3 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- The event occurs instantly when the vehicle's speed exceeds the configured threshold
  value.
- Subscription to the TEMPERATURE_4 event is mandatory.
- The event is triggered in real-time when the vehicle's speed decreases below the
  configured overspeed threshold, signaling the end of an overspeeding condition.
- Subscription to the TEMPERATURE_5 event is mandatory.
- Subscription to the TEMPERATURE_6 event is mandatory.
- Subscription to the TEMPERATURE_7 event is mandatory.
- Subscription to the ROLE_CREATE event is mandatory. This event is triggered in real-time
  when a role is created in the system.
- Subscription to the TEMPERATURE_8 event is mandatory.
- Subscription to the ROLE_UPDATE event is mandatory.
- Subscription to the TRIP_START_MESSAGE event is mandatory.
- This event is triggered immediately when the vehicle's ignition is turned on.
- Subscription to the TRIP_END_MESSAGE event is mandatory.
- This event is triggered immediately when the vehicle's ignition is turned off.
- Subscription to the SEAT_BELT event is mandatory.
- Event is triggered during a trip only if the vehicle is compatible with seat belt
  detection and the Seat Belt package is enabled.
- Subscription to the USER_CREATE event is mandatory. This event is triggered in real-time
  when a user is created in the system.
- Subscription to the USER_DELETE event is mandatory. This event is triggered in real-time
  when a user is deleted in the system.
- Subscription to the TEMPERATURE_2 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- Subscription to the USER_UPDATE event is mandatory. This event is triggered in real-time
  when a user is updated in the system.
- Subscription to the TEMPERATURE_3 event is mandatory.
- Subscription to the VEHICLE_CREATE event is mandatory. This event is triggered in
  real-time upon vehicle creation.
- Triggered in real time whenever updated input from the connected temperature sensor
  is received.
- Subscription to the VEHICLE_UPDATE event is mandatory. This event is triggered in
  real-time when the vehicle details are updated.
- Subscription to the TEMPERATURE_5 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- Subscription to the VEHICLE_DELETE event is mandatory. This event is triggered in
  real-time upon vehicle deletion.
- Subscription to the TEMPERATURE_6 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- Subscription to the VEHICLE_BACKUP_EVENT is mandatory.
- Subscription to the TEMPERATURE_7 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- Subscription to the VEHICLE_MIL_INFO event is mandatory. The event is triggered
  at the start of each trip.
- Subscription to the TEMPERATURE_8 event is mandatory. This event is triggered in
  real time whenever the asset tracker device receives updated input from the connected
  temperature sensor.
- Subscription to the VEHICLE_NOT_TRACKING event is mandatory.
- Subscription to the VEHICLE_PAIRING event is mandatory.
- Subscription to the VIN_CHANGE_EVENT is mandatory.
- The event is triggered at the start of a trip if a change in the vehicle’s VIN is
  detected.
- Subscription to the USER_UPDATE event is mandatory.
- Subscription to the VEHICLE_UPDATE event is mandatory.
- This event is triggered in real-time when the vehicle details are updated.
- Don't make changes to the pre-defined variables
- This API key needs to be Base 64 encoded
- Token needs to be added to the header of every request by prefixing the word 'Bearer'
  before the token.
- The Back Up Detection package must be enabled for this event to be generated.
- Subscription to the VEHICLE_MIL_INFO event is mandatory.
- Defaults for various fields include integer values defaulting to 0 and boolean values
  defaulting to true.
- This API allows the user to generate a detailed report on the trips taken by your
  fleet within the time period that is requested for.
- Token must be prefixed with 'Bearer' in the Authorization header.
- Make sure that you are setting the method to GET. The same endpoint is used for
  deleting an asset using DELETE method.
- Defaults to 0 for certain fields in response
- Background color and text color default to red
- The URL for this request expired after 30 days.
- Updated about 1 month ago
- You are allowed to update only the assets you have access to.
- This API allows the user to generate a detailed report on the trips taken by your
  fleet within the time period that is requested.
- This API allows the user to view the breadcrumb report.
- This API allows you to create an extension in your account.
- Defaults to {"extension1Id":"","extension2Id":""} when no extensions are associated.
- Defaults to 0 for many integer fields
- Defaults to true for many boolean fields
- Allows you to view all active extensions and all their associated information in
  your account.
- This API allows you to add a vehicle and enter all its information to your account
  which helps you to track and manage the vehicle.
- This API allows you to delete an extension in your account. You need to pass the
  unique identifier of the extension to the endpoint.
- This is an irreversible action. Please be careful while making the request.
- URL for this request expired after 30 days.
- Using POST method to create trackees
- Users are people in your organization that use Azuga for tracking vehicles and reporting
  on performance and productivity.
- Make sure that you are setting the method to GET. The same endpoint is used for
  deleting a user using DELETE method.
- Requires setup of connected app in azuga
- Pass an empty body parameter if you are looking for data of all vehicles.
- You are allowed to fetch only the device you have access to.
- This API allows you to update one or all parameters of a specific user.
- This API provides you with information about all groups present in your account.
- This is an irreversible action. Be careful!
- Geofence can have radius configured up to 10 Miles.
- The same endpoint is used for deleting a geofence using DELETE method.
- Geofence is a virtual boundary around a geographical area.
- A geofence can have radius configured up to 10 Miles.
- Make sure that you are setting the method to GET. The same endpoint is used for
  deleting a group using DELETE method.
- Streaming is feasible only when the camera is in online mode.
- If the video only streams black, it may be because the lens is covered by the lens
  cover accessory.
- If camera is in standby / offline - recommend to Wakeup the camera and initiate
  request again.
- This API helps you to request for live streaming from the camera. This feature is
  available only for Azuga AI cameras with vendorId=15.
- Pass Azuga customerID & unique identifier(token) of the TrackMe link as path parameters.
- This API enables you to delete an active TrackeMe link. Please note that this is
  an irreversible action.
- Make sure that you are setting the method to GET.
- Making a request to the endpoint without any body parameters would give you details
  of all the configured alerts.
- This API provides you with information about all active geofences present in your
  account.
- Only one geofence can be updated by a single API call.
- You are allowed to update geofences for those you have access to modify.
- The same endpoint is used for deleting an alert using DELETE method.
- Webhook name is required of length more than or equal to 3 characters
- Azuga will send an email to the specified address if the URL becomes unreachable
  or fails to respond.
- This API helps you turn on the AI camera if the camera is on sleep mode.
- Only one webhook can be modified per API call.
- You are allowed to view only the Dashcams you have access to.
- Only one webhook can be deleted per API call.
- To get the ID of a webhook, you must call the View API.
- Each page will have 50 records each by default.
- You are allowed to delete one request video in a single API call.
- This API allows the user to view details of a device configuration configured in
  your account
- This API allows the user to delete a device configuration configured in your account
- This API allows the user to create a maintenance reminder in your account
- This API allows you to delete multiple alerts from your account.
- You are allowed to delete only alerts you have access to.
- A webhook allows applications to receive updates automatically.
- A single webhook can subscribe to multiple events.
- This API allows the user to view the details of the service types that is available
  for your account
- Webhook name is required of length more than or equal to 3 characters.
- Azuga will send an email if the specified URL becomes unreachable.
- The same endpoint is used for deleting a Webhook using DELETE method.
- The API allows filtering records between a time range by passing the 'startTime'
  and 'endTime' as query parameters.
- This API gives you the list of all the events that are supported by our application
  and that can be used to trigger a webhook.
- To obtain the ID of the webhook, you need to call the View API.
- You can only delete the webhooks for which you have access to.
- This API allows the user to view all the device configurations configured in your
  account
- API allows the user to view the details of the service types that is available for
  your account
- Allows filtering of records between a time range by passing startTime and endTime
  as query parameters.
- Uses OAuth2 with Bearer token in header
- DTC code needs to be passed as a path parameter
- API allows the user to update the preferences that are available in your account.
- Preferences have various types and constraints.
- V4 authentication has been designed to maintain compatibility with V3.
- Include the generated token in the 'Authorization' header for authentication.
- The Units and Metrics provides essential information about the various measurements
  and metrics used throughout the API.
- Uses Bearer token for authentication
- Bearer authentication is required.
- JWT Bearer token required for authentication
- Live map Equipment trackers
- Requires Bearer JWT for authentication
- Ensure to provide valid vehicleTypeId and fuelTypeId when adding a vehicle.
- High level error message may be returned with 500 Internal Server Error
errors:
- '400: Bad Request: Your request could not be understood by the server.'
- '401: Unauthorized: We couldn''t authorize you, or you have used the wrong API key'
- '403: Forbidden: The resource requested is restricted for your API Key.'
- '404: Not Found: The specified resource could not be found.'
- '405: Method Not Allowed: You tried to access a resource with an invalid method.'
- '429: Too many requests: You’re requesting too much! Slow down!'
- '500: Internal Server Error: Hell''s fire let loose'
- '503: Service Unavailable: We’re temporarily offline for maintenance. Please try
  again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: Bad Request'
- '401: Unauthorized'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 401 401
- '400 Bad Request: Check required fields are present'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Verify endpoint path'
- '400: Error description - if any'
- '200: Successful Response'
- '200: Successful operation'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid credentials'
- '400 Bad Request: Missing required fields or invalid data'
- '200: Success'
- '404: Not Found'
- '400: Error description - if any.'
- '400: Error message during API compilation'
- '200: Successful request'
- '400: Bad request'
- '404: Not found'
- 'error: Displays the corresponding error message which occurs during API compilation.'
- '400: Error occurred during API compilation.'
- Error description - if any
- '200: Result'
- '400: Result'
- 'URL Expired: The URL for this request expired after 30 days.'
- '400: Bad Request - Check if the cameraSerialNum is valid.'
- 400 Bad Request
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid token or expired session'
- '404 Not Found: The requested resource could not be found'
- 'code: HTTP Status Code'
- 'message: Status Message'
- 'generatedAtInMillis: Time at which the API returns the result'
- 'alive: True/False values define if the URL is active or expired'
- 'error: Error description - if any'
- 'AZSC001: invalid request video request name'
- 'AZSC002: invalid time range'
- 'AZSC003: requested video not found'
- 'AZSC004: device is not correct'
- 'AZSC005: disconnected camera'
- '200: Successful response'
- '404: Alert not found'
- 200 - Result
- 'AZSC001: requestedVideo time range code'
- 'AZSC002: invalid request video request name code'
- 'AZSC003: requestedVideo invalid time code'
- 'AZSC004: requestedVideo not found code'
- 'AZSC005: device is not correct code'
- 'AZSC006: requestedVideo disconnected camera code'
- Defaults to 0
- Description of the error - if any.
- '400: Invalid request.'
- '401: Unauthorized access.'
- Error message
- '401: Unauthorized access'
- '402: Request Failed'
- '403: Forbidden'
- '429: Too many requests'
- '500: Server Errors'
- '502: Server Errors'
- '503: Server Errors'
- '504: Server Errors'
- '403 Unauthorized: High level error message'
- 400 Failed Operation (bad request)
- 403 Unauthorized Request
- '400: Failed Operation (bad request)'
- '403: Unauthorized Request'
- 400 Invalid Request Body
- '400 Invalid Request Body: High level error message'
- '403 Unauthorized Request: High level error message'
- 500 Failed Operation (Internal Server Error)
- '400 Invalid Request Body: required'
- 403 Forbidden
- 500 Internal Server Error
- '400: Invalid Request Body'
- '500 Failed Operation: High level error message'
- '400 Invalid Parameters: High level error message'
- '401: Unauthorized: No valid API key provided, or you have used the wrong API key.'
- '403: Forbidden: The API key doesn''t have the permissions to perform the request.'
- '404: Not Found: The specified or requested resource could not be found.'
- '429: Too many requests: Too many requests hit the API too quickly.'
- '500: Server Errors: Something went wrong on Azuga''s end.'
- '500 Internal Server Error: High level error message'
- '400 Bad Request: Error description'
- '403 Forbidden: Access denied'
- '403 Unauthorized: High level error message, Error description, Azuga error codes'
- '200'
- '400'
- '403'
- '500'
- '400 Failed Operation: required'
- '403 Unauthorized Request: required'
- '500: Internal Server Error'
- '200 Successful Operation: General message for the response'
- '400: High level error message'
- 200 Successful Operation
- 400 Invalid Query Params
- 401 Unauthorized Request
- 403 Forbidden Request
- '401 Unauthorized Request: High level error message'
- '403 Forbidden Request: High level error message'
- '404 Resource Not found: High level error message'
- '500 Internal Server Error: Check server logs for details'
- '400 Invalid Request Body: High level error message and detailed error description'
- '403 Unauthorized Request: High level error message and detailed error description'
- 400 Invalid Query Param
- '401 Unauthorized: Access Denied'
- 404 Resource Not Found
- 400 Invalid Request
- '400: default'
- '401: default'
- '403: default'
- '404: default'
- '400 Invalid Request: High level error message'
- '403 Forbidden Request: High-level error message summarizing the forbidden error'
- '404 Resource Not Found: High-level error message summarizing the not found error'
- '401'
- '400 Invalid Query Params: High level error message'
- '404 Not Found Request: High level error message'
- 404 Not Found Request
- '400 Invalid Query Param: High level error message'
- '400 - default: Error description'
- '401 - default: Error description'
- '403 - default: Error description'
- '500 Internal Server Error: High level error message, Error description'
- '401 Unauthorized: Recheck your credentials'
- '400 Bad Request: Validation failed'
- '500 Internal Server Error: Check server logs for more information'
- '401 Unauthorized: Error details'
- 404 Resource Not found
- '404'
- '401 Unauthorized: Details of the field'
- '400 Bad Request: Validation failed for field'
- '401 Unauthorized: Bearer token is invalid'
- '403 Forbidden: Access denied to the resource'
- '404 Not Found: Resource not found'
- '400 Bad Request: Invalid request format'
- '403 Unauthorized Request: High level error message and error description required'
- '401: Unauthorized Request'
- '403: Forbidden Request'
- '500 Internal Server Error: High level error message and error description'
- 200 Role List fetched Successfully
- 401 Unauthorized
- 404 Not Found
- '400 Bad Request: Validation failed for the request'
- '400 Invalid Query Params: Check your query parameters.'
- '401 Unauthorized Request: Check authentication credentials.'
- '403 Forbidden Request: Ensure you have the correct permissions.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://services.azuga.com/azuga-ws-oauth/v3
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
