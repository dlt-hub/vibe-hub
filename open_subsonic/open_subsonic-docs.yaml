resources:
- name: ping
  endpoint:
    path: /ping.view
    method: GET
    data_selector: subsonic-response
    params:
      v: 1.16.1
      c: AwesomeClientName
      f: json
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: POST
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: POST
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: POST
- name: createShare
  endpoint:
    path: /createShare
    method: POST
- name: createUser
  endpoint:
    path: /createUser
    method: POST
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: POST
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: POST
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: POST
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: POST
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: POST
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: POST
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: POST
- name: download
  endpoint:
    path: /download
    method: GET
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getBookmarks
  endpoint:
    path: /getBookmarks
    method: GET
- name: getGenres
  endpoint:
    path: /getGenres
    method: GET
- name: getInternetRadioStations
  endpoint:
    path: /getInternetRadioStations
    method: GET
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
- name: getPodcasts
  endpoint:
    path: /getPodcasts
    method: GET
- name: getUser
  endpoint:
    path: /getUser
    method: GET
- name: getUsers
  endpoint:
    path: /getUsers
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: tokenInfo
  endpoint:
    path: /tokenInfo
    method: GET
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getAlbums
  endpoint:
    path: /getAlbums
    method: GET
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
- name: getAlbum
  endpoint:
    path: /docs/endpoints/getalbum/
    method: GET
- name: getArtist
  endpoint:
    path: /docs/endpoints/getartist/
    method: GET
- name: getPlaylists
  endpoint:
    path: /docs/endpoints/getplaylists/
    method: GET
- name: getUsers
  endpoint:
    path: /docs/endpoints/getusers/
    method: GET
- name: search
  endpoint:
    path: /docs/endpoints/search/
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: album
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: Template extension
  endpoint:
    path: ../extensions/template
    method: GET
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getSong
  endpoint:
    path: /getSong
    method: GET
- name: getVideos
  endpoint:
    path: /getVideos
    method: GET
- name: getVideoInfo
  endpoint:
    path: /getVideoInfo
    method: GET
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
- name: getTopSongs
  endpoint:
    path: /getTopSongs
    method: GET
- name: ping
  endpoint:
    path: /ping.view
    method: GET
    data_selector: subsonic-response
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
- name: getAlbums
  endpoint:
    path: /getAlbums
    method: GET
    data_selector: albums
- name: getSongs
  endpoint:
    path: /getSongs
    method: GET
    data_selector: songs
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: Your chat message
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: Your username
      password: Your password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: Your media file ID
      position: Your position in milliseconds
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: POST
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: POST
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
- name: getPodcasts
  endpoint:
    path: /getPodcasts
    method: GET
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: album
- name: addChatMessage
  endpoint:
    path: /rest/addChatMessage
    method: POST
    data_selector: subsonic-response
- name: changePassword
  endpoint:
    path: /rest/changePassword
    method: POST
    data_selector: subsonic-response
- name: createBookmark
  endpoint:
    path: /rest/createBookmark
    method: POST
    data_selector: subsonic-response
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: POST
    data_selector: subsonic-response
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createShare
  endpoint:
    path: /createShare
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createUser
  endpoint:
    path: /createUser
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deletePodcastEpisode
  endpoint:
    path: /rest/deletePodcastEpisode.view
    method: GET
    params:
      id: The ID of the Podcast channel to delete.
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: records
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: records
- name: getUsers
  endpoint:
    path: /getUsers
    method: GET
    data_selector: records
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getAlbums
  endpoint:
    path: /getAlbums
    method: GET
- name: getSongs
  endpoint:
    path: /getSongs
    method: GET
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
      songId: '123'
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
- name: album
  endpoint:
    path: /rest/getAlbum.view
    method: GET
    data_selector: subsonic-response.albumInfo
    params:
      id: required
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: binary
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumInfo
    params: {}
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: GET
    data_selector: subsonic-response
    params:
      message: Hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: GET
    data_selector: subsonic-response
    params:
      username: demo
      password: newpassword
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createPodcastChannel
  endpoint:
    path: /rest/createPodcastChannel
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createShare
  endpoint:
    path: /rest/createShare
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createUser
  endpoint:
    path: /rest/createUser
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deleteBookmark
  endpoint:
    path: /rest/deleteBookmark
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deleteInternetRadioStation
  endpoint:
    path: /rest/deleteInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deletePodcastChannel
  endpoint:
    path: /rest/deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deletePodcastEpisode
  endpoint:
    path: /rest/deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteShare
  endpoint:
    path: /rest/deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteUser
  endpoint:
    path: /rest/deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: username
- name: download
  endpoint:
    path: /rest/download
    method: GET
    data_selector: binary data
    params:
      id: id
- name: downloadPodcastEpisode
  endpoint:
    path: /rest/downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbum
  endpoint:
    path: /rest/getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo
  endpoint:
    path: /rest/getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo2
  endpoint:
    path: /rest/getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params:
      type: random
      size: 10
      offset: 0
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params:
      type: random
      size: 10
      offset: 0
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params:
      id: ''
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params:
      id: ''
      count: 20
      includeNotPresent: false
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params:
      id: ''
      count: 20
      includeNotPresent: false
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: subsonic-response.artistInfo2
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: records
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params: {}
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: ''
      name: ''
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      playlistId: ''
      name: ''
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: ''
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: ''
      password: ''
      email: ''
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: username
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params:
      type: random
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params:
      type: random
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: chatMessages
  endpoint:
    path: /getChatMessages
    method: GET
    data_selector: chatMessages
    params: {}
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      playlistId: required
      name: required
- name: createPodcastChannel
  endpoint:
    path: /rest/createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: required
- name: createShare
  endpoint:
    path: /rest/createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: createUser
  endpoint:
    path: /rest/createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
      password: required
      email: required
- name: deleteBookmark
  endpoint:
    path: /rest/deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteInternetRadioStation
  endpoint:
    path: /rest/deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: albumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: albumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: artist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: artistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: artistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
    params: {}
- name: license
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
    params: {}
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: album
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: getUser
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: message
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: username
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: id
      position: position
      comment: comment
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: ''
      name: ''
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      playlistId: ''
      name: ''
      songId: ''
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: ''
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
      description: ''
      expires: ''
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: ''
      password: ''
      email: ''
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: license
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
- name: lyrics
  endpoint:
    path: /getLyrics
    method: GET
    data_selector: lyrics
- name: lyrics_by_song_id
  endpoint:
    path: /getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: song_id
- name: getMusicDirectory
  endpoint:
    path: /rest/getMusicDirectory
    method: GET
    data_selector: directory
    params: {}
- name: getMusicFolders
  endpoint:
    path: /rest/getMusicFolders
    method: GET
    data_selector: musicFolders
    params: {}
- name: getNewestPodcasts
  endpoint:
    path: /rest/getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: '20'
- name: getNowPlaying
  endpoint:
    path: /rest/getNowPlaying
    method: GET
    data_selector: nowPlaying
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: response
    params: {}
- name: getLicense
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
    params: {}
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: extensions
    params: {}
- name: tokenInfo
  endpoint:
    path: /tokenInfo
    method: GET
    data_selector: tokenInfo
    params: {}
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
    params: {}
- name: getIndexes
  endpoint:
    path: /getIndexes
    method: GET
    data_selector: indexes
    params: {}
- name: getMusicDirectory
  endpoint:
    path: /getMusicDirectory
    method: GET
    data_selector: directory
    params: {}
- name: getGenres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: album
    params: {}
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params: {}
- name: getVideos
  endpoint:
    path: /getVideos
    method: GET
    data_selector: videos
    params: {}
- name: getVideoInfo
  endpoint:
    path: /getVideoInfo
    method: GET
    data_selector: videoInfo
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: albumInfo
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params: {}
- name: getTopSongs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params: {}
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: 12
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createPodcastChannel
  endpoint:
    path: /rest/createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createShare
  endpoint:
    path: /rest/createShare
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createUser
  endpoint:
    path: /rest/createUser
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deleteBookmark
  endpoint:
    path: /rest/deleteBookmark
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deleteInternetRadioStation
  endpoint:
    path: /rest/deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: binary data
    params:
      id: '123'
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
- name: lyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
- name: lyrics_by_song_id
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: ''
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
    params: {}
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: 20
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
    params: {}
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
    params: {}
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: 'yes'
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
    params: {}
- name: play_queue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: subsonic-response.playQueue
    params: {}
- name: play_queue_by_index
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: subsonic-response.playQueue
    params: {}
- name: randomSongs
  endpoint:
    path: /getPodcasts.view
    method: GET
    data_selector: randomSongs
    params:
      id: podcast episode ID
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params: {}
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params: {}
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
- name: createPodcastChannel
  endpoint:
    path: /rest/createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /rest/createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /rest/createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /rest/deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /rest/deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: avatar
  endpoint:
    path: /getAvatar
    method: GET
    data_selector: avatar
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: captions
  endpoint:
    path: /getCaptions
    method: GET
    data_selector: captions
    params: {}
- name: chatMessages
  endpoint:
    path: /getChatMessages
    method: GET
    data_selector: chatMessages
    params: {}
- name: coverArt
  endpoint:
    path: /getCoverArt
    method: GET
    data_selector: coverArt
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: indexes
  endpoint:
    path: /getIndexes
    method: GET
    data_selector: indexes
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
    params: {}
- name: license
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
    params: {}
- name: lyrics
  endpoint:
    path: /getLyrics
    method: GET
    data_selector: lyrics
    params: {}
- name: lyricsBySongId
  endpoint:
    path: /getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: track_id
- name: music_folders
  endpoint:
    path: /rest/getMusicFolders
    method: GET
    data_selector: musicFolders
    params: {}
- name: newest_podcasts
  endpoint:
    path: /rest/getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: '20'
- name: now_playing
  endpoint:
    path: /rest/getNowPlaying
    method: GET
    data_selector: nowPlaying
    params: {}
- name: open_subsonic_extensions
  endpoint:
    path: /rest/getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
    params: {}
- name: playlist
  endpoint:
    path: /rest/getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: required
- name: playlists
  endpoint:
    path: /rest/getPlaylists
    method: GET
    data_selector: playlists
    params: {}
- name: playQueue
  endpoint:
    path: /rest/getPlayQueue
    method: GET
    data_selector: playQueue
    params: {}
- name: playQueueByIndex
  endpoint:
    path: /rest/getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
    params: {}
- name: podcastEpisode
  endpoint:
    path: /rest/getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: ''
- name: podcasts
  endpoint:
    path: /rest/getPodcasts
    method: GET
    data_selector: podcasts
    params: {}
- name: randomSongs
  endpoint:
    path: /rest/getRandomSongs
    method: GET
    data_selector: randomSongs
    params: {}
- name: scanStatus
  endpoint:
    path: /rest/getScanStatus
    method: GET
    data_selector: scanStatus
    params: {}
- name: shares
  endpoint:
    path: /getShares
    method: GET
    data_selector: scanStatus
    params: {}
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation.view
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: required
      name: required
- name: createPlaylist
  endpoint:
    path: /createPlaylist.view
    method: GET
    data_selector: subsonic-response
    params:
      playlistId: required
      name: required
      songId: optional
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel.view
    method: GET
    data_selector: subsonic-response
    params:
      url: required
- name: createShare
  endpoint:
    path: /createShare.view
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      description: optional
      expires: optional
- name: createUser
  endpoint:
    path: /createUser.view
    method: GET
    data_selector: subsonic-response
    params:
      username: required
      password: required
      email: required
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark.view
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation.view
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist.view
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: username
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params:
      type: random
      size: 10
      offset: 0
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params:
      type: random
      size: 10
      offset: 0
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params:
      id: ''
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params:
      id: ''
      count: 20
      includeNotPresent: false
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params:
      id: ''
      count: 20
      includeNotPresent: false
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: avatar
  endpoint:
    path: /getAvatar
    method: GET
    data_selector: avatar
    params:
      username: username
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: captions
  endpoint:
    path: /getCaptions
    method: GET
    data_selector: captions
    params:
      id: id
- name: chatMessages
  endpoint:
    path: /getChatMessages
    method: GET
    data_selector: chatMessages
    params: {}
- name: coverArt
  endpoint:
    path: /getCoverArt
    method: GET
    data_selector: coverArt
    params:
      id: id
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: indexes
  endpoint:
    path: /getIndexes
    method: GET
    data_selector: indexes
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
    params: {}
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
    params: {}
- name: lyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
    params: {}
- name: lyrics_by_song_id
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: required
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: 20
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: playlist_id
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
    params: {}
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
    params: {}
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: required
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
    params: {}
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
    params: {}
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
    params: {}
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params:
      id: id
      count: '50'
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
    params:
      id: id
      count: '50'
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params:
      id: id
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre.song
    params:
      genre: ''
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: ''
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getIndexes
  endpoint:
    path: /getIndexes
    method: GET
- name: getMusicDirectory
  endpoint:
    path: /getMusicDirectory
    method: GET
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params: {}
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params: {}
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params:
      type: random
      size: 10
      offset: 0
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params:
      type: random
      size: 10
      offset: 0
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params:
      id: '123'
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params:
      id: '123'
      count: 20
      includeNotPresent: false
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: internet_radio_stations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
- name: lyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
- name: lyrics_by_song_id
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: required
- name: getMusicDirectory
  endpoint:
    path: /getMusicDirectory
    method: GET
    data_selector: directory
    params:
      id: '123'
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: 20
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: '123'
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
    params: {}
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
    params: {}
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: ''
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
    params: {}
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
    params: {}
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
    params: {}
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params:
      id: required
      count: optional
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
    params:
      id: required
      count: optional
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params:
      id: required
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre.song
    params:
      genre: ''
      count: 10
      offset: 0
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: starred.song
    params: {}
- name: starred2
  endpoint:
    path: /getStarred2
    method: GET
    data_selector: starred2.song
    params: {}
- name: topSongs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params:
      artist: artist
      count: '50'
- name: user
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params:
      username: username
- name: users
  endpoint:
    path: /getUsers
    method: GET
    data_selector: users
    params: {}
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: album
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: 'yes'
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: 'yes'
      password: 'yes'
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: 'yes'
      position: 'yes'
      comment: 'no'
- name: createInternetRadioStation
  endpoint:
    path: /rest/createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
- name: createPodcastChannel
  endpoint:
    path: /rest/createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /rest/createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /rest/createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /rest/deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /rest/deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: ''
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: binary
    params:
      id: ''
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
- name: albumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: albumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: artist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: artistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: artistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: getMusicFolders
  endpoint:
    path: /rest/getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getInternetRadioStations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: getLicense
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
- name: getLyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
- name: getLyricsBySongId
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: required
- name: getMusicDirectory
  endpoint:
    path: /rest/getMusicDirectory
    method: GET
    data_selector: musicDirectory
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: id
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
    params: {}
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
    params: {}
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: podcast episode ID
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
    params: {}
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
    params: {}
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
    params: {}
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre
    params:
      genre: Electronic
      count: 10
      offset: 0
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: starred
    params: {}
- name: starred2
  endpoint:
    path: /getStarred2
    method: GET
    data_selector: starred2
    params: {}
- name: topSongs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params:
      artist: artist
      count: '50'
- name: user
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params:
      username: username
- name: users
  endpoint:
    path: /getUsers
    method: GET
    data_selector: users
- name: videoInfo
  endpoint:
    path: /getVideoInfo
    method: GET
    data_selector: videoInfo
    params:
      id: id
- name: videos
  endpoint:
    path: /getVideos
    method: GET
    data_selector: videos
- name: jukeboxControl
  endpoint:
    path: /jukeboxControl
    method: GET
    data_selector: jukeboxStatus
    params:
      action: action
      index: index
      offset: offset
      id: id
      gain: gain
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: subsonic-response
    params: {}
- name: refreshPodcasts
  endpoint:
    path: /refreshPodcasts
    method: GET
    data_selector: subsonic-response
    params: {}
- name: play_queue
  endpoint:
    path: /rest/savePlayQueueByIndex.view
    method: GET
    params:
      format: json
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getSong
  endpoint:
    path: /getSong
    method: GET
- name: getVideos
  endpoint:
    path: /getVideos
    method: GET
- name: getVideoInfo
  endpoint:
    path: /getVideoInfo
    method: GET
- name: getGenres
  endpoint:
    path: /getGenres
    method: GET
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
- name: getStarred
  endpoint:
    path: /getStarred
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: username
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: id
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: getAlbumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: getArtistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /rest/getArtists
    method: GET
    data_selector: artists
- name: avatar
  endpoint:
    path: /rest/getAvatar
    method: GET
    data_selector: avatar
- name: bookmarks
  endpoint:
    path: /rest/getBookmarks
    method: GET
    data_selector: bookmarks
- name: captions
  endpoint:
    path: /rest/getCaptions
    method: GET
    data_selector: captions
- name: chatMessages
  endpoint:
    path: /rest/getChatMessages
    method: GET
    data_selector: chatMessages
- name: coverArt
  endpoint:
    path: /rest/getCoverArt
    method: GET
    data_selector: coverArt
- name: genres
  endpoint:
    path: /rest/getGenres
    method: GET
    data_selector: genres
- name: indexes
  endpoint:
    path: /rest/getIndexes
    method: GET
    data_selector: indexes
- name: internet_radio_stations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
- name: lyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
- name: lyrics_by_song_id
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: required
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
    params: {}
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: 20
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
    params: {}
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
    params: {}
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: required
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
    params: {}
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: ''
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params:
      id: required
      count: optional, default 50
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
    params:
      id: required
      count: optional, default 50
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params:
      id: required
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre.song
    params:
      genre: ''
      count: 10
      offset: 0
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: starred.song
    params: {}
- name: starred2
  endpoint:
    path: /getStarred2
    method: GET
    data_selector: starred2.song
    params: {}
- name: top_songs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params:
      artist: artist
      count: '50'
- name: user
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params:
      username: username
- name: users
  endpoint:
    path: /getUsers
    method: GET
    data_selector: users
- name: video_info
  endpoint:
    path: /getVideoInfo
    method: GET
    data_selector: videoInfo
    params:
      id: id
- name: videos
  endpoint:
    path: /getVideos
    method: GET
    data_selector: videos
- name: jukebox_control
  endpoint:
    path: /jukeboxControl
    method: GET
    data_selector: jukeboxStatus
    params:
      action: action
      index: index
      offset: offset
      id: id
      gain: gain
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: subsonic-response
    params: {}
- name: refreshPodcasts
  endpoint:
    path: /refreshPodcasts
    method: GET
    data_selector: subsonic-response
    params: {}
- name: savePlayQueue
  endpoint:
    path: /savePlayQueue
    method: POST
    data_selector: subsonic-response
    params: {}
- name: savePlayQueueByIndex
  endpoint:
    path: /savePlayQueueByIndex
    method: POST
    data_selector: subsonic-response
    params: {}
- name: scrobble
  endpoint:
    path: /scrobble
    method: POST
    data_selector: subsonic-response
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: subsonic-response
    params:
      count: 20
      offset: 0
- name: search2
  endpoint:
    path: /search2
    method: GET
    data_selector: subsonic-response
    params: {}
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
- name: getPodcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getIndexes
  endpoint:
    path: /getIndexes
    method: GET
- name: getMusicDirectory
  endpoint:
    path: /getMusicDirectory
    method: GET
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: GET
    data_selector: subsonic-response
    params:
      name: abc
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /createShare
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /createUser
    method: GET
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: GET
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: albumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: albumList2
  endpoint:
    path: /getAlbumList2
    method: GET
    data_selector: albumList2
    params: {}
- name: artist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: artistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: artistInfo2
  endpoint:
    path: /getArtistInfo2
    method: GET
    data_selector: artistInfo2
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: internetRadioStations
  endpoint:
    path: /rest/getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: license
- name: lyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: lyrics
- name: lyricsBySongId
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: required
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
    params:
      count: 20
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: required
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: ''
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params:
      id: artist, album or song ID
      count: 50
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
    params:
      id: artist ID
      count: 50
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params:
      id: song ID
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre
    params:
      genre: ''
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: starred
    params: {}
- name: starred2
  endpoint:
    path: /getStarred2
    method: GET
    data_selector: starred2
    params: {}
- name: top_songs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params:
      artist: required
      count: '50'
- name: user
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params:
      username: required
- name: users
  endpoint:
    path: /getUsers
    method: GET
    data_selector: users
- name: video_info
  endpoint:
    path: /getVideoInfo
    method: GET
    data_selector: videoInfo
    params:
      id: required
- name: videos
  endpoint:
    path: /getVideos
    method: GET
    data_selector: videos
- name: jukebox_control
  endpoint:
    path: /jukeboxControl
    method: GET
    data_selector: jukeboxStatus
    params:
      action: required
      index: ''
      offset: ''
      id: ''
      gain: ''
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: subsonic-response
- name: refreshPodcasts
  endpoint:
    path: /refreshPodcasts
    method: GET
    data_selector: subsonic-response
- name: savePlayQueue
  endpoint:
    path: /savePlayQueue
    method: POST
    data_selector: subsonic-response
- name: savePlayQueueByIndex
  endpoint:
    path: /savePlayQueueByIndex
    method: POST
    data_selector: subsonic-response
- name: scrobble
  endpoint:
    path: /scrobble
    method: POST
    data_selector: subsonic-response
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: subsonic-response
- name: search2
  endpoint:
    path: /search2
    method: GET
    data_selector: subsonic-response
- name: search
  endpoint:
    path: /search3
    method: GET
    data_selector: searchResult3
    params:
      query: ''
      artistCount: 20
      albumCount: 20
      songCount: 20
- name: setRating
  endpoint:
    path: /setRating
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
      rating: ''
- name: star
  endpoint:
    path: /star
    method: GET
    data_selector: subsonic-response
    params:
      id: ''
      albumId: ''
      artistId: ''
- name: startScan
  endpoint:
    path: /startScan
    method: GET
    data_selector: subsonic-response
- name: stream
  endpoint:
    path: /stream
    method: GET
    data_selector: subsonic-response
- name: getArtists
  endpoint:
    path: /getArtists
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getIndexes
  endpoint:
    path: /getIndexes
    method: GET
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
- name: addChatMessage
  endpoint:
    path: /addChatMessage
    method: POST
    data_selector: subsonic-response
    params:
      message: hello
- name: changePassword
  endpoint:
    path: /changePassword
    method: POST
    data_selector: subsonic-response
    params:
      username: demo
      password: password
- name: createBookmark
  endpoint:
    path: /createBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
      position: '12'
- name: createInternetRadioStation
  endpoint:
    path: /createInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params:
      streamUrl: url
      name: radio
- name: createPlaylist
  endpoint:
    path: /createPlaylist
    method: POST
    data_selector: subsonic-response
    params:
      name: abc
      songId: '123'
- name: createPodcastChannel
  endpoint:
    path: /createPodcastChannel
    method: POST
    data_selector: subsonic-response
    params:
      url: url
- name: createShare
  endpoint:
    path: /createShare
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
- name: createUser
  endpoint:
    path: /createUser
    method: POST
    data_selector: subsonic-response
    params:
      username: test
      password: test
      email: test@test.com
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
- name: deleteInternetRadioStation
  endpoint:
    path: /deleteInternetRadioStation
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePlaylist
  endpoint:
    path: /deletePlaylist
    method: POST
    data_selector: subsonic-response
    params:
      id: '123'
- name: deletePodcastChannel
  endpoint:
    path: /deletePodcastChannel
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deletePodcastEpisode
  endpoint:
    path: /deletePodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteShare
  endpoint:
    path: /deleteShare
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: deleteUser
  endpoint:
    path: /deleteUser
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: ''
    params:
      id: required
- name: downloadPodcastEpisode
  endpoint:
    path: /downloadPodcastEpisode
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /getAlbumInfo
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /getAlbumInfo2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: getAlbumList
  endpoint:
    path: /getAlbumList
    method: GET
    data_selector: albumList
    params: {}
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
    data_selector: artist
    params: {}
- name: getArtistInfo
  endpoint:
    path: /getArtistInfo
    method: GET
    data_selector: artistInfo
    params: {}
- name: artists
  endpoint:
    path: /getArtists
    method: GET
    data_selector: artists
    params: {}
- name: avatar
  endpoint:
    path: /getAvatar
    method: GET
    data_selector: avatar
    params: {}
- name: bookmarks
  endpoint:
    path: /getBookmarks
    method: GET
    data_selector: bookmarks
    params: {}
- name: captions
  endpoint:
    path: /getCaptions
    method: GET
    data_selector: captions
    params: {}
- name: chatMessages
  endpoint:
    path: /getChatMessages
    method: GET
    data_selector: chatMessages
    params: {}
- name: coverArt
  endpoint:
    path: /getCoverArt
    method: GET
    data_selector: coverArt
    params: {}
- name: genres
  endpoint:
    path: /getGenres
    method: GET
    data_selector: genres
    params: {}
- name: indexes
  endpoint:
    path: /getIndexes
    method: GET
    data_selector: indexes
    params: {}
- name: getLyrics
  endpoint:
    path: /getLyrics
    method: GET
    data_selector: lyrics
- name: getLyricsBySongId
  endpoint:
    path: /getLyricsBySongId
    method: GET
    data_selector: lyricsList
    params:
      id: track_id
- name: getInternetRadioStations
  endpoint:
    path: /getInternetRadioStations
    method: GET
    data_selector: internetRadioStations
- name: getLicense
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
- name: getMusicDirectory
  endpoint:
    path: /getMusicDirectory
    method: GET
    data_selector: musicDirectory
- name: getMusicFolders
  endpoint:
    path: /getMusicFolders
    method: GET
    data_selector: musicFolders
- name: getNewestPodcasts
  endpoint:
    path: /getNewestPodcasts
    method: GET
    data_selector: newestPodcasts
- name: getNowPlaying
  endpoint:
    path: /getNowPlaying
    method: GET
    data_selector: nowPlaying
- name: getOpenSubsonicExtensions
  endpoint:
    path: /getOpenSubsonicExtensions
    method: GET
    data_selector: openSubsonicExtensions
- name: getPlaylist
  endpoint:
    path: /getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: playlist_id
- name: getPlaylists
  endpoint:
    path: /getPlaylists
    method: GET
    data_selector: playlists
- name: playQueue
  endpoint:
    path: /getPlayQueue
    method: GET
    data_selector: playQueue
    params: {}
- name: playQueueByIndex
  endpoint:
    path: /getPlayQueueByIndex
    method: GET
    data_selector: playQueueByIndex
    params: {}
- name: podcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: GET
    data_selector: podcastEpisode
    params:
      id: ''
- name: podcasts
  endpoint:
    path: /getPodcasts
    method: GET
    data_selector: podcasts
    params: {}
- name: randomSongs
  endpoint:
    path: /getRandomSongs
    method: GET
    data_selector: randomSongs
    params: {}
- name: scanStatus
  endpoint:
    path: /getScanStatus
    method: GET
    data_selector: scanStatus
    params: {}
- name: getShares
  endpoint:
    path: /getShares
    method: GET
    data_selector: shares
    params: {}
- name: getSimilarSongs
  endpoint:
    path: /getSimilarSongs
    method: GET
    data_selector: similarSongs
    params:
      id: required
      count: '50'
- name: getSimilarSongs2
  endpoint:
    path: /getSimilarSongs2
    method: GET
    data_selector: similarSongs2
    params:
      id: required
      count: '50'
- name: getSong
  endpoint:
    path: /getSong
    method: GET
    data_selector: song
    params:
      id: required
- name: songsByGenre
  endpoint:
    path: /getSongsByGenre
    method: GET
    data_selector: songsByGenre
    params:
      genre: required
      count: 10
      offset: 0
- name: starred
  endpoint:
    path: /getStarred
    method: GET
    data_selector: starred
    params: {}
- name: starred2
  endpoint:
    path: /getStarred2
    method: GET
    data_selector: starred2
    params: {}
- name: topSongs
  endpoint:
    path: /getTopSongs
    method: GET
    data_selector: topSongs
    params:
      artist: artist
      count: '50'
- name: user
  endpoint:
    path: /getUser
    method: GET
    data_selector: user
    params:
      username: username
- name: users
  endpoint:
    path: /getUsers
    method: GET
    data_selector: users
    params: {}
- name: videoInfo
  endpoint:
    path: /getVideoInfo
    method: GET
    data_selector: videoInfo
    params:
      id: id
- name: videos
  endpoint:
    path: /getVideos
    method: GET
    data_selector: videos
    params: {}
- name: jukeboxControl
  endpoint:
    path: /jukeboxControl
    method: GET
    data_selector: jukeboxStatus
    params:
      action: action
      index: index
      offset: offset
      id: id
      gain: gain
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: subsonic-response
    params: {}
- name: refreshPodcasts
  endpoint:
    path: /refreshPodcasts
    method: GET
    data_selector: subsonic-response
    params: {}
- name: savePlayQueue
  endpoint:
    path: /savePlayQueue
    method: GET
    data_selector: subsonic-response
    params: {}
- name: savePlayQueueByIndex
  endpoint:
    path: /savePlayQueueByIndex
    method: GET
    data_selector: subsonic-response
    params: {}
- name: scrobble
  endpoint:
    path: /scrobble
    method: GET
    data_selector: subsonic-response
    params: {}
- name: search2
  endpoint:
    path: /search2
    method: GET
    data_selector: subsonic-response
    params: {}
- name: search
  endpoint:
    path: /search3
    method: GET
    data_selector: searchResult3
    params:
      query: ''
      artistCount: 20
      albumCount: 20
      songCount: 20
- name: updatePlaylist
  endpoint:
    path: /rest/updatePlaylist
    method: GET
    params:
      playlistId: required
- name: updateShare
  endpoint:
    path: /rest/updateShare
    method: GET
- name: musicFolders
  endpoint:
    path: /musicFolders
    method: GET
    data_selector: musicFolder
    params: {}
- name: genres
  endpoint:
    path: /genres
    method: GET
    data_selector: genre
    params: {}
- name: internetRadioStations
  endpoint:
    path: /internetRadioStations
    method: GET
    data_selector: internetRadioStation
    params: {}
- name: license
  endpoint:
    path: /getLicense
    method: GET
    data_selector: license
    params: {}
- name: song
  endpoint:
    path: /songs
    method: GET
    data_selector: song
- name: license
  endpoint:
    path: /rest/getLicense
    method: GET
    data_selector: subsonic-response.license
- name: open_subsonic_extensions
  endpoint:
    path: /rest/getOpenSubsonicExtensions
    method: GET
    data_selector: subsonic-response.openSubsonicExtensions
- name: ping
  endpoint:
    path: /rest/ping
    method: GET
    data_selector: subsonic-response
- name: token_info
  endpoint:
    path: /rest/tokenInfo
    method: GET
    data_selector: subsonic-response.tokenInfo
- name: change_password
  endpoint:
    path: /rest/changePassword
    method: GET
    data_selector: subsonic-response
- name: createUser
  endpoint:
    path: /rest/createUser
    method: POST
    data_selector: subsonic-response
    params: {}
- name: deleteUser
  endpoint:
    path: /rest/deleteUser
    method: POST
    data_selector: subsonic-response
    params: {}
- name: getUser
  endpoint:
    path: /rest/getUser
    method: GET
    data_selector: subsonic-response
    params: {}
- name: getUsers
  endpoint:
    path: /rest/getUsers
    method: GET
    data_selector: subsonic-response
    params: {}
- name: updateUser
  endpoint:
    path: /rest/updateUser
    method: POST
    data_selector: subsonic-response
    params: {}
- name: getScanStatus
  endpoint:
    path: /rest/getScanStatus
    method: GET
    data_selector: subsonic-response.scanStatus
- name: startScan
  endpoint:
    path: /rest/startScan
    method: GET
    data_selector: subsonic-response.scanStatus
- name: search
  endpoint:
    path: /rest/search
    method: GET
    data_selector: subsonic-response.searchResult
- name: search2
  endpoint:
    path: /rest/search2
    method: GET
    data_selector: subsonic-response.searchResult
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
- name: getAlbum
  endpoint:
    path: /rest/getAlbum
    method: GET
    data_selector: subsonic-response.album
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getAlbum
  endpoint:
    path: /rest/getAlbum
    method: POST
    data_selector: application/x-www-form-urlencoded
    params:
      id: required
- name: getAlbumInfo
  endpoint:
    path: /rest/getAlbumInfo
    method: POST
    data_selector: application/x-www-form-urlencoded
    params:
      id: required
- name: getAlbumInfo2
  endpoint:
    path: /rest/getAlbumInfo2
    method: POST
    data_selector: application/x-www-form-urlencoded
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: Success
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getArtistInfo
  endpoint:
    path: /rest/getArtistInfo
    method: POST
    data_selector: Success
- name: getArtists
  endpoint:
    path: /rest/getArtists
    method: POST
    data_selector: Success
- name: getGenres
  endpoint:
    path: /rest/getGenres
    method: POST
    data_selector: Success
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer
      format: string
      timeOffset: integer
      size: string
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getSimilarSongs
  endpoint:
    path: /rest/getSimilarSongs
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      count: integer >= 0
- name: getSimilarSongs2
  endpoint:
    path: /rest/getSimilarSongs2
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      count: integer >= 0
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: Success (binary) or error (xml) response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getSimilarSongs2
  endpoint:
    path: /rest/getSimilarSongs2
    method: GET
    data_selector: Success (binary) or error (xml) response
    params:
      id: required
      count: integer >= 0
- name: getSong
  endpoint:
    path: /rest/getSong
    method: GET
    data_selector: Successful or failed response
    params:
      id: required
- name: getTopSongs
  endpoint:
    path: /rest/getTopSongs
    method: POST
    data_selector: Successful or failed response
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: createPlaylist
  endpoint:
    path: /rest/createPlaylist
    method: POST
    data_selector: xml
    params:
      playlistId: string
      name: string
      songId: Array of strings
- name: deletePlaylist
  endpoint:
    path: /rest/deletePlaylist
    method: POST
    data_selector: xml
    params:
      id: required
- name: getPlaylist
  endpoint:
    path: /rest/getPlaylist
    method: GET
    data_selector: xml
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getPlaylist
  endpoint:
    path: /rest/getPlaylist
    method: GET
    data_selector: playlist
    params:
      id: required
- name: getPlaylists
  endpoint:
    path: /rest/getPlaylists
    method: GET
    data_selector: playlists
    params:
      username: string
- name: updatePlaylist
  endpoint:
    path: /rest/updatePlaylist
    method: POST
    data_selector: playlist
    params:
      playlistId: required
      name: string
      comment: string
      public: boolean
      songIdToAdd: Array of strings
      songIndexToRemove: Array of integers
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.albumList.album
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.nowPlaying.entry
    params:
      id: required
      maxBitRate: '>= 0'
      format: string
      timeOffset: '>= 0'
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.randomSongs.song
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.songsByGenre.song
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: optional
      format: optional
      timeOffset: optional
      size: optional
      estimateContentLength: optional
      converted: optional
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: ''
      format: ''
      timeOffset: ''
      size: ''
      estimateContentLength: false
      converted: false
- name: getAvatar
  endpoint:
    path: /rest/getAvatar
    method: GET
    data_selector: subsonic-response
    params:
      username: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getCaptions
  endpoint:
    path: /rest/getCaptions
    method: POST
    data_selector: xml
- name: getLyrics
  endpoint:
    path: /rest/getLyrics
    method: GET
    data_selector: xml
- name: getLyricsBySongId
  endpoint:
    path: /rest/getLyricsBySongId
    method: GET
    data_selector: xml
- name: hls
  endpoint:
    path: /rest/hls.m3u8
    method: GET
    data_selector: xml
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: createShare
  endpoint:
    path: /rest/createShare
    method: POST
- name: getShares
  endpoint:
    path: /rest/getShares
    method: POST
- name: updateShare
  endpoint:
    path: /rest/updateShare
    method: POST
- name: stream
  endpoint:
    path: /stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: deleteBookmark
  endpoint:
    path: /deleteBookmark
    method: POST
    data_selector: subsonic-response
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: '>= 0'
      format: string
      timeOffset: '>= 0'
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getPlayQueueByIndex
  endpoint:
    path: /rest/getPlayQueueByIndex
    method: GET
    data_selector: subsonic-response
    params: {}
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.newestPodcasts.episode
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer
      format: string
      timeOffset: integer
      size: string
      estimateContentLength: boolean
      converted: boolean
- name: addChatMessage
  endpoint:
    path: /rest/addChatMessage
    method: POST
    data_selector: xml
    params:
      message: required
- name: getChatMessages
  endpoint:
    path: /rest/getChatMessages
    method: POST
    data_selector: xml
    params: {}
- name: getLyricsBySongId
  endpoint:
    path: /getLyricsBySongId
    method: POST
    data_selector: id
    params: {}
- name: stream
  endpoint:
    path: /stream
    method: GET
    data_selector: id
    params: {}
- name: getPodcastEpisode
  endpoint:
    path: /getPodcastEpisode
    method: POST
    data_selector: id
    params: {}
- name: tokenInfo
  endpoint:
    path: /tokenInfo
    method: GET
    data_selector: id
    params: {}
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: savePlayQueue
  endpoint:
    path: /rest/savePlayQueue
    method: POST
    data_selector: subsonic-response
    params:
      id: string
      current: string
      position: integer >= 0
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: binary
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: savePlayQueueByIndex
  endpoint:
    path: /rest/savePlayQueueByIndex
    method: GET
    data_selector: xml
    params:
      id: string
      currentIndex: integer >= 0
      position: integer >= 0
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: string
      maxBitRate: integer
      format: string
      timeOffset: integer
      size: string
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.playQueue.entry
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: savePlayQueueByIndex
  endpoint:
    path: /rest/savePlayQueueByIndex
    method: POST
    data_selector: subsonic-response
    params:
      id: string
      currentIndex: integer >= 0
      position: integer >= 0
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.playQueueByIndex.entry
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getAlbumInfo
  endpoint:
    path: /rest/getAlbumInfo
    method: POST
    data_selector: subsonic-response
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response.playQueueByIndex.entry
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getAlbumInfo
  endpoint:
    path: /rest/getAlbumInfo
    method: POST
    data_selector: subsonic-response
    params:
      id: required
- name: stream
  endpoint:
    path: /rest/stream
    method: GET
    data_selector: subsonic-response
    params:
      id: required
      maxBitRate: integer >= 0
      format: string
      timeOffset: integer >= 0
      size: string^[0-9]+x[0-9]+$
      estimateContentLength: boolean
      converted: boolean
- name: getSong
  endpoint:
    path: /rest/getSong
    method: GET
    data_selector: subsonic-response
    params:
      id: required
- name: createBookmark
  endpoint:
    path: /docs/endpoints/createbookmark/
    method: POST
- name: deleteBookmark
  endpoint:
    path: /docs/endpoints/deletebookmark/
    method: DELETE
- name: getBookmarks
  endpoint:
    path: /docs/endpoints/getbookmarks/
    method: GET
- name: getPlayQueue
  endpoint:
    path: /docs/endpoints/getplayqueue/
    method: GET
- name: getPlayQueueByIndex
  endpoint:
    path: /docs/endpoints/getplayqueuebyindex/
    method: GET
- name: savePlayQueue
  endpoint:
    path: /docs/endpoints/saveplayqueue/
    method: POST
- name: savePlayQueueByIndex
  endpoint:
    path: /docs/endpoints/saveplayqueuebyindex/
    method: POST
- name: getAlbum
  endpoint:
    path: /docs/endpoints/getalbum/
    method: GET
- name: getAlbumInfo
  endpoint:
    path: /docs/endpoints/getalbuminfo/
    method: GET
- name: getAlbumInfo2
  endpoint:
    path: /docs/endpoints/getalbuminfo2/
    method: GET
- name: getArtist
  endpoint:
    path: /docs/endpoints/getartist/
    method: GET
- name: getArtistInfo
  endpoint:
    path: /docs/endpoints/getartistinfo/
    method: GET
- name: getArtistInfo2
  endpoint:
    path: /docs/endpoints/getartistinfo2/
    method: GET
- name: getArtists
  endpoint:
    path: /docs/endpoints/getartists/
    method: GET
- name: getGenres
  endpoint:
    path: /docs/endpoints/getgenres/
    method: GET
- name: getIndexes
  endpoint:
    path: /docs/endpoints/getindexes/
    method: GET
- name: getMusicDirectory
  endpoint:
    path: /docs/endpoints/getmusicdirectory/
    method: GET
- name: getMusicFolders
  endpoint:
    path: /docs/endpoints/getmusicfolders/
    method: GET
- name: getPodcastEpisode
  endpoint:
    path: /docs/endpoints/getpodcastepisode/
    method: GET
- name: getSimilarSongs
  endpoint:
    path: /docs/endpoints/getsimilarsongs/
    method: GET
- name: getSimilarSongs2
  endpoint:
    path: /docs/endpoints/getsimilarsongs2/
    method: GET
- name: getSong
  endpoint:
    path: /docs/endpoints/getsong/
    method: GET
- name: getTopSongs
  endpoint:
    path: /docs/endpoints/gettopsongs/
    method: GET
- name: getVideoInfo
  endpoint:
    path: /docs/endpoints/getvideoinfo/
    method: GET
- name: getVideos
  endpoint:
    path: /docs/endpoints/getvideos/
    method: GET
- name: addChatMessage
  endpoint:
    path: /docs/endpoints/addchatmessage/
    method: POST
    data_selector: message
    params: {}
- name: getChatMessages
  endpoint:
    path: /docs/endpoints/getchatmessages/
    method: GET
    data_selector: messages
    params: {}
- name: createInternetRadioStation
  endpoint:
    path: /docs/endpoints/createinternetradiostation/
    method: POST
- name: deleteInternetRadioStation
  endpoint:
    path: /docs/endpoints/deleteinternetradiostation/
    method: DELETE
- name: getInternetRadioStations
  endpoint:
    path: /docs/endpoints/getinternetradiostations/
    method: GET
- name: updateInternetRadioStation
  endpoint:
    path: /docs/endpoints/updateinternetradiostation/
    method: PUT
- name: getAlbumList
  endpoint:
    path: /docs/endpoints/getalbumlist/
    method: GET
- name: getAlbumList2
  endpoint:
    path: /docs/endpoints/getalbumlist2/
    method: GET
- name: getNowPlaying
  endpoint:
    path: /docs/endpoints/getnowplaying/
    method: GET
- name: getRandomSongs
  endpoint:
    path: /docs/endpoints/getrandomsongs/
    method: GET
- name: getSongsByGenre
  endpoint:
    path: /docs/endpoints/getsongsbygenre/
    method: GET
- name: getStarred
  endpoint:
    path: /docs/endpoints/getstarred/
    method: GET
- name: getStarred2
  endpoint:
    path: /docs/endpoints/getstarred2/
    method: GET
- name: scrobble
  endpoint:
    path: /docs/endpoints/scrobble/
    method: GET
- name: setRating
  endpoint:
    path: /docs/endpoints/setrating/
    method: GET
- name: star
  endpoint:
    path: /docs/endpoints/star/
    method: GET
- name: unstar
  endpoint:
    path: /docs/endpoints/unstar/
    method: GET
- name: getScanStatus
  endpoint:
    path: /docs/endpoints/getscanstatus/
    method: GET
- name: startScan
  endpoint:
    path: /docs/endpoints/startscan/
    method: POST
- name: download
  endpoint:
    path: /docs/endpoints/download/
    method: GET
- name: getAvatar
  endpoint:
    path: /docs/endpoints/getavatar/
    method: GET
- name: getCaptions
  endpoint:
    path: /docs/endpoints/getcaptions/
    method: GET
- name: getCoverArt
  endpoint:
    path: /docs/endpoints/getcoverart/
    method: GET
- name: getLyrics
  endpoint:
    path: /docs/endpoints/getlyrics/
    method: GET
- name: getLyricsBySongId
  endpoint:
    path: /docs/endpoints/getlyricsbysongid/
    method: GET
- name: hls
  endpoint:
    path: /docs/endpoints/hls/
    method: GET
- name: stream
  endpoint:
    path: /docs/endpoints/stream/
    method: GET
- name: createPlaylist
  endpoint:
    path: /docs/endpoints/createplaylist/
    method: POST
- name: deletePlaylist
  endpoint:
    path: /docs/endpoints/deleteplaylist/
    method: DELETE
- name: getPlaylist
  endpoint:
    path: /docs/endpoints/getplaylist/
    method: GET
- name: getPlaylists
  endpoint:
    path: /docs/endpoints/getplaylists/
    method: GET
- name: updatePlaylist
  endpoint:
    path: /docs/endpoints/updateplaylist/
    method: PUT
- name: createPodcastChannel
  endpoint:
    path: /docs/endpoints/createpodcastchannel/
    method: POST
- name: deletePodcastChannel
  endpoint:
    path: /docs/endpoints/deletepodcastchannel/
    method: DELETE
- name: deletePodcastEpisode
  endpoint:
    path: /docs/endpoints/deletepodcastepisode/
    method: DELETE
- name: downloadPodcastEpisode
  endpoint:
    path: /docs/endpoints/downloadpodcastepisode/
    method: POST
- name: getNewestPodcasts
  endpoint:
    path: /docs/endpoints/getnewestpodcasts/
    method: GET
- name: getPodcasts
  endpoint:
    path: /docs/endpoints/getpodcasts/
    method: GET
- name: refreshPodcasts
  endpoint:
    path: /docs/endpoints/refreshpodcasts/
    method: POST
- name: search
  endpoint:
    path: /docs/endpoints/search/
    method: GET
- name: search2
  endpoint:
    path: /docs/endpoints/search2/
    method: GET
- name: search3
  endpoint:
    path: /docs/endpoints/search3/
    method: GET
- name: createShare
  endpoint:
    path: /docs/endpoints/createshare/
    method: POST
- name: deleteShare
  endpoint:
    path: /docs/endpoints/deleteshare/
    method: DELETE
- name: getShares
  endpoint:
    path: /docs/endpoints/getshares/
    method: GET
- name: updateShare
  endpoint:
    path: /docs/endpoints/updateshare/
    method: PUT
- name: getLicense
  endpoint:
    path: /docs/endpoints/getlicense/
    method: GET
- name: getOpenSubsonicExtensions
  endpoint:
    path: /docs/endpoints/getopensubsonicextensions/
    method: GET
- name: ping
  endpoint:
    path: /docs/endpoints/ping/
    method: GET
- name: tokenInfo
  endpoint:
    path: /docs/endpoints/tokeninfo/
    method: GET
- name: changePassword
  endpoint:
    path: /docs/endpoints/changepassword/
    method: GET
- name: createUser
  endpoint:
    path: /docs/endpoints/createuser/
    method: GET
- name: deleteUser
  endpoint:
    path: /docs/endpoints/deleteuser/
    method: GET
- name: getUser
  endpoint:
    path: /docs/endpoints/getuser/
    method: GET
- name: getUsers
  endpoint:
    path: /docs/endpoints/getusers/
    method: GET
- name: updateUser
  endpoint:
    path: /docs/endpoints/updateuser/
    method: GET
- name: getOpenSubsonicExtensions
  endpoint:
    path: /opensubsonic/addition/
    method: GET
- name: stream
  endpoint:
    path: /opensubsonic/stream/
    method: GET
- name: tokenInfo
  endpoint:
    path: /opensubsonic/tokeninfo/
    method: GET
- name: getLyricsBySongId
  endpoint:
    path: /docs/endpoints/getlyricsbysongid/
    method: GET
- name: getPlayQueueByIndex
  endpoint:
    path: /docs/endpoints/getplayqueuebyindex/
    method: GET
- name: getPodcastEpisode
  endpoint:
    path: /docs/endpoints/getpodcastepisode/
    method: GET
- name: savePlayQueueByIndex
  endpoint:
    path: /docs/endpoints/saveplayqueuebyindex/
    method: POST
- name: stream
  endpoint:
    path: /docs/endpoints/stream/
    method: GET
- name: tokenInfo
  endpoint:
    path: /docs/endpoints/tokeninfo/
    method: GET
- name: getAlbum
  endpoint:
    path: /getAlbum
    method: GET
- name: getArtist
  endpoint:
    path: /getArtist
    method: GET
- name: getPodcasts
  endpoint:
    path: /getPodcasts
    method: GET
- name: formPost
  endpoint:
    path: /getOpenSubsonicExtensions
    method: POST
    data_selector: extensions
- name: subsonic_response
  endpoint:
    path: /subsonic-response
    method: GET
    data_selector: subsonic-response
    params: {}
notes:
- Starting with API version 1.13.0, the recommended authentication scheme is to send
  an authentication token, calculated as a one-way salted hash of the password.
- For servers that implement API Key authentication, the recommended authentication
  is to use an API key.
- Starting with version 1.8.0, the API provides methods for accessing the media collection
  organized according to ID3 tags.
- API Key authentication required.
- Requires the use of `format=json` parameter. xml response formats are not supported
  as of the time of writing this document.
- API key authentication requires the 'apiKey' query parameter and must not include
  the 'u' parameter.
- Servers must provide a mechanism for viewing and revoking API keys.
- The API allows for media retrieval, searching, and playlist management.
- The user must be authorized for Podcast administration
- The API allows you to call methods that respond in JSON.
- The API aims for consistent results across all servers, ensuring that every request
  produces the same outcome.
- The user must be authorized for Podcast administration.
- Users need admin privileges to delete an internet radio station.
- User must be authorized for Podcast administration.
- User must be authorized to share.
- The user must be authorized to share.
- User must be authorized for Podcast administration to add a new Podcast channel.
- User must be authorized to share files.
- Only users with admin privileges can delete an internet radio station.
- User must be authorized for Podcast administration to use certain endpoints.
- User must be authorized to share to create a public share URL.
- getOpenSubsonicExtensions must be publicly accessible.
- The user must be authorized for Podcast administration to add a new Podcast channel.
- The user must be authorized to share files with anyone.
- Subsonic API supports various endpoints to manage audio content.
- Returns songs in a given genre.
- Returns starred songs, albums and artists.
- The user must be authorized to share
- The API returns results in JSON format
- Requires setup of connected app in server
- Some objects may return nulls in deeply nested fields
- The API uses a versioning system, ensure to specify `v` parameter in requests.
- Returns starred songs, albums and artists
- Similar to getStarred, but organizes music according to ID3 tags
- User must be authorized to share files with anyone.
- Uses API key for authentication.
- All methods return XML documents conforming to the subsonic-rest-api.xsd schema.
- Servers must support an empty query and return all the data to allow clients to
  properly access all the media information for offline sync.
- Requires the use of `format=json` parameter. xml response formats are not supported.
- Some undocumented typo fixes
- Requires OpenSubsonic extension name `formPost` (As returned by `getOpenSubsonicExtensions`)
- Requires OpenSubsonic extension name `formPost` for certain endpoints.
- OpenSubsonic servers must not count access to the stream endpoint as a play and
  increase playcount.
- Clients can use the Scrobble endpoint to indicate that a media is played ensuring
  proper data in all cases.
- OpenSubsonic servers must not count access to this endpoint as a play and increase
  playcount.
- If the server supports the Transcode Offset extension, it must accept the timeOffset
  parameter for music too.
- If the server supports the Transcode Offset extension, then it must accept the timeOffset
  parameter for music too.
- OpenSubsonic servers must not count access to the stream endpoint as a play.
- Add support for synchronized lyrics, multiple languages, and retrieval by song ID.
- Add support for retrieving individual podcast episode metadata.
- Add support for specifying and querying the play queue with index.
errors:
- '401 Unauthorized: Recheck authentication parameters.'
- '0: A generic error.'
- '10: Required parameter is missing.'
- '20: Incompatible Subsonic REST protocol version. Client must upgrade.'
- '30: Incompatible Subsonic REST protocol version. Server must upgrade.'
- '40: Wrong username or password.'
- '41: Token authentication not supported for LDAP users.'
- '42: Provided authentication mechanism not supported.'
- '43: Multiple conflicting authentication mechanisms provided.'
- '44: Invalid API key.'
- '50: User is not authorized for the given operation.'
- '60: The trial period for the Subsonic server is over. Please upgrade to Subsonic
  Premium. Visit subsonic.org for details.'
- '70: The requested data was not found.'
- '41: Return error if they do not support Subsonic 1.13.0 new authentication system
  while advertising a version > 1.13.0'
- '403 Forbidden: Check API Key or permissions'
- '404 Not Found: Verify endpoint path'
- '43: Multiple conflicting authentication mechanisms provided'
- '42: Provided authentication mechanism not supported'
- '44: Invalid API key'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: An unexpected error occurred.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '60: The trial period for the Subsonic server is over. Please upgrade to Subsonic
  Premium.'
- '401 Unauthorized: User is not authorized.'
- '400 Bad Request: Invalid parameters.'
- '401 Unauthorized: Check user permissions.'
- '400 Bad Request: Check required parameters.'
- '401 Unauthorized: The user must be authorized.'
- '401 Unauthorized: The request requires user authentication.'
- '403 Forbidden: The server understood the request, but refuses to authorize it.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check user permissions and authentication'
- '401 Unauthorized: Check user authentication and permissions.'
- '404 Not Found: Ensure the resource ID is correct.'
- '401 Unauthorized: User does not have permission'
- '404 Not Found: Check the endpoint path'
- '500 Internal Server Error: Server encountered an error'
- '401 Unauthorized: Check user credentials.'
- '405 - Method Not Allowed: Indicates when they are not supported.'
- '40: Wrong username or password'
- '41: Token authentication not supported for LDAP users'
- '401 Unauthorized: User must be authenticated to perform this action.'
- '401 Unauthorized: Check API Key.'
- '44: Invalid token'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '405: HTTP form POST (`formPost`) Extension not supported'
- '200: Success (binary) or error (xml) response'
- '405: HTTP form POST (formPost) Extension not supported'
- 200 Success
- error (xml) response
- 200 Success (binary) or error (xml) response
- '404: Extension not supported'
- 405 HTTP form POST (formPost) Extension not supported
- '200: Successful or failed response'
- '200: Success'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - apiKeyAuth
  - username
  - legacyPassword
  - token
  - salt
  - username/legacyPassword
  - username/token
client:
  base_url: https://opensubsonic.netlify.app
  headers:
    Accept: application/json
source_metadata: null
