resources:
- name: api_keys
  endpoint:
    path: /v1/api-keys
    method: GET
    data_selector: apiKeys
- name: generate_api_key
  endpoint:
    path: /v1/api-keys
    method: POST
- name: delete_api_key
  endpoint:
    path: /v1/api-keys/{name}
    method: DELETE
- name: gpu_cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: products
- name: virtual_machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: products
- name: bare_metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: products
- name: clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: products
- name: gpu_cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: records
- name: virtual_machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: records
- name: bare_metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: records
- name: clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: records
- name: enterprise
  endpoint:
    path: /enterprise
    method: GET
    data_selector: records
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: products
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: products
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: products
- name: Clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: products
- name: Enterprise
  endpoint:
    path: /enterprise
    method: GET
    data_selector: products
- name: Documentation
  endpoint:
    path: /docs
    method: GET
    data_selector: resources
- name: API reference
  endpoint:
    path: /docs/rest-api
    method: GET
    data_selector: resources
- name: Tutorials
  endpoint:
    path: /docs/tutorials
    method: GET
    data_selector: resources
- name: bare_metal_servers
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: servers
    params: {}
- name: gpu_cloud_instances
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: instances
    params: {}
- name: virtual_machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: machines
    params: {}
- name: clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: clusters
    params: {}
- name: object_storage
  endpoint:
    path: /docs/object-storage
    method: GET
    data_selector: data
    params: {}
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
- name: Clusters
  endpoint:
    path: /products/clusters
    method: GET
- name: Enterprise
  endpoint:
    path: /enterprise
    method: GET
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: products
    params: {}
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: products
    params: {}
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: products
    params: {}
- name: Object storage
  endpoint:
    path: /products/object-storage
    method: GET
    data_selector: products
    params: {}
- name: data_centers
  endpoint:
    path: /data-centers
    method: GET
- name: NVIDIA H100
  endpoint:
    path: /products/gpu-cloud/nvidia-h100
    method: GET
    data_selector: records
    params: {}
- name: nvidia_b200
  endpoint:
    path: /products/gpu-cloud/nvidia-b200
    method: GET
    data_selector: specifications
    params: {}
- name: NVIDIA GB200 NVL72
  endpoint:
    path: /products/gpu-cloud/nvidia-gb200-nvl72
    method: GET
    data_selector: specifications
    params: {}
- name: NVIDIA A800
  endpoint:
    path: /products/gpu-cloud/nvidia-a800
    method: GET
    data_selector: specifications
    params: {}
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
- name: Clusters
  endpoint:
    path: /products/clusters
    method: GET
- name: Enterprise
  endpoint:
    path: /enterprise
    method: GET
- name: NVIDIA B100
  endpoint:
    path: /products/gpu-cloud/nvidia-b100
    method: GET
- name: nvidia_a40
  endpoint:
    path: /products/gpu-cloud/gpus/nvidia-a40
    method: GET
    data_selector: data
    params: {}
- name: nvidia_l40s
  endpoint:
    path: /products/gpu-cloud/nvidia-l40s
    method: GET
    data_selector: records
- name: nvidia_a100
  endpoint:
    path: /products/gpu-cloud/nvidia-a100
    method: GET
    data_selector: records
- name: NVIDIA V100
  endpoint:
    path: /products/gpu-cloud/nvidia-v100
    method: GET
    data_selector: details
    params: {}
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: products
    params: {}
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: products
    params: {}
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: products
    params: {}
- name: Clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: products
    params: {}
- name: Enterprise
  endpoint:
    path: /enterprise
    method: GET
    data_selector: enterprise_info
    params: {}
- name: GPU cloud
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: products
    params: {}
- name: Virtual machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: products
    params: {}
- name: Bare metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: products
    params: {}
- name: Clusters
  endpoint:
    path: /products/clusters
    method: GET
    data_selector: products
    params: {}
- name: Enterprise
  endpoint:
    path: /enterprise
    method: GET
    data_selector: enterprise
    params: {}
- name: NVIDIA RTX A5000
  endpoint:
    path: /products/gpu-cloud/nvidia-rtx-a5000
    method: GET
    data_selector: records
- name: NVIDIA RTX A6000
  endpoint:
    path: /products/gpu-cloud/nvidia-rtx-a6000
    method: GET
    data_selector: records
    params: {}
- name: gpu_instances
  endpoint:
    path: /products/gpu-cloud
    method: GET
    data_selector: instances
    params: {}
- name: virtual_machines
  endpoint:
    path: /products/virtual-machines
    method: GET
    data_selector: instances
    params: {}
- name: bare_metal
  endpoint:
    path: /products/bare-metal
    method: GET
    data_selector: instances
    params: {}
- name: api_keys
  endpoint:
    path: /rest-api/api-keys
    method: GET
- name: billing
  endpoint:
    path: /rest-api/billing
    method: GET
- name: clusters
  endpoint:
    path: /rest-api/clusters
    method: GET
- name: disks
  endpoint:
    path: /rest-api/disks
    method: GET
- name: machines
  endpoint:
    path: /rest-api/machines
    method: GET
- name: networks
  endpoint:
    path: /rest-api/networks
    method: GET
- name: object_storage
  endpoint:
    path: /rest-api/object-storage
    method: GET
- name: projects
  endpoint:
    path: /rest-api/projects
    method: GET
- name: ssh_keys
  endpoint:
    path: /rest-api/ssh-keys
    method: GET
- name: users
  endpoint:
    path: /rest-api/users
    method: GET
- name: volumes
  endpoint:
    path: /rest-api/volumes
    method: GET
- name: virtual_machines
  endpoint:
    path: /rest-api/virtual-machines
    method: GET
- name: jupyterlab
  endpoint:
    path: /apps/jupyterlab
    method: GET
    data_selector: records
    params: {}
- name: jupyterhub
  endpoint:
    path: /apps/jupyterhub
    method: GET
    data_selector: records
    params: {}
- name: ollama
  endpoint:
    path: /apps/ollama
    method: GET
    data_selector: records
    params: {}
- name: vllm
  endpoint:
    path: /apps/vllm
    method: GET
    data_selector: records
    params: {}
- name: dify
  endpoint:
    path: /apps/dify
    method: GET
    data_selector: records
    params: {}
- name: openmanus
  endpoint:
    path: /apps/openmanus
    method: GET
    data_selector: records
    params: {}
- name: DeepSeek-R1
  endpoint:
    path: /services/data/vXX.X/sobjects/DeepSeek-R1
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: '@headlessui/vue'
  endpoint:
    path: https://github.com/tailwindlabs/headlessui.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxtjs/web-vitals'
  endpoint:
    path: https://github.com/nuxt-modules/web-vitals.git
    method: GET
    data_selector: records
    params: {}
- name: '@observablehq/plot'
  endpoint:
    path: https://github.com/observablehq/plot.git
    method: GET
    data_selector: records
    params: {}
- name: '@vueuse/router'
  endpoint:
    path: https://github.com/vueuse/vueuse.git
    method: GET
    data_selector: records
    params: {}
- name: contentful
  endpoint:
    path: https://github.com/contentful/contentful.js.git
    method: GET
    data_selector: records
    params: {}
- name: d3
  endpoint:
    path: https://github.com/d3/d3.git
    method: GET
    data_selector: records
    params: {}
- name: h3-zod
  endpoint:
    path: https://github.com/wobsoriano/h3-zod.git
    method: GET
    data_selector: records
    params: {}
- name: reka-ui
  endpoint:
    path: https://github.com/unovue/reka-ui.git
    method: GET
    data_selector: records
    params: {}
- name: zod
  endpoint:
    path: https://github.com/colinhacks/zod.git
    method: GET
    data_selector: records
    params: {}
- name: '@antfu/eslint-config'
  endpoint:
    path: https://github.com/antfu/eslint-config.git
    method: GET
    data_selector: records
    params: {}
- name: '@gtm-support/vue-gtm'
  endpoint:
    path: https://github.com/gtm-support/vue-gtm.git
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/bi'
  endpoint:
    path: https://icon-sets.iconify.design/bi/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/fa6-brands'
  endpoint:
    path: https://icon-sets.iconify.design/fa6-brands/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/heroicons'
  endpoint:
    path: https://icon-sets.iconify.design/heroicons/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/heroicons-outline'
  endpoint:
    path: https://icon-sets.iconify.design/heroicons-outline/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/heroicons-solid'
  endpoint:
    path: https://icon-sets.iconify.design/heroicons-solid/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/iconoir'
  endpoint:
    path: https://icon-sets.iconify.design/iconoir/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/mdi'
  endpoint:
    path: https://icon-sets.iconify.design/mdi/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/simple-icons'
  endpoint:
    path: https://icon-sets.iconify.design/simple-icons/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/solar'
  endpoint:
    path: https://icon-sets.iconify.design/solar/
    method: GET
    data_selector: records
    params: {}
- name: '@iconify-json/twemoji'
  endpoint:
    path: https://icon-sets.iconify.design/twemoji/
    method: GET
    data_selector: records
    params: {}
- name: '@nuxt/content'
  endpoint:
    path: https://github.com/nuxt/content.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxt/devtools'
  endpoint:
    path: https://github.com/nuxt/devtools.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxt/eslint'
  endpoint:
    path: https://github.com/nuxt/eslint.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxt/fonts'
  endpoint:
    path: https://github.com/nuxt/fonts.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxt/image'
  endpoint:
    path: https://github.com/nuxt/image.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxtjs/i18n'
  endpoint:
    path: https://github.com/nuxt-modules/i18n.git
    method: GET
    data_selector: records
    params: {}
- name: '@nuxtjs/seo'
  endpoint:
    path: https://github.com/harlan-zw/nuxt-seo.git
    method: GET
    data_selector: records
    params: {}
- name: '@stefanobartoletti/nuxt-social-share'
  endpoint:
    path: https://github.com/stefanobartoletti/nuxt-social-share.git
    method: GET
    data_selector: records
    params: {}
- name: '@types/d3'
  endpoint:
    path: https://github.com/DefinitelyTyped/DefinitelyTyped.git
    method: GET
    data_selector: records
    params: {}
- name: '@types/node'
  endpoint:
    path: https://github.com/DefinitelyTyped/DefinitelyTyped.git
    method: GET
    data_selector: records
    params: {}
- name: '@types/rss'
  endpoint:
    path: https://github.com/DefinitelyTyped/DefinitelyTyped.git
    method: GET
    data_selector: records
    params: {}
- name: '@unocss/eslint-config'
  endpoint:
    path: https://github.com/unocss/unocss.git
    method: GET
    data_selector: records
    params: {}
- name: '@vercel/kv'
  endpoint:
    path: https://github.com/vercel/storage.git
    method: GET
    data_selector: records
    params: {}
- name: '@vueuse/core'
  endpoint:
    path: https://github.com/vueuse/vueuse.git
    method: GET
    data_selector: records
    params: {}
- name: decimal.js
  endpoint:
    path: https://github.com/MikeMcl/decimal.js.git
    method: GET
    data_selector: records
    params: {}
- name: eslint
  endpoint:
    path: https://github.com/eslint/eslint.git
    method: GET
    data_selector: records
    params: {}
- name: eslint-plugin-format
  endpoint:
    path: https://github.com/antfu/eslint-plugin-format.git
    method: GET
    data_selector: records
    params: {}
- name: nuxt
  endpoint:
    path: https://github.com/nuxt/nuxt.git
    method: GET
    data_selector: records
    params: {}
- name: nuxt-aos
  endpoint:
    path: https://github.com/egidiusmengelberg/nuxt-aos.git
    method: GET
    data_selector: records
    params: {}
- name: posthog-js
  endpoint:
    path: https://github.com/PostHog/posthog-js.git
    method: GET
    data_selector: records
    params: {}
- name: rss
  endpoint:
    path: ssh://git@github.com/dylang/node-rss.git
    method: GET
    data_selector: records
    params: {}
- name: ts-node
  endpoint:
    path: git://github.com/TypeStrong/ts-node.git
    method: GET
    data_selector: records
    params: {}
- name: typescript
  endpoint:
    path: https://github.com/microsoft/TypeScript.git
    method: GET
    data_selector: records
    params: {}
- name: uuid
  endpoint:
    path: https://github.com/uuidjs/uuid.git
    method: GET
    data_selector: records
    params: {}
- name: vue-eslint-parser
  endpoint:
    path: https://github.com/vuejs/vue-eslint-parser.git
    method: GET
    data_selector: records
    params: {}
- name: vue-tsc
  endpoint:
    path: https://github.com/vuejs/language-tools.git
    method: GET
    data_selector: records
    params: {}
- name: model_inference
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: appId
    params: {}
- name: pull_model
  endpoint:
    path: /api/pull
    method: POST
    data_selector: model
- name: generate_completion
  endpoint:
    path: /api/generate
    method: POST
    data_selector: completion
- name: completions
  endpoint:
    path: /completions
    method: POST
    data_selector: choices
- name: billing
  endpoint:
    path: /docs/billing
    method: GET
    data_selector: credit balance
    params: {}
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
    data_selector: records
- name: disks
  endpoint:
    path: /docs/rest-api/disks
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /docs/rest-api/images
    method: GET
    data_selector: records
- name: networks
  endpoint:
    path: /docs/rest-api/networks
    method: GET
    data_selector: records
- name: security_groups
  endpoint:
    path: /docs/rest-api/security-groups
    method: GET
    data_selector: records
- name: virtual_machine
  endpoint:
    path: /api/virtual-machines
    method: POST
- name: virtual_machine
  endpoint:
    path: /docs/virtual-machines
    method: GET
    data_selector: virtual_machines
    params: {}
- name: disks
  endpoint:
    path: /docs/rest-api/disks
    method: GET
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
- name: disks
  endpoint:
    path: /docs/disks
    method: GET
- name: disks
  endpoint:
    path: /docs/rest-api/disks
    method: GET
- name: create_image
  endpoint:
    path: /docs/images/create-an-image
    method: POST
- name: networks
  endpoint:
    path: /docs/rest-api/networks
    method: GET
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
- name: create_network
  endpoint:
    path: /create-a-network
    method: POST
- name: networks
  endpoint:
    path: /docs/rest-api/networks
    method: GET
    data_selector: networks
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
    data_selector: virtualMachines
- name: security_group
  endpoint:
    path: /docs/security-groups/create-a-security-group
    method: GET
- name: managing_rules
  endpoint:
    path: /docs/security-groups/managing-security-group-rules
    method: GET
- name: security_group
  endpoint:
    path: /create-security-group
    method: POST
    data_selector: securityGroup
    params: {}
- name: security_group_rule
  endpoint:
    path: /api/security-group/rules
    method: POST
    data_selector: rules
    params: {}
- name: create_user
  endpoint:
    path: /docs/object-storage/create-a-user
    method: GET
- name: create_bucket
  endpoint:
    path: /docs/object-storage/create-a-bucket
    method: GET
- name: s3cmd
  endpoint:
    path: /docs/object-storage/command-line-tools
    method: GET
- name: create_user
  endpoint:
    path: /object-storage/create-a-user
    method: POST
    data_selector: user
- name: view_users_keys
  endpoint:
    path: /object-storage/view-users-keys
    method: GET
    data_selector: api_keys
- name: edit_user_settings
  endpoint:
    path: /object-storage/edit-user-settings
    method: PUT
    data_selector: user_settings
- name: create_bucket
  endpoint:
    path: /object-storage/create-a-bucket
    method: POST
    data_selector: bucket
- name: bucket
  endpoint:
    path: /object-storage/buckets
    method: POST
    data_selector: bucket
    params: {}
- name: folder
  endpoint:
    path: /object-storage/folders
    method: POST
    data_selector: folder
    params: {}
- name: file_upload
  endpoint:
    path: /object-storage/files
    method: POST
    data_selector: file
    params: {}
- name: bare_metal
  endpoint:
    path: /docs/bare-metal
    method: GET
    data_selector: features
    params: {}
- name: bare_metal_machine
  endpoint:
    path: /bare-metal
    method: POST
    data_selector: machine
    params:
      commitment: 1, 3, 6, 12, 24, 36 and 60 month commitment
- name: bare_metal_machine
  endpoint:
    path: /bare-metal
    method: POST
    data_selector: configuration
- name: clusters
  endpoint:
    path: /docs/rest-api/clusters
    method: GET
- name: clusters
  endpoint:
    path: /docs/rest-api/clusters
    method: GET
- name: machines
  endpoint:
    path: /docs/rest-api/machines
    method: GET
- name: clusters
  endpoint:
    path: /docs/rest-api/clusters
    method: GET
    data_selector: records
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
    data_selector: records
- name: disks
  endpoint:
    path: /docs/rest-api/disks
    method: GET
    data_selector: records
- name: cluster_machines
  endpoint:
    path: /docs/clusters/manage-a-cluster
    method: GET
- name: volumes
  endpoint:
    path: /docs/rest-api/volumes
    method: GET
    data_selector: records
    params: {}
- name: attach_volume
  endpoint:
    path: /docs/volumes/attach-a-volume-to-a-cluster-machine
    method: POST
- name: mount_volume
  endpoint:
    path: /docs/volumes/mounting-a-volume
    method: POST
- name: unmount_volume
  endpoint:
    path: /docs/volumes/unmounting-the-volume
    method: POST
- name: volumes
  endpoint:
    path: /docs/volumes
    method: GET
    data_selector: volumes
- name: ssh_keys
  endpoint:
    path: /rest-api/ssh-keys
    method: GET
    data_selector: sshKeys
- name: available_os_images
  endpoint:
    path: /docs/rest-api/images
    method: GET
    data_selector: images
- name: data_centers
  endpoint:
    path: /docs/rest-api/data-centers
    method: GET
    data_selector: dataCenters
- name: regions
  endpoint:
    path: /docs/rest-api/regions
    method: GET
    data_selector: regions
- name: virtual_machine_types
  endpoint:
    path: /docs/rest-api/machines
    method: GET
    data_selector: machineTypes
- name: virtual_machine
  endpoint:
    path: /virtual-machines
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
- name: clusters
  endpoint:
    path: /clusters
    method: GET
    data_selector: records
- name: disks
  endpoint:
    path: /disks
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: records
- name: networks
  endpoint:
    path: /networks
    method: GET
    data_selector: records
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: volumes
  endpoint:
    path: /volumes
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: virtual_machines
  endpoint:
    path: /virtual-machines
    method: GET
    data_selector: virtualMachines
- name: billing_accounts
  endpoint:
    path: /v1/billing-accounts
    method: GET
    data_selector: billingAccounts
    params:
      pageToken: string
      pageSize: integer
- name: create_billing_account
  endpoint:
    path: /v1/billing-accounts
    method: POST
    data_selector: ''
    params: {}
- name: outstanding_invoices
  endpoint:
    path: /v1/billing-accounts/invoices/outstanding
    method: GET
    data_selector: invoices
    params: {}
- name: spend_details
  endpoint:
    path: /v1/billing-accounts/{billingAccountId}/spend/details
    method: GET
    data_selector: spend
    params:
      billingAccountId: string
      startTime: string
      endTime: string
- name: get_billing_account
  endpoint:
    path: /v1/billing-accounts/{id}
    method: GET
    data_selector: ''
    params:
      id: string
- name: delete_billing_account
  endpoint:
    path: /v1/billing-accounts/{id}
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: billing_account
  endpoint:
    path: /v1/billing-accounts/{id}
    method: PATCH
    data_selector: billingAccount
    params: {}
- name: credit
  endpoint:
    path: /v1/billing-accounts/{id}/credit
    method: POST
    data_selector: paymentIntent
    params: {}
- name: credit_balance_transactions
  endpoint:
    path: /v1/billing-accounts/{id}/credit-balance-transactions
    method: GET
    data_selector: creditBalanceTransactions
    params: {}
- name: checkout_session
  endpoint:
    path: /v1/billing-accounts/{id}/credit-checkout-session
    method: POST
    data_selector: null
    params: {}
- name: billing_account_details
  endpoint:
    path: /v1/billing-accounts/{id}/details
    method: GET
    data_selector: billingAccount
    params: {}
- name: payment_methods
  endpoint:
    path: /v1/billing-accounts/{id}/payment-methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: projects
  endpoint:
    path: /v1/billing-accounts/{id}/projects
    method: GET
    data_selector: projects
    params: {}
- name: transactions
  endpoint:
    path: /v1/billing-accounts/{id}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: invoices
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: invoices
- name: cluster_machine_type
  endpoint:
    path: /v1/clusters/data-centers/{dataCenterId}/machine-types/{machineTypeId}
    method: GET
- name: list_cluster_machine_types
  endpoint:
    path: /v1/clusters/machine-types
    method: GET
- name: delete_cluster_machine
  endpoint:
    path: /v1/projects/{projectId}/cluster-machines/{id}
    method: DELETE
- name: update_cluster_machine
  endpoint:
    path: /v1/projects/{projectId}/cluster-machines/{id}
    method: PATCH
- name: reboot_cluster_machine
  endpoint:
    path: /v1/projects/{projectId}/cluster-machines/{id}:reboot
    method: POST
- name: rename_cluster_machine
  endpoint:
    path: /v1/projects/{projectId}/cluster-machines/{id}:rename
    method: POST
- name: list_clusters
  endpoint:
    path: /v1/projects/{projectId}/clusters
    method: GET
- name: create_cluster
  endpoint:
    path: /v1/projects/{projectId}/clusters
    method: POST
- name: get_cluster
  endpoint:
    path: /v1/projects/{projectId}/clusters/{id}
    method: GET
- name: cluster
  endpoint:
    path: /v1/projects/{projectId}/clusters/{id}
    method: GET
    data_selector: records
- name: delete_cluster
  endpoint:
    path: /v1/projects/{projectId}/clusters/{id}
    method: DELETE
    data_selector: records
- name: update_cluster
  endpoint:
    path: /v1/projects/{projectId}/clusters/{id}
    method: PATCH
    data_selector: records
- name: disks
  endpoint:
    path: /v1/projects/{projectId}/disks
    method: GET
    data_selector: disks
    params:
      pageNumber: integer
      pageSize: integer
      dataCenterId: string
- name: create_disk
  endpoint:
    path: /v1/projects/{projectId}/disks
    method: POST
    data_selector: disk
    params: {}
- name: get_disk
  endpoint:
    path: /v1/projects/{projectId}/disks/{id}
    method: GET
    data_selector: disk
    params: {}
- name: delete_disk
  endpoint:
    path: /v1/projects/{projectId}/disks/{id}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: resize_vm_disk
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/disks
    method: PATCH
    data_selector: 'null'
    params: {}
- name: list_private_vm_images
  endpoint:
    path: /v1/projects/{projectId}/images
    method: GET
    data_selector: images
- name: create_private_vm_image
  endpoint:
    path: /v1/projects/{projectId}/images
    method: POST
    data_selector: image
- name: get_private_vm_image
  endpoint:
    path: /v1/projects/{projectId}/images/{id}
    method: GET
    data_selector: image
- name: delete_private_vm_image
  endpoint:
    path: /v1/projects/{projectId}/images/{id}
    method: DELETE
- name: update_private_vm_image
  endpoint:
    path: /v1/projects/{projectId}/images/{id}
    method: POST
- name: machine_types
  endpoint:
    path: /v1/machines-types
    method: GET
    data_selector: machineTypes
    params: {}
- name: operating_systems
  endpoint:
    path: /v1/machines/operating-systems
    method: GET
    data_selector: images
    params: {}
- name: machines_in_project
  endpoint:
    path: /v1/projects/{projectId}/machines
    method: GET
    data_selector: machines
    params: {}
- name: release_machine
  endpoint:
    path: /v1/projects/{projectId}/machines/{id}/undeploy
    method: POST
    data_selector: '{}'
- name: networks
  endpoint:
    path: /v1/projects/{projectId}/networks
    method: GET
    data_selector: networks
    params:
      pageNumber: integer
      pageSize: integer
- name: create_network
  endpoint:
    path: /v1/projects/{projectId}/networks
    method: POST
    data_selector: network
    params: {}
- name: get_network
  endpoint:
    path: /v1/projects/{projectId}/networks/{id}
    method: GET
    data_selector: network
    params: {}
- name: delete_network
  endpoint:
    path: /v1/projects/{projectId}/networks/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: start_network
  endpoint:
    path: /v1/projects/{projectId}/networks/{id}/start
    method: POST
    data_selector: ''
    params: {}
- name: stop_network
  endpoint:
    path: /v1/projects/{projectId}/networks/{id}/stop
    method: POST
    data_selector: ''
    params: {}
- name: security_groups
  endpoint:
    path: /v1/projects/{projectId}/security-groups
    method: GET
    data_selector: securityGroups
    params:
      pageNumber: integer
      pageSize: integer
- name: create_security_group
  endpoint:
    path: /v1/projects/{projectId}/security-groups
    method: POST
    data_selector: securityGroup
    params: {}
- name: get_security_group
  endpoint:
    path: /v1/projects/{projectId}/security-groups/{id}
    method: GET
    data_selector: securityGroup
    params: {}
- name: delete_security_group
  endpoint:
    path: /v1/projects/{projectId}/security-groups/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_security_group
  endpoint:
    path: /v1/projects/{projectId}/security-groups/{id}
    method: PATCH
    data_selector: securityGroup
    params: {}
- name: buckets
  endpoint:
    path: /v1/projects/{projectId}/object-storage/buckets
    method: GET
    data_selector: buckets
    params: {}
- name: bucket_details
  endpoint:
    path: /v1/projects/{projectId}/object-storage/buckets/{dataCenterId}/{id}
    method: GET
    data_selector: bucket_details
    params: {}
- name: session_key
  endpoint:
    path: /v1/projects/{projectId}/object-storage/session-key/{dataCenterId}
    method: GET
    data_selector: session_key
    params: {}
- name: users
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users
    method: GET
    data_selector: users
    params: {}
- name: create_user
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users/{dataCenterId}
    method: POST
    data_selector: create_user
    params: {}
- name: user_details
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users/{dataCenterId}/{id}
    method: GET
    data_selector: user_details
    params: {}
- name: delete_user
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users/{dataCenterId}/{id}
    method: DELETE
    data_selector: delete_user
    params: {}
- name: generate_access_key
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users/{dataCenterId}/{id}
    method: POST
    data_selector: generate_access_key
    params: {}
- name: delete_user_key
  endpoint:
    path: /v1/projects/{projectId}/object-storage/users/{dataCenterId}/{id}/keys/{accessKey}
    method: DELETE
    data_selector: delete_user_key
    params: {}
- name: projects
  endpoint:
    path: /v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: ssh_keys
  endpoint:
    path: /v1/project/{projectId}/ssh-keys
    method: GET
    data_selector: sshKeys
    params: {}
- name: resources_search
  endpoint:
    path: /v1/resources/search
    method: GET
- name: ssh_keys
  endpoint:
    path: /v1/ssh-keys
    method: GET
    data_selector: sshKeys
- name: ssh_key_create
  endpoint:
    path: /v1/ssh-keys
    method: POST
    data_selector: ''
    params: {}
- name: ssh_key_get
  endpoint:
    path: /v1/ssh-keys/{id}
    method: GET
    data_selector: ''
    params: {}
- name: ssh_key_delete
  endpoint:
    path: /v1/ssh-keys/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_auth
  endpoint:
    path: /v1/auth
    method: GET
    data_selector: records
- name: identity_verification_session
  endpoint:
    path: /v1/auth/create-identity-verification-session
    method: GET
    data_selector: records
- name: virtual_machine_types
  endpoint:
    path: /v1/data-centers/{dataCenterId}/virtual-machine-types
    method: GET
    data_selector: virtualMachineTypes
- name: virtual_machine_type
  endpoint:
    path: /v1/data-centers/{dataCenterId}/virtual-machine-types/{virtualMachineType}
    method: GET
    data_selector: vcpuUsed
- name: live_utilization
  endpoint:
    path: /v1/data-centers/{dataCenterId}/virtual-machine-types/{virtualMachineType}/live-utilization
    method: GET
    data_selector: utilization
- name: count_vms
  endpoint:
    path: /v1/projects/{projectId}/count-vms
    method: GET
    data_selector: count
- name: attach_disk
  endpoint:
    path: /v1/projects/{projectId}/disk/{id}/attach
    method: PATCH
- name: detach_disk
  endpoint:
    path: /v1/projects/{projectId}/disk/{id}/detach
    method: PUT
- name: create_virtual_machine
  endpoint:
    path: /v1/projects/{projectId}/vm
    method: POST
- name: update_vm_authorized_ssh_keys
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/authorized-ssh-keys
    method: POST
- name: commit_vm
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/commit
    method: POST
- name: update_vm_expire_time
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/expire-time
    method: POST
    data_selector: expireTime
    params: {}
- name: update_vm_metadata
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/metadata
    method: POST
    data_selector: metadata
    params: {}
- name: update_vm_password
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/password
    method: POST
    data_selector: password
    params: {}
- name: attach_security_group
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/security-group/attach
    method: PATCH
    data_selector: securityGroupId
    params: {}
- name: detach_security_group
  endpoint:
    path: /v1/projects/{projectId}/vm/{id}/security-group/detach
    method: PATCH
    data_selector: securityGroupId
    params: {}
- name: list_vms
  endpoint:
    path: /v1/projects/{projectId}/vms
    method: GET
    data_selector: VMs
    params: {}
- name: get_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}
    method: GET
    data_selector: VM
    params: {}
- name: connect_via_vnc
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/connect
    method: GET
    data_selector: connectUrl
    params: {}
- name: monitor_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/monitor
    method: GET
    data_selector: items
    params: {}
- name: reboot_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/reboot
    method: POST
    data_selector: null
    params: {}
- name: resize_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/resize
    method: POST
- name: start_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/start
    method: POST
- name: stop_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/stop
    method: POST
- name: terminate_vm
  endpoint:
    path: /v1/projects/{projectId}/vms/{id}/terminate
    method: POST
- name: list_data_centers
  endpoint:
    path: /v1/vms/data-centers
    method: GET
- name: get_machine_type
  endpoint:
    path: /v1/vms/data-centers/{dataCenterId}/machine_types/{machineTypeId}
    method: GET
- name: list_gpu_models
  endpoint:
    path: /v1/vms/gpu-models
    method: GET
- name: list_machine_types
  endpoint:
    path: /v1/vms/machine-types
    method: GET
- name: list_public_images
  endpoint:
    path: /v1/vms/public-images
    method: GET
- name: volumes
  endpoint:
    path: /v1/projects/{projectId}/volumes
    method: GET
    data_selector: volumes
    params:
      pageNumber: integer
      pageSize: integer
- name: create_volume
  endpoint:
    path: /v1/projects/{projectId}/volumes
    method: POST
    data_selector: projectId
    params: {}
- name: get_volume
  endpoint:
    path: /v1/projects/{projectId}/volumes/{id}
    method: GET
    data_selector: projectId
    params: {}
- name: delete_volume
  endpoint:
    path: /v1/projects/{projectId}/volumes/{id}
    method: DELETE
    data_selector: projectId
    params: {}
- name: update_volume
  endpoint:
    path: /v1/projects/{projectId}/volumes/{id}
    method: PATCH
    data_selector: projectId
    params: {}
- name: list_volume_prices
  endpoint:
    path: /v1/volumes/prices
    method: GET
    data_selector: prices
    params:
      pageNumber: integer
      pageSize: integer
- name: billing
  endpoint:
    path: /docs/billing
    method: GET
    data_selector: records
- name: virtual_machines
  endpoint:
    path: /docs/virtual-machines
    method: GET
    data_selector: records
- name: disks
  endpoint:
    path: /docs/disks
    method: GET
    data_selector: records
- name: images
  endpoint:
    path: /docs/images
    method: GET
    data_selector: records
- name: networks
  endpoint:
    path: /docs/networks
    method: GET
    data_selector: records
- name: security_groups
  endpoint:
    path: /docs/security-groups
    method: GET
    data_selector: records
- name: object_storage
  endpoint:
    path: /docs/object-storage
    method: GET
    data_selector: records
- name: bare_metal
  endpoint:
    path: /docs/bare-metal
    method: GET
    data_selector: records
- name: clusters
  endpoint:
    path: /docs/clusters
    method: GET
    data_selector: records
- name: volumes
  endpoint:
    path: /docs/volumes
    method: GET
    data_selector: records
- name: virtual_machines
  endpoint:
    path: /api/v1/virtual_machines
    method: GET
    data_selector: data
    params: {}
- name: disks
  endpoint:
    path: /api/v1/disks
    method: GET
    data_selector: data
    params: {}
- name: networks
  endpoint:
    path: /api/v1/networks
    method: GET
    data_selector: data
    params: {}
- name: object_storage
  endpoint:
    path: /api/v1/object_storage
    method: GET
    data_selector: data
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/permissions
    method: GET
    data_selector: data
    params: {}
- name: ssh_keys
  endpoint:
    path: /api/v1/ssh_keys
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /docs/rest-api/projects
    method: GET
- name: billing
  endpoint:
    path: /docs/rest-api/billing
    method: GET
- name: virtual_machines
  endpoint:
    path: /docs/rest-api/virtual-machines
    method: GET
- name: clusters
  endpoint:
    path: /docs/rest-api/clusters
    method: GET
- name: disks
  endpoint:
    path: /docs/rest-api/disks
    method: GET
- name: images
  endpoint:
    path: /docs/rest-api/images
    method: GET
- name: networks
  endpoint:
    path: /docs/rest-api/networks
    method: GET
- name: object_storage
  endpoint:
    path: /docs/rest-api/object-storage
    method: GET
- name: users
  endpoint:
    path: /docs/rest-api/users
    method: GET
- name: volumes
  endpoint:
    path: /docs/rest-api/volumes
    method: GET
notes:
- No egress fees. No hidden costs.
- CUDO Compute is a true pioneer in aggregating the world's cloud in a sustainable
  way, enabling service providers like us to integrate with ease
- The NVIDIA H100 is an ideal choice for large-scale AI applications.
- The NVIDIA H100 Tensor Core GPU offers a diverse range of use cases for deep learning
  on larger models.
- NVIDIA B100 is perfect for a wide range of workloads including AI inference, Deep
  learning, and High-performance computing.
- The price for running an NVIDIA A40 on CUDO Compute starts at $0.32/hr with our
  commitment pricing.
- Pricing starts from $0.65/hr for committed use.
- The price for running an NVIDIA A100 starts at $1.13/hr with commitment pricing.
- NVIDIA V100 is the most advanced data center GPU in the market today, and it’s now
  available for rapid deployment on CUDO Compute.
- The V100 is designed to accelerate the most complex workloads, such as machine learning,
  deep learning, 3D rendering, and high-performance computing (HPC).
- Available at the most cost-effective pricing
- Trusted by NVIDIA. Built for you.
- The price for running an NVIDIA RTX A5000 on CUDO Compute starts at $0.24/hr with
  our commitment pricing.
- The price for running an NVIDIA RTX A6000 on CUDO Compute starts at $0.40/hr with
  our commitment pricing.
- Cloud-based AMD MI250 and MI300 GPUs offer enhanced flexibility and scalability.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Highly optimized version of Deepseek R1 running on vLLM.
- CUDO may modify service fees at any time.
- Service updates may occur without prior notice.
- CUDO shall not be liable for any resulting damages beyond its control.
- If delays are solely attributable to CUDO's negligence, the customer may be eligible
  for compensation.
- Fees may adjust due to exchange rate fluctuations.
- All set-up fees, pre-payment fees and special configuration fees are non-refundable.
- CUDO is a NVIDIA Preferred Partner
- You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run
  the 13B models, and 32 GB to run the 33B models.
- OpenManus is an open-source AI agent designed to connect large language models (LLMs)
  with external tools.
- OpenManus will take time to start running and download the required models.
- Auto recharge feature allows automatic charging when balance drops below a threshold.
- API requires an API key for authentication
- Uses API key for authentication.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '500 - Invalid language tag: en-US@posix'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- CUDO reserves the right to decline payments or limit the spend or payments on any
  account.
- If you fall overdue of any charged fees by more than 5 days, you authorise CUDO
  to take fees due by any other methods on record.
- '401 Unauthorized: Recheck API key.'
auth_info:
  mentioned_objects:
  - CUDO_TOKEN
client:
  base_url: https://rest.compute.cudo.org
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
