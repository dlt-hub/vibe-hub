resources:
- name: calls
  endpoint:
    path: /api/calls
    method: GET
    data_selector: results
    params:
      cursor: ''
      pageSize: ''
- name: agents
  endpoint:
    path: /api/agents
    method: POST
    data_selector: response
    params: {}
- name: update_agents
  endpoint:
    path: /api/agents/{agentId}
    method: PATCH
    data_selector: response
    params: {}
- name: get_agent_stats
  endpoint:
    path: /api/agents/{agentId}
    method: GET
    data_selector: statistics
    params: {}
- name: get_agent_calls
  endpoint:
    path: /api/agents/{agentId}/calls
    method: GET
    data_selector: calls
    params: {}
- name: agent_calls
  endpoint:
    path: /api/agents/{agentId}/calls
    method: POST
    data_selector: response
    params: {}
- name: direct_calls
  endpoint:
    path: /api/calls
    method: POST
    data_selector: response
    params: {}
- name: active_calls
  endpoint:
    path: /api/calls
    method: GET
    data_selector: results
    params:
      pageSize: '50'
- name: deleted_calls
  endpoint:
    path: /api/deleted_calls
    method: GET
    data_selector: results
    params: {}
- name: call_details
  endpoint:
    path: /api/calls/{callId}
    method: GET
    data_selector: call
    params: {}
- name: call_recording
  endpoint:
    path: /api/calls/{callId}/recording
    method: GET
    data_selector: audioBlob
    params: {}
- name: call_events
  endpoint:
    path: /api/calls/{callId}/events
    method: GET
    data_selector: events
    params: {}
- name: calls
  endpoint:
    path: /api/calls
    method: POST
    data_selector: call
    params: {}
- name: twilio
  endpoint:
    path: /calls
    method: POST
    data_selector: call
    params: {}
- name: telnyx
  endpoint:
    path: /calls
    method: POST
    data_selector: call
    params: {}
- name: plivo
  endpoint:
    path: /calls
    method: POST
    data_selector: call
    params: {}
- name: jambonz
  endpoint:
    path: /calls
    method: POST
    data_selector: call
    params: {}
- name: firstSpeakerSettings
  endpoint:
    path: /firstSpeakerSettings
    method: POST
    data_selector: firstSpeakerSettings
    params: {}
- name: templateContext
  endpoint:
    path: /templateContext
    method: POST
    data_selector: templateContext
    params: {}
- name: call_transfers
  endpoint:
    path: /telephony/call-transfers
    method: GET
    data_selector: call_transfers
    params: {}
- name: dtmf_tones
  endpoint:
    path: /telephony/ivr-flows
    method: GET
    data_selector: tones
    params: {}
- name: Create Agent Call
  endpoint:
    path: /api-reference/agents/agents-calls-post
    method: POST
    data_selector: medium
    params: {}
- name: Create Call
  endpoint:
    path: /api-reference/calls/calls-post
    method: POST
    data_selector: medium
    params: {}
- name: call
  endpoint:
    path: /api/calls
    method: POST
    data_selector: joinUrl
- name: messages
  endpoint:
    path: /api/messages
    method: POST
    data_selector: messages
    params: {}
- name: queryCorpus
  endpoint:
    path: /tools/queryCorpus
    method: GET
- name: playDtmfSounds
  endpoint:
    path: /tools/playDtmfSounds
    method: GET
- name: leaveVoicemail
  endpoint:
    path: /tools/leaveVoicemail
    method: POST
- name: hangUp
  endpoint:
    path: /tools/hangUp
    method: POST
- name: queryCorpus
  endpoint:
    path: /api-reference/corpora/corpus-query
    method: GET
    data_selector: results
    params:
      corpus_id: your-corpus-id-here
      query: search_query
      max_results: 5
      minimum_score: 0
- name: leaveVoicemail
  endpoint:
    path: /api-reference/tools/tools-list
    method: POST
    data_selector: voicemail_response
    params:
      message: your_voicemail_message
      strict: true
      result: '[Leaving voicemail...]'
- name: hangUp
  endpoint:
    path: /api-reference/tools/tools-list
    method: POST
    data_selector: hangup_response
    params:
      reason: user_satisfaction
      strict: true
- name: playDtmfSounds
  endpoint:
    path: /api-reference/tools/tools-list
    method: POST
    data_selector: dtmf_response
    params:
      digits: 1234567890*#
      toneDuration: 0.2s
      spaceDuration: 0.1s
- name: lookupProduct
  endpoint:
    path: https://api.example.com/products/{productId}
    method: GET
    data_selector: ''
    params: {}
- name: complexAnalysis
  endpoint:
    path: https://api.example.com/analyze
    method: POST
    data_selector: ''
    params: {}
- name: voices
  endpoint:
    path: /api/voices
    method: POST
    data_selector: voice
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event
    params: {}
- name: webhooks
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: event
    params: {}
- name: vadSettings
  endpoint:
    path: /api-reference/calls/calls-post#body-vad-settings
    method: POST
    data_selector: vadSettings
    params: {}
- name: accounts
  endpoint:
    path: /api-reference/accounts/accounts-me-get
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: incoming_scenario
  endpoint:
    path: /path/to/incoming/scenario
    method: POST
    data_selector: webSocketAPIClientParameters
    params: {}
- name: outgoing_scenario
  endpoint:
    path: /path/to/outgoing/scenario
    method: POST
    data_selector: webSocketAPIClientParameters
    params: {}
- name: create_call
  endpoint:
    path: Ultravox.HTTPEndpoint.CREATE_CALL
    method: POST
    data_selector: response
    params: {}
- name: create_agent_call
  endpoint:
    path: Ultravox.HTTPEndpoint.CREATE_AGENT_CALL
    method: POST
    data_selector: response
    params: {}
- name: accounts
  endpoint:
    path: /api-reference/accounts/accounts-me-get
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: corpus
  endpoint:
    path: /api-reference/corpora/corpora-post
    method: POST
    data_selector: corpusId
- name: source
  endpoint:
    path: /api-reference/corpora/corpora-sources-post
    method: POST
- name: query
  endpoint:
    path: /api-reference/corpora/corpus-query
    method: GET
- name: call_messages
  endpoint:
    path: /api/calls/{call_id}/messages
    method: GET
    data_selector: results
    params:
      cursor: cursor
      pageSize: pageSize
- name: account
  endpoint:
    path: /api/accounts/me
    method: GET
    data_selector: records
- name: call_usage
  endpoint:
    path: /api/accounts/me/usage/calls
    method: GET
    data_selector: daily
    params: {}
- name: Set TTS API keys
  endpoint:
    path: /api/accounts/me/tts_api_keys
    method: PATCH
    data_selector: elevenLabs, cartesia, lmnt
    params: {}
- name: account_tts_api_keys
  endpoint:
    path: /api/accounts/me/tts_api_keys
    method: GET
    data_selector: elevenLabs, cartesia, lmnt
- name: agents
  endpoint:
    path: /agents
    method: GET
    data_selector: results
    params:
      pageSize: '10'
- name: agents
  endpoint:
    path: /api-reference/agents/agents-list
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: corpora
  endpoint:
    path: /api-reference/corpora/corpora-list
    method: GET
- name: tools
  endpoint:
    path: /api-reference/tools/tools-list
    method: GET
- name: voices
  endpoint:
    path: /api-reference/voices/voices-list
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks/webhooks-list
    method: GET
- name: agents
  endpoint:
    path: /api/agents
    method: POST
    data_selector: agentId
- name: agent
  endpoint:
    path: /agents/{agent_id}
    method: GET
    data_selector: agentId
    params: {}
- name: agents
  endpoint:
    path: /api-reference/agents/
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/
    method: GET
- name: corpora
  endpoint:
    path: /api-reference/corpora/
    method: GET
- name: tools
  endpoint:
    path: /api-reference/tools/
    method: GET
- name: voices
  endpoint:
    path: /api-reference/voices/
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks/
    method: GET
- name: agent
  endpoint:
    path: /api/agents/{agent_id}
    method: PATCH
    data_selector: agentId
- name: delete_agent
  endpoint:
    path: /api/agents/{agent_id}
    method: DELETE
- name: list_agent_calls
  endpoint:
    path: /api/agents/{agent_id}/calls
    method: GET
- name: create_agent_call
  endpoint:
    path: /api/agents/{agent_id}/calls
    method: POST
    data_selector: response
    params: {}
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
    data_selector: records
- name: deleted_calls
  endpoint:
    path: /api-reference/calls/calls-deleted-calls-list
    method: GET
    data_selector: records
- name: call
  endpoint:
    path: /api/calls/{call_id}
    method: GET
    data_selector: object
- name: agents
  endpoint:
    path: /api-reference/agents/agents-list
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks/webhooks-list
    method: GET
- name: calls
  endpoint:
    path: /api/calls
    method: POST
    data_selector: callId
- name: delete_call
  endpoint:
    path: /api/calls/{call_id}
    method: DELETE
- name: call_tools
  endpoint:
    path: /api/calls/{call_id}/tools
    method: GET
- name: get_call_recording
  endpoint:
    path: /api/calls/{call_id}/recording
    method: GET
- name: call_stages
  endpoint:
    path: /api/calls/{call_id}/stages
    method: GET
    data_selector: results
    params:
      cursor: string
      pageSize: integer
- name: call_stage
  endpoint:
    path: /api/calls/{call_id}/stages/{call_stage_id}
    method: GET
    data_selector: call_stage
    params: {}
- name: list_call_stage_messages
  endpoint:
    path: /api/calls/{call_id}/stages/{call_stage_id}/messages
    method: GET
    data_selector: results
- name: call_stage_tools
  endpoint:
    path: /api/calls/{call_id}/stages/{call_stage_id}/tools
    method: GET
    data_selector: object[]
- name: Get Call Stage Message Audio
  endpoint:
    path: /api/calls/{call_id}/stages/{call_stage_id}/messages/{call_stage_message_index}/audio
    method: GET
- name: deleted_calls
  endpoint:
    path: /api/deleted_calls
    method: GET
    data_selector: results
- name: deleted_call
  endpoint:
    path: /api/deleted_calls/{call_id}
    method: GET
    data_selector: callId
    params: {}
- name: call_events
  endpoint:
    path: /api/calls/{call_id}/events
    method: GET
    data_selector: results
    params:
      minimum_severity: info
      pageSize: 100
- name: List Corpora
  endpoint:
    path: /api/corpora/corpora-list
    method: GET
- name: Create Corpus
  endpoint:
    path: /api/corpora/corpora-post
    method: POST
- name: Get Corpus
  endpoint:
    path: /api/corpora/corpora-get
    method: GET
- name: Update Corpus
  endpoint:
    path: /api/corpora/corpora-patch
    method: PATCH
- name: Delete Corpus
  endpoint:
    path: /api/corpora/corpora-delete
    method: DEL
- name: Query Corpus
  endpoint:
    path: /api/corpora/corpus-query
    method: POST
- name: List Corpus Sources
  endpoint:
    path: /api/corpora/corpora-sources-list
    method: GET
- name: Create Corpus Source
  endpoint:
    path: /api/corpora/corpora-sources-post
    method: POST
- name: Get Corpus Source
  endpoint:
    path: /api/corpora/corpora-sources-get
    method: GET
- name: Update Corpus Source
  endpoint:
    path: /api/corpora/corpora-sources-patch
    method: PATCH
- name: Delete Corpus Source
  endpoint:
    path: /api/corpora/corpora-sources-delete
    method: DEL
- name: List Corpus Source Documents
  endpoint:
    path: /api/corpora/corpora-sources-documents-list
    method: GET
- name: Get Corpus Source Document
  endpoint:
    path: /api/corpora/corpora-sources-documents-get
    method: GET
- name: Create Corpus File Upload
  endpoint:
    path: /api/corpora/corpora-uploads-post
    method: POST
- name: corpora
  endpoint:
    path: /api/corpora
    method: GET
    data_selector: results
- name: create_corpus
  endpoint:
    path: /api/corpora
    method: POST
    data_selector: corpusId
- name: corpus
  endpoint:
    path: /api/corpora/{corpus_id}
    method: GET
    data_selector: corpusId
    params: {}
- name: corpus
  endpoint:
    path: /api/corpora/{corpus_id}
    method: PATCH
    data_selector: corpusId
    params: {}
- name: delete_corpus
  endpoint:
    path: /api/corpora/{corpus_id}
    method: DELETE
- name: query_corpus
  endpoint:
    path: /api/corpora/{corpus_id}/query
    method: POST
    data_selector: content
    params: {}
- name: corpus_sources
  endpoint:
    path: /api/corpora/{corpus_id}/sources
    method: GET
    data_selector: results
    params:
      cursor: null
      pageSize: null
- name: corpus_source
  endpoint:
    path: /api/corpora/{corpus_id}/sources
    method: POST
    data_selector: source
    params: {}
- name: Get Corpus Source
  endpoint:
    path: /api/corpora/{corpus_id}/sources/{source_id}
    method: GET
    data_selector: records
- name: Update Corpus Source
  endpoint:
    path: /api/corpora/{corpus_id}/sources/{source_id}
    method: PATCH
    data_selector: null
    params: {}
- name: Delete Corpus Source
  endpoint:
    path: /api/corpora/{corpus_id}/sources/{source_id}
    method: DELETE
- name: list_corpus_source_documents
  endpoint:
    path: /api/corpora/{corpus_id}/sources/{source_id}/documents
    method: GET
    data_selector: results
    params:
      pageSize: integer
- name: corpus_source_document
  endpoint:
    path: /api/corpora/{corpus_id}/sources/{source_id}/documents/{document_id}
    method: GET
    data_selector: ''
- name: create_corpus_file_upload
  endpoint:
    path: /api/corpora/{corpus_id}/uploads
    method: POST
    data_selector: documentId
    params: {}
- name: tools
  endpoint:
    path: /tools
    method: GET
    data_selector: results
- name: tool
  endpoint:
    path: /api/tools/{tool_id}
    method: GET
- name: tools
  endpoint:
    path: /tools
    method: POST
    data_selector: toolId
- name: tools
  endpoint:
    path: /api/tools/{tool_id}
    method: PUT
    data_selector: response
    params: {}
- name: tool
  endpoint:
    path: /api/tools/{tool_id}
    method: DELETE
- name: tool_history
  endpoint:
    path: /api/tools/{tool_id}/history
    method: GET
    data_selector: results
- name: test_tool
  endpoint:
    path: /api/tools/{tool_id}/test
    method: POST
- name: voices
  endpoint:
    path: /api/voices
    method: GET
    data_selector: results
- name: voice
  endpoint:
    path: /api/voices/{voice_id}
    method: GET
- name: voice
  endpoint:
    path: /api/voices
    method: POST
    data_selector: voiceId
- name: delete_voice
  endpoint:
    path: /api/voices/{voice_id}
    method: DELETE
- name: replace_voice
  endpoint:
    path: /api/voices/{voice_id}
    method: PUT
    data_selector: object
- name: update_voice
  endpoint:
    path: /api/voices/{voice_id}
    method: PATCH
    data_selector: object
- name: voice_preview
  endpoint:
    path: /api/voice_preview
    method: POST
    data_selector: null
    params: {}
- name: voice_sample
  endpoint:
    path: /api/voices/{voice_id}/preview
    method: GET
    data_selector: file
- name: webhook
  endpoint:
    path: /api/webhooks
    method: GET
    data_selector: results
- name: webhook
  endpoint:
    path: /api/webhooks/{webhook_id}
    method: GET
    data_selector: webhookId
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: webhookId
- name: webhook
  endpoint:
    path: /api/webhooks/{webhook_id}
    method: PUT
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks/{webhook_id}
    method: PATCH
    data_selector: webhookId
- name: delete_webhook
  endpoint:
    path: /api/webhooks/{webhook_id}
    method: DELETE
    data_selector: null
    params: {}
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: agents
  endpoint:
    path: /api-reference/agents/agents-list
    method: GET
- name: corpora
  endpoint:
    path: /api-reference/corpora/corpora-list
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks/webhooks-list
    method: GET
- name: tools
  endpoint:
    path: /api-reference/tools/tools-list
    method: GET
- name: voices
  endpoint:
    path: /api-reference/voices/voices-list
    method: GET
- name: accounts
  endpoint:
    path: /api-reference/accounts/accounts-me-get
    method: GET
- name: agents
  endpoint:
    path: /api-reference/agents/agents-list
    method: GET
- name: calls
  endpoint:
    path: /api-reference/calls/calls-list
    method: GET
- name: corpora
  endpoint:
    path: /api-reference/corpora/corpora-list
    method: GET
- name: tools
  endpoint:
    path: /api-reference/tools/tools-list
    method: GET
- name: voices
  endpoint:
    path: /api-reference/voices/voices-list
    method: GET
- name: webhooks
  endpoint:
    path: /api-reference/webhooks/webhooks-list
    method: GET
- name: models
  endpoint:
    path: /api-reference/other/models-get
    method: GET
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: results
- name: OpenAPI Schema
  endpoint:
    path: /api/schema/
    method: GET
    data_selector: '{}'
notes:
- Ultravox does not append a default prompt to your input.
- If the system is under load and we are unable to fulfill a request to create a call,
  you may receive a 429 'Too Many Requests' response.
- Accounts on the Scale plan enjoy priority in the system for up to 100 concurrent
  calls.
- Join our community on Discord for quick answers from our product and engineering
  team.
- Reach out to hello@ultravox.ai for product support issues or inquiries.
- Web app and API are fully compatible. Agents created in either can be managed through
  both interfaces.
- Uses OAuth2 with refresh token — requires setup of connected app in Ultravox
- Some processes may require more backend code to manage state
- Stages inherit all properties from the previous stage unless explicitly overridden.
- Ultravox provides comprehensive support for DTMF tones, enabling both sending and
  receiving tones during phone calls.
- DTMF tones are inaudible when using WebRTC.
- SIP calls are currently free of charge while in preview but will incur an additional
  charge when it moves to full release.
- WebSocket connections are designed for server-to-server communication.
- For the best performance, use client SDKs with WebRTC for browser or mobile applications.
- Messages are JSON objects with camelCase keys containing a required `type` field.
- Maximum of one audio file per voice
- 10MB file size maximum
- Integrating your own TTS provider means you’re responsible for speech generation
  issues.
- If you encounter generation errors, see Debugging.
- Always verify webhook signatures to ensure requests are from Ultravox Realtime.
- Return a 2xx status code (recommended 204) as soon as you receive the webhook.
- All webhooks are sent as HTTP POST requests.
- Return any 2xx status code (we recommend 204) to acknowledge receipt.
- Ultravox automatically retries failed webhook deliveries with exponential backoff
  to ensure reliable event notifications.
- If your webhook endpoint is temporarily unavailable or returns an error status code
  (e.g. 4xx or 5xx), Ultravox will automatically retry delivery using an exponential
  backoff strategy.
- Ultravox handles VAD complexity automatically.
- VAD tuning is a series of trade-offs.
- 'Message Size Limit: Messages larger than 15-16KB may cause timeouts.'
- 'The outgoing scenario accepts the customData parameter in the format: {"callerid":"16503333333",
  "number":"16504444444"}'
- New Dashboard features and documentation
- WebSockets integration available
- 30 minutes of free usage to try it out for yourself.
- You should never expose your API key to client code
- Request body must be in JSON format
- Requires API key for authentication.
- Returns details for all deleted calls
- Maximum of 20 sources (max) per corpus
- 200 documents (max) per source
- 10MB (max) document size for file uploads
- Allows partial modifications to the corpus.
- A source of documents for building a corpus.
- Allows partial updates to the source.
- Upload URLs expire after 5 minutes. You can request a new URL if needed.
- Updating a single field in a tool is not supported. The entire tool definition must
  be provided.
- Uses multipart/form-data encoding to provide the name of the voice along with an
  audio file containing the voice to be used for cloning.
- Currently, we support one cloned voice per account.
- Allows partial modifications to the voice.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'HTTP 429: Too Many Requests'
- 'HTTP 503: Service Unavailable'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Requested output format pcm_44100 (PCM at 44100hz) is only allowed for Pro tier
  and above.
- A model with requested ID does not exist.
- A voice with voice_id does not exist.
- The API key you used is missing the permission text_to_speech to execute this operation.
- This request exceeds your quota of credits.
- Error initializing streaming TTS connection.
- 'HTTP error: 500 Response: {"error": "Internal server error"}'
- If your endpoint returns a non-2xx status code (e.g. 4xx or 5xx), Ultravox will
  retry delivery.
- Temporary failures will result in automatic retry attempts.
- '429: Too many requests'
- '429: Too many API requests'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check API key.'
- '401 Unauthorized: Recheck API key or permissions'
- 200 - application/json
- '201: Source created successfully'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.ultravox.ai
  auth:
    type: apikey
    location: header
    header_name: X-API-Key
source_metadata: null
