resources:
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
- name: collection
  endpoint:
    path: /rest/<collection>
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /media/ID
    method: GET
    data_selector: media
- name: meta
  endpoint:
    path: /rest/_meta
    method: GET
    data_selector: meta
- name: mail
  endpoint:
    path: /mail
    method: POST
    data_selector: mail
- name: auth_jwt
  endpoint:
    path: /auth/jwt
    method: POST
    data_selector: jwt
- name: auth_userinfo
  endpoint:
    path: /auth/userinfo
    method: GET
    data_selector: userinfo
- name: auth_logout
  endpoint:
    path: /auth/logout
    method: POST
    data_selector: logout
- name: Contact
  endpoint:
    path: /simpledb-abee.restdb.io
    method: GET
    data_selector: records
- name: activities
  endpoint:
    path: /rest/activities
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /rest/contact
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /rest/<collection>
    method: GET
    data_selector: records
- name: media
  endpoint:
    path: /media/ID
    method: GET
    data_selector: data
- name: meta
  endpoint:
    path: /rest/_meta
    method: GET
    data_selector: meta
- name: mail
  endpoint:
    path: /mail
    method: POST
    data_selector: response
- name: authentication
  endpoint:
    path: /auth/jwt
    method: POST
    data_selector: token
- name: activities
  endpoint:
    path: /rest/activities
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /rest/contact
    method: GET
    data_selector: records
    params: {}
- name: import_export
  endpoint:
    path: /import-export-of-excel-data
    method: GET
    data_selector: data
    params: {}
- name: motorbikes
  endpoint:
    path: /rest/motorbikes
    method: GET
    data_selector: records
- name: people
  endpoint:
    path: /rest/people
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /rest/customers
    method: GET
    data_selector: records
- name: people
  endpoint:
    path: /rest/people
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /rest/users
    method: POST
- name: auth_jwt
  endpoint:
    path: /auth/jwt
    method: POST
- name: auth_token
  endpoint:
    path: /auth/token
    method: POST
- name: auth_userinfo
  endpoint:
    path: /auth/userinfo
    method: GET
- name: auth_logout
  endpoint:
    path: /auth/logout
    method: POST
- name: media
  endpoint:
    path: /media/*/meta
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: clean
  endpoint:
    path: /clean
    method: DELETE
- name: download
  endpoint:
    path: /download
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
notes:
- Requires a restdb.io account
- Setup secure CORS API key for database
- Data access is secured with API-keys or by external user authentication using Auth0
  service.
- Secure access to your database with authentication through JWT or API-keys.
- HTTPS is required. The restdb.io database REST API only responds to encrypted traffic.
- You cannot use the full-access key from web pages, only CORS-enabled keys will work.
- All primary Data fields can have a property to define if a Field is required and/or
  unique.
- To access children of a record using the REST API, you can just formulate the query
  like /contact/{id}/activities.
- 'To access children of a record using the REST API, use the endpoint format: /rest/contact/{parent_id}/activities'
- Codehooks are used for authentication and context
- Make at least one Page public to host a site
- Pages can serve any content type (HTML, JSON, CSS, RSS, text etc) through an URL
  endpoint directly from your database.
- Maximum 1000 records are returned from any query unless the $max parameter is specified.
- 'To use the realtime features set options parameter to {realtime: true}.'
- You must also add realtime access to the API-key you use.
- If the Media Archive access is set to restricted in the API settings, files can
  still be retrieved using a URL but will require an extra 'key' parameter.
- Remember to add your Web API key (for CORS) and enable POST access.
- Media archive resources are cached on web clients automatically in 24 hrs.
- You can restore a database using a simple cURL script with a snapp key.
errors:
- '401 Unauthorized: Check API key or permissions'
- '401 Unauthorized: Invalid API key or token.'
- '404 Not Found: Collection or resource not found.'
- 'HTTP response code 403: Invalid access token'
- '401 Unauthorized: Forbidden if authorization header is missing'
auth_info:
  mentioned_objects: []
client:
  base_url: https://restdb.io
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
