resources:
- name: Fighter Profiles (Basic) - All
  endpoint:
    path: /scores/json/FightersBasic
    method: GET
    data_selector: FighterBasic[]
    params:
      key: string
- name: Betting Metadata
  endpoint:
    path: /odds/json/BettingMetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: string
- name: Leagues
  endpoint:
    path: /scores/json/Leagues
    method: GET
    data_selector: League[]
    params:
      key: string
- name: Event
  endpoint:
    path: /scores/json/Event/{eventid}
    method: GET
    data_selector: EventDetail
    params:
      key: string
      eventid: string
- name: Fight (Basic) [Final]
  endpoint:
    path: /stats/json/FightBasicFinal/{fightid}
    method: GET
    data_selector: FightBasic
    params:
      key: string
      fightid: string
- name: Fighter Profiles (Basic) - All
  endpoint:
    path: /scores/json/FightersBasic
    method: GET
    data_selector: FighterBasic[]
- name: Betting Metadata
  endpoint:
    path: /odds/json/BettingMetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Leagues
  endpoint:
    path: /scores/json/Leagues
    method: GET
    data_selector: League[]
- name: Active Sportsbooks
  endpoint:
    path: /odds/json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
- name: Event
  endpoint:
    path: /scores/json/Event/{eventid}
    method: GET
    data_selector: EventDetail
- name: Schedules
  endpoint:
    path: /scores/json/Schedule/{league}/{season}
    method: GET
    data_selector: Event[]
- name: Fight (Basic) [Final]
  endpoint:
    path: /stats/json/FightBasicFinal/{fightid}
    method: GET
    data_selector: FightBasic
- name: Fight (Basic) [Live & Final]
  endpoint:
    path: /stats/json/FightBasic/{fightid}
    method: GET
    data_selector: FightBasic
- name: Fighter Profile - By Fighter
  endpoint:
    path: /scores/json/Fighter/{fighterid}
    method: GET
    data_selector: Fighter
- name: Fighter Profiles - All
  endpoint:
    path: /scores/json/Fighters
    method: GET
    data_selector: Fighter[]
- name: Event Fight Odds
  endpoint:
    path: /odds/json/EventOdds/{eventid}
    method: GET
    data_selector: EventOdds
- name: Event Fight Odds Line Movement
  endpoint:
    path: /odds/json/EventOddsLineMovement/{eventid}
    method: GET
    data_selector: EventOdds
- name: Betting Events - by Event
  endpoint:
    path: /BettingEventsByEvent/{eventId}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - Upcoming
  endpoint:
    path: /UpcomingBettingEvents
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Fighter Props - by Event
  endpoint:
    path: /BettingFighterPropsByEvent/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      include: available
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarketsByBettingEvent/{bettingEventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      include: available
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      include: available
- name: Betting Market
  endpoint:
    path: /BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Event
  endpoint:
    path: /BettingEventsByEvent/{eventId}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - Upcoming
  endpoint:
    path: /UpcomingBettingEvents
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Fighter Props - by Event
  endpoint:
    path: /BettingFighterPropsByEvent/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
      format: json
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarketsByBettingEvent/{bettingEventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
      format: json
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
      format: json
- name: Betting Market
  endpoint:
    path: /BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: sports_data
  endpoint:
    path: /scores-and-stats
    method: GET
- name: betting_odds
  endpoint:
    path: /live-odds-api
    method: GET
- name: fantasy_sports
  endpoint:
    path: /fantasy-sports-api
    method: GET
- name: news_images
  endpoint:
    path: /news-and-images
    method: GET
- name: widgets
  endpoint:
    path: /widgets
    method: GET
- name: game_feeds
  endpoint:
    path: /scores-and-stats
    method: GET
    data_selector: records
- name: odds_feeds
  endpoint:
    path: /live-odds-api
    method: GET
    data_selector: records
- name: fantasy_feeds
  endpoint:
    path: /fantasy-sports-api
    method: GET
    data_selector: records
- name: news_feeds
  endpoint:
    path: /news-and-images
    method: GET
    data_selector: records
- name: player_projections
  endpoint:
    path: /fantasy-sports-api/player-projections
    method: GET
    data_selector: projections
    params: {}
- name: salaries
  endpoint:
    path: /fantasy-sports-api/salaries
    method: GET
    data_selector: salaries
    params: {}
- name: leagues
  endpoint:
    path: /leagues
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: leagues
  endpoint:
    path: /leagues
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: player_news
  endpoint:
    path: /news/player
    method: GET
    data_selector: news
- name: game_previews
  endpoint:
    path: /news/game_previews
    method: GET
    data_selector: previews
- name: player_headshots
  endpoint:
    path: /images/player_headshots
    method: GET
    data_selector: headshots
- name: Widgets & Visualizations
  endpoint:
    path: /widgets
    method: GET
- name: Projections
  endpoint:
    path: /fantasy/projections
    method: GET
    data_selector: projections
- name: Salaries
  endpoint:
    path: /fantasy/salaries
    method: GET
    data_selector: salaries
- name: Fantasy Stats
  endpoint:
    path: /fantasy/stats
    method: GET
    data_selector: stats
- name: Player News & Notes
  endpoint:
    path: /developers/coverage-guide/news-images/player-news-notes
    method: GET
- name: Previews, Recaps & Breaking News
  endpoint:
    path: /developers/coverage-guide/news-images/previews-recaps-breaking-news
    method: GET
- name: Player Headshots
  endpoint:
    path: /developers/coverage-guide/news-images/player-headshots
    method: GET
- name: Action Shots
  endpoint:
    path: /developers/coverage-guide/news-images/action-shots
    method: GET
- name: Coded Content
  endpoint:
    path: /ai-sports-content-automation
    method: GET
- name: scores
  endpoint:
    path: /v4/scores
    method: GET
    data_selector: scores
- name: players
  endpoint:
    path: /v4/players
    method: GET
    data_selector: players
- name: historical_sports_data
  endpoint:
    path: /vault/historical-sports-data
    method: GET
    data_selector: data
- name: historical_odds
  endpoint:
    path: /vault/historical-odds
    method: GET
    data_selector: data
- name: news_images_archive
  endpoint:
    path: /vault/news-images-archive
    method: GET
    data_selector: data
- name: Coded Content
  endpoint:
    path: /ai-sports-content-automation
    method: GET
- name: scores
  endpoint:
    path: /v1/scores
    method: GET
    data_selector: scores
    params: {}
- name: stats
  endpoint:
    path: /v1/stats
    method: GET
    data_selector: stats
    params: {}
- name: standings
  endpoint:
    path: /developers/api-documentation/nfl#standings
    method: GET
    data_selector: Standing[]
- name: team_profiles_by_active
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: team_profiles_all
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--all
    method: GET
    data_selector: Team[]
- name: schedules
  endpoint:
    path: /developers/api-documentation/nfl#schedules
    method: GET
    data_selector: Schedule[]
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-final
    method: GET
    data_selector: Score[]
- name: Standings
  endpoint:
    path: /developers/api-documentation/nfl#standings
    method: GET
    data_selector: Standing[]
- name: Team Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--all
    method: GET
    data_selector: Team[]
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/nfl#player-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: Schedules
  endpoint:
    path: /developers/api-documentation/nfl#schedules
    method: GET
    data_selector: Schedule[]
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-final
    method: GET
    data_selector: Score[]
- name: Player Game Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-five
    method: GET
    data_selector: PlayerGameRedZone[]
- name: Player Game Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-ten
    method: GET
    data_selector: PlayerGameRedZone[]
- name: Player Season Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-five
    method: GET
    data_selector: PlayerSeasonRedZone[]
- name: Player Season Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-ten
    method: GET
    data_selector: PlayerSeasonRedZone[]
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
- name: Team Game Stats - by Game [Final]
  endpoint:
    path: /developers/api-documentation/nfl#team-game-stats--by-game-final
    method: GET
    data_selector: TeamGame[]
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
    data_selector: BoxScoreV3
- name: Box Scores - by Week [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-scores--by-week-final
    method: GET
    data_selector: BoxScoreV3[]
- name: Play By Play [Final]
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-final
    method: GET
    data_selector: PlayByPlay
- name: Pro Bowlers
  endpoint:
    path: /developers/api-documentation/nfl#pro-bowlers
    method: GET
    data_selector: PlayerInfo[]
    params: {}
- name: Injuries - All
  endpoint:
    path: /developers/api-documentation/nfl#injuries--all
    method: GET
    data_selector: Injury[]
    params: {}
- name: Injuries - by Team
  endpoint:
    path: /developers/api-documentation/nfl#injuries--by-team
    method: GET
    data_selector: Injury[]
    params: {}
- name: Player Details - All
  endpoint:
    path: /developers/api-documentation/nfl#player-details--all
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-free-agents
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Team
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-team
    method: GET
    data_selector: PlayerDetail[]
    params: {}
- name: Player Details - by Rookie Draft Year
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-rookie-draft-year
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Depth Charts - by Active
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--by-active
    method: GET
    data_selector: TeamDepthChart[]
    params: {}
- name: Transactions - by Date
  endpoint:
    path: /developers/api-documentation/nfl#transactions--by-date
    method: GET
    data_selector: Transaction[]
    params: {}
- name: Depth Charts - All
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--all
    method: GET
    data_selector: TeamDepthChart[]
    params: {}
- name: Period Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#period-game-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#pregame-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#pregame-and-period-game-odds--by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#period-game-odds-line-movement-
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Player Game Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-five
    method: GET
    data_selector: PlayerGameRedZone[]
    params: {}
- name: Player Game Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-ten
    method: GET
    data_selector: PlayerGameRedZone[]
    params: {}
- name: Player Season Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-five
    method: GET
    data_selector: PlayerSeasonRedZone[]
    params: {}
- name: Player Season Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-ten
    method: GET
    data_selector: PlayerSeasonRedZone[]
    params: {}
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Team Season Stats
  endpoint:
    path: /developers/api-documentation/nfl#team-season-stats
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Player Game Red Zone Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats
    method: GET
    data_selector: PlayerGameRedZone[]
    params: {}
- name: Player Season Red Zone Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats
    method: GET
    data_selector: PlayerSeasonRedZone[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#player-season-stats--by-team
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Season Third Down Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-season-third-down-stats
    method: GET
    data_selector: PlayerSeasonThirdDown[]
    params: {}
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
    data_selector: BoxScoreV3
    params: {}
- name: Box Scores - by Week [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-scores--by-week-final
    method: GET
    data_selector: BoxScoreV3[]
    params: {}
- name: Player Game Stats - by Team [Final]
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-team-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Player Game Stats - by Week [Final]
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-week-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Stats - by Game [Final]
  endpoint:
    path: /developers/api-documentation/nfl#team-game-stats--by-game-final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Box Score - by Team [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score--by-team-final
    method: GET
    data_selector: BoxScoreV3
    params: {}
- name: Betting Markets by Event
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-event-sportsbook-group
    method: GET
- name: Betting Markets by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-game-sportsbook-group
    method: GET
- name: Betting Markets by Market Type
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-market-type-sportsbook-group
    method: GET
- name: Betting Player Props by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-player-props--by-game-sportsbook-group
    method: GET
- name: Betting Events by Date
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-date
    method: GET
- name: Betting Events by Season
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-season
    method: GET
- name: Betting Results by Market
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market
    method: GET
- name: Betting Results by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market-sportsbook-group
    method: GET
- name: Betting Futures by Season
  endpoint:
    path: /developers/api-documentation/nfl#betting-futures--by-season
    method: GET
- name: Betting Trends by Matchup
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
- name: Betting Trends by Team
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-team
    method: GET
- name: Betting Splits by Betting Market
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-betting-market
    method: GET
- name: Betting Splits by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-game
    method: GET
- name: Pro Bowlers
  endpoint:
    path: /developers/api-documentation/nfl#pro-bowlers
    method: GET
    data_selector: PlayerInfo[]
- name: Injuries - All
  endpoint:
    path: /developers/api-documentation/nfl#injuries--all
    method: GET
    data_selector: Injury[]
- name: Injuries - by Team
  endpoint:
    path: /developers/api-documentation/nfl#injuries--by-team
    method: GET
    data_selector: Injury[]
- name: Player Details - All
  endpoint:
    path: /developers/api-documentation/nfl#player-details--all
    method: GET
    data_selector: Player[]
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-free-agents
    method: GET
    data_selector: Player[]
- name: Player Details - by Team
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-team
    method: GET
    data_selector: PlayerDetail[]
- name: Player Details - by Rookie Draft Year
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-rookie-draft-year
    method: GET
    data_selector: Player[]
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-injured
    method: GET
    data_selector: Player[]
- name: Depth Charts - by Active
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--by-active
    method: GET
    data_selector: TeamDepthChart[]
- name: Transactions - by Date
  endpoint:
    path: /developers/api-documentation/nfl#transactions--by-date
    method: GET
    data_selector: Transaction[]
- name: Depth Charts - All
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--all
    method: GET
    data_selector: TeamDepthChart[]
- name: Period Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#period-game-odds--by-week
    method: GET
    data_selector: GameInfo[]
- name: Pre-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#pregame-odds--by-week
    method: GET
    data_selector: GameInfo[]
- name: Pre-Game and Period Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#pregame-and-period-game-odds--by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#period-game-odds-line-movement-
    method: GET
    data_selector: GameInfo[]
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
- name: In-Game Odds by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: In-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds--by-week
    method: GET
    data_selector: GameInfo[]
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nfl#ingame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Market
  endpoint:
    path: /developers/api-documentation/nfl#betting-market
    method: GET
    data_selector: BettingMarket
- name: Betting Results - by Market
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
- name: Betting Results - by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market-sportsbook-group
    method: GET
    data_selector: BettingMarketResult
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nfl#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/nfl#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: BAKER Weekly Best Bets Game Picks
  endpoint:
    path: /developers/api-documentation/nfl#baker-weekly-best-bets-game-picks
    method: GET
    data_selector: Weekly Best Bets Game Picks
- name: BAKER Game Projections
  endpoint:
    path: /developers/api-documentation/nfl#baker-game-projections
    method: GET
    data_selector: Projected game and team outcomes
- name: BAKER Weekly Best Bets
  endpoint:
    path: /developers/api-documentation/nfl#baker-weekly-best-bets
    method: GET
    data_selector: Weekly Best Bets
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
- name: BAKER Player Projections Week Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average
    method: GET
- name: BAKER Player Projections Week Average Per Team
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average-per-team
    method: GET
- name: BAKER Player Projections Week Average Single Statistic
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average-single-statistic
    method: GET
- name: BAKER Player Projections Week Percentile Per Team
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-percentile-per-team
    method: GET
- name: BAKER Player Projections Week Percentile Single Statistic
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-percentile-single-statistic
    method: GET
- name: BAKER Fantasy Defense Projections Week Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-fantasy-defense-projections-week-average
    method: GET
- name: BAKER Player Projections Full-Season Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-fullseason-average
    method: GET
- name: BAKER Player Full-Season Projections Fantasy Ceiling
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-fullseason-projections-fantasy-ceiling
    method: GET
- name: BAKER Player Full-Season Projections Fantasy Floor
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-fullseason-projections-fantasy-floor
    method: GET
- name: BAKER Player Rest-of-Season Projections Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-average
    method: GET
- name: BAKER Player Rest-of-Season Projections Fantasy Ceiling
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-fantasy-ceiling
    method: GET
- name: BAKER Player Rest-of-Season Projections Fantasy Floor
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-fantasy-floor
    method: GET
- name: Projected Fantasy Defense Game Stats With DFS Salaries
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-game-stats-with-dfs-salaries
    method: GET
- name: Projected Fantasy Defense Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-season-stats-with-adp
    method: GET
- name: Projected Player Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-team
    method: GET
- name: Projected Player Game Stats - by Week
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-week
    method: GET
- name: Projected Player Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp
    method: GET
- name: Projected Player Season Stats With ADP - by Team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp--by-team
    method: GET
- name: IDP Projected Player Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#idp-projected-player-game-stats--by-team
    method: GET
- name: IDP Projected Player Game Stats - by Week
  endpoint:
    path: /developers/api-documentation/nfl#idp-projected-player-game-stats--by-week
    method: GET
- name: DFS Slate Ownership Projections - by Slate
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--by-slate
    method: GET
- name: DFS Slate Ownership Projections - Upcoming
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--upcoming
    method: GET
- name: Fantasy Player Ownership Percentages (Season-Long) - by Week
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-player-ownership-percentages-seasonlong--by-week
    method: GET
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slates--by-date
    method: GET
- name: DFS Slates - by Week
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slates--by-week
    method: GET
- name: Fantasy Defense Game Stats - All
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-game-stats--all
    method: GET
- name: Fantasy Defense Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-game-stats--by-team
    method: GET
- name: Fantasy Defense Season Stats - All
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--all
    method: GET
- name: Fantasy Defense Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--by-team
    method: GET
- name: Fantasy Points - by Week
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-points--by-week
    method: GET
- name: Premium News
  endpoint:
    path: /developers/api-documentation/nfl#premium-news
    method: GET
- name: Premium News - by Date
  endpoint:
    path: /developers/api-documentation/nfl#premium-news--by-date
    method: GET
- name: Premium News - by Team
  endpoint:
    path: /developers/api-documentation/nfl#premium-news--by-team
    method: GET
- name: News
  endpoint:
    path: /developers/api-documentation/nfl#news
    method: GET
- name: News - by Date
  endpoint:
    path: /developers/api-documentation/nfl#news--by-date
    method: GET
- name: News - by Player
  endpoint:
    path: /developers/api-documentation/nfl#news--by-player
    method: GET
- name: headshots
  endpoint:
    path: /developers/api-documentation/nfl#headshots
    method: GET
    data_selector: Headshot[]
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nfl#betting-metadata
    method: GET
    data_selector: records
    params: {}
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nfl#betting-metadata
    method: GET
    data_selector: records
    params: {}
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-date
    method: GET
    data_selector: records
    params: {}
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-event
    method: GET
    data_selector: records
    params: {}
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market
    method: GET
    data_selector: records
    params: {}
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-game
    method: GET
    data_selector: records
    params: {}
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nfl#betting-outcomes
    method: GET
    data_selector: records
    params: {}
- name: BettingOutcomeResult
  endpoint:
    path: /betting/outcome/result
    method: GET
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting/metadata
    method: GET
- name: BettingSplit
  endpoint:
    path: /betting/split
    method: GET
- name: BoxScoreV3
  endpoint:
    path: /boxscore/v3
    method: GET
- name: Bye
  endpoint:
    path: /bye
    method: GET
- name: ConsensusOutcome
  endpoint:
    path: /consensus/outcome
    method: GET
- name: DepthChart
  endpoint:
    path: /depthchart
    method: GET
- name: DfsSlate
  endpoint:
    path: /dfs/slate
    method: GET
- name: dfs_slate_player
  endpoint:
    path: /dfs/slate/player
    method: GET
    data_selector: records
- name: dfs_slate_player_ownership_projection
  endpoint:
    path: /dfs/slate/player/ownership/projection
    method: GET
    data_selector: records
- name: dfs_slate_with_ownership_projection
  endpoint:
    path: /dfs/slate/with/ownership/projection
    method: GET
    data_selector: records
- name: fantasy_defense_game
  endpoint:
    path: /fantasy/defense/game
    method: GET
    data_selector: records
- name: projections
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-game-stats-with-dfs-salaries
    method: GET
- name: Fantasy Defense Season Stats - All
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--all
    method: GET
    data_selector: records
    params: {}
- name: Fantasy Defense Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--by-team
    method: GET
    data_selector: records
    params: {}
- name: projections
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-season-stats-with-adp
    method: GET
    data_selector: projections
    params: {}
- name: salaries_stats_points
  endpoint:
    path: /developers/coverage-guide/fantasy-feeds/salaries-stats-points
    method: GET
- name: fantasy_points_by_week
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-points--by-week
    method: GET
- name: game_lines_pre_game
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_in_play
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_pre_game_plus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_in_play_plus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: GameOdds
  endpoint:
    path: /v4/odds
    method: GET
    data_selector: odds
    params: {}
- name: InjuryReports
  endpoint:
    path: /v4/injuries
    method: GET
    data_selector: injuries
    params: {}
- name: Player Details - All
  endpoint:
    path: /developers/api-documentation/nfl#player-details--all
    method: GET
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-free-agents
    method: GET
- name: Player Details - by Rookie Draft Year
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-rookie-draft-year
    method: GET
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-injured
    method: GET
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
    data_selector: records
- name: Box Score Final
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
    data_selector: records
- name: Box Scores by Week Final
  endpoint:
    path: /developers/api-documentation/nfl#box-scores--by-week-final
    method: GET
    data_selector: records
- name: Box Score by Team Final
  endpoint:
    path: /developers/api-documentation/nfl#box-score--by-team-final
    method: GET
    data_selector: records
- name: Player Game Stats by Week Final
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-week-final
    method: GET
    data_selector: records
- name: Player Game Stats by Team Final
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-team-final
    method: GET
    data_selector: records
- name: player_game_stats
  endpoint:
    path: /v4/nfl/scores/json/PlayerGameStats
    method: GET
    data_selector: records
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-team
    method: GET
- name: player_game
  endpoint:
    path: /v1/player_game
    method: GET
    data_selector: records
- name: BAKER Player Projections Week Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average
    method: GET
- name: BAKER Player Projections Week Average Per Team
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average-per-team
    method: GET
- name: BAKER Player Projections Week Average Single Statistic
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-average-single-statistic
    method: GET
- name: BAKER Player Projections Week Percentile Per Team
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-percentile-per-team
    method: GET
- name: BAKER Player Projections Week Percentile Single Statistic
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-week-percentile-single-statistic
    method: GET
- name: BAKER Fantasy Defense Projections Week Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-fantasy-defense-projections-week-average
    method: GET
- name: BAKER Player Projections Full-Season Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-projections-fullseason-average
    method: GET
- name: BAKER Player Full-Season Projections Fantasy Ceiling
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-fullseason-projections-fantasy-ceiling
    method: GET
- name: BAKER Player Full-Season Projections Fantasy Floor
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-fullseason-projections-fantasy-floor
    method: GET
- name: BAKER Player Rest-of-Season Projections Average
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-average
    method: GET
- name: BAKER Player Rest-of-Season Projections Fantasy Ceiling
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-fantasy-ceiling
    method: GET
- name: BAKER Player Rest-of-Season Projections Fantasy Floor
  endpoint:
    path: /developers/api-documentation/nfl#baker-player-restofseason-projections-fantasy-floor
    method: GET
- name: Projected Fantasy Defense Game Stats With DFS Salaries
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-game-stats-with-dfs-salaries
    method: GET
- name: Projected Fantasy Defense Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-season-stats-with-adp
    method: GET
- name: Projected Player Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-team
    method: GET
- name: Projected Player Game Stats - by Week
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-week
    method: GET
- name: Projected Player Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp
    method: GET
- name: Projected Player Season Stats With ADP - by Team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp--by-team
    method: GET
- name: IDP Projected Player Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#idp-projected-player-game-stats--by-team
    method: GET
- name: IDP Projected Player Game Stats - by Week
  endpoint:
    path: /developers/api-documentation/nfl#idp-projected-player-game-stats--by-week
    method: GET
- name: DFS Slate Ownership Projections - by Slate
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--by-slate
    method: GET
- name: DFS Slate Ownership Projections - Upcoming
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--upcoming
    method: GET
- name: Fantasy Player Ownership Percentages (Season-Long) - by Week
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-player-ownership-percentages-seasonlong--by-week
    method: GET
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slates--by-date
    method: GET
- name: DFS Slates - by Week
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slates--by-week
    method: GET
- name: Fantasy Defense Game Stats - All
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-game-stats--all
    method: GET
- name: Fantasy Defense Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-game-stats--by-team
    method: GET
- name: Fantasy Defense Season Stats - All
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--all
    method: GET
- name: Fantasy Defense Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--by-team
    method: GET
- name: Fantasy Points - by Week
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-points--by-week
    method: GET
- name: Premium News
  endpoint:
    path: /developers/api-documentation/nfl#premium-news
    method: GET
- name: Premium News - by Date
  endpoint:
    path: /developers/api-documentation/nfl#premium-news--by-date
    method: GET
- name: Premium News - by Team
  endpoint:
    path: /developers/api-documentation/nfl#premium-news--by-team
    method: GET
- name: News
  endpoint:
    path: /developers/api-documentation/nfl#news
    method: GET
- name: News - by Date
  endpoint:
    path: /developers/api-documentation/nfl#news--by-date
    method: GET
- name: News - by Player
  endpoint:
    path: /developers/api-documentation/nfl#news--by-player
    method: GET
- name: News - by Team
  endpoint:
    path: /developers/api-documentation/nfl#news--by-team
    method: GET
- name: 'Team & Player Stats: Final Only'
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
- name: Player Game Red Zone Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats
    method: GET
- name: Player Game Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-five
    method: GET
- name: Player Game Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-ten
    method: GET
- name: headshots
  endpoint:
    path: /developers/api-documentation/nfl#headshots
    method: GET
    data_selector: Headshot[]
- name: player_game_data
  endpoint:
    path: /api/player_game_data
    method: GET
    data_selector: records
    params: {}
- name: player_stats
  endpoint:
    path: /player_stats
    method: GET
    data_selector: records
    params: {}
- name: PlayerOwnership
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-player-ownership-percentages-seasonlong--by-week
    method: GET
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/nfl#player-season-stats
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nfl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nfl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nfl#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nfl#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nfl#betting-events--by-date
    method: GET
    data_selector: records
- name: Projections
  endpoint:
    path: /developers/coverage-guide/fantasy-feeds/projections
    method: GET
    data_selector: records
- name: Projected Player Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp
    method: GET
    data_selector: records
- name: Projected Player Season Stats With ADP - by Team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp--by-team
    method: GET
    data_selector: records
- name: Player Season Red Zone Stats
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats
    method: GET
- name: Player Season Red Zone Stats (Inside Five)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-five
    method: GET
- name: Player Season Red Zone Stats (Inside Ten)
  endpoint:
    path: /developers/api-documentation/nfl#player-season-red-zone-stats-inside-ten
    method: GET
- name: BettingOutcomeResult
  endpoint:
    path: /betting-outcomes/result
    method: GET
    data_selector: results
- name: BettingResultingMetadata
  endpoint:
    path: /betting-results/metadata
    method: GET
    data_selector: metadata
- name: BettingSplit
  endpoint:
    path: /betting/splits
    method: GET
    data_selector: splits
- name: BoxScoreV3
  endpoint:
    path: /boxscore/v3
    method: GET
    data_selector: boxScores
- name: Bye
  endpoint:
    path: /bye/weeks
    method: GET
    data_selector: byeWeeks
- name: ConsensusOutcome
  endpoint:
    path: /consensus/outcomes
    method: GET
    data_selector: outcomes
- name: DepthChart
  endpoint:
    path: /depth-chart
    method: GET
    data_selector: depthCharts
- name: DfsSlate
  endpoint:
    path: /dfs/slate
    method: GET
    data_selector: slates
- name: player_season_stats
  endpoint:
    path: /developers/api-documentation/nfl#player-season-third-down-stats
    method: GET
    data_selector: records
    params: {}
- name: PlayStat
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-final
    method: GET
    data_selector: plays
    params: {}
- name: DfsSlatePlayer
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slates--by-date
    method: GET
    data_selector: records
- name: DfsSlatePlayerOwnershipProjection
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--by-slate
    method: GET
    data_selector: records
- name: DfsSlateWithOwnershipProjection
  endpoint:
    path: /developers/api-documentation/nfl#dfs-slate-ownership-projections--upcoming
    method: GET
    data_selector: records
- name: FantasyDefenseGame
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
    data_selector: records
- name: Projections
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-game-stats-with-dfs-salaries
    method: GET
- name: PlayStat
  endpoint:
    path: /developers/api-documentation/nfl#play-stat
    method: GET
    data_selector: records
    params: {}
- name: Quarter
  endpoint:
    path: /developers/api-documentation/nfl#quarter
    method: GET
    data_selector: records
    params: {}
- name: Referee
  endpoint:
    path: /developers/api-documentation/nfl#referees
    method: GET
    data_selector: records
    params: {}
- name: Schedule
  endpoint:
    path: /developers/api-documentation/nfl#schedules
    method: GET
    data_selector: records
    params: {}
- name: FantasyDefenseSeasonStatsAll
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--all
    method: GET
    data_selector: records
    params: {}
- name: FantasyDefenseSeasonStatsByTeam
  endpoint:
    path: /developers/api-documentation/nfl#fantasy-defense-season-stats--by-team
    method: GET
    data_selector: records
    params: {}
- name: Projections
  endpoint:
    path: /developers/api-documentation/nfl#projected-fantasy-defense-season-stats-with-adp
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-final
    method: GET
    data_selector: records
    params: {}
- name: games_by_week_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-week-final
    method: GET
    data_selector: records
    params: {}
- name: games_by_season_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-season-final
    method: GET
    data_selector: records
    params: {}
- name: games_by_season_live_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-season-live--final
    method: GET
    data_selector: records
    params: {}
- name: games_by_week_live_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-week-live--final
    method: GET
    data_selector: records
    params: {}
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-live--final
    method: GET
    data_selector: records
    params: {}
- name: game_betting_split
  endpoint:
    path: /developers/api-documentation/nfl#betting-splits--by-game
    method: GET
    data_selector: records
    params: {}
- name: 'Game Lines: Pre-Game Lines'
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: 'Game Lines: In-Play Lines'
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: 'Game Lines: Pre-Game Lines Plus'
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: 'Game Lines: In-Play Lines Plus'
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: scoring_detail
  endpoint:
    path: /scoring/detail
    method: GET
    data_selector: records
- name: scoring_play
  endpoint:
    path: /scoring/play
    method: GET
    data_selector: records
- name: sportsbook
  endpoint:
    path: /sportsbooks/active
    method: GET
    data_selector: records
- name: stadium
  endpoint:
    path: /stadiums
    method: GET
    data_selector: records
- name: standing
  endpoint:
    path: /standings
    method: GET
    data_selector: records
- name: Team
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--by-active
    method: GET
- name: TeamBasic
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles-basic--all
    method: GET
- name: TeamDepthChart
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--by-active
    method: GET
- name: TeamGame
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
- name: game_stats
  endpoint:
    path: /api/gamestats
    method: GET
    data_selector: records
    params: {}
- name: GameOdds
  endpoint:
    path: /v4/odds
    method: GET
    data_selector: odds
    params: {}
- name: GameProbability
  endpoint:
    path: /v4/probabilities
    method: GET
    data_selector: probabilities
    params: {}
- name: Injury
  endpoint:
    path: /v4/injuries
    method: GET
    data_selector: injuries
    params: {}
- name: News
  endpoint:
    path: /v4/news
    method: GET
    data_selector: news
    params: {}
- name: PlayByPlay
  endpoint:
    path: /v4/playbyplay
    method: GET
    data_selector: plays
    params: {}
- name: team_game_stats
  endpoint:
    path: /team/game/stats
    method: GET
    data_selector: stats
    params: {}
- name: Matchups_Trends_Splits
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
- name: Team_Season_Stats
  endpoint:
    path: /developers/api-documentation/nfl#team-season-stats
    method: GET
- name: player
  endpoint:
    path: /developers/api-documentation/nfl#player-details--all
    method: GET
    data_selector: records
- name: player_basic
  endpoint:
    path: /developers/api-documentation/nfl#player-profiles--all
    method: GET
    data_selector: records
- name: player_detail
  endpoint:
    path: /developers/api-documentation/nfl#player-details--by-team
    method: GET
    data_selector: records
- name: season_stats
  endpoint:
    path: /api/v1/season_stats
    method: GET
    data_selector: data
    params: {}
- name: Player Game Stats - Final
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
- name: Player Game Stats - by Week
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-week-final
    method: GET
- name: Player Game Stats - by Team
  endpoint:
    path: /developers/api-documentation/nfl#player-game-stats--by-team-final
    method: GET
- name: team_stats
  endpoint:
    path: /api/v1/team_stats
    method: GET
    data_selector: data
    params: {}
- name: player_game_stats
  endpoint:
    path: /v1/player_game_stats
    method: GET
    data_selector: records
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-team
    method: GET
    data_selector: records
    params: {}
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats--by-week
    method: GET
    data_selector: records
    params: {}
- name: matchup_stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
- name: betting_trends_by_matchup
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
    data_selector: records
- name: betting_trends_by_team
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-team
    method: GET
    data_selector: records
- name: timeframes
  endpoint:
    path: /developers/coverage-guide/competition-feeds/utility-endpoints
    method: GET
    data_selector: records
- name: transactions_by_date
  endpoint:
    path: /developers/api-documentation/nfl#transactions--by-date
    method: GET
    data_selector: records
- name: player_game_stats
  endpoint:
    path: /api/v1/player_game_stats
    method: GET
    data_selector: records
- name: offensive_skill_position_players
  endpoint:
    path: /offensive_skill_position_players
    method: GET
    data_selector: players
    params: {}
- name: team_player_stats_final_only
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
- name: player_game_red_zone_stats
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats
    method: GET
- name: player_game_red_zone_stats_inside_five
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-five
    method: GET
- name: player_game_red_zone_stats_inside_ten
  endpoint:
    path: /developers/api-documentation/nfl#player-game-red-zone-stats-inside-ten
    method: GET
- name: player_game_stats
  endpoint:
    path: /api/v1/player_game_stats
    method: GET
    data_selector: data
    params: {}
- name: player_stats
  endpoint:
    path: /api/v1/player_stats
    method: GET
    data_selector: records
- name: PlayerOwnership
  endpoint:
    path: /developers/coverage-guide/fantasy-feeds/projections
    method: GET
    data_selector: records
    params: {}
- name: PlayerSeason
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: projections
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp
    method: GET
    data_selector: records
    params: {}
- name: projections_by_team
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-season-stats-with-adp--by-team
    method: GET
    data_selector: records
    params: {}
- name: Game Odds (Single Sportsbook)
  endpoint:
    path: /widgets/single-game-odds
    method: GET
    data_selector: game_odds
- name: Game Odds (Best Odds)
  endpoint:
    path: /widgets/single-game-odds-best
    method: GET
    data_selector: best_odds
- name: Game Odds (Odds Comparison)
  endpoint:
    path: /widgets/single-game-odds-comparison
    method: GET
    data_selector: odds_comparison
- name: Futures
  endpoint:
    path: /widgets/futures-comparison
    method: GET
    data_selector: futures
- name: Player Props
  endpoint:
    path: /widgets/player-props
    method: GET
    data_selector: player_props
- name: Prop Finder
  endpoint:
    path: /widgets/prop-finder
    method: GET
    data_selector: prop_finder
- name: Bet Tracker
  endpoint:
    path: /widgets/bet-tracker
    method: GET
    data_selector: bet_tracker
- name: Odds Comparison
  endpoint:
    path: /widgets/odds-comparison
    method: GET
    data_selector: odds_comparison_full
- name: Futures Comparison
  endpoint:
    path: /widgets/futures-comparison
    method: GET
    data_selector: futures_comparison_full
- name: Odds Movement
  endpoint:
    path: /widgets/odds-movement
    method: GET
    data_selector: odds_movement
- name: Injuries
  endpoint:
    path: /widgets/injuries
    method: GET
    data_selector: injuries
- name: player_season_stats
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
- name: PlayerSeasonStats
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
- name: scores
  endpoint:
    path: /v4/scores
    method: GET
    data_selector: scores
    params: {}
- name: players
  endpoint:
    path: /v4/players
    method: GET
    data_selector: players
    params: {}
- name: PlayStat
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-final
    method: GET
    data_selector: records
- name: PlayByPlayFinal
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-final
    method: GET
    data_selector: records
- name: PlayByPlayByTeamFinal
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play--by-team-final
    method: GET
    data_selector: records
- name: PlayByPlayLiveFinal
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-live--final
    method: GET
    data_selector: records
- name: PlayByPlayDelta
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-delta
    method: GET
    data_selector: records
- name: team_player_stats_final
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
    data_selector: records
    params: {}
- name: team_player_stats_live_final
  endpoint:
    path: /developers/api-documentation/nfl#box-score-live--final
    method: GET
    data_selector: records
    params: {}
- name: play_by_play_final
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-final
    method: GET
    data_selector: records
    params: {}
- name: play_by_play_live_final
  endpoint:
    path: /developers/api-documentation/nfl#play-by-play-live--final
    method: GET
    data_selector: records
    params: {}
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-final
    method: GET
- name: Games - by Week [Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-week-final
    method: GET
- name: Games - by Season [Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-season-final
    method: GET
- name: Games - by Season [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-season-live--final
    method: GET
- name: Games - by Week [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-week-live--final
    method: GET
- name: Games - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#games--by-date-live--final
    method: GET
- name: Game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: ScoringDetail
  endpoint:
    path: /scoringdetails
    method: GET
    data_selector: records
- name: ScoringPlay
  endpoint:
    path: /scoringplays
    method: GET
    data_selector: records
- name: Sportsbook
  endpoint:
    path: /sportsbooks
    method: GET
    data_selector: records
- name: Stadium
  endpoint:
    path: /stadiums
    method: GET
    data_selector: records
- name: Standing
  endpoint:
    path: /standings
    method: GET
    data_selector: records
- name: Team Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--by-active
    method: GET
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--all
    method: GET
- name: Team Profiles - by Season
  endpoint:
    path: /developers/api-documentation/nfl#team-profiles--by-season
    method: GET
- name: Depth Charts - by Active
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--by-active
    method: GET
- name: Depth Charts - All
  endpoint:
    path: /developers/api-documentation/nfl#depth-charts--all
    method: GET
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score-final
    method: GET
- name: Box Scores - by Week [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-scores--by-week-final
    method: GET
- name: Box Score - by Team [Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score--by-team-final
    method: GET
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nfl#player-game-logs--by-season
    method: GET
- name: Team Game Stats - by Game [Final]
  endpoint:
    path: /developers/api-documentation/nfl#team-game-stats--by-game-final
    method: GET
- name: Box Score [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score-live--final
    method: GET
- name: Box Score - by Team [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#box-score--by-team-live--final
    method: GET
- name: Box Scores Delta - by Week
  endpoint:
    path: /developers/api-documentation/nfl#box-scores-delta--by-week
    method: GET
- name: Team Game Stats [Live & Final]
  endpoint:
    path: /developers/api-documentation/nfl#team-game-stats-live--final
    method: GET
- name: game_stats
  endpoint:
    path: /game/stats
    method: GET
    data_selector: records
    params: {}
- name: game_statistics
  endpoint:
    path: /game/statistics
    method: GET
    data_selector: records
    params: {}
- name: standings
  endpoint:
    path: /developers/api-documentation/mlb#standings
    method: GET
    data_selector: Standing[]
- name: player_profiles_active
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-active
    method: GET
    data_selector: PlayerBasic[]
- name: player_profiles_free_agents
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-free-agents
    method: GET
    data_selector: PlayerBasic[]
- name: team_profiles_season
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--by-season
    method: GET
    data_selector: Team[]
- name: player_profiles_team
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: team_profiles_active
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: team_profiles_all
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--all
    method: GET
    data_selector: Team[]
- name: stadiums
  endpoint:
    path: /developers/api-documentation/mlb#stadiums
    method: GET
    data_selector: Stadium[]
- name: are_games_in_progress
  endpoint:
    path: /developers/api-documentation/mlb#are-games-in-progress
    method: GET
    data_selector: boolean
- name: season_current
  endpoint:
    path: /developers/api-documentation/mlb#season--current
    method: GET
    data_selector: Season
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: sportsbooks_active
  endpoint:
    path: /developers/api-documentation/mlb#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/mlb#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: schedules
  endpoint:
    path: /developers/api-documentation/mlb#schedules
    method: GET
    data_selector: Game[]
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-final
    method: GET
    data_selector: Game[]
- name: games_basic_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#games-basic--by-date-final
    method: GET
    data_selector: ScoreBasic[]
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-live--final
    method: GET
    data_selector: Game[]
- name: games_basic_by_date_live_final
  endpoint:
    path: /developers/api-documentation/mlb#games-basic--by-date-live--final
    method: GET
    data_selector: ScoreBasic[]
- name: team_game_stats_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame[]
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/mlb#box-score-final
    method: GET
    data_selector: BoxScore
- name: player_game_stats_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#player-game-stats--by-date-final
    method: GET
    data_selector: PlayerGame[]
- name: team_season_stats
  endpoint:
    path: /developers/api-documentation/mlb#team-season-stats
    method: GET
    data_selector: TeamSeason[]
- name: player_season_stats_away
  endpoint:
    path: /developers/api-documentation/mlb#player-season-stats--by-away
    method: GET
    data_selector: PlayerSeason[]
- name: player_season_stats_home
  endpoint:
    path: /developers/api-documentation/mlb#player-season-stats--by-home
    method: GET
    data_selector: PlayerSeason[]
- name: player_season_split_stats
  endpoint:
    path: /developers/api-documentation/mlb#player-season-split-stats
    method: GET
    data_selector: PlayerSeason[]
- name: player_season_stats
  endpoint:
    path: /developers/api-documentation/mlb#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
- name: player_season_stats_team
  endpoint:
    path: /developers/api-documentation/mlb#player-season-stats--by-team
    method: GET
    data_selector: PlayerSeason[]
- name: player_season_stats_split_team
  endpoint:
    path: /developers/api-documentation/mlb#player-season-stats-split--by-team
    method: GET
    data_selector: PlayerSeason[]
- name: team_game_logs_season
  endpoint:
    path: /developers/api-documentation/mlb#team-game-logs--by-season
    method: GET
    data_selector: TeamGame[]
- name: player_game_logs_season
  endpoint:
    path: /developers/api-documentation/mlb#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
- name: Matchup Stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-team
    method: GET
- name: Team Season Stats
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
- name: season_statistics
  endpoint:
    path: /season_statistics
    method: GET
    data_selector: records
    params: {}
- name: tackles_for_loss_differential
  endpoint:
    path: /api/tackles_for_loss_differential
    method: GET
    data_selector: data
    params: {}
- name: quarterback_sacks_differential
  endpoint:
    path: /api/quarterback_sacks_differential
    method: GET
    data_selector: data
    params: {}
- name: tackles_for_loss_percentage
  endpoint:
    path: /api/tackles_for_loss_percentage
    method: GET
    data_selector: data
    params: {}
- name: quarterback_hits_percentage
  endpoint:
    path: /api/quarterback_hits_percentage
    method: GET
    data_selector: data
    params: {}
- name: times_sacked_percentage
  endpoint:
    path: /api/times_sacked_percentage
    method: GET
    data_selector: data
    params: {}
- name: opponent_red_zone_percentage
  endpoint:
    path: /api/opponent_red_zone_percentage
    method: GET
    data_selector: data
    params: {}
- name: kickoffs
  endpoint:
    path: /api/kickoffs
    method: GET
    data_selector: data
    params: {}
- name: field_goal_attempts
  endpoint:
    path: /api/field_goal_attempts
    method: GET
    data_selector: data
    params: {}
- name: field_goals_made
  endpoint:
    path: /api/field_goals_made
    method: GET
    data_selector: data
    params: {}
- name: Matchups_Stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: Matchups
    params: {}
- name: Betting_Trends_By_Matchup
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-matchup
    method: GET
    data_selector: BettingTrendsMatchup
    params: {}
- name: Betting_Trends_By_Team
  endpoint:
    path: /developers/api-documentation/nfl#betting-trends--by-team
    method: GET
    data_selector: BettingTrendsTeam
    params: {}
- name: Timeframes
  endpoint:
    path: /developers/api-documentation/nfl#timeframes
    method: GET
    data_selector: Timeframes
    params: {}
- name: Transactions_By_Date
  endpoint:
    path: /developers/api-documentation/nfl#transactions--by-date
    method: GET
    data_selector: Transactions
    params: {}
- name: Play By Play Final
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-final
    method: GET
    data_selector: PlayByPlay
    params: {}
- name: Play By Play Live & Final
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-live--final
    method: GET
    data_selector: PlayByPlay
    params: {}
- name: Play By Play Delta
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-delta
    method: GET
    data_selector: PlayByPlay[]
    params: {}
- name: Transactions
  endpoint:
    path: /developers/api-documentation/mlb#transactions
    method: GET
    data_selector: Transaction[]
    params: {}
- name: Starting Lineups - by Date
  endpoint:
    path: /developers/api-documentation/mlb#starting-lineups--by-date
    method: GET
    data_selector: StartingLineups[]
    params: {}
- name: Depth Charts
  endpoint:
    path: /developers/api-documentation/mlb#depth-charts
    method: GET
    data_selector: TeamDepthChart[]
    params: {}
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Team Hitting vs. Starting Pitcher
  endpoint:
    path: /developers/api-documentation/mlb#team-hitting-vs-starting-pitcher
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-active
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-free-agents
    method: GET
    data_selector: Player[]
    params: {}
- name: Batter vs. Pitcher Stats
  endpoint:
    path: /developers/api-documentation/mlb#batter-vs-pitcher-stats
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Players Details - by Team
  endpoint:
    path: /developers/api-documentation/mlb#players-details--by-team
    method: GET
    data_selector: Player[]
    params: {}
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
    params: {}
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
    params: {}
- name: Betting Splits by - Betting Market
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits-by--betting-market
    method: GET
    data_selector: BettingMarketSplit
    params: {}
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
    params: {}
- name: player_news
  endpoint:
    path: /developers/api-documentation/mlb#news
    method: GET
    data_selector: News[]
    params: {}
- name: premium_news
  endpoint:
    path: /developers/api-documentation/mlb#premium-news
    method: GET
    data_selector: News[]
    params: {}
- name: headshots
  endpoint:
    path: /developers/api-documentation/mlb#headshots
    method: GET
    data_selector: Headshot[]
    params: {}
- name: Game Odds (Single Sportsbook)
  endpoint:
    path: /widgets/single-game-odds
    method: GET
- name: Game Odds (Best Odds)
  endpoint:
    path: /widgets/best-odds
    method: GET
- name: Game Odds (Odds Comparison)
  endpoint:
    path: /widgets/odds-comparison
    method: GET
- name: Futures
  endpoint:
    path: /widgets/futures-comparison
    method: GET
- name: Player Props
  endpoint:
    path: /widgets/player-props
    method: GET
- name: Prop Finder
  endpoint:
    path: /widgets/prop-finder
    method: GET
- name: Bet Tracker
  endpoint:
    path: /widgets/bet-tracker
    method: GET
- name: Odds Comparison
  endpoint:
    path: /widgets/odds-comparison
    method: GET
- name: Futures Comparison
  endpoint:
    path: /widgets/futures-comparison
    method: GET
- name: Odds Movement
  endpoint:
    path: /widgets/odds-movement
    method: GET
- name: Injuries
  endpoint:
    path: /widgets/injuries
    method: GET
- name: standings
  endpoint:
    path: /standings
    method: GET
    data_selector: Standing[]
- name: team_profiles_active
  endpoint:
    path: /teams/active
    method: GET
    data_selector: Team[]
- name: player_profiles_active
  endpoint:
    path: /players/active
    method: GET
    data_selector: PlayerBasic[]
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: Game[]
- name: games_final
  endpoint:
    path: /games/final
    method: GET
    data_selector: Game[]
- name: player_details_by_active
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-active
    method: GET
    data_selector: Player[]
- name: player_details_by_free_agent
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-free-agent
    method: GET
    data_selector: Player[]
- name: player_details_by_team
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-team
    method: GET
    data_selector: Player[]
- name: all_stars
  endpoint:
    path: /developers/api-documentation/nba#allstars
    method: GET
    data_selector: PlayerInfo[]
- name: starting_lineups_by_date
  endpoint:
    path: /developers/api-documentation/nba#starting-lineups--by-date
    method: GET
    data_selector: StartingLineups[]
- name: player_details_by_injured
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-injured
    method: GET
    data_selector: Player[]
- name: transactions
  endpoint:
    path: /developers/api-documentation/nba#transactions
    method: GET
    data_selector: Transaction[]
- name: depth_charts
  endpoint:
    path: /developers/api-documentation/nba#depth-charts
    method: GET
    data_selector: TeamDepthChart[]
- name: period_game_odds_by_date
  endpoint:
    path: /developers/api-documentation/nba#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
- name: pre_game_odds_by_date
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
- name: pre_game_and_period_game_odds_by_date_sportsbook_group
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: period_game_odds_line_movement
  endpoint:
    path: /developers/api-documentation/nba#period-game-odds-line-movement
    method: GET
    data_selector: GameInfo[]
- name: pre_game_odds_line_movement
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
- name: pre_game_and_period_game_odds_line_movement_with_resulting_sportsbook_group
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
- name: in_game_odds_by_date_sportsbook_group
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: in_game_odds_line_movement_sportsbook_group
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: standings
  endpoint:
    path: /developers/api-documentation/mlb#standings
    method: GET
    data_selector: Standing[]
- name: player_profiles_active
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-active
    method: GET
    data_selector: PlayerBasic[]
- name: player_profiles_free_agents
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-free-agents
    method: GET
    data_selector: PlayerBasic[]
- name: team_profiles_season
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--by-season
    method: GET
    data_selector: Team[]
- name: player_profiles_team
  endpoint:
    path: /developers/api-documentation/mlb#player-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: team_profiles_active
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: team_profiles_all
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--all
    method: GET
    data_selector: Team[]
- name: stadiums
  endpoint:
    path: /developers/api-documentation/mlb#stadiums
    method: GET
    data_selector: Stadium[]
- name: are_games_in_progress
  endpoint:
    path: /developers/api-documentation/mlb#are-games-in-progress
    method: GET
    data_selector: boolean
- name: season_current
  endpoint:
    path: /developers/api-documentation/mlb#season--current
    method: GET
    data_selector: Season
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/mlb#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: schedules
  endpoint:
    path: /developers/api-documentation/mlb#schedules
    method: GET
    data_selector: Game[]
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-final
    method: GET
    data_selector: Game[]
- name: games_basic_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#games-basic--by-date-final
    method: GET
    data_selector: ScoreBasic[]
- name: team_game_stats_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame[]
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/mlb#box-score-final
    method: GET
    data_selector: BoxScore
- name: player_game_stats_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#player-game-stats--by-date-final
    method: GET
    data_selector: PlayerGame[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-event
    method: GET
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-game
    method: GET
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-market-type
    method: GET
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-player-props--by-game
    method: GET
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-season
    method: GET
- name: Betting Results - by Market
  endpoint:
    path: /developers/api-documentation/nba#betting-results--by-market
    method: GET
- name: Betting Market
  endpoint:
    path: /developers/api-documentation/nba#betting-market
    method: GET
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/nba#betting-futures--by-season
    method: GET
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-matchup
    method: GET
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-team
    method: GET
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-betting-market
    method: GET
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/nba#projected-player-game-stats--by-date
    method: GET
- name: Projected Player Season Stats
  endpoint:
    path: /developers/api-documentation/nba#projected-player-season-stats
    method: GET
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nba#dfs-slates--by-date
    method: GET
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/nba#fantasy-points--by-date
    method: GET
- name: premium_news
  endpoint:
    path: /developers/api-documentation/nba#premium-news
    method: GET
    data_selector: News[]
- name: news_by_date
  endpoint:
    path: /developers/api-documentation/nba#premium-news--by-date
    method: GET
    data_selector: News[]
- name: basic_news
  endpoint:
    path: /developers/data-dictionary/nba#news
    method: GET
    data_selector: News[]
- name: news_by_player
  endpoint:
    path: /developers/api-documentation/nba#news--by-player
    method: GET
    data_selector: News[]
- name: headshots
  endpoint:
    path: /developers/api-documentation/nba#headshots
    method: GET
    data_selector: Headshot[]
- name: Play By Play Final
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-final
    method: GET
    data_selector: PlayByPlay
    params: {}
- name: Play By Play Live & Final
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-live--final
    method: GET
    data_selector: PlayByPlay
    params: {}
- name: Play By Play Delta
  endpoint:
    path: /developers/api-documentation/mlb#play-by-play-delta
    method: GET
    data_selector: PlayByPlay[]
    params: {}
- name: Transactions
  endpoint:
    path: /developers/api-documentation/mlb#transactions
    method: GET
    data_selector: Transaction[]
    params: {}
- name: Starting Lineups - by Date
  endpoint:
    path: /developers/api-documentation/mlb#starting-lineups--by-date
    method: GET
    data_selector: StartingLineups[]
    params: {}
- name: Depth Charts
  endpoint:
    path: /developers/api-documentation/mlb#depth-charts
    method: GET
    data_selector: TeamDepthChart[]
    params: {}
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Team Hitting vs. Starting Pitcher
  endpoint:
    path: /developers/api-documentation/mlb#team-hitting-vs-starting-pitcher
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-active
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/mlb#player-details--by-free-agents
    method: GET
    data_selector: Player[]
    params: {}
- name: Batter vs. Pitcher Stats
  endpoint:
    path: /developers/api-documentation/mlb#batter-vs-pitcher-stats
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Players Details - by Team
  endpoint:
    path: /developers/api-documentation/mlb#players-details--by-team
    method: GET
    data_selector: Player[]
    params: {}
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#pregame-and-period-game-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/mlb#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/mlb#period-game-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: standings
  endpoint:
    path: /standings
    method: GET
    data_selector: Standing[]
    params: {}
- name: player_details_active
  endpoint:
    path: /players/active
    method: GET
    data_selector: PlayerBasic[]
    params: {}
- name: player_details_free_agents
  endpoint:
    path: /players/free-agents
    method: GET
    data_selector: PlayerBasic[]
    params: {}
- name: team_profiles_season
  endpoint:
    path: /teams/season
    method: GET
    data_selector: Team[]
    params: {}
- name: players_profiles_team
  endpoint:
    path: /teams/{tricode}/players
    method: GET
    data_selector: PlayerBasic[]
    params: {}
- name: stadiums
  endpoint:
    path: /stadiums
    method: GET
    data_selector: Stadium[]
    params: {}
- name: schedules_basic
  endpoint:
    path: /schedules/basic
    method: GET
    data_selector: ScheduleBasic[]
    params: {}
- name: scores_games_final
  endpoint:
    path: /games/date/final
    method: GET
    data_selector: Game[]
    params: {}
- name: team_game_stats_final
  endpoint:
    path: /team/game/stats/date/final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: PlayByPlayFinal
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
    data_selector: PlayByPlay
- name: PlayByPlayLiveFinal
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-live--final
    method: GET
    data_selector: PlayByPlay
- name: PlayByPlayDelta
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-delta
    method: GET
    data_selector: PlayByPlay[]
- name: Transactions
  endpoint:
    path: /developers/api-documentation/nhl#transactions
    method: GET
    data_selector: Transaction[]
- name: DepthChartsGoalies
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
    data_selector: TeamGoalieDepthChart[]
- name: PlayerDetailsByInjured
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-injured
    method: GET
    data_selector: Player[]
- name: StartingGoaltendersByDate
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
    data_selector: StartingGoaltenders[]
- name: PlayersDetailsByTeam
  endpoint:
    path: /developers/api-documentation/nhl#players-details--by-team
    method: GET
    data_selector: Player[]
- name: PlayerDetailsByActive
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-active
    method: GET
    data_selector: Player[]
- name: PlayerDetailsByFreeAgents
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-free-agents
    method: GET
    data_selector: Player[]
- name: LineCombinationsBySeason
  endpoint:
    path: /developers/api-documentation/nhl#line-combinations--by-season
    method: GET
    data_selector: TeamLine[]
- name: PreGameAndPeriodGameOddsByDateSportsbookGroup
  endpoint:
    path: /developers/api-documentation/nhl#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
- name: PreGameOddsByDate
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
- name: PeriodGameOddsByDate
  endpoint:
    path: /developers/api-documentation/nhl#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
- name: InGameOddsByDate
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
- name: InGameOddsLineMovementWithResultingSportsbookGroup
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/mlb#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/mlb#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
    params: {}
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
    params: {}
- name: Betting Splits by - Betting Market
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits-by--betting-market
    method: GET
    data_selector: BettingMarketSplit
    params: {}
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
    params: {}
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/mlb#projected-player-game-stats--by-date
    method: GET
    data_selector: PlayerGameProjection[]
    params: {}
- name: Projected Player Season Stats With ADP
  endpoint:
    path: /developers/api-documentation/mlb#projected-player-season-stats-with-adp
    method: GET
    data_selector: PlayerSeasonProjection[]
    params: {}
- name: DFS Slate Ownership Projections - by Slate
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slate-ownership-projections--by-slate
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
    params: {}
- name: DFS Slate Ownership Projections - Upcoming
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slate-ownership-projections--upcoming
    method: GET
    data_selector: DfsSlateWithOwnershipProjection[]
    params: {}
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slates--by-date
    method: GET
    data_selector: DfsSlate[]
    params: {}
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/mlb#fantasy-points--by-date
    method: GET
    data_selector: FantasyGame[]
    params: {}
- name: player_news_notes
  endpoint:
    path: /developers/api-documentation/mlb#news
    method: GET
    data_selector: News[]
    params: {}
- name: news_by_date
  endpoint:
    path: /developers/api-documentation/mlb#news--by-date
    method: GET
    data_selector: News[]
    params: {}
- name: news_by_player
  endpoint:
    path: /developers/api-documentation/mlb#news--by-player
    method: GET
    data_selector: News[]
    params: {}
- name: premium_news
  endpoint:
    path: /developers/api-documentation/mlb#premium-news
    method: GET
    data_selector: News[]
    params: {}
- name: premium_news_by_date
  endpoint:
    path: /developers/api-documentation/mlb#premium-news--by-date
    method: GET
    data_selector: News[]
    params: {}
- name: headshots
  endpoint:
    path: /developers/api-documentation/mlb#headshots
    method: GET
    data_selector: Headshot[]
    params: {}
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/nhl#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Results - by Market
  endpoint:
    path: /developers/api-documentation/nhl#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
- name: Betting Results - by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#betting-results--by-market-sportsbook-group
    method: GET
    data_selector: BettingMarketResult
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/nhl#projected-player-game-stats--by-date
    method: GET
    data_selector: PlayerGameProjection[]
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nhl#dfs-slates--by-date
    method: GET
    data_selector: DfsSlate[]
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/nhl#fantasy-points--by-date
    method: GET
    data_selector: FantasyGame[]
- name: News
  endpoint:
    path: /developers/api-documentation/nhl#news
    method: GET
    data_selector: News[]
- name: News - by Date
  endpoint:
    path: /developers/api-documentation/nhl#news--by-date
    method: GET
    data_selector: News[]
- name: News - by Player
  endpoint:
    path: /developers/api-documentation/nhl#news--by-player
    method: GET
    data_selector: News[]
- name: Premium News
  endpoint:
    path: /developers/api-documentation/nhl#premium-news
    method: GET
    data_selector: News[]
- name: Premium News - by Date
  endpoint:
    path: /developers/api-documentation/nhl#premium-news--by-date
    method: GET
    data_selector: News[]
- name: headshots
  endpoint:
    path: /developers/api-documentation/nhl#headshots
    method: GET
    data_selector: Headshot[]
- name: Standings
  endpoint:
    path: /developers/api-documentation/nba#standings
    method: GET
    data_selector: Standing[]
- name: Team Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--all
    method: GET
    data_selector: Team[]
- name: Players Profiles - by Team
  endpoint:
    path: /developers/api-documentation/nba#players-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: Player Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nba#player-profiles--by-active
    method: GET
    data_selector: PlayerBasic[]
- name: Player Profiles - by Free Agent
  endpoint:
    path: /developers/api-documentation/nba#player-profiles--by-free-agent
    method: GET
    data_selector: PlayerBasic[]
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/nba#stadiums
    method: GET
    data_selector: Stadium[]
- name: Referees
  endpoint:
    path: /developers/api-documentation/nba#referees
    method: GET
    data_selector: Referee[]
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/nba#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/nba#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Are Games In Progress
  endpoint:
    path: /developers/api-documentation/nba#are-games-in-progress
    method: GET
    data_selector: boolean
- name: Schedules
  endpoint:
    path: /developers/api-documentation/nba#schedules
    method: GET
    data_selector: Game[]
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nba#games--by-date-final
    method: GET
    data_selector: Game[]
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/nba#box-score-final
    method: GET
    data_selector: BoxScore
- name: Play By Play [Final]
  endpoint:
    path: /developers/api-documentation/nba#play-by-play-final
    method: GET
    data_selector: PlayByPlay
- name: Conference Hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-football#conference-hierarchy
    method: GET
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-profiles--all
    method: GET
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-profiles--by-team
    method: GET
- name: Schedules
  endpoint:
    path: /developers/api-documentation/ncaa-football#schedules
    method: GET
- name: Games by Date - [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#games-by-date--final
    method: GET
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-active
    method: GET
- name: Player Details - by Free Agent
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-free-agent
    method: GET
- name: Player Details - by Team
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-team
    method: GET
- name: All-Stars
  endpoint:
    path: /developers/api-documentation/nba#allstars
    method: GET
- name: Starting Lineups - by Date
  endpoint:
    path: /developers/api-documentation/nba#starting-lineups--by-date
    method: GET
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-injured
    method: GET
- name: Transactions
  endpoint:
    path: /developers/api-documentation/nba#transactions
    method: GET
- name: Depth Charts
  endpoint:
    path: /developers/api-documentation/nba#depth-charts
    method: GET
- name: Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/nba#period-game-odds--by-date
    method: GET
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds--by-date
    method: GET
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nba#period-game-odds-line-movement
    method: GET
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds-line-movement
    method: GET
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds--by-date-sportsbook-group
    method: GET
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds-line-movement-sportsbook-group
    method: GET
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-game-logs--by-season
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats--by-team
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Team Season Stats & Standings
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-season-stats--standings
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Player Game Stats - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-stats--by-week-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Stats - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-game-stats--by-week-final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-score-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-date-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-week-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Team Game Stats - by Week [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-game-stats--by-week-live--final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Player Game Stats - by Week [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-stats--by-week-live--final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Box Score [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-score-live--final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-date-live--final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Week [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-week-live--final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores Delta - by Week
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores-delta--by-week
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-details--by-active
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-details--by-team
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Period Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/ncaa-football#period-game-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/ncaa-football#pregame-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-football#pregame-and-period-game-odds--by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/ncaa-football#period-game-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/ncaa-football#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-football#ingame-odds--by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/ncaa-football#ingame-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Results - by Market
  endpoint:
    path: /developers/api-documentation/nba#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
- name: Betting Market
  endpoint:
    path: /developers/api-documentation/nba#betting-market
    method: GET
    data_selector: BettingMarket
- name: Betting Results - by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#betting-results--by-market-sportsbook-group
    method: GET
    data_selector: BettingMarketResult
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/nba#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nba#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/nba#projected-player-game-stats--by-date
    method: GET
    data_selector: PlayerGameProjection[]
- name: Projected Player Season Stats
  endpoint:
    path: /developers/api-documentation/nba#projected-player-season-stats
    method: GET
    data_selector: PlayerSeasonProjection[]
- name: Projected Player Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/nba#projected-player-season-stats--by-team
    method: GET
    data_selector: PlayerSeasonProjection[]
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nba#dfs-slates--by-date
    method: GET
    data_selector: DfsSlate[]
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/nba#fantasy-points--by-date
    method: GET
    data_selector: FantasyGame[]
- name: premium_news
  endpoint:
    path: /developers/api-documentation/nba#premium-news
    method: GET
    data_selector: News[]
- name: premium_news_by_date
  endpoint:
    path: /developers/api-documentation/nba#premium-news--by-date
    method: GET
    data_selector: News[]
- name: basic_news
  endpoint:
    path: /developers/data-dictionary/nba#news
    method: GET
    data_selector: News[]
- name: basic_news_by_date
  endpoint:
    path: /developers/data-dictionary/nba#news--by-date
    method: GET
    data_selector: News[]
- name: basic_news_by_player
  endpoint:
    path: /developers/data-dictionary/nba#news--by-player
    method: GET
    data_selector: News[]
- name: headshots
  endpoint:
    path: /developers/api-documentation/nba#headshots
    method: GET
    data_selector: Headshot[]
- name: Betting Markets by Event
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets by Market Type
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Player Props by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Events by Date
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Events by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Results by Market
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
    params: {}
- name: Betting Splits by Betting Market
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
    params: {}
- name: Betting Splits by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
    params: {}
- name: NCAA Basketball
  endpoint:
    path: /coverage/ncaa-basketball
    method: GET
- name: NFL
  endpoint:
    path: /coverage/nfl
    method: GET
- name: MLB
  endpoint:
    path: /coverage/mlb
    method: GET
- name: NBA
  endpoint:
    path: /coverage/nba
    method: GET
- name: NHL
  endpoint:
    path: /coverage/nhl
    method: GET
- name: league_hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#league-hierarchy
    method: GET
    data_selector: Conference[]
- name: player_details_by_active
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-active
    method: GET
    data_selector: PlayerBasic[]
- name: teams_basic_all
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#teams-basic--all
    method: GET
    data_selector: TeamBasic[]
- name: stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#stadiums
    method: GET
    data_selector: Stadium[]
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: games_by_season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
    data_selector: Game[]
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-date-final
    method: GET
    data_selector: Game[]
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-score-final
    method: GET
    data_selector: BoxScore
- name: Pre-Game and Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Standings
  endpoint:
    path: /developers/api-documentation/nhl#standings
    method: GET
    data_selector: Standing[]
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-active
    method: GET
    data_selector: PlayerBasic[]
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-free-agents
    method: GET
    data_selector: PlayerBasic[]
- name: Team Profiles - by Season
  endpoint:
    path: /developers/api-documentation/nhl#team-profiles--by-season
    method: GET
    data_selector: Team[]
- name: Players Profiles - by Team
  endpoint:
    path: /developers/api-documentation/nhl#players-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: Team Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nhl#team-profiles--by-active
    method: GET
    data_selector: Team[]
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/nhl#team-profiles--all
    method: GET
    data_selector: Team[]
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/nhl#stadiums
    method: GET
    data_selector: Stadium[]
- name: Are Games In Progress
  endpoint:
    path: /developers/api-documentation/nhl#are-games-in-progress
    method: GET
    data_selector: boolean
- name: Season - Current
  endpoint:
    path: /developers/api-documentation/nhl#season--current
    method: GET
    data_selector: Season
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/nhl#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/nhl#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Schedules (Basic)
  endpoint:
    path: /developers/api-documentation/nhl#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: Schedules
  endpoint:
    path: /developers/api-documentation/nhl#schedules
    method: GET
    data_selector: Game[]
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-final
    method: GET
    data_selector: Game[]
- name: Games (Basic) - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nhl#games-basic--by-date-final
    method: GET
    data_selector: ScoreBasic[]
- name: Games - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-live--final
    method: GET
    data_selector: Game[]
- name: Player Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nhl#player-game-stats--by-date-final
    method: GET
    data_selector: PlayerGame[]
- name: Team Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nhl#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame[]
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
    data_selector: BoxScore
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/nhl#box-scores--by-date-final
    method: GET
    data_selector: BoxScore[]
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/nhl#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
- name: Team Season Stats
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: TeamSeason[]
- name: Team Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nhl#team-game-logs--by-season
    method: GET
    data_selector: TeamGame[]
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/nhl#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Futures - by Season [Sportsbook Group] [Archive]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season-sportsbook-group-archive
    method: GET
    data_selector: BettingMarket
    params: {}
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
    params: {}
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
    params: {}
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
    params: {}
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
    params: {}
- name: Rankings
  endpoint:
    path: /developers/api-documentation/golf#rankings
    method: GET
    data_selector: PlayerSeason[]
- name: Player
  endpoint:
    path: /developers/api-documentation/golf#player
    method: GET
    data_selector: Player
- name: Player Profiles - All
  endpoint:
    path: /developers/api-documentation/golf#player-profiles--all
    method: GET
    data_selector: Player[]
- name: Courses
  endpoint:
    path: /developers/api-documentation/golf#courses
    method: GET
    data_selector: Courses[]
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/golf#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/golf#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Season Current
  endpoint:
    path: /developers/api-documentation/golf#season-current
    method: GET
    data_selector: Season
- name: Schedules
  endpoint:
    path: /developers/api-documentation/golf#schedules
    method: GET
    data_selector: Tournament[]
- name: Scores - by Tournament [Final]
  endpoint:
    path: /developers/api-documentation/golf#scores--by-tournament-final
    method: GET
    data_selector: TournamentRound[]
- name: Scores - by Tournament [Live & Final]
  endpoint:
    path: /developers/api-documentation/golf#scores--by-tournament-live--final
    method: GET
    data_selector: TournamentRound[]
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/golf#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
- name: Tournament Odds
  endpoint:
    path: /developers/api-documentation/golf#tournament-odds
    method: GET
    data_selector: TournamentOdds
- name: In-Play Tournament Odds
  endpoint:
    path: /developers/api-documentation/golf#inplay-tournament-odds
    method: GET
    data_selector: TournamentOdds
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/golf#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Play By Play Final
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
- name: Play By Play Live & Final
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-live--final
    method: GET
- name: Play By Play Delta
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-delta
    method: GET
- name: Transactions
  endpoint:
    path: /developers/api-documentation/nhl#transactions
    method: GET
- name: Depth Charts - Goalies
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-injured
    method: GET
- name: Starting Goaltenders - by Date
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
- name: Players Details - by Team
  endpoint:
    path: /developers/api-documentation/nhl#players-details--by-team
    method: GET
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-active
    method: GET
- name: Player Details - by Free Agents
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-free-agents
    method: GET
- name: Line Combinations - by Season
  endpoint:
    path: /developers/api-documentation/nhl#line-combinations--by-season
    method: GET
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
- name: Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/nhl#period-game-odds--by-date
    method: GET
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#pregame-and-period-game-odds-line-movement-sportsbook-group
    method: GET
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds-line-movement
    method: GET
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nhl#period-game-odds-line-movement
    method: GET
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds--by-date
    method: GET
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds--by-date-sportsbook-group
    method: GET
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds-line-movement
    method: GET
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds-line-movement-sportsbook-group
    method: GET
- name: player_projected_stats
  endpoint:
    path: /developers/api-documentation/golf#player-projected-stats--by-tournament
    method: GET
- name: dfs_slate_ownership_projections
  endpoint:
    path: /developers/api-documentation/golf#dfs-slate-ownership-projections--by-slate
    method: GET
- name: dfs_slates_by_tournament
  endpoint:
    path: /developers/api-documentation/golf#dfs-slates--by-tournament
    method: GET
- name: fantasy_points_by_tournament
  endpoint:
    path: /developers/api-documentation/golf#fantasy-points--by-tournament
    method: GET
- name: premium_news
  endpoint:
    path: /developers/api-documentation/golf#premium-news
    method: GET
- name: headshots
  endpoint:
    path: /developers/api-documentation/golf#headshots
    method: GET
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/nhl#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Results - by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#betting-results--by-market-sportsbook-group
    method: GET
    data_selector: BettingMarketResult
    params: {}
- name: Betting Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/nhl#betting-market-sportsbook-group
    method: GET
    data_selector: BettingMarket
    params: {}
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
    params: {}
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
    params: {}
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
    params: {}
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/nhl#dfs-slates--by-date
    method: GET
    data_selector: DfsSlate[]
    params: {}
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/nhl#fantasy-points--by-date
    method: GET
    data_selector: FantasyGame[]
    params: {}
- name: News
  endpoint:
    path: /developers/api-documentation/nhl#news
    method: GET
    data_selector: News[]
    params: {}
- name: headshots
  endpoint:
    path: /developers/api-documentation/nhl#headshots
    method: GET
    data_selector: Headshot[]
- name: Conference Hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-football#conference-hierarchy
    method: GET
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-profiles--all
    method: GET
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-profiles--by-team
    method: GET
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-football#stadiums
    method: GET
- name: Schedules
  endpoint:
    path: /developers/api-documentation/ncaa-football#schedules
    method: GET
- name: Games by Date - [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#games-by-date--final
    method: GET
- name: driver_profiles_by_driver
  endpoint:
    path: /developers/api-documentation/nascar#driver-profiles--by-driver
    method: GET
    data_selector: Driver
- name: driver_profiles_all
  endpoint:
    path: /developers/api-documentation/nascar#driver-profiles--all
    method: GET
    data_selector: Driver[]
- name: drivers_by_active
  endpoint:
    path: /developers/api-documentation/nascar#drivers--by-active
    method: GET
    data_selector: DriverBasic[]
- name: tracks
  endpoint:
    path: /developers/api-documentation/nascar#tracks
    method: GET
    data_selector: Tracks[]
- name: sportsbooks_by_active
  endpoint:
    path: /developers/api-documentation/nascar#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: series
  endpoint:
    path: /developers/api-documentation/nascar#series
    method: GET
    data_selector: Series[]
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/nascar#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: schedules
  endpoint:
    path: /developers/api-documentation/nascar#schedules
    method: GET
    data_selector: Race[]
- name: leaderboard_basic_final
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic-final
    method: GET
    data_selector: RaceResultBasic
- name: leaderboard_final
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-final
    method: GET
    data_selector: RaceResult
- name: race_odds
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
    data_selector: RaceOdds
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/nascar#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/nascar#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: betting_markets_by_event
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_market_type
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_race
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-race
    method: GET
    data_selector: BettingMarket[]
- name: projected_player_race_stats_by_race
  endpoint:
    path: /developers/api-documentation/nascar#projected-player-race-stats--by-race
    method: GET
    data_selector: DriverRaceProjection[]
- name: fantasy_points_by_race
  endpoint:
    path: /developers/api-documentation/nascar#fantasy-points--by-race
    method: GET
    data_selector: FantasyRace
- name: Player Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-logs--by-season
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Logs - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-game-logs--by-season
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Season Stats - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats--by-team
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Team Season Stats & Standings
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-season-stats--standings
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Player Game Stats - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-stats--by-week-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Team Game Stats - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-game-stats--by-week-final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-score-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-date-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores - by Week [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-scores--by-week-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: In-Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-football#ingame-odds--by-week-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Week
  endpoint:
    path: /developers/api-documentation/ncaa-football#ingame-odds--by-week
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Standings
  endpoint:
    path: /developers/api-documentation/soccer#standings
    method: GET
    data_selector: Round[]
- name: Areas (Countries)
  endpoint:
    path: /developers/api-documentation/soccer#areas-countries
    method: GET
    data_selector: Area[]
- name: Competitions (Leagues)
  endpoint:
    path: /developers/api-documentation/soccer#competitions-leagues
    method: GET
    data_selector: Competition[]
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/soccer#player-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: Team Profiles - by Season
  endpoint:
    path: /developers/api-documentation/soccer#team-profiles--by-season
    method: GET
    data_selector: SeasonTeam[]
- name: Team Profiles - by Competition
  endpoint:
    path: /developers/api-documentation/soccer#team-profiles--by-competition
    method: GET
    data_selector: Team[]
- name: Memberships - by Active
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-active
    method: GET
    data_selector: Membership[]
- name: Venues
  endpoint:
    path: /developers/api-documentation/soccer#venues
    method: GET
    data_selector: Venue[]
- name: Schedules (Basic)
  endpoint:
    path: /developers/api-documentation/soccer#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-final
    method: GET
    data_selector: Game[]
- name: Games (Basic) - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#games-basic--by-date-final
    method: GET
    data_selector: ScoreBasic[]
- name: Games - by Competition [Live & Final]
  endpoint:
    path: /developers/api-documentation/soccer#games--by-competition-live--final
    method: GET
    data_selector: CompetitionDetail
- name: Games - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-live--final
    method: GET
    data_selector: ScoreBasic[]
- name: Betting Markets by Event
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets by Market Type
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events by Date
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events by Season
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Results by Market
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
- name: Betting Trends by Matchup
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
- name: Betting Trends by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
- name: Betting Splits by Betting Market
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
- name: Betting Splits by Game
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
- name: Player Headshots
  endpoint:
    path: /developers/coverage-guide/news-images/player-headshots
    method: GET
- name: Box Score Final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: BoxScore
    params: {}
- name: Box Scores by Date Final
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Player Game Stats by Date Final
  endpoint:
    path: /developers/api-documentation/soccer#player-game-stats--by-date-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#player-season-stats
    method: GET
    data_selector: Round[]
    params: {}
- name: Team Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#team-season-stats
    method: GET
    data_selector: Round[]
    params: {}
- name: Team Game Stats by Date Final
  endpoint:
    path: /developers/api-documentation/soccer#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Lineups by Date
  endpoint:
    path: /developers/api-documentation/soccer#lineups--by-date
    method: GET
    data_selector: PlayerGameBasic[]
    params: {}
- name: Player Details by Team
  endpoint:
    path: /developers/api-documentation/soccer#player-details--by-team
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details by Injured
  endpoint:
    path: /developers/api-documentation/soccer#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Period Game Odds by Date
  endpoint:
    path: /developers/api-documentation/soccer#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds by Date
  endpoint:
    path: /developers/api-documentation/soccer#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds by Date
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: data
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: data
    params: {}
- name: League Hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#league-hierarchy
    method: GET
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-active
    method: GET
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-profiles--by-team
    method: GET
- name: Teams (Basic) - All
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#teams-basic--all
    method: GET
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#stadiums
    method: GET
- name: Are Games In Progress
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#are-games-in-progress
    method: GET
- name: Season - Current
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#season--current
    method: GET
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
- name: Schedules (Basic)
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#schedules-basic
    method: GET
- name: Games - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-date-final
    method: GET
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-score-final
    method: GET
- name: Player Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-game-stats--by-date-final
    method: GET
- name: Team Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#team-game-stats--by-date-final
    method: GET
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-injured
    method: GET
- name: BettingEventsBySeason
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-season
    method: GET
- name: BettingMarketsByEvent
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-event
    method: GET
- name: BettingMarketsByGame
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-game
    method: GET
- name: BettingMarketsByMarketType
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-market-type
    method: GET
- name: BettingPlayerPropsByGame
  endpoint:
    path: /developers/api-documentation/soccer#betting-player-props--by-game
    method: GET
- name: BettingMarketsByEventSportsbookGroup
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-event-sportsbook-group
    method: GET
- name: BettingMarketsByGameSportsbookGroup
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-game-sportsbook-group
    method: GET
- name: BettingMarketsByMarketTypeSportsbookGroup
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-market-type-sportsbook-group
    method: GET
- name: BettingPlayerPropsByGameSportsbookGroup
  endpoint:
    path: /developers/api-documentation/soccer#betting-player-props--by-game-sportsbook-group
    method: GET
- name: BettingEventsByDate
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-date
    method: GET
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/soccer#betting-market
    method: GET
- name: BettingMarketSportsbookGroup
  endpoint:
    path: /developers/api-documentation/soccer#betting-market-sportsbook-group
    method: GET
- name: BettingFuturesBySeason
  endpoint:
    path: /developers/api-documentation/soccer#betting-futures--by-season
    method: GET
- name: ProjectedPlayerGameStatsByDate
  endpoint:
    path: /developers/api-documentation/soccer#projected-player-game-stats--by-date
    method: GET
- name: UpcomingDFSSlatesByCompetition
  endpoint:
    path: /developers/api-documentation/soccer#upcoming-dfs-slates--by-competition
    method: GET
- name: DFSSlatesByDate
  endpoint:
    path: /developers/api-documentation/soccer#dfs-slates--by-date
    method: GET
- name: FantasyPointsByDate
  endpoint:
    path: /developers/api-documentation/soccer#fantasy-points--by-date
    method: GET
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Alternate Market Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#alternate-market-pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Props
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Fighter Profiles (Basic)
  endpoint:
    path: /developers/api-documentation/mma#fighter-profiles-basic--all
    method: GET
    data_selector: FighterBasic[]
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/mma#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Leagues
  endpoint:
    path: /developers/api-documentation/mma#leagues
    method: GET
    data_selector: League[]
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/mma#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Schedules
  endpoint:
    path: /developers/api-documentation/mma#schedules
    method: GET
    data_selector: Event[]
- name: Event
  endpoint:
    path: /developers/api-documentation/mma#event
    method: GET
    data_selector: EventDetail
- name: Fight (Basic) [Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-final
    method: GET
    data_selector: FightBasic
- name: Fight (Basic) [Live & Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-live--final
    method: GET
    data_selector: FightBasic
- name: Fight [Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: FightDetail
- name: Fight [Live & Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-live--final
    method: GET
    data_selector: FightDetail
- name: Fighter Profile - By Fighter
  endpoint:
    path: /developers/api-documentation/mma#fighter-profile--by-fighter
    method: GET
    data_selector: Fighter
- name: Betting Fighter Props - by Event
  endpoint:
    path: /developers/api-documentation/mma#betting-fighter-props--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - Upcoming
  endpoint:
    path: /developers/api-documentation/mma#betting-events--upcoming
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/mma#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: betting_futures_by_season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: betting_futures_by_season_sportsbook_group
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
- name: betting_futures_by_season_sportsbook_group_archive
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-futures--by-season-sportsbook-group-archive
    method: GET
    data_selector: BettingMarket
- name: betting_trends_by_matchup
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-matchup
    method: GET
    data_selector: MatchupTrends
- name: betting_trends_by_team
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-team
    method: GET
    data_selector: TeamTrends
- name: betting_splits_by_betting_market
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-betting-market
    method: GET
    data_selector: BettingMarketSplit
- name: betting_splits_by_game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
    data_selector: GameBettingSplit
- name: Standings
  endpoint:
    path: /developers/api-documentation/wnba#standings
    method: GET
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/wnba#team-profiles--all
    method: GET
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/wnba#stadiums
    method: GET
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/wnba#sportsbooks--by-active
    method: GET
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/wnba#betting-metadata
    method: GET
- name: Are Games In Progress
  endpoint:
    path: /developers/api-documentation/wnba#are-games-in-progress
    method: GET
- name: Season - Current
  endpoint:
    path: /developers/api-documentation/wnba#season--current
    method: GET
- name: Schedules
  endpoint:
    path: /developers/api-documentation/wnba#schedules
    method: GET
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/wnba#box-scores--by-date-final
    method: GET
- name: Player Details - by Active
  endpoint:
    path: /developers/api-documentation/wnba#player-details--by-active
    method: GET
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/wnba#pregame-odds--by-date
    method: GET
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/wnba#pregame-odds-line-movement
    method: GET
- name: Rankings
  endpoint:
    path: /developers/api-documentation/golf#rankings
    method: GET
- name: Player
  endpoint:
    path: /developers/api-documentation/golf#player
    method: GET
- name: Player Profiles - All
  endpoint:
    path: /developers/api-documentation/golf#player-profiles--all
    method: GET
- name: Courses
  endpoint:
    path: /developers/api-documentation/golf#courses
    method: GET
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/golf#sportsbooks--by-active
    method: GET
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/golf#betting-metadata
    method: GET
- name: Season Current
  endpoint:
    path: /developers/api-documentation/golf#season-current
    method: GET
- name: Schedules
  endpoint:
    path: /developers/api-documentation/golf#schedules
    method: GET
- name: Scores - by Tournament [Final]
  endpoint:
    path: /developers/api-documentation/golf#scores--by-tournament-final
    method: GET
- name: Scores - by Tournament [Live & Final]
  endpoint:
    path: /developers/api-documentation/golf#scores--by-tournament-live--final
    method: GET
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/golf#player-season-stats
    method: GET
- name: Tournament Odds
  endpoint:
    path: /developers/api-documentation/golf#tournament-odds
    method: GET
- name: In-Play Tournament Odds
  endpoint:
    path: /developers/api-documentation/golf#inplay-tournament-odds
    method: GET
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/golf#betting-markets--by-event-sportsbook-group
    method: GET
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/golf#betting-events--by-date
    method: GET
- name: player_projected_stats_by_tournament
  endpoint:
    path: /developers/api-documentation/golf#player-projected-stats--by-tournament
    method: GET
- name: dfs_slate_ownership_projections_by_slate
  endpoint:
    path: /developers/api-documentation/golf#dfs-slate-ownership-projections--by-slate
    method: GET
- name: dfs_slates_by_tournament
  endpoint:
    path: /developers/api-documentation/golf#dfs-slates--by-tournament
    method: GET
- name: fantasy_points_by_tournament
  endpoint:
    path: /developers/api-documentation/golf#fantasy-points--by-tournament
    method: GET
- name: premium_news
  endpoint:
    path: /developers/api-documentation/golf#premium-news
    method: GET
- name: headshots
  endpoint:
    path: /developers/api-documentation/golf#headshots
    method: GET
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: betting_markets_by_event
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_event_sportsbook_group
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_game
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_game_sportsbook_group
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_market_type
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: betting_markets_by_market_type_sportsbook_group
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: betting_player_props_by_game
  endpoint:
    path: /developers/api-documentation/wnba#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
- name: betting_player_props_by_game_sportsbook_group
  endpoint:
    path: /developers/api-documentation/wnba#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: betting_futures_by_season
  endpoint:
    path: /developers/api-documentation/wnba#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: betting_futures_by_season_sportsbook_group
  endpoint:
    path: /developers/api-documentation/wnba#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
- name: team_profiles_all
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#team-profiles--all
    method: GET
- name: league_hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#league-hierarchy
    method: GET
- name: are_any_games_in_progress
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#are-any-games-in-progress
    method: GET
- name: season_current
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#season-current
    method: GET
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedules-basic
    method: GET
- name: schedules
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedules
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#games--by-date-final
    method: GET
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#games--by-date-live--final
    method: GET
- name: Driver Profiles - by Driver
  endpoint:
    path: /developers/api-documentation/nascar#driver-profiles--by-driver
    method: GET
    data_selector: Driver
- name: Driver Profiles - All
  endpoint:
    path: /developers/api-documentation/nascar#driver-profiles--all
    method: GET
    data_selector: Driver[]
- name: Drivers - by Active
  endpoint:
    path: /developers/api-documentation/nascar#drivers--by-active
    method: GET
    data_selector: DriverBasic[]
- name: Tracks
  endpoint:
    path: /developers/api-documentation/nascar#tracks
    method: GET
    data_selector: Tracks[]
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/nascar#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Series
  endpoint:
    path: /developers/api-documentation/nascar#series
    method: GET
    data_selector: Series[]
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/nascar#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Schedules
  endpoint:
    path: /developers/api-documentation/nascar#schedules
    method: GET
    data_selector: Race[]
- name: Leaderboard (Basic) [Final]
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic-final
    method: GET
    data_selector: RaceResultBasic
- name: Leaderboard [Final]
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-final
    method: GET
    data_selector: RaceResult
- name: Race Odds
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
    data_selector: RaceOdds
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/nascar#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/nascar#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Race
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-race
    method: GET
    data_selector: BettingMarket[]
- name: Projected Player Race Stats - by Race
  endpoint:
    path: /developers/api-documentation/nascar#projected-player-race-stats--by-race
    method: GET
    data_selector: DriverRaceProjection[]
- name: Fantasy Points - by Race
  endpoint:
    path: /developers/api-documentation/nascar#fantasy-points--by-race
    method: GET
    data_selector: FantasyRace
- name: competitions
  endpoint:
    path: /developers/api-documentation/tennis#competitions
    method: GET
    data_selector: Competition[]
- name: player_profiles_by_rank
  endpoint:
    path: /developers/api-documentation/tennis#player-profiles--by-rank
    method: GET
    data_selector: Player[]
- name: contestants_by_season
  endpoint:
    path: /developers/api-documentation/tennis#contestants--by-season
    method: GET
    data_selector: Contestant[]
- name: venues
  endpoint:
    path: /developers/api-documentation/tennis#venues
    method: GET
    data_selector: Venue[]
- name: schedule_by_matches_by_round
  endpoint:
    path: /developers/api-documentation/tennis#schedule-by-matches--by-round
    method: GET
    data_selector: Match[]
- name: scores_by_match_final
  endpoint:
    path: /developers/api-documentation/tennis#scores--by-match-final
    method: GET
    data_selector: Match
- name: match_odds_by_date
  endpoint:
    path: /developers/api-documentation/tennis#match-odds--by-date
    method: GET
    data_selector: Match[]
- name: box_scores_by_date_delta
  endpoint:
    path: /developers/api-documentation/box-scores-by-date-delta
    method: GET
    data_selector: data
    params: {}
- name: Standings
  endpoint:
    path: /developers/api-documentation/soccer#standings
    method: GET
    data_selector: Round[]
- name: Areas (Countries)
  endpoint:
    path: /developers/api-documentation/soccer#areas-countries
    method: GET
    data_selector: Area[]
- name: Competitions (Leagues)
  endpoint:
    path: /developers/api-documentation/soccer#competitions-leagues
    method: GET
    data_selector: Competition[]
- name: Player Profiles - by Team
  endpoint:
    path: /developers/api-documentation/soccer#player-profiles--by-team
    method: GET
    data_selector: PlayerBasic[]
- name: Team Profiles - by Season
  endpoint:
    path: /developers/api-documentation/soccer#team-profiles--by-season
    method: GET
    data_selector: SeasonTeam[]
- name: Memberships - by Active
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-active
    method: GET
    data_selector: Membership[]
- name: Venues
  endpoint:
    path: /developers/api-documentation/soccer#venues
    method: GET
    data_selector: Venue[]
- name: Schedules (Basic)
  endpoint:
    path: /developers/api-documentation/soccer#schedules-basic
    method: GET
    data_selector: ScheduleBasic[]
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-final
    method: GET
    data_selector: Game[]
- name: Standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: string
- name: PlayersByActive
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: string
- name: PlayersByFreeAgents
  endpoint:
    path: /json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: string
- name: PlayersBasic
  endpoint:
    path: /json/PlayersBasic/{team}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: string
- name: AllTeams
  endpoint:
    path: /json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: string
- name: AreAnyGamesInProgress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: string
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: ScoresBasic
  endpoint:
    path: /ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: GamesByDate
  endpoint:
    path: /GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: box_score_final
  endpoint:
    path: /stats/json/BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params: {}
- name: box_scores_by_date_final
  endpoint:
    path: /stats/json/BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: player_game_logs_by_season
  endpoint:
    path: /stats/json/PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: player_game_stats_by_date_final
  endpoint:
    path: /stats/json/PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: team_game_stats_by_date_final
  endpoint:
    path: /scores/json/TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: team_season_stats
  endpoint:
    path: /scores/json/TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: BoxScore
    params: {}
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Player Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#player-game-stats--by-date-final
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#player-season-stats
    method: GET
    data_selector: Round[]
    params: {}
- name: Team Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#team-season-stats
    method: GET
    data_selector: Round[]
    params: {}
- name: Team Game Stats - by Date [Final]
  endpoint:
    path: /developers/api-documentation/soccer#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Team Game Stats - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/soccer#team-game-stats--by-date-live--final
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Box Score [Live & Final]
  endpoint:
    path: /developers/api-documentation/soccer#box-score-live--final
    method: GET
    data_selector: BoxScore
    params: {}
- name: Box Scores - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-live--final
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Box Scores Delta - by Date
  endpoint:
    path: /developers/api-documentation/soccer#box-scores-delta--by-date
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Lineups - by Date
  endpoint:
    path: /developers/api-documentation/soccer#lineups--by-date
    method: GET
    data_selector: PlayerGameBasic[]
    params: {}
- name: Player Details - by Team
  endpoint:
    path: /developers/api-documentation/soccer#player-details--by-team
    method: GET
    data_selector: Player[]
    params: {}
- name: Player Details - by Injured
  endpoint:
    path: /developers/api-documentation/soccer#player-details--by-injured
    method: GET
    data_selector: Player[]
    params: {}
- name: Period Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/soccer#period-game-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/soccer#pregame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/soccer#pregame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: Period Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/soccer#period-game-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds--by-date
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds--by-date-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds-line-movement-sportsbook-group
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: GameInfoResult[]
    params: {}
- name: In-Game Odds Line Movement
  endpoint:
    path: /developers/api-documentation/soccer#ingame-odds-line-movement
    method: GET
    data_selector: GameInfo[]
    params: {}
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{date}
    method: GET
    data_selector: PlayerGame
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2017-JUL-31, 2017-SEP-01'
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{date}
    method: GET
    data_selector: TeamGame
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2017-JUL-31, 2017-SEP-01'
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/soccer#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Market
  endpoint:
    path: /developers/api-documentation/soccer#betting-market
    method: GET
    data_selector: BettingMarket
- name: Betting Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/soccer#betting-market-sportsbook-group
    method: GET
    data_selector: BettingMarket
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/soccer#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/soccer#projected-player-game-stats--by-date
    method: GET
    data_selector: PlayerGameProjection[]
- name: Upcoming DFS Slates - by Competition
  endpoint:
    path: /developers/api-documentation/soccer#upcoming-dfs-slates--by-competition
    method: GET
    data_selector: DfsSlate[]
- name: DFS Slates - by Date
  endpoint:
    path: /developers/api-documentation/soccer#dfs-slates--by-date
    method: GET
    data_selector: DfsSlate[]
- name: Fantasy Points - by Date
  endpoint:
    path: /developers/api-documentation/soccer#fantasy-points--by-date
    method: GET
    data_selector: FantasyGame[]
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayLiveAndFinal
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: BatterVsPitcherStats
  endpoint:
    path: /stats/json/HitterVsPitcher/{hitterid}/{pitcherid}
    method: GET
    data_selector: PlayerSeason
    params:
      key: Subscription Required
      format: json
- name: DepthCharts
  endpoint:
    path: /projections/json/DepthCharts
    method: GET
    data_selector: TeamDepthChart
    params:
      key: Subscription Required
      format: json
- name: PlayersByActive
  endpoint:
    path: /scores/json/Players
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: PlayersByFreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: PlayersByInjured
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: PlayersByTeam
  endpoint:
    path: /scores/json/Players/{team}
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: StartingLineupsByDate
  endpoint:
    path: /projections/json/StartingLineupsByDate/{date}
    method: GET
    data_selector: StartingLineups
    params:
      key: Subscription Required
      format: json
- name: TeamHittingVsStartingPitcher
  endpoint:
    path: /stats/json/TeamHittersVsPitcher/{gameid}/{team}
    method: GET
    data_selector: PlayerSeason
    params:
      key: Subscription Required
      format: json
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    data_selector: Transaction
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Date
  endpoint:
    path: /LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /InGameOddsByDate/{date}/{sportsbookGroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement
  endpoint:
    path: /LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /InGameOddsLineMovement/{gameid}/{sportsbookGroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game Odds - by Date
  endpoint:
    path: /GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /PreGameOddsLineMovement/{gameid}/{sportsbookGroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Fighter Profiles (Basic) - All
  endpoint:
    path: /developers/api-documentation/mma#fighter-profiles-basic--all
    method: GET
    data_selector: FighterBasic[]
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/mma#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook[]
- name: Leagues
  endpoint:
    path: /developers/api-documentation/mma#leagues
    method: GET
    data_selector: League[]
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/mma#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: Schedules
  endpoint:
    path: /developers/api-documentation/mma#schedules
    method: GET
    data_selector: Event[]
- name: Event
  endpoint:
    path: /developers/api-documentation/mma#event
    method: GET
    data_selector: EventDetail
- name: Fight (Basic) [Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-final
    method: GET
    data_selector: FightBasic
- name: Fight (Basic) [Live & Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-live--final
    method: GET
    data_selector: FightBasic
- name: Fight [Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: FightDetail
- name: Fight [Live & Final]
  endpoint:
    path: /developers/api-documentation/mma#fight-live--final
    method: GET
    data_selector: FightDetail
- name: Fighter Profile - By Fighter
  endpoint:
    path: /developers/api-documentation/mma#fighter-profile--by-fighter
    method: GET
    data_selector: Fighter
- name: Betting Fighter Props - by Event
  endpoint:
    path: /developers/api-documentation/mma#betting-fighter-props--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - Upcoming
  endpoint:
    path: /developers/api-documentation/mma#betting-events--upcoming
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Event
  endpoint:
    path: /developers/api-documentation/mma#betting-events--by-event
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/mma#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/mma#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Events - by Date
  endpoint:
    path: /json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Season
  endpoint:
    path: /json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Event
  endpoint:
    path: /json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: Betting Markets - by Game
  endpoint:
    path: /json/BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: standings
  endpoint:
    path: /developers/api-documentation/wnba#standings
    method: GET
- name: team_profiles_all
  endpoint:
    path: /developers/api-documentation/wnba#team-profiles--all
    method: GET
- name: stadiums
  endpoint:
    path: /developers/api-documentation/wnba#stadiums
    method: GET
- name: sportsbooks_by_active
  endpoint:
    path: /developers/api-documentation/wnba#sportsbooks--by-active
    method: GET
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/wnba#betting-metadata
    method: GET
- name: are_games_in_progress
  endpoint:
    path: /developers/api-documentation/wnba#are-games-in-progress
    method: GET
- name: season_current
  endpoint:
    path: /developers/api-documentation/wnba#season--current
    method: GET
- name: schedules
  endpoint:
    path: /developers/api-documentation/wnba#schedules
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
- name: box_scores_by_date_final
  endpoint:
    path: /developers/api-documentation/wnba#box-scores--by-date-final
    method: GET
- name: player_details_by_active
  endpoint:
    path: /developers/api-documentation/wnba#player-details--by-active
    method: GET
- name: pregame_odds_by_date
  endpoint:
    path: /developers/api-documentation/wnba#pregame-odds--by-date
    method: GET
- name: pregame_odds_line_movement
  endpoint:
    path: /developers/api-documentation/wnba#pregame-odds-line-movement
    method: GET
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
      format: json
- name: BettingPropsArchive
  endpoint:
    path: /archive/json/BettingPropsArchive/{season}/{bettingMarketId}/{sportsbookGrouping}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeason
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}/{sportsbookGroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingSplitsByGameId
  endpoint:
    path: /odds/json/BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
- name: BettingTrendsByMatchup
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
- name: ProjectedPlayerGameStatsByDate
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
- name: FantasyGameStatsByDate
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
    data_selector: BettingEvent[]
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-market-type
    method: GET
    data_selector: BettingMarket[]
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-market-type-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/wnba#betting-player-props--by-game
    method: GET
    data_selector: BettingMarket[]
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-player-props--by-game-sportsbook-group
    method: GET
    data_selector: BettingMarket[]
- name: Betting Futures - by Season
  endpoint:
    path: /developers/api-documentation/wnba#betting-futures--by-season
    method: GET
    data_selector: BettingEvent[]
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-futures--by-season-sportsbook-group
    method: GET
    data_selector: BettingEvent[]
- name: Betting Market
  endpoint:
    path: /developers/api-documentation/wnba#betting-market
    method: GET
    data_selector: BettingMarket
- name: Betting Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/wnba#betting-market-sportsbook-group
    method: GET
    data_selector: BettingMarket
- name: news
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: news_by_date
  endpoint:
    path: /scores/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news
- name: news_by_player
  endpoint:
    path: /scores/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      playerid: Unique FantasyData Player ID
- name: premium_news
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: premium_news_by_date
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#team-profiles--all
    method: GET
- name: League Hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#league-hierarchy
    method: GET
- name: Are Any Games In Progress
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#are-any-games-in-progress
    method: GET
- name: Season Current
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#season-current
    method: GET
- name: Schedules (Basic)
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedules-basic
    method: GET
- name: Schedules
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedules
    method: GET
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#games--by-date-final
    method: GET
- name: Games - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#games--by-date-live--final
    method: GET
- name: standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: Subscription Required
      format: json
- name: players_active
  endpoint:
    path: /json/PlayersActiveBasic
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: players_free_agents
  endpoint:
    path: /json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: all_teams
  endpoint:
    path: /json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: teams_active
  endpoint:
    path: /json/teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: schedules
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
- name: schedules_basic
  endpoint:
    path: /json/SchedulesBasic/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: Subscription Required
      format: json
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: ScoresBasic
  endpoint:
    path: /ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: GamesByDate
  endpoint:
    path: /GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: Box Score Final
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: string
      format: json
- name: Box Scores - by Date Final
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: string
      format: json
- name: Player Game Logs - by Season
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
- name: Player Game Stats - by Date Final
  endpoint:
    path: /PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
- name: Player Season Stats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      format: json
- name: Team Game Stats - by Date Final
  endpoint:
    path: /TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: string
      format: json
- name: Team Season Stats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: string
      format: json
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayLiveAndFinal
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: AllStars
  endpoint:
    path: /stats/json/AllStars/{season}
    method: GET
    data_selector: PlayerInfo
    params:
      key: Subscription Required
      format: json
- name: DepthCharts
  endpoint:
    path: /scores/json/DepthCharts
    method: GET
    data_selector: TeamDepthChart
    params:
      key: Subscription Required
      format: json
- name: Players
  endpoint:
    path: /scores/json/Players
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: FreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: InjuredPlayers
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    data_selector: Transaction
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Date
  endpoint:
    path: /LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: ''
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /InGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: ''
      sportsbookgroup: ''
- name: In-Game Odds Line Movement
  endpoint:
    path: /LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: ''
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: ''
      sportsbookgroup: ''
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /InGameLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      format: json
      gameid: ''
      sportsbookgroup: ''
- name: Period Game Odds - by Date
  endpoint:
    path: /AlternateMarketGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: ''
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /PreGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: ''
      sportsbookgroup: ''
- name: Pre-Game Odds - by Date
  endpoint:
    path: /GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: ''
- name: Period Game Odds Line Movement
  endpoint:
    path: /AlternateMarketGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: ''
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /PreGameOddsLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: ''
      sportsbookgroup: ''
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /PreGameOddsLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      format: json
      gameid: ''
      sportsbookgroup: ''
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: ''
- name: competitions
  endpoint:
    path: /competitions
    method: GET
    data_selector: Competitions
- name: player_profiles_by_rank
  endpoint:
    path: /players/byrank
    method: GET
    data_selector: Player
- name: contestants_by_season
  endpoint:
    path: /contestants/byseason
    method: GET
    data_selector: Contestant
- name: venues
  endpoint:
    path: /venues
    method: GET
    data_selector: Venue
- name: schedule_by_matches_by_round
  endpoint:
    path: /schedule/matches/byround
    method: GET
    data_selector: Match
- name: scores_by_match_final
  endpoint:
    path: /scores/byMatch/final
    method: GET
    data_selector: Match
- name: match_odds_by_date
  endpoint:
    path: /matchodds/bydate
    method: GET
    data_selector: Match
- name: box_scores_by_date
  endpoint:
    path: /developers/api-documentation/nfl#box-scores-by-date
    method: GET
- name: projected_player_game_stats
  endpoint:
    path: /developers/api-documentation/nfl#projected-player-game-stats-by-week
    method: GET
- name: delta_box_scores
  endpoint:
    path: /developers/api-documentation/nfl#box-scores-delta
    method: GET
- name: betting_events_by_date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: betting_events_by_season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: betting_markets_by_event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
- name: betting_markets_by_game
  endpoint:
    path: /BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game.
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
      format: json
- name: standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: Subscription Required
      format: json
- name: players_by_active
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: players_by_free_agents
  endpoint:
    path: /json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: teams
  endpoint:
    path: /json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: are_games_in_progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: Subscription Required
      format: json
- name: current_season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: Subscription Required
      format: json
- name: schedules
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: ScoresBasic
  endpoint:
    path: /ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: GamesByDate
  endpoint:
    path: /GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: BettingFuturesBySeason
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingSplitsByMarketId
  endpoint:
    path: /odds/json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
- name: BettingSplitsByGameId
  endpoint:
    path: /odds/json/BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
- name: MatchupTrends
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
- name: TeamTrends
  endpoint:
    path: /odds/json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
- name: PlayerGameProjectionStatsByDate
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
- name: PlayerSeasonProjectionStats
  endpoint:
    path: /projections/json/PlayerSeasonProjectionStats/{season}
    method: GET
    data_selector: PlayerSeasonProjection[]
    params:
      key: Subscription Required
      format: json
- name: PlayerSeasonProjectionStatsByTeam
  endpoint:
    path: /projections/json/PlayerSeasonProjectionStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeasonProjection[]
    params:
      key: Subscription Required
      format: json
- name: FantasyGameStatsByDate
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
- name: DfsSlatesByDate
  endpoint:
    path: /projections/json/DfsSlatesByDate/{date}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
- name: news
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: news_by_date
  endpoint:
    path: /scores/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news.
- name: news_by_player
  endpoint:
    path: /scores/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      playerid: Unique FantasyData Player ID.
- name: premium_news
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: premium_news_by_date
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news.
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: Box Score Final
  endpoint:
    path: /stats/json/BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: Box Scores - by Date Final
  endpoint:
    path: /stats/json/BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: Player Game Logs - by Season
  endpoint:
    path: /stats/json/PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
      season: string
      playerid: integer
      numberofgames: string
- name: Player Game Stats - by Date Final
  endpoint:
    path: /stats/json/PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: Player Season Split Stats
  endpoint:
    path: /stats/json/PlayerSeasonSplitStats/{season}/{split}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
      split: string
- name: Player Season Stats
  endpoint:
    path: /stats/json/PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: Team Game Stats - by Date Final
  endpoint:
    path: /scores/json/TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: games
  endpoint:
    path: /games
    method: GET
    data_selector: data
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: data
    params: {}
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{date}
    method: GET
    params:
      key: string
      format: json
      date: string
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{date}
    method: GET
    params:
      key: string
      format: json
      date: string
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayLive
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
- name: BatterVsPitcherStats
  endpoint:
    path: /stats/json/HitterVsPitcher/{hitterid}/{pitcherid}
    method: GET
    data_selector: PlayerSeason
    params:
      key: Subscription Required
      format: json
- name: DepthCharts
  endpoint:
    path: /projections/json/DepthCharts
    method: GET
    data_selector: TeamDepthChart
    params:
      key: Subscription Required
      format: json
- name: PlayersByActive
  endpoint:
    path: /scores/json/Players
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: PlayersByFreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: InjuredPlayers
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: PlayersByTeam
  endpoint:
    path: /scores/json/Players/{team}
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
- name: StartingLineupsByDate
  endpoint:
    path: /projections/json/StartingLineupsByDate/{date}
    method: GET
    data_selector: StartingLineups
    params:
      key: Subscription Required
      format: json
- name: TeamHittersVsPitcher
  endpoint:
    path: /stats/json/TeamHittersVsPitcher/{gameid}/{team}
    method: GET
    data_selector: PlayerSeason
    params:
      key: Subscription Required
      format: json
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    data_selector: Transaction
    params:
      key: Subscription Required
      format: json
- name: standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: players_by_active
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: players_by_free_agents
  endpoint:
    path: /json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: players_profiles_by_team
  endpoint:
    path: /json/PlayersBasic/{team}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: all_teams
  endpoint:
    path: /json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: teams_by_active
  endpoint:
    path: /json/teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: teams_by_season
  endpoint:
    path: /json/teams/{season}
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season and the season type
- name: stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium[]
    params:
      key: Subscription Required
      format: json
- name: are_games_in_progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: Subscription Required
      format: json
- name: betting_metadata
  endpoint:
    path: /json/Bettingmetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: Subscription Required
      format: json
- name: current_season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: Subscription Required
      format: json
- name: active_sportsbooks
  endpoint:
    path: /json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: schedules
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: schedules_basic
  endpoint:
    path: /json/SchedulesBasic/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: LiveGameOddsByDate
  endpoint:
    path: /LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: string
      format: json
      date: string
- name: InGameOddsByDate
  endpoint:
    path: /InGameOddsByDate/{date}/{sportsbookGroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: string
      format: json
      date: string
      sportsbookGroup: string
- name: LiveGameOddsLineMovement
  endpoint:
    path: /LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: string
      format: json
      gameid: integer
- name: InGameOddsLineMovement
  endpoint:
    path: /InGameOddsLineMovement/{gameid}/{sportsbookGroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: string
      format: json
      gameid: integer
      sportsbookGroup: string
- name: PreGameOddsByDate
  endpoint:
    path: /GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: string
      format: json
      date: string
- name: ScoresBasicFinal
  endpoint:
    path: /json/ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: GamesByDateFinal
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: ScoresBasic
  endpoint:
    path: /json/ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: GamesByDate
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s).   Examples: `2020-08-20`, `2020-08-23`'
- name: Betting Events - by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season (with optional season type).  Examples: `2020`,
        `2020PRE`, `2020POST`, `2020STAR`, `2021`, etc.'
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game for which to pull all betting
        markets (includes outcomes/bets).
- name: Betting Markets - by Game
  endpoint:
    path: /BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game for which to pull all betting markets
        (includes outcomes/bets).
- name: Box Score Final
  endpoint:
    path: /stats/json/BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params: {}
- name: Box Scores - by Date Final
  endpoint:
    path: /stats/json/BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: Player Game Logs - by Season
  endpoint:
    path: /stats/json/PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Player Game Stats - by Date Final
  endpoint:
    path: /stats/json/PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: Player Season Stats
  endpoint:
    path: /stats/json/PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Player Season Stats - by Team
  endpoint:
    path: /stats/json/PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: Team Game Stats - by Date Final
  endpoint:
    path: /stats/json/TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: Team Season Stats
  endpoint:
    path: /scores/json/TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Team Stats Allowed - by Position
  endpoint:
    path: /stats/json/TeamStatsAllowedByPosition/{season}
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: BettingPlayerPropsByGameID_SportsbookGroup
  endpoint:
    path: /BettingPlayerPropsByGameID/{gameId}/{sportsbookGroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: BettingMarket
  endpoint:
    path: /BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarket_SportsbookGroup
  endpoint:
    path: /BettingMarket/{marketId}/{sportsbookGroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: includeavailableunlisted
      format: json
- name: BettingMarketResults
  endpoint:
    path: /BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
      format: json
- name: BettingPropsArchive
  endpoint:
    path: /BettingPropsArchive/{season}/{bettingMarketId}/{sportsbookGrouping}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{date}
    method: GET
    data_selector: PlayerGame
    params:
      key: Subscription Required
      format: json
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{date}
    method: GET
    data_selector: TeamGame
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayLiveFinal
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: GoalieDepthCharts
  endpoint:
    path: /scores/json/GoalieDepthCharts
    method: GET
    params:
      key: Subscription Required
      format: json
- name: LinesBySeason
  endpoint:
    path: /stats/json/LinesBySeason/{season}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: Players
  endpoint:
    path: /scores/json/Players
    method: GET
    params:
      key: Subscription Required
      format: json
- name: FreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    params:
      key: Subscription Required
      format: json
- name: InjuredPlayers
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    params:
      key: Subscription Required
      format: json
- name: PlayersByTeam
  endpoint:
    path: /scores/json/Players/{team}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: StartingGoaltendersByDate
  endpoint:
    path: /projections/json/StartingGoaltendersByDate/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeason
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}/{sportsbookGroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookGroup: Access Required
- name: BettingFuturesArchive
  endpoint:
    path: /archive/json/BettingFuturesArchive/{season}/{bettingMarketId}/{sportsbookGrouping}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      bettingMarketId: MarketId of the desired market
      sportsbookGrouping: Access Required
- name: BettingSplitsByGameId
  endpoint:
    path: /odds/json/BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
      gameId: The ID of the game
- name: BettingSplitsByMarketId
  endpoint:
    path: /odds/json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market
- name: MatchupTrends
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
      opponent: The abbreviation of the requested opponent
- name: TeamTrends
  endpoint:
    path: /odds/json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: PlayerGameProjectionStatsByDate
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: PlayerSeasonProjectionStats
  endpoint:
    path: /projections/json/PlayerSeasonProjectionStats/{season}
    method: GET
    data_selector: PlayerSeasonProjection[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: DfsSlateOwnershipProjectionsBySlateID
  endpoint:
    path: /projections/json/DfsSlateOwnershipProjectionsBySlateID/{slateId}
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
    params:
      key: Subscription Required
      format: json
      slateId: SlateID of the DFS Slate
- name: UpcomingDfsSlateOwnershipProjections
  endpoint:
    path: /projections/json/UpcomingDfsSlateOwnershipProjections
    method: GET
    data_selector: DfsSlateWithOwnershipProjection[]
    params:
      key: Subscription Required
      format: json
- name: FantasyGameStatsByDate
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: DfsSlatesByDate
  endpoint:
    path: /projections/json/DfsSlatesByDate/{date}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
      date: The date of the slates
- name: In-Game Odds - by Date
  endpoint:
    path: /json/LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
      sportsbookgroup: The name of the Sportsbook grouping
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an NHL game
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an NHL game
      sportsbookgroup: The name of the Sportsbook grouping
- name: Period Game Odds - by Date
  endpoint:
    path: /json/AlternateMarketGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: news
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: news_by_date
  endpoint:
    path: /scores/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news.
- name: news_by_player
  endpoint:
    path: /scores/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      playerid: Unique FantasyData Player ID.
- name: premium_news
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: premium_news_by_date
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news.
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: game_odds_line_movement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription
      format: json
      gameid: integer
- name: standings
  endpoint:
    path: /scores/json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: Subscription Required
      format: json
- name: players_active
  endpoint:
    path: /scores/json/PlayersActiveBasic
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: players_free_agents
  endpoint:
    path: /scores/json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: teams_all
  endpoint:
    path: /scores/json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: schedules
  endpoint:
    path: /scores/json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events by Date
  endpoint:
    path: /json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: Betting Events by Season
  endpoint:
    path: /json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: Betting Markets by Event
  endpoint:
    path: /json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event.
- name: Betting Markets by Game
  endpoint:
    path: /json/BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game.
- name: Betting Markets by Market Type
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event.
      marketTypeID: The Market Type ID of the desired MarketTypes.
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: ScoresBasic
  endpoint:
    path: /ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: GamesByDate
  endpoint:
    path: /GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: available
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: BoxScoreFinal
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params: {}
- name: BoxScoresFinal
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params: {}
- name: PlayerGameStatsBySeason
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: PlayerGameStatsByDateFinal
  endpoint:
    path: /PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params: {}
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: PlayerSeasonStatsByTeam
  endpoint:
    path: /PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params: {}
- name: TeamGameStatsBySeason
  endpoint:
    path: /TeamGameStatsBySeason/{season}/{teamid}/{numberofgames}
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: TeamGameStatsByDateFinal
  endpoint:
    path: /TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params: {}
- name: TeamSeasonStats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: TeamStatsAllowedByPosition
  endpoint:
    path: /TeamStatsAllowedByPosition/{season}
    method: GET
    data_selector: TeamSeason[]
    params: {}
- name: Betting Futures - by Season
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Splits - by Betting Market
  endpoint:
    path: /odds/json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
- name: Betting Trends - by Matchup
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
- name: Fantasy Points - by Date
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
- name: News
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: PlayByPlayLiveFinal
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    data_selector: PlayByPlay
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    data_selector: PlayByPlay[]
    params:
      key: Subscription Required
      format: json
      date: string
      minutes: string
- name: AllStars
  endpoint:
    path: /stats/json/AllStars/{season}
    method: GET
    data_selector: PlayerInfo[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: DepthCharts
  endpoint:
    path: /scores/json/DepthCharts
    method: GET
    data_selector: TeamDepthChart[]
    params:
      key: Subscription Required
      format: json
- name: Players
  endpoint:
    path: /scores/json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: FreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: InjuredPlayers
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: PlayersByTeam
  endpoint:
    path: /scores/json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      team: string
- name: StartingLineupsByDate
  endpoint:
    path: /projections/json/StartingLineupsByDate/{date}
    method: GET
    data_selector: StartingLineups[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    data_selector: Transaction[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: LeagueHierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference
    params:
      key: Subscription Required
      format: json
- name: PlayersByActive
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic
    params:
      key: Subscription Required
      format: json
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: Team
    params:
      key: Subscription Required
      format: json
- name: TeamsBasic
  endpoint:
    path: /json/TeamsBasic
    method: GET
    data_selector: TeamBasic
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium
    params:
      key: Subscription Required
      format: json
- name: CurrentSeason
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: integer
    params:
      key: Subscription Required
      format: json
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{season}/{week}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: subscription_required
      format: json
      season: year_of_the_season
      week: the_week_of_the_game
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: subscription_required
      format: json
      date: the_date_of_the_games
- name: In-Game Odds - by Date
  endpoint:
    path: /json/LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-06-20, 2018-06-23'
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-06-20, 2018-06-23'
      sportsbookgroup: Access Required
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an NBA game. GameIDs can be found in the Games API.
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an NBA game. GameIDs can be found in the Games API.
      sportsbookgroup: Access Required
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-06-20, 2018-06-23'
- name: BoxScoreFinal
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: BoxScoresFinal
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: BoxScoresByWeekFinal
  endpoint:
    path: /BoxScoresByWeekFinal/{season}/{week}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      season: string
      week: integer
- name: PlayerGameStatsBySeason
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
      season: string
      playerid: integer
      numberofgames: string
- name: PlayerGameStatsByWeekFinal
  endpoint:
    path: /PlayerGameStatsByWeekFinal/{season}/{week}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
      season: string
      week: integer
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: PlayerSeasonStatsByTeam
  endpoint:
    path: /PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
      team: string
- name: TeamGameStatsBySeason
  endpoint:
    path: /TeamGameStatsBySeason/{season}/{teamid}/{numberofgames}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
      season: string
      teamid: integer
      numberofgames: string
- name: TeamGameStatsByWeekFinal
  endpoint:
    path: /TeamGameStatsByWeekFinal/{season}/{week}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
      season: string
      week: integer
- name: TeamSeasonStats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2020-02-15, 2020-02-23'
- name: Betting Events - by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season (with optional season type). Examples: 2020, 2020PRE,
        2020POST, 2020STAR'
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
      sportsbookgroup: Access Required
- name: Betting Markets - by Game
  endpoint:
    path: /BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByGameID/{gameID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game
      sportsbookgroup: Access Required
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
      marketTypeID: The Market Type ID of the desired MarketTypes
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
      marketTypeID: The Market Type ID of the desired MarketTypes
      sportsbookgroup: Access Required
- name: BoxScoresByDate
  endpoint:
    path: /stats/json/BoxScoresByDate/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: BoxScoresByWeek
  endpoint:
    path: /stats/json/BoxScoresByWeek/{season}/{week}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: BoxScoresByWeekDelta
  endpoint:
    path: /stats/json/BoxScoresByWeekDelta/{season}/{week}/{minutes}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: PlayerGameStatsByWeek
  endpoint:
    path: /stats/json/PlayerGameStatsByWeek/{season}/{week}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
- name: TeamGameStatsByWeek
  endpoint:
    path: /scores/json/TeamGameStatsByWeek/{season}/{week}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket
    params:
      format: json
      key: Subscription Required
- name: BettingPlayerPropsByGameIDWithSportsbookGroup
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      format: json
      key: Subscription Required
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      format: json
      key: Subscription Required
- name: BettingMarketWithSportsbookGroup
  endpoint:
    path: /json/BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      format: json
      key: Subscription Required
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      format: json
      key: Subscription Required
- name: BettingResultsByMarketWithSportsbookGroup
  endpoint:
    path: /json/BettingResultsByMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarketResult
    params:
      format: json
      key: Subscription Required
- name: players_active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: players_injured
  endpoint:
    path: /json/InjuredPlayers
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: players_by_team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: BettingFuturesBySeason
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: BettingSplitsByMarketId
  endpoint:
    path: /odds/json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market
- name: BettingSplitsByGameId
  endpoint:
    path: /odds/json/BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
      gameId: The ID of the game
- name: MatchupTrends
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
      opponent: The abbreviation of the requested opponent
- name: TeamTrends
  endpoint:
    path: /odds/json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: PlayerGameProjectionStatsByDate
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: PlayerSeasonProjectionStats
  endpoint:
    path: /projections/json/PlayerSeasonProjectionStats/{season}
    method: GET
    data_selector: PlayerSeasonProjection[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: PlayerSeasonProjectionStatsByTeam
  endpoint:
    path: /projections/json/PlayerSeasonProjectionStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeasonProjection[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      team: The abbreviation of the requested team
- name: FantasyGameStatsByDate
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: DfsSlatesByDate
  endpoint:
    path: /projections/json/DfsSlatesByDate/{date}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: news
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: news_by_date
  endpoint:
    path: /scores/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news
- name: news_by_player
  endpoint:
    path: /scores/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      playerid: Unique FantasyData Player ID
- name: premium_news
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: premium_news_by_date
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
      date: The date of the news
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Week
  endpoint:
    path: /json/LiveGameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season, with optional season type. Examples: 2018, 2018POST,
        etc.'
      week: 'The week of the game(s). Examples: 1, 2, etc.'
- name: In-Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByWeek/{season}/{week}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season, with optional season type. Examples: 2018, 2018POST,
        etc.'
      week: 'The week of the game(s). Examples: 1, 2, etc.'
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: Period Game Odds - by Week
  endpoint:
    path: /json/AlternateMarketGameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season, with optional season type. Examples: 2018, 2018POST,
        etc.'
      week: 'The week of the game(s). Examples: 1, 2, etc.'
- name: Pre-Game and Period Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsByWeek/{season}/{week}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season, with optional season type. Examples: 2018, 2018POST,
        etc.'
      week: 'The week of the game(s). Examples: 1, 2, etc.'
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: Pre-Game Odds - by Week
  endpoint:
    path: /json/GameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: 'Year of the season, with optional season type. Examples: 2018, 2018POST,
        etc.'
      week: 'The week of the game(s). Examples: 1, 2, etc.'
- name: Period Game Odds Line Movement
  endpoint:
    path: /json/AlternateMarketGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game. GameIDs can be found in the Games API. Valid
        entries are 8487 or 8657
      sportsbookgroup: 'The name of the Sportsbook grouping. Examples: G1100'
- name: GameOddsLineMovement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: BettingEventsByDate
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingEventsBySeason
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByEvent
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByGameID
  endpoint:
    path: /BettingMarketsByGameID/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: Standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standing[]
    params:
      key: Subscription Required
      format: json
- name: PlayersByActive
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: PlayersByFreeAgents
  endpoint:
    path: /json/PlayersByFreeAgents
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: PlayersBasic
  endpoint:
    path: /json/PlayersBasic/{team}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: AllTeams
  endpoint:
    path: /json/AllTeams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: teams
  endpoint:
    path: /json/teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium[]
    params:
      key: Subscription Required
      format: json
- name: AreAnyGamesInProgress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: Subscription Required
      format: json
- name: Bettingmetadata
  endpoint:
    path: /json/Bettingmetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: Subscription Required
      format: json
- name: CurrentSeason
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: Subscription Required
      format: json
- name: ActiveSportsbooks
  endpoint:
    path: /json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: Games
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
- name: SchedulesBasic
  endpoint:
    path: /json/SchedulesBasic/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: Subscription Required
      format: json
- name: ScoresBasicFinal
  endpoint:
    path: /json/ScoresBasicFinal/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: string
      format: string
      date: string
- name: GamesByDateFinal
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: string
      format: string
      date: string
- name: ScoresBasic
  endpoint:
    path: /json/ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: string
      format: string
      date: string
- name: GamesByDate
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: string
      format: string
      date: string
- name: BettingFuturesBySeason
  endpoint:
    path: /json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /json/BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: BettingFuturesArchive
  endpoint:
    path: /archive/json/BettingFuturesArchive/{season}/{bettingMarketId}/{sportsbookGrouping}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      bettingMarketId: The MarketId of the desired market
      sportsbookGrouping: Access Required
- name: BettingSplitsByMarketId
  endpoint:
    path: /json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market
- name: BettingSplitsByGameId
  endpoint:
    path: /json/BettingSplitsByGameId/{gameid}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
      gameid: The ID of the game
- name: MatchupTrends
  endpoint:
    path: /json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
      opponent: The abbreviation of the requested opponent
- name: TeamTrends
  endpoint:
    path: /json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: BoxScoreFinal
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: string
      format: json
- name: BoxScoresFinal
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: string
      format: json
- name: PlayerGameStatsBySeason
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
- name: PlayerGameStatsByDateFinal
  endpoint:
    path: /PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      format: json
- name: PlayerSeasonStatsByTeam
  endpoint:
    path: /PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      format: json
- name: TeamGameStatsByDateFinal
  endpoint:
    path: /TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: string
      format: json
- name: TeamSeasonStats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: string
      format: json
- name: TeamStatsAllowedByPosition
  endpoint:
    path: /TeamStatsAllowedByPosition/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: string
      format: json
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: League Hierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference[]
    params:
      key: Subscription Required
      format: json
- name: Players By Active
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: Team Profiles - All
  endpoint:
    path: /json/teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium[]
    params:
      key: Subscription Required
      format: json
- name: Games - by Season
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season (with optional season type)
- name: games_by_date_final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: games_by_season_final
  endpoint:
    path: /json/GamesFinal/{season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: scores_basic_by_date
  endpoint:
    path: /json/ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: games_by_date_live_final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: tournament_hierarchy
  endpoint:
    path: /json/Tournament/{season}
    method: GET
    data_selector: Tournament
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: PlayByPlayFinal
  endpoint:
    path: /pbp/json/PlayByPlayFinal/{gameid}
    method: GET
    data_selector: PlayByPlay
- name: PlayByPlayLiveFinal
  endpoint:
    path: /pbp/json/PlayByPlay/{gameid}
    method: GET
    data_selector: PlayByPlay
- name: PlayByPlayDelta
  endpoint:
    path: /pbp/json/PlayByPlayDelta/{date}/{minutes}
    method: GET
    data_selector: PlayByPlay
- name: GoalieDepthCharts
  endpoint:
    path: /scores/json/GoalieDepthCharts
    method: GET
    data_selector: TeamGoalieDepthChart
- name: LinesBySeason
  endpoint:
    path: /stats/json/LinesBySeason/{season}
    method: GET
    data_selector: TeamLine
- name: Players
  endpoint:
    path: /scores/json/Players
    method: GET
    data_selector: Player
- name: FreeAgents
  endpoint:
    path: /scores/json/FreeAgents
    method: GET
    data_selector: Player
- name: InjuredPlayers
  endpoint:
    path: /projections/json/InjuredPlayers
    method: GET
    data_selector: Player
- name: PlayersByTeam
  endpoint:
    path: /scores/json/Players/{team}
    method: GET
    data_selector: Player
- name: StartingGoaltendersByDate
  endpoint:
    path: /projections/json/StartingGoaltendersByDate/{date}
    method: GET
    data_selector: StartingGoaltenders
- name: TransactionsByDate
  endpoint:
    path: /scores/json/TransactionsByDate/{date}
    method: GET
    data_selector: Transaction
- name: In-Game Odds - by Date
  endpoint:
    path: /json/LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-11-20, 2018-11-23'
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an NHL game. GameIDs can be found in the Games API. Valid
        entries are 13096 or 13110
- name: Period Game Odds - by Date
  endpoint:
    path: /json/AlternateMarketGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-11-20, 2018-11-23'
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: 'The date of the game(s). Examples: 2018-11-20, 2018-11-23'
- name: Box Score Final
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: Subscription Required
      format: json
- name: Box Scores - by Date Final
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: Player Game Logs - by Season
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
- name: Player Game Stats - by Date Final
  endpoint:
    path: /PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
- name: Player Season Stats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
- name: Team Game Stats - by Date Final
  endpoint:
    path: /TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
- name: Team Season Stats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: Subscription Required
      format: json
- name: game_odds_line_movement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: players_active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: players_injured
  endpoint:
    path: /json/InjuredPlayers
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: players_by_team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: BettingEventsByDate
  endpoint:
    path: /json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent
    params:
      key: Subscription Required
      format: json
- name: BettingEventsBySeason
  endpoint:
    path: /json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByEvent
  endpoint:
    path: /json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByGameID
  endpoint:
    path: /json/BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      include: available
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
- name: BettingResultsByMarket
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: In-Game Odds - by Date
  endpoint:
    path: /json/LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult
    params:
      key: Subscription Required
      format: json
- name: Alternate Market Pre-Game Odds - by Date
  endpoint:
    path: /json/AlternateMarketGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: Alternate Market Pre-Game Odds Line Movement
  endpoint:
    path: /json/AlternateMarketGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult
    params:
      key: Subscription Required
      format: json
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo
    params:
      key: Subscription Required
- name: GameInfo
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      format: json
      gameid: ''
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Game
  endpoint:
    path: /BettingMarketsByGameID/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingMarketResults
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: Betting Futures - by Season
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Futures - by Season [Sportsbook Group]
  endpoint:
    path: /odds/json/BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Splits - by Betting Market
  endpoint:
    path: /odds/json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
- name: Betting Splits - by Game
  endpoint:
    path: /odds/json/BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
- name: Betting Trends - by Matchup
  endpoint:
    path: /odds/json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
- name: Betting Trends - by Team
  endpoint:
    path: /odds/json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
- name: Fantasy Points - by Date
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
- name: DFS Slates - by Date
  endpoint:
    path: /projections/json/DfsSlatesByDate/{date}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
- name: News
  endpoint:
    path: /scores/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: News - by Date
  endpoint:
    path: /scores/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: News - by Player
  endpoint:
    path: /scores/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: Premium News
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: Premium News - by Date
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeason
  endpoint:
    path: /BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: BettingSplitsByMarketId
  endpoint:
    path: /BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market
- name: BettingSplitsByGameId
  endpoint:
    path: /BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
      gameId: The ID of the game
- name: MatchupTrends
  endpoint:
    path: /MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
      opponent: The abbreviation of the requested opponent
- name: TeamTrends
  endpoint:
    path: /TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: LeagueHierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference[]
    params:
      key: Subscription Required
      format: json
- name: PlayersByActive
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: PlayersBasic
  endpoint:
    path: /json/PlayersBasic/{team}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: TeamsBasic
  endpoint:
    path: /json/TeamsBasic
    method: GET
    data_selector: TeamBasic[]
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium[]
    params:
      key: Subscription Required
      format: json
- name: CurrentSeason
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: integer
    params:
      key: Subscription Required
      format: json
- name: CurrentWeek
  endpoint:
    path: /json/CurrentWeek
    method: GET
    data_selector: integer?
    params:
      key: Subscription Required
      format: json
- name: ScoresBasicFinal
  endpoint:
    path: /ScoresBasicFinal/{season}/{week}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      week: The week of the game(s)
- name: GamesByWeekFinal
  endpoint:
    path: /GamesByWeekFinal/{season}/{week}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      week: The week of the game(s)
- name: GamesByDateFinal
  endpoint:
    path: /GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s)
- name: Rankings
  endpoint:
    path: /golf/v2/json/Rankings/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: Player
  endpoint:
    path: /golf/v2/json/Player/{playerid}
    method: GET
    data_selector: Player
    params:
      key: Subscription Required
      format: json
      playerid: Unique FantasyData Player ID.
- name: Players
  endpoint:
    path: /golf/v2/json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: Courses
  endpoint:
    path: /golf/v2/json/Courses
    method: GET
    data_selector: Courses[]
    params:
      key: Subscription Required
      format: json
- name: Tournaments
  endpoint:
    path: /golf/v2/json/Tournaments/{season}
    method: GET
    data_selector: Tournament[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: PlayerTournamentRoundScoresFinal
  endpoint:
    path: /golf/v2/json/PlayerTournamentRoundScoresFinal/{tournamentid}
    method: GET
    data_selector: TournamentRound[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of a tournament.
- name: PlayerTournamentRoundScores
  endpoint:
    path: /golf/v2/json/PlayerTournamentRoundScores/{tournamentid}
    method: GET
    data_selector: TournamentRound[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of a tournament.
- name: LeaderboardBasicFinal
  endpoint:
    path: /LeaderboardBasicFinal/{tournamentid}
    method: GET
    data_selector: LeaderboardBasic
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: LeaderboardFinal
  endpoint:
    path: /LeaderboardFinal/{tournamentid}
    method: GET
    data_selector: Leaderboard
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerTournamentHoleScoresFinal
  endpoint:
    path: /PlayerTournamentHoleScoresFinal/{tournamentid}
    method: GET
    data_selector: PlayerTournamentBasic[]
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: LeaderboardBasic
  endpoint:
    path: /LeaderboardBasic/{tournamentid}
    method: GET
    data_selector: LeaderboardBasic
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: Leaderboard
  endpoint:
    path: /Leaderboard/{tournamentid}
    method: GET
    data_selector: Leaderboard
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerTournamentHoleScores
  endpoint:
    path: /PlayerTournamentHoleScores/{tournamentid}
    method: GET
    data_selector: PlayerTournamentBasic[]
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: Box Score Final
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: Box Scores - by Date Final
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: Box Scores - by Week Final
  endpoint:
    path: /BoxScoresByWeekFinal/{season}/{week}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
- name: Player Game Logs - by Season
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
- name: Player Game Stats - by Week Final
  endpoint:
    path: /PlayerGameStatsByWeekFinal/{season}/{week}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
- name: Player Season Stats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
- name: Player Season Stats - by Team
  endpoint:
    path: /PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
- name: Team Game Logs - by Season
  endpoint:
    path: /TeamGameStatsBySeason/{season}/{teamid}/{numberofgames}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
- name: Team Game Stats - by Week Final
  endpoint:
    path: /TeamGameStatsByWeekFinal/{season}/{week}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
- name: Team Season Stats & Standings
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: Subscription Required
      format: json
- name: BoxScoresByDate
  endpoint:
    path: /BoxScoresByDate/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: BoxScoresByWeek
  endpoint:
    path: /BoxScoresByWeek/{season}/{week}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: BoxScoresByWeekDelta
  endpoint:
    path: /BoxScoresByWeekDelta/{season}/{week}/{minutes}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: PlayerGameStatsByWeek
  endpoint:
    path: /PlayerGameStatsByWeek/{season}/{week}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: TeamGameStatsByWeek
  endpoint:
    path: /TeamGameStatsByWeek/{season}/{week}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: player_details_by_active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: player_details_by_injured
  endpoint:
    path: /json/InjuredPlayers
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: player_details_by_team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: InPlayTournamentOdds
  endpoint:
    path: /json/InPlayTournamentOdds/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
- name: InPlayTournamentOddsLineMovement
  endpoint:
    path: /json/InPlayTournamentOddsLineMovement/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
- name: InPlayTournamentOddsSportsbookGroup
  endpoint:
    path: /json/InPlayTournamentOdds/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
      sportsbookgroup: string
- name: InPlayTournamentOddsLineMovementSportsbookGroup
  endpoint:
    path: /json/InPlayTournamentOddsLineMovement/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
      sportsbookgroup: string
- name: TournamentOdds
  endpoint:
    path: /json/TournamentOdds/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
- name: TournamentOddsSportsbookGroup
  endpoint:
    path: /json/TournamentOdds/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
      sportsbookgroup: string
- name: TournamentOddsLineMovement
  endpoint:
    path: /json/TournamentOddsLineMovement/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
- name: TournamentOddsLineMovementSportsbookGroup
  endpoint:
    path: /json/TournamentOddsLineMovement/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: TournamentOdds
    params:
      key: string
      format: string
      tournamentid: integer
      sportsbookgroup: string
- name: Betting Events by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the tournament(s).
- name: Betting Events by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: Betting Markets by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
- name: Betting Markets by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Betting Markets by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
      marketTypeID: The EventId of the desired event/game.
- name: Betting Markets by Tournament
  endpoint:
    path: /BettingMarketsByTournamentID/{tournamentid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of the desired tournament.
- name: Betting Markets by Tournament [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByTournamentID/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of the desired tournament.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Betting Player Props by Tournament [Sportsbook Group]
  endpoint:
    path: /BettingPlayerPropsByTournamentID/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of the desired tournament.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: In-Game Odds - by Week
  endpoint:
    path: /json/LiveGameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season, with optional season type.
      week: The week of the game(s).
- name: In-Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByWeek/{season}/{week}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season, with optional season type.
      week: The week of the game(s).
      sportsbookgroup: The name of the Sportsbook grouping.
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game.
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Period Game Odds - by Week
  endpoint:
    path: /json/AlternateMarketGameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season, with optional season type.
      week: The week of the game(s).
- name: Pre-Game and Period Game Odds - by Week [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsByWeek/{season}/{week}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season, with optional season type.
      week: The week of the game(s).
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Pre-Game Odds - by Week
  endpoint:
    path: /json/GameOddsByWeek/{season}/{week}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season, with optional season type.
      week: The week of the game(s).
- name: Period Game Odds Line Movement
  endpoint:
    path: /json/AlternateMarketGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game.
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
      gameid: The GameID of an CFB game.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    params:
      key: subscription required
      format: json
- name: BettingMarket Sportsbook Group
  endpoint:
    path: /json/BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    params:
      key: subscription required
      format: json
- name: GameOddsLineMovement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    params:
      key: Subscription Required
      format: json
- name: BettingEventsByDate
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingEventsBySeason
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByEvent
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByEventSportsbookGroup
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByGameID
  endpoint:
    path: /BettingMarketsByGameID/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByGameIDSportsbookGroup
  endpoint:
    path: /BettingMarketsByGameID/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: PlayerTournamentProjectionStats
  endpoint:
    path: /golf/v2/json/PlayerTournamentProjectionStats/{tournamentid}
    method: GET
    data_selector: PlayerTournamentProjection
    params:
      key: Subscription Required
      format: json
- name: DfsSlateOwnershipProjectionsBySlateID
  endpoint:
    path: /golf/v2/json/DfsSlateOwnershipProjectionsBySlateID/{slateId}
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
    params:
      key: Subscription Required
      format: json
- name: UpcomingDfsSlateOwnershipProjections
  endpoint:
    path: /golf/v2/json/UpcomingDfsSlateOwnershipProjections
    method: GET
    data_selector: DfsSlateWithOwnershipProjection[]
    params:
      key: Subscription Required
      format: json
- name: FantasyGameStatsByTournament
  endpoint:
    path: /golf/v2/json/FantasyGameStatsByTournament/{tournamentid}
    method: GET
    data_selector: FantasyTournament
    params:
      key: Subscription Required
      format: json
- name: DfsSlatesByTournament
  endpoint:
    path: /golf/v2/json/DfsSlatesByTournament/{tournamentid}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
- name: News
  endpoint:
    path: /golf/v2/json/News
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: NewsByDate
  endpoint:
    path: /golf/v2/json/NewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: NewsByPlayerID
  endpoint:
    path: /golf/v2/json/NewsByPlayerID/{playerid}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: RotoBallerPremiumNews
  endpoint:
    path: /v3/golf/news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: RotoBallerPremiumNewsByDate
  endpoint:
    path: /v3/golf/news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News[]
    params:
      key: Subscription Required
      format: json
- name: RotoworldPlayerNewsByDate
  endpoint:
    path: /v3/golf/rotoworld/json/RotoworldPlayerNewsByDate/{date}
    method: GET
    data_selector: RotoworldPlayerNewsItem[]
    params:
      key: Subscription Required
      format: json
- name: RotoworldPlayerNews
  endpoint:
    path: /v3/golf/rotoworld/json/RotoworldPlayerNews
    method: GET
    data_selector: RotoworldPlayerNewsItem[]
    params:
      key: Subscription Required
      format: json
- name: Headshots
  endpoint:
    path: /v3/golf/headshots/json/Headshots
    method: GET
    data_selector: Headshot[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
- name: BettingResultsByMarket
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: race
  endpoint:
    path: /services/data/vXX.X/sobjects/Race
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: driver
  endpoint:
    path: /services/data/vXX.X/sobjects/Driver
    method: GET
    data_selector: records
    params: {}
- name: BettingFuturesBySeason
  endpoint:
    path: /json/BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /json/BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesArchive
  endpoint:
    path: /archive/json/BettingFuturesArchive/{season}/{bettingMarketId}/{sportsbookGrouping}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingSplitsByMarketId
  endpoint:
    path: /json/BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
- name: BettingSplitsByGameId
  endpoint:
    path: /json/BettingSplitsByGameId/{gameid}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
- name: MatchupTrends
  endpoint:
    path: /json/MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
- name: TeamTrends
  endpoint:
    path: /json/TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
- name: drivers
  endpoint:
    path: /nascar/v2/json/drivers
    method: GET
    data_selector: Driver
    params:
      key: string
- name: driver_by_id
  endpoint:
    path: /nascar/v2/json/driver/{driverid}
    method: GET
    data_selector: Driver
    params:
      key: string
      driverid: integer
- name: drivers_by_active
  endpoint:
    path: /nascar/v2/json/driversbyactive
    method: GET
    data_selector: DriverBasic
    params:
      key: string
- name: tracks
  endpoint:
    path: /nascar/v2/json/tracks/{season}
    method: GET
    data_selector: Tracks
    params:
      key: string
      season: string
- name: betting_metadata
  endpoint:
    path: /v3/nascar/odds/json/BettingMetaData
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: string
- name: race_odds
  endpoint:
    path: /v3/nascar/odds/json/RaceOdds/{Raceid}
    method: GET
    data_selector: RaceOdds
    params:
      key: string
      Raceid: integer
- name: League Hierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference[]
    params:
      key: Subscription Required
      format: json
- name: Players by Active
  endpoint:
    path: /json/PlayersByActive
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
- name: Players Basic by Team
  endpoint:
    path: /json/PlayersBasic/{team}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: Teams
  endpoint:
    path: /json/teams
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadium[]
    params:
      key: Subscription Required
      format: json
- name: Are Games In Progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: Subscription Required
      format: json
- name: Current Season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: Subscription Required
      format: json
- name: Active Sportsbooks
  endpoint:
    path: /json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Date
  endpoint:
    path: /v3/nascar/odds/json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the race(s).
- name: Betting Events - by Season
  endpoint:
    path: /v3/nascar/odds/json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: The season to get BettingEvents.
- name: Betting Markets - by Event
  endpoint:
    path: /v3/nascar/odds/json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
- name: Betting Markets - by Market Type
  endpoint:
    path: /v3/nascar/odds/json/BettingMarketsByMarketType/{eventID}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventID: The EventId of the desired event/game.
      marketTypeID: The Market Type ID of the desired MarketTypes.
- name: Betting Markets - by Race
  endpoint:
    path: /v3/nascar/odds/json/BettingMarketsByRaceID/{raceID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      raceID: The RaceID of the desired race.
- name: Projected Player Race Stats - by Race
  endpoint:
    path: /nascar/v2/json/DriverRaceProjections/{raceid}
    method: GET
    data_selector: DriverRaceProjection[]
    params:
      key: Subscription Required
      format: json
      raceid: Unique FantasyData Race ID.
- name: Fantasy Points - by Race
  endpoint:
    path: /nascar/v2/json/FantasyGameStatsByRace/{raceid}
    method: GET
    data_selector: FantasyRace
    params:
      key: Subscription Required
      format: json
      raceid: Unique FantasyData Race ID.
- name: games_by_date_final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game
    params:
      key: Subscription Required
      format: json
- name: games_by_season_final
  endpoint:
    path: /json/GamesFinal/{season}
    method: GET
    data_selector: Game
    params:
      key: Subscription Required
      format: json
- name: scores_basic_by_date
  endpoint:
    path: /json/ScoresBasic/{date}
    method: GET
    data_selector: ScoreBasic
    params:
      key: Subscription Required
      format: json
- name: games_by_date_live_final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game
    params:
      key: Subscription Required
      format: json
- name: tournament_hierarchy
  endpoint:
    path: /json/Tournament/{season}
    method: GET
    data_selector: Tournament
    params:
      key: Subscription Required
      format: json
- name: BoxScoreFinal
  endpoint:
    path: /BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: string
      format: json
      gameid: integer
- name: BoxScoresFinal
  endpoint:
    path: /BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: string
      format: json
      date: string
- name: PlayerGameStatsBySeason
  endpoint:
    path: /PlayerGameStatsBySeason/{season}/{playerid}/{numberofgames}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
      season: string
      playerid: integer
      numberofgames: string
- name: PlayerGameStatsByDateFinal
  endpoint:
    path: /PlayerGameStatsByDateFinal/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: string
      format: json
      date: string
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      format: json
      season: string
- name: PlayerSeasonStatsByTeam
  endpoint:
    path: /PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      format: json
      season: string
      team: string
- name: TeamGameStatsBySeason
  endpoint:
    path: /TeamGameStatsBySeason/{season}/{teamid}/{numberofgames}
    method: GET
    data_selector: TeamGame[]
    params:
      key: string
      format: json
      season: string
      teamid: integer
      numberofgames: string
- name: TeamGameStatsByDateFinal
  endpoint:
    path: /TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: string
      format: json
      date: string
- name: TeamSeasonStats
  endpoint:
    path: /TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      key: string
      format: json
      season: string
- name: Areas
  endpoint:
    path: /scores/json/Areas
    method: GET
    data_selector: Area[]
    params:
      key: Subscription Required
      format: json
- name: Competitions
  endpoint:
    path: /scores/json/Competitions
    method: GET
    data_selector: Competition[]
    params:
      key: Subscription Required
      format: json
- name: Standings
  endpoint:
    path: /scores/json/Standings/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      season: Year of the season
- name: Active Memberships
  endpoint:
    path: /scores/json/ActiveMemberships/{competition}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
- name: Canceled Memberships
  endpoint:
    path: /scores/json/CanceledMemberships
    method: GET
    data_selector: CanceledMembership
    params:
      key: Subscription Required
      format: json
- name: Recently Changed Memberships
  endpoint:
    path: /scores/json/RecentlyChangedMemberships/{competition}/{days}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      days: Number of days
- name: Historical Memberships by Team
  endpoint:
    path: /scores/json/HistoricalMembershipsByTeam/{competition}/{teamid}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      teamid: Unique FantasyData Team ID
- name: Players by Team
  endpoint:
    path: /scores/json/PlayersByTeamBasic/{competition}/{teamid}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      teamid: Unique FantasyData Team ID
- name: Teams by Competition
  endpoint:
    path: /scores/json/Teams/{competition}
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
- name: Teams by Season
  endpoint:
    path: /scores/json/SeasonTeams/{competition}/{seasonid}
    method: GET
    data_selector: SeasonTeam[]
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      seasonid: Unique FantasyData Season ID
- name: Venues
  endpoint:
    path: /scores/json/Venues
    method: GET
    data_selector: Venue[]
    params:
      key: Subscription Required
      format: json
- name: Betting Metadata
  endpoint:
    path: /odds/json/BettingMetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: Subscription Required
      format: json
- name: Active Sportsbooks
  endpoint:
    path: /odds/json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: players_by_active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: injured_players
  endpoint:
    path: /json/InjuredPlayers
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
- name: players_by_team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team.
- name: schedule
  endpoint:
    path: /json/Schedule/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: string
      season: string
- name: schedules_basic
  endpoint:
    path: /json/SchedulesBasic/{competition}/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: Subscription Required
      format: json
      competition: string
      season: string
- name: games_basic_final
  endpoint:
    path: /json/ScoresBasicFinal/{competition}/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: games_by_competition_live_final
  endpoint:
    path: /json/CompetitionDetails/{competition}
    method: GET
    data_selector: CompetitionDetail
    params:
      key: Subscription Required
      format: json
      competition: string
- name: games_by_date_final
  endpoint:
    path: /json/GamesByDateFinal/{competition}/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: LiveGameOddsByDate
  endpoint:
    path: /json/LiveGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: InGameOddsByDate
  endpoint:
    path: /json/InGameOddsByDate/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: string
      sportsbookgroup: string
- name: LiveGameOddsLineMovement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: integer
- name: InGameLineMovement
  endpoint:
    path: /json/InGameLineMovement/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      gameid: integer
      sportsbookgroup: string
- name: AlternateMarketGameOddsByDate
  endpoint:
    path: /json/AlternateMarketGameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: PreGameOddsByDate
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: BoxScoreFinal
  endpoint:
    path: /BoxScoreFinal/{competition}/{gameid}
    method: GET
    data_selector: BoxScore
- name: BoxScoresFinal
  endpoint:
    path: /BoxScoresFinal/{competition}/{date}
    method: GET
    data_selector: BoxScore[]
- name: PlayerGameStatsByDateFinal
  endpoint:
    path: /PlayerGameStatsByDateFinal/{competition}/{date}
    method: GET
    data_selector: PlayerGame[]
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{competition}/{season}
    method: GET
    data_selector: Round[]
- name: TeamGameStatsByDateFinal
  endpoint:
    path: /TeamGameStatsByDateFinal/{competition}/{date}
    method: GET
    data_selector: TeamGame[]
- name: TeamSeasonStats
  endpoint:
    path: /TeamSeasonStats/{competition}/{season}
    method: GET
    data_selector: Round[]
- name: BoxScore
  endpoint:
    path: /BoxScore/{competition}/{gameid}
    method: GET
    data_selector: BoxScore
- name: BoxScoresByDate
  endpoint:
    path: /BoxScoresByDate/{competition}/{date}
    method: GET
    data_selector: BoxScore[]
- name: BoxScoresDeltaByDate
  endpoint:
    path: /BoxScoresDeltaByDate/{competition}/{date}/{minutes}
    method: GET
    data_selector: BoxScore[]
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{competition}/{date}
    method: GET
    data_selector: PlayerGame
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      date: date of the game(s)
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{competition}/{date}
    method: GET
    data_selector: TeamGame
    params:
      key: Subscription Required
      format: json
      competition: CompetitionId or Competition Key
      date: date of the game(s)
- name: Betting Events by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets by Game
  endpoint:
    path: /BettingMarketsByGameID/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets by Game [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByGameID/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarketsByMarketType
  endpoint:
    path: /json/BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      include: available
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
- name: BettingResultsByMarket
  endpoint:
    path: /json/BettingMarketResults/{marketId}
    method: GET
    data_selector: BettingMarketResult
    params:
      key: Subscription Required
- name: lineups_by_date
  endpoint:
    path: /stats/json/LineupsByDate/{competition}/{date}
    method: GET
    data_selector: PlayerGameBasic[]
    params:
      key: string
      format: json
      competition: string
      date: string
- name: injured_players
  endpoint:
    path: /projections/json/InjuredPlayers/{competition}
    method: GET
    data_selector: Player[]
    params:
      key: string
      format: json
      competition: string
- name: players_by_team
  endpoint:
    path: /scores/json/PlayersByTeam/{competition}/{teamid}
    method: GET
    data_selector: Player[]
    params:
      key: string
      format: json
      competition: string
      teamid: integer
- name: BettingFuturesBySeason
  endpoint:
    path: /BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: BettingSplitsByMarketId
  endpoint:
    path: /BettingSplitsByMarketId/{marketId}
    method: GET
    data_selector: BettingMarketSplit
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market
- name: BettingSplitsByGameId
  endpoint:
    path: /BettingSplitsByGameId/{gameId}
    method: GET
    data_selector: GameBettingSplit
    params:
      key: Subscription Required
      format: json
      gameId: The ID of the game
- name: MatchupTrends
  endpoint:
    path: /MatchupTrends/{team}/{opponent}
    method: GET
    data_selector: MatchupTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
      opponent: The abbreviation of the requested opponent
- name: TeamTrends
  endpoint:
    path: /TeamTrends/{team}
    method: GET
    data_selector: TeamTrends
    params:
      key: Subscription Required
      format: json
      team: The abbreviation of the requested team
- name: In-Game Odds - by Date
  endpoint:
    path: /json/LiveGameOddsByDate/{competition}/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsByDate/{competition}/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement
  endpoint:
    path: /json/LiveGameOddsLineMovement/{competition}/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsLineMovement/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: In-Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/InGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
- name: Period Game Odds - by Date
  endpoint:
    path: /json/AlternateMarketGameOddsByDate/{competition}/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsByDate/{competition}/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{competition}/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Period Game Odds Line Movement
  endpoint:
    path: /json/AlternateMarketGameOddsLineMovement/{competition}/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovement/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
- name: Pre-Game and Period Game Odds Line Movement with Resulting [Sportsbook Group]
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
- name: PreGameOddsLineMovementWithResulting
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
      sportsbookgroup: 'true'
- name: GameOddsLineMovement
  endpoint:
    path: /json/GameOddsLineMovement/{competition}/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
- name: Rankings
  endpoint:
    path: /golf/v2/json/Rankings/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: string
      season: string
- name: Player
  endpoint:
    path: /golf/v2/json/Player/{playerid}
    method: GET
    data_selector: Player
    params:
      key: string
      playerid: integer
- name: Players
  endpoint:
    path: /golf/v2/json/Players
    method: GET
    data_selector: Player[]
    params:
      key: string
- name: Courses
  endpoint:
    path: /golf/v2/json/Courses
    method: GET
    data_selector: Courses[]
    params:
      key: string
- name: CurrentSeason
  endpoint:
    path: /golf/v2/json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: string
- name: Tournaments
  endpoint:
    path: /golf/v2/json/Tournaments
    method: GET
    data_selector: Tournament[]
    params:
      key: string
- name: PlayerTournamentRoundScoresFinal
  endpoint:
    path: /golf/v2/json/PlayerTournamentRoundScoresFinal/{tournamentid}
    method: GET
    data_selector: TournamentRound[]
    params:
      key: string
      tournamentid: integer
- name: PlayerTournamentRoundScores
  endpoint:
    path: /golf/v2/json/PlayerTournamentRoundScores/{tournamentid}
    method: GET
    data_selector: TournamentRound[]
    params:
      key: string
      tournamentid: integer
- name: Betting Events by Date
  endpoint:
    path: /BettingEventsByDate/{competition}/{date}
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Events by Season
  endpoint:
    path: /BettingEventsBySeason/{competition}/{season}
    method: GET
    data_selector: BettingEvent[]
    params: {}
- name: Betting Markets by Event
  endpoint:
    path: /BettingMarkets/{competition}/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Markets by Game
  endpoint:
    path: /BettingMarketsByGameID/{competition}/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: Betting Player Props by Game
  endpoint:
    path: /BettingPlayerPropsByGameID/{competition}/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params: {}
- name: LeaderboardBasicFinal
  endpoint:
    path: /LeaderboardBasicFinal/{tournamentid}
    method: GET
    data_selector: LeaderboardBasic
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: LeaderboardFinal
  endpoint:
    path: /LeaderboardFinal/{tournamentid}
    method: GET
    data_selector: Leaderboard
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerTournamentHoleScoresFinal
  endpoint:
    path: /PlayerTournamentHoleScoresFinal/{tournamentid}
    method: GET
    data_selector: PlayerTournamentBasic[]
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerSeasonStats
  endpoint:
    path: /PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      key: Subscription Required
      format: json
      season: string
- name: LeaderboardBasic
  endpoint:
    path: /LeaderboardBasic/{tournamentid}
    method: GET
    data_selector: LeaderboardBasic
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: LeaderboardLiveFinal
  endpoint:
    path: /Leaderboard/{tournamentid}
    method: GET
    data_selector: Leaderboard
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: PlayerTournamentHoleScoresLiveFinal
  endpoint:
    path: /PlayerTournamentHoleScores/{tournamentid}
    method: GET
    data_selector: PlayerTournamentBasic[]
    params:
      key: Subscription Required
      format: json
      tournamentid: integer
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{competition}/{gameId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameId: 'true'
      sportsbookgroup: 'true'
- name: BettingFuturesBySeason
  endpoint:
    path: /json/BettingFuturesBySeason/{competition}/{season}
    method: GET
    data_selector: BettingEvent
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      season: 'true'
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{competition}/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      marketId: 'true'
- name: BettingMarketBySportsbookGroup
  endpoint:
    path: /json/BettingMarket/{competition}/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      marketId: 'true'
      sportsbookgroup: 'true'
- name: InPlayTournamentOdds
  endpoint:
    path: /json/InPlayTournamentOdds/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: Subscription Required
      format: json
      tournamentid: 'true'
- name: InPlayTournamentOddsLineMovement
  endpoint:
    path: /json/InPlayTournamentOddsLineMovement/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: Subscription Required
      format: json
      tournamentid: 'true'
- name: TournamentOdds
  endpoint:
    path: /json/TournamentOdds/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: Subscription Required
      format: json
      tournamentid: 'true'
- name: TournamentOddsLineMovement
  endpoint:
    path: /json/TournamentOddsLineMovement/{tournamentid}
    method: GET
    data_selector: TournamentOdds
    params:
      key: Subscription Required
      format: json
      tournamentid: 'true'
- name: PlayerGameProjectionStatsByDate
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{competition}/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: FantasyGameStatsByDate
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{competition}/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: DfsSlatesByDate
  endpoint:
    path: /projections/json/DfsSlatesByDate/{competition}/{date}
    method: GET
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: UpcomingDfsSlatesByCompetition
  endpoint:
    path: /projections/json/UpcomingDfsSlatesByCompetition/{competition}
    method: GET
    params:
      key: Subscription Required
      format: json
      competition: 'true'
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the tournament(s)
- name: Betting Events - by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
      sportsbookgroup: The name of the Sportsbook grouping
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game
      marketTypeID: The MarketTypeID
- name: Betting Markets - by Tournament
  endpoint:
    path: /BettingMarketsByTournamentID/{tournamentid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of the desired tournament
- name: Betting Player Props - by Tournament [Sportsbook Group]
  endpoint:
    path: /BettingPlayerPropsByTournamentID/{tournamentid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      tournamentid: The TournamentID of the desired tournament
      sportsbookgroup: The name of the Sportsbook grouping
- name: BettingMarket
  endpoint:
    path: /BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarket_Sportsbook_Group
  endpoint:
    path: /BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: Standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: Standings
    params:
      key: Subscription Required
      format: json
      season: string
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: Teams
    params:
      key: Subscription Required
      format: json
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: Stadiums
    params:
      key: Subscription Required
      format: json
- name: Are Games In Progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: Subscription Required
      format: json
- name: Betting Metadata
  endpoint:
    path: /json/BettingMetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: Subscription Required
      format: json
- name: Current Season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: Subscription Required
      format: json
- name: Active Sportsbooks
  endpoint:
    path: /json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: Schedules
  endpoint:
    path: /json/Games/{Season}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      Season: string
- name: Schedules Basic
  endpoint:
    path: /json/SchedulesBasic/{Season}
    method: GET
    data_selector: SchedulesBasic[]
    params:
      key: Subscription Required
      format: json
      Season: string
- name: Games by Date Final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: Games by Date Live & Final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      date: string
- name: PlayerTournamentProjectionStats
  endpoint:
    path: /PlayerTournamentProjectionStats/{tournamentid}
    method: GET
    data_selector: PlayerTournamentProjection
    params:
      key: Subscription Required
      format: json
- name: DfsSlateOwnershipProjectionsBySlateID
  endpoint:
    path: /DfsSlateOwnershipProjectionsBySlateID/{slateId}
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
    params:
      key: Subscription Required
      format: json
- name: UpcomingDfsSlateOwnershipProjections
  endpoint:
    path: /UpcomingDfsSlateOwnershipProjections
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
    params:
      key: Subscription Required
      format: json
- name: FantasyGameStatsByTournament
  endpoint:
    path: /FantasyGameStatsByTournament/{tournamentid}
    method: GET
    data_selector: FantasyTournament
    params:
      key: Subscription Required
      format: json
- name: DfsSlatesByTournament
  endpoint:
    path: /DfsSlatesByTournament/{tournamentid}
    method: GET
    data_selector: DfsSlate
    params:
      key: Subscription Required
      format: json
- name: News
  endpoint:
    path: /News
    method: GET
    data_selector: News
    params:
      key: Subscription Required
      format: json
- name: NewsByDate
  endpoint:
    path: /NewsByDate/{date}
    method: GET
    data_selector: News
    params:
      key: Subscription Required
      format: json
- name: NewsByPlayerID
  endpoint:
    path: /NewsByPlayerID/{playerid}
    method: GET
    data_selector: News
    params:
      key: Subscription Required
      format: json
- name: RotoBallerPremiumNews
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNews
    method: GET
    data_selector: News
    params:
      key: Subscription Required
      format: json
- name: RotoBallerPremiumNewsByDate
  endpoint:
    path: /news-rotoballer/json/RotoBallerPremiumNewsByDate/{date}
    method: GET
    data_selector: News
    params:
      key: Subscription Required
      format: json
- name: RotoworldPlayerNewsByDate
  endpoint:
    path: /rotoworld/json/RotoworldPlayerNewsByDate/{date}
    method: GET
    data_selector: RotoworldPlayerNewsItem
    params:
      key: Subscription Required
      format: json
- name: RotoworldPlayerNews
  endpoint:
    path: /rotoworld/json/RotoworldPlayerNews
    method: GET
    data_selector: RotoworldPlayerNewsItem
    params:
      key: Subscription Required
      format: json
- name: Headshots
  endpoint:
    path: /headshots/json/Headshots
    method: GET
    data_selector: Headshot
    params:
      key: Subscription Required
      format: json
- name: Box Score Final
  endpoint:
    path: /json/BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      format: json
      gameid: integer
- name: Box Scores - by Date Final
  endpoint:
    path: /json/BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      format: json
      date: string
- name: Player Season Stats
  endpoint:
    path: /json/PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
    params:
      format: json
      season: string
- name: Player Season Stats - by Team
  endpoint:
    path: /json/PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
    params:
      format: json
      season: string
      team: string
- name: Team Game Stats - by Date Final
  endpoint:
    path: /json/TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      format: json
      date: string
- name: Team Season Stats
  endpoint:
    path: /json/TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
    params:
      format: json
      season: string
- name: Box Score Live & Final
  endpoint:
    path: /json/BoxScore/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      format: json
      gameid: integer
- name: Box Scores - by Date Live & Final
  endpoint:
    path: /json/BoxScores/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      format: json
      date: string
- name: Team Game Stats - by Date Live & Final
  endpoint:
    path: /json/TeamGameStatsByDate/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      format: json
      date: string
- name: Player Details - by Active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
    params:
      format: json
- name: Player Details - by Team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
    params:
      format: json
      team: string
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      date: string
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      format: json
      gameid: integer
- name: drivers
  endpoint:
    path: /nascar/v2/json/drivers
    method: GET
    data_selector: Driver[]
    params:
      key: string
      format: json
- name: driver_by_id
  endpoint:
    path: /nascar/v2/json/driver/{driverid}
    method: GET
    data_selector: Driver
    params:
      key: string
      format: json
      driverid: integer
- name: drivers_by_active
  endpoint:
    path: /nascar/v2/json/driversbyactive
    method: GET
    data_selector: DriverBasic[]
    params:
      key: string
      format: json
- name: tracks
  endpoint:
    path: /nascar/v2/json/tracks/{season}
    method: GET
    data_selector: Tracks[]
    params:
      key: string
      format: json
      season: string
- name: betting_metadata
  endpoint:
    path: /v3/nascar/odds/json/BettingMetaData
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: string
      format: json
- name: race_odds
  endpoint:
    path: /v3/nascar/odds/json/RaceOdds/{Raceid}
    method: GET
    data_selector: RaceOdds
    params:
      key: string
      format: json
      Raceid: integer
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Events - by Season
  endpoint:
    path: /BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Game
  endpoint:
    path: /BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByGameID/{gameID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByMarketType/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Player Props - by Game
  endpoint:
    path: /BettingPlayerPropsByGameID/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /BettingPlayerPropsByGameID/{gameId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: Betting Market
  endpoint:
    path: /BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: Betting Market [Sportsbook Group]
  endpoint:
    path: /BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market for which to pull all outcomes/bets.
      sportsbookgroup: The name of the Sportsbook grouping.
- name: Betting Events - by Date
  endpoint:
    path: /v3/nascar/odds/json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the race(s).
- name: Betting Events - by Season
  endpoint:
    path: /v3/nascar/odds/json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: The season to get BettingEvents.
- name: Betting Markets - by Event
  endpoint:
    path: /v3/nascar/odds/json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
- name: Betting Markets - by Market Type
  endpoint:
    path: /v3/nascar/odds/json/BettingMarketsByMarketType/{eventID}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventID: The EventId of the desired event/game.
      marketTypeID: The Market Type ID of the desired MarketTypes.
- name: Betting Markets - by Race
  endpoint:
    path: /v3/nascar/odds/json/BettingMarketsByRaceID/{raceID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      raceID: The RaceID of the desired race.
- name: Projected Player Race Stats - by Race
  endpoint:
    path: /nascar/v2/json/DriverRaceProjections/{raceid}
    method: GET
    data_selector: DriverRaceProjection[]
    params:
      key: Subscription Required
      format: json
      raceid: Unique FantasyData Race ID.
- name: Fantasy Points - by Race
  endpoint:
    path: /nascar/v2/json/FantasyGameStatsByRace/{raceid}
    method: GET
    data_selector: FantasyRace
    params:
      key: Subscription Required
      format: json
      raceid: Unique FantasyData Race ID.
- name: BettingFuturesBySeason
  endpoint:
    path: /BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: League Hierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference[]
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: Team[]
- name: Are Any Games In Progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
- name: Current Season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
- name: Schedules
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
- name: Schedules (Basic)
  endpoint:
    path: /json/SchedulesBasic/{season}
    method: GET
    data_selector: ScheduleBasic[]
- name: Games - by Date Final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
- name: Games - by Date Live & Final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
- name: competitions
  endpoint:
    path: /json/Competitions
    method: GET
    data_selector: Competition[]
    params:
      key: Subscription Required
      format: json
- name: players_by_rank
  endpoint:
    path: /json/PlayersByRank/{discipline}/{gender}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      discipline: 1, 2, 3, singles, doubles, mixed
      gender: m, male, men, f, female, women, mixed
- name: contestants_by_season
  endpoint:
    path: /json/ContestantsBySeason/{seasonid}
    method: GET
    data_selector: Contestant[]
    params:
      key: Subscription Required
      format: json
      seasonid: integer
- name: venues
  endpoint:
    path: /json/Venues
    method: GET
    data_selector: Venue[]
    params:
      key: Subscription Required
      format: json
- name: active_sportsbooks
  endpoint:
    path: /odds/json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: tours
  endpoint:
    path: /json/Tours
    method: GET
    data_selector: Tour[]
    params:
      key: Subscription Required
      format: json
- name: Areas
  endpoint:
    path: /scores/json/Areas
    method: GET
    data_selector: Area[]
    params:
      key: Subscription Required
      format: json
- name: Competitions
  endpoint:
    path: /scores/json/Competitions
    method: GET
    data_selector: Competition[]
    params:
      key: Subscription Required
      format: json
- name: Standings
  endpoint:
    path: /scores/json/Standings/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: string
      season: string
- name: ActiveMemberships
  endpoint:
    path: /scores/json/ActiveMemberships/{competition}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: string
- name: CanceledMemberships
  endpoint:
    path: /scores/json/CanceledMemberships
    method: GET
    data_selector: CanceledMembership
    params:
      key: Subscription Required
      format: json
- name: RecentlyChangedMemberships
  endpoint:
    path: /scores/json/RecentlyChangedMemberships/{competition}/{days}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: string
      days: string
- name: HistoricalMembershipsByTeam
  endpoint:
    path: /scores/json/HistoricalMembershipsByTeam/{competition}/{teamid}
    method: GET
    data_selector: Membership[]
    params:
      key: Subscription Required
      format: json
      competition: string
      teamid: integer
- name: PlayersByTeamBasic
  endpoint:
    path: /scores/json/PlayersByTeamBasic/{competition}/{teamid}
    method: GET
    data_selector: PlayerBasic[]
    params:
      key: Subscription Required
      format: json
      competition: string
      teamid: integer
- name: Teams
  endpoint:
    path: /scores/json/Teams/{competition}
    method: GET
    data_selector: Team[]
    params:
      key: Subscription Required
      format: json
      competition: string
- name: SeasonTeams
  endpoint:
    path: /scores/json/SeasonTeams/{competition}/{seasonid}
    method: GET
    data_selector: SeasonTeam[]
    params:
      key: Subscription Required
      format: json
      competition: string
      seasonid: integer
- name: Venues
  endpoint:
    path: /scores/json/Venues
    method: GET
    data_selector: Venue[]
    params:
      key: Subscription Required
      format: json
- name: BettingMetadata
  endpoint:
    path: /odds/json/BettingMetadata
    method: GET
    data_selector: BettingEntityMetadataCollection
    params:
      key: Subscription Required
      format: json
- name: ActiveSportsbooks
  endpoint:
    path: /odds/json/ActiveSportsbooks
    method: GET
    data_selector: Sportsbook[]
    params:
      key: Subscription Required
      format: json
- name: MatchFinal
  endpoint:
    path: /scores/json/MatchFinal/{matchid}
    method: GET
    data_selector: Match
    params:
      key: Subscription Required
      format: json
- name: MatchLiveFinal
  endpoint:
    path: /scores/json/Match/{matchid}
    method: GET
    data_selector: Match
    params:
      key: Subscription Required
      format: json
- name: MatchOddsByDate
  endpoint:
    path: /odds/json/MatchOddsByDate/{date}
    method: GET
    data_selector: Match[]
    params:
      key: Subscription Required
      format: json
- name: MatchOddsBySeasonAndDate
  endpoint:
    path: /odds/json/MatchOddsBySeasonAndDate/{seasonid}/{date}
    method: GET
    data_selector: Match[]
    params:
      key: Subscription Required
      format: json
- name: MatchOddsLineMovement
  endpoint:
    path: /odds/json/MatchOddsLineMovement/{matchid}
    method: GET
    data_selector: Match[]
    params:
      key: Subscription Required
      format: json
- name: schedules
  endpoint:
    path: /json/Schedule/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      season: Year of the season
- name: schedules_basic
  endpoint:
    path: /json/SchedulesBasic/{competition}/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      season: Year of the season
- name: games_basic_final
  endpoint:
    path: /json/ScoresBasicFinal/{competition}/{date}
    method: GET
    data_selector: ScoreBasic[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      date: The date of the game(s)
- name: games_by_competition_live_final
  endpoint:
    path: /json/CompetitionDetails/{competition}
    method: GET
    data_selector: CompetitionDetail
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
- name: games_by_date_final
  endpoint:
    path: /json/GamesByDateFinal/{competition}/{date}
    method: GET
    data_selector: Game[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      date: The date of the game(s)
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/mlb#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: records
- name: Box Score Final
  endpoint:
    path: /BoxScoreFinal/{competition}/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
- name: Box Scores - by Date Final
  endpoint:
    path: /BoxScoresFinal/{competition}/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: Player Game Stats - by Date Final
  endpoint:
    path: /PlayerGameStatsByDateFinal/{competition}/{date}
    method: GET
    data_selector: PlayerGame[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: Player Season Stats
  endpoint:
    path: /PlayerSeasonStats/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      season: 'true'
- name: Team Game Stats - by Date Final
  endpoint:
    path: /TeamGameStatsByDateFinal/{competition}/{date}
    method: GET
    data_selector: TeamGame[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: Team Season Stats
  endpoint:
    path: /TeamSeasonStats/{competition}/{season}
    method: GET
    data_selector: Round[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      season: 'true'
- name: Box Score Live & Final
  endpoint:
    path: /BoxScore/{competition}/{gameid}
    method: GET
    data_selector: BoxScore
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
- name: Box Scores - by Date Live & Final
  endpoint:
    path: /BoxScoresByDate/{competition}/{date}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: Box Scores Delta - by Date
  endpoint:
    path: /BoxScoresDeltaByDate/{competition}/{date}/{minutes}
    method: GET
    data_selector: BoxScore[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
      minutes: 'true'
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/mlb#betting-outcome
    method: GET
- name: BettingOutcomeResult
  endpoint:
    path: /developers/api-documentation/mlb#betting-results--by-market
    method: GET
- name: BettingResultingMetadata
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
- name: BettingSplit
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits--by-game
    method: GET
- name: BoxScore
  endpoint:
    path: /developers/api-documentation/mlb#box-score-final
    method: GET
- name: ConsensusOutcome
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
- name: DepthChart
  endpoint:
    path: /developers/api-documentation/mlb#depth-charts
    method: GET
- name: DfsSlate
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slates--by-date
    method: GET
- name: DfsSlateGame
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slates--by-date
    method: GET
- name: DfsSlatePlayer
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slates--by-date
    method: GET
- name: PlayerGameStatsByDate
  endpoint:
    path: /stats/json/PlayerGameStatsByDate/{competition}/{date}
    method: GET
    data_selector: PlayerGame
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: TeamGameStatsByDate
  endpoint:
    path: /scores/json/TeamGameStatsByDate/{competition}/{date}
    method: GET
    data_selector: TeamGame
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: dfs_slate_player_ownership_projection
  endpoint:
    path: /dfs/slate/ownership/projection
    method: GET
    data_selector: SlatePlayerOwnershipProjection
- name: dfs_slate_with_ownership_projection
  endpoint:
    path: /dfs/slate/with/ownership/projection
    method: GET
    data_selector: DfsSlateWithOwnershipProjection
- name: fantasy_game
  endpoint:
    path: /fantasy/game
    method: GET
    data_selector: FantasyGame
- name: game
  endpoint:
    path: /game
    method: GET
    data_selector: Game
- name: GameBettingSplit
  endpoint:
    path: /betting-splits/game
    method: GET
    data_selector: records
- name: GameInfo
  endpoint:
    path: /game/info
    method: GET
    data_selector: records
- name: lineups_by_date
  endpoint:
    path: /stats/json/LineupsByDate/{competition}/{date}
    method: GET
    data_selector: PlayerGameBasic[]
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: injured_players
  endpoint:
    path: /projections/json/InjuredPlayers/{competition}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      competition: string
- name: players_by_team
  endpoint:
    path: /scores/json/PlayersByTeam/{competition}/{teamid}
    method: GET
    data_selector: Player[]
    params:
      key: Subscription Required
      format: json
      competition: string
      teamid: integer
- name: game_lines_pre_game
  endpoint:
    path: /developers/api-documentation/mlb#pregame-odds--by-date
    method: GET
- name: game_lines_in_play
  endpoint:
    path: /developers/api-documentation/mlb#ingame-odds--by-date
    method: GET
- name: player_headshots
  endpoint:
    path: /developers/api-documentation/mlb#headshots
    method: GET
- name: schedules
  endpoint:
    path: /developers/api-documentation/mlb#schedules
    method: GET
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/mlb#box-score-final
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: articles
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: players
- name: play
  endpoint:
    path: /plays
    method: GET
    data_selector: plays
- name: pitch
  endpoint:
    path: /pitches
    method: GET
    data_selector: pitches
- name: In-Game Odds - by Date
  endpoint:
    path: /LiveGameOddsByDate/{competition}/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: In-Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /InGameOddsByDate/{competition}/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
      sportsbookgroup: 'true'
- name: In-Game Odds Line Movement
  endpoint:
    path: /LiveGameOddsLineMovement/{competition}/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
- name: In-Game Odds Line Movement [Sportsbook Group]
  endpoint:
    path: /InGameOddsLineMovement/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      gameid: 'true'
      sportsbookgroup: 'true'
- name: Pre-Game Odds - by Date
  endpoint:
    path: /GameOddsByDate/{competition}/{date}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
- name: Pre-Game and Period Game Odds - by Date [Sportsbook Group]
  endpoint:
    path: /PreGameOddsByDate/{competition}/{date}/{sportsbookgroup}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: 'true'
      date: 'true'
      sportsbookgroup: 'true'
- name: Player
  endpoint:
    path: /developers/api-documentation/mlb#player
    method: GET
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/mlb#player-game-logs--by-season
    method: GET
- name: player_game
  endpoint:
    path: /player_game/basic
    method: GET
    data_selector: records
    params: {}
- name: Projected Player Game Stats - by Date
  endpoint:
    path: /developers/api-documentation/mlb#projected-player-game-stats--by-date
    method: GET
    data_selector: records
- name: PreGameOddsLineMovementWithResulting
  endpoint:
    path: /json/PreGameOddsLineMovementWithResulting/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: GameInfoResult[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      gameid: The GameID of a Soccer game
      sportsbookgroup: Access Required
- name: GameOddsLineMovement
  endpoint:
    path: /json/GameOddsLineMovement/{competition}/{gameid}
    method: GET
    data_selector: GameInfo[]
    params:
      key: Subscription Required
      format: json
      competition: An indication of a soccer competition/league
      gameid: The GameID of a Soccer game
- name: PlayerInfo
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: PlayerSeason
  endpoint:
    path: /players/season
    method: GET
    data_selector: records
- name: projected_player_season_stats_with_adp
  endpoint:
    path: /developers/api-documentation/mlb#projected-player-season-stats-with-adp
    method: GET
    data_selector: records
- name: schedules_basic
  endpoint:
    path: /schedules/basic
    method: GET
    data_selector: records
    params: {}
- name: scores_basic
  endpoint:
    path: /scores/basic
    method: GET
    data_selector: records
    params: {}
- name: season
  endpoint:
    path: /developers/api-documentation/mlb#season--current
    method: GET
    data_selector: records
    params: {}
- name: stadium
  endpoint:
    path: /developers/api-documentation/mlb#stadiums
    method: GET
    data_selector: records
    params: {}
- name: standing
  endpoint:
    path: /developers/api-documentation/mlb#standings
    method: GET
    data_selector: records
    params: {}
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: team_depth_chart
  endpoint:
    path: /depthcharts
    method: GET
    data_selector: depthCharts
- name: team_game
  endpoint:
    path: /games
    method: GET
    data_selector: games
- name: team_game_trends
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
    params: {}
- name: team_season
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: Betting Events - by Date
  endpoint:
    path: /BettingEventsByDate/{competition}/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      competition: string
      date: string
- name: Betting Events - by Season
  endpoint:
    path: /BettingEventsBySeason/{competition}/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      competition: string
      season: string
- name: Betting Markets - by Event
  endpoint:
    path: /BettingMarkets/{competition}/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      eventId: string
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByEvent/{competition}/{eventId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      eventId: string
      sportsbookgroup: string
- name: Betting Markets - by Game
  endpoint:
    path: /BettingMarketsByGameID/{competition}/{gameid}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      gameid: integer
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByGameID/{competition}/{gameid}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      gameid: integer
      sportsbookgroup: string
- name: Betting Markets - by Market Type
  endpoint:
    path: /BettingMarketsByMarketType/{competition}/{eventId}/{marketTypeID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      eventId: string
      marketTypeID: string
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /BettingMarketsByMarketType/{competition}/{eventId}/{marketTypeID}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      eventId: string
      marketTypeID: string
      sportsbookgroup: string
- name: Betting Player Props - by Game
  endpoint:
    path: /BettingPlayerPropsByGameID/{competition}/{gameId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      gameId: integer
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /BettingPlayerPropsByGameID/{competition}/{gameId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      competition: string
      gameId: integer
      sportsbookgroup: string
- name: matchup_stats
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-matchup
    method: GET
- name: betting_trends_by_team
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-team
    method: GET
- name: transactions
  endpoint:
    path: /developers/api-documentation/mlb#transactions
    method: GET
- name: BettingPlayerPropsByGameID
  endpoint:
    path: /json/BettingPlayerPropsByGameID/{competition}/{gameId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
- name: BettingFuturesBySeason
  endpoint:
    path: /json/BettingFuturesBySeason/{competition}/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
- name: BettingMarket
  endpoint:
    path: /json/BettingMarket/{competition}/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingMarket [Sportsbook Group]
  endpoint:
    path: /json/BettingMarket/{competition}/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nba#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nba#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nba#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
    data_selector: records
- name: Projected Player Game Stats
  endpoint:
    path: /projections/json/PlayerGameProjectionStatsByDate/{competition}/{date}
    method: GET
    data_selector: PlayerGameProjection[]
    params:
      key: Subscription Required
      format: json
      competition: Required
      date: Required
- name: Fantasy Points
  endpoint:
    path: /stats/json/FantasyGameStatsByDate/{competition}/{date}
    method: GET
    data_selector: FantasyGame[]
    params:
      key: Subscription Required
      format: json
      competition: Required
      date: Required
- name: DFS Slates
  endpoint:
    path: /projections/json/DfsSlatesByDate/{competition}/{date}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
      competition: Required
      date: Required
- name: Upcoming DFS Slates
  endpoint:
    path: /projections/json/UpcomingDfsSlatesByCompetition/{competition}
    method: GET
    data_selector: DfsSlate[]
    params:
      key: Subscription Required
      format: json
      competition: Required
- name: BettingOutcome
  endpoint:
    path: /betting/outcomes
    method: GET
    data_selector: outcomes
- name: BettingOutcomeResult
  endpoint:
    path: /betting/outcome-results
    method: GET
    data_selector: results
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting-metadata
    method: GET
    data_selector: metadata
- name: BettingSplit
  endpoint:
    path: /betting/splits
    method: GET
    data_selector: splits
- name: BoxScore
  endpoint:
    path: /box-scores
    method: GET
    data_selector: boxScores
- name: ConsensusOutcome
  endpoint:
    path: /betting/consensus-outcomes
    method: GET
    data_selector: consensusOutcomes
- name: DepthChart
  endpoint:
    path: /depth-charts
    method: GET
    data_selector: depthCharts
- name: DfsSlate
  endpoint:
    path: /dfs/slates
    method: GET
    data_selector: dfsSlates
- name: DfsSlateGame
  endpoint:
    path: /dfs/slate-games
    method: GET
    data_selector: dfsSlateGames
- name: DfsSlatePlayer
  endpoint:
    path: /dfs/slate-players
    method: GET
    data_selector: dfsSlatePlayers
- name: Game
  endpoint:
    path: /developers/api-documentation/nba#games--by-date-final
    method: GET
- name: GameBettingSplit
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
- name: GameInfo
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds--by-date
    method: GET
- name: Standings
  endpoint:
    path: /json/Standings/{season}
    method: GET
    data_selector: records
    params:
      key: Subscription Required
      season: string
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: records
    params:
      key: Subscription Required
- name: Stadiums
  endpoint:
    path: /json/Stadiums
    method: GET
    data_selector: records
    params:
      key: Subscription Required
- name: Are Games In Progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: records
    params:
      key: Subscription Required
- name: Current Season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: records
    params:
      key: Subscription Required
- name: Active Sportsbooks
  endpoint:
    path: /json/ActiveSportsbooks
    method: GET
    data_selector: records
    params:
      key: Subscription Required
- name: Games by Date Final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: records
    params:
      key: Subscription Required
      date: string
- name: Games by Date Live & Final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: records
    params:
      key: Subscription Required
      date: string
- name: Game
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: GameOdd
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: Headshot
  endpoint:
    path: /developers/api-documentation/nba#headshots
    method: GET
- name: Lineup
  endpoint:
    path: /developers/api/documentation/nba#starting-lineups--by-date
    method: GET
- name: MatchupTrends
  endpoint:
    path: /developers/api/documentation/nba#betting-trends--by-matchup
    method: GET
- name: News
  endpoint:
    path: /developers/api/documentation/nba#premium-news
    method: GET
- name: OpponentSeason
  endpoint:
    path: /developers/api-documentation/nba#team-season-stats
    method: GET
- name: PlayByPlay
  endpoint:
    path: /developers/api-documentation/nba#play-by-play-final
    method: GET
    data_selector: Plays
    params: {}
- name: Player
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-active
    method: GET
    data_selector: Player
    params: {}
- name: PlayerActiveBasic
  endpoint:
    path: /developers/api-documentation/nba#player-profiles--by-active
    method: GET
    data_selector: records
- name: PlayerBasic
  endpoint:
    path: /developers/api-documentation/nba#players-profiles--by-team
    method: GET
    data_selector: records
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/nba#box-score-final
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /projected-player-game-stats
    method: GET
    data_selector: records
- name: Box Score Final
  endpoint:
    path: /json/BoxScoreFinal/{gameid}
    method: GET
    data_selector: BoxScore
- name: Box Scores - by Date Final
  endpoint:
    path: /json/BoxScoresFinal/{date}
    method: GET
    data_selector: BoxScore[]
- name: Player Season Stats
  endpoint:
    path: /json/PlayerSeasonStats/{season}
    method: GET
    data_selector: PlayerSeason[]
- name: Player Season Stats - by Team
  endpoint:
    path: /json/PlayerSeasonStatsByTeam/{season}/{team}
    method: GET
    data_selector: PlayerSeason[]
- name: Team Game Stats - by Date Final
  endpoint:
    path: /json/TeamGameStatsByDateFinal/{date}
    method: GET
    data_selector: TeamGame[]
- name: Team Season Stats
  endpoint:
    path: /json/TeamSeasonStats/{season}
    method: GET
    data_selector: TeamSeason[]
- name: Box Score Live & Final
  endpoint:
    path: /json/BoxScore/{gameid}
    method: GET
    data_selector: BoxScore
- name: Box Scores - by Date Live & Final
  endpoint:
    path: /json/BoxScores/{date}
    method: GET
    data_selector: BoxScore[]
- name: Team Game Stats - by Date Live & Final
  endpoint:
    path: /json/TeamGameStatsByDate/{date}
    method: GET
    data_selector: TeamGame[]
- name: Player Details - by Active
  endpoint:
    path: /json/Players
    method: GET
    data_selector: Player[]
- name: Player Details - by Team
  endpoint:
    path: /json/Players/{team}
    method: GET
    data_selector: Player[]
- name: Pre-Game Odds - by Date
  endpoint:
    path: /json/GameOddsByDate/{date}
    method: GET
    data_selector: GameInfo[]
- name: Pre-Game Odds Line Movement
  endpoint:
    path: /json/GameOddsLineMovement/{gameid}
    method: GET
    data_selector: GameInfo[]
- name: player_info
  endpoint:
    path: /players
    method: GET
    data_selector: players
- name: player_season
  endpoint:
    path: /players/season
    method: GET
    data_selector: seasons
- name: player_season_projection
  endpoint:
    path: /players/projections
    method: GET
    data_selector: projections
- name: Betting Events by Date
  endpoint:
    path: /json/BettingEventsByDate/{date}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      date: The date of the game(s).
- name: Betting Events by Season
  endpoint:
    path: /json/BettingEvents/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season.
- name: Betting Markets by Event
  endpoint:
    path: /json/BettingMarkets/{eventId}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      eventId: The EventId of the desired event/game.
- name: Betting Markets by Game
  endpoint:
    path: /json/BettingMarketsByGameID/{gameID}
    method: GET
    data_selector: BettingMarket[]
    params:
      key: Subscription Required
      format: json
      gameID: The GameID of the desired game.
- name: Betting Market
  endpoint:
    path: /json/BettingMarket/{marketId}
    method: GET
    data_selector: BettingMarket
    params:
      key: Subscription Required
      format: json
      marketId: The MarketId of the desired market.
- name: stats
  endpoint:
    path: /v1/stats
    method: GET
    data_selector: records
- name: quarter
  endpoint:
    path: /v1/quarters
    method: GET
    data_selector: records
- name: referee
  endpoint:
    path: /v1/referees
    method: GET
    data_selector: records
- name: rotoworld_player_news
  endpoint:
    path: /v1/rotoworld_player_news
    method: GET
    data_selector: records
- name: schedule_basic
  endpoint:
    path: /v1/schedules/basic
    method: GET
    data_selector: records
- name: score_basic
  endpoint:
    path: /v1/scores/basic
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /BettingMarket/{marketId}/{sportsbookgroup}
    method: GET
    data_selector: BettingMarket
    params:
      format: json
      marketId: 'true'
      sportsbookgroup: 'true'
- name: season
  endpoint:
    path: /developers/api-documentation/nba#season--current
    method: GET
    data_selector: records
    params: {}
- name: series
  endpoint:
    path: /developers/api-documentation/nba#series
    method: GET
    data_selector: records
    params: {}
- name: sportsbook
  endpoint:
    path: /developers/api-documentation/nba#sportsbooks--by-active
    method: GET
    data_selector: records
    params: {}
- name: stadium
  endpoint:
    path: /developers/api-documentation/nba#stadiums
    method: GET
    data_selector: records
    params: {}
- name: standing
  endpoint:
    path: /developers/api-documentation/nba#standings
    method: GET
    data_selector: records
    params: {}
- name: starting_lineup
  endpoint:
    path: /developers/api-documentation/nba#starting-lineups--by-date
    method: GET
    data_selector: records
    params: {}
- name: team
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--by-active
    method: GET
    data_selector: records
    params: {}
- name: BettingFuturesBySeason
  endpoint:
    path: /BettingFuturesBySeason/{season}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
- name: BettingFuturesBySeasonSportsbookGroup
  endpoint:
    path: /BettingFuturesBySeason/{season}/{sportsbookgroup}
    method: GET
    data_selector: BettingEvent[]
    params:
      key: Subscription Required
      format: json
      season: Year of the season
      sportsbookgroup: Access Required
- name: DepthCharts
  endpoint:
    path: /developers/api-documentation/nba#depth-charts
    method: GET
    data_selector: DepthChart[]
    params: {}
- name: TeamGame
  endpoint:
    path: /developers/api-documentation/nba#team-game-stats--by-date-final
    method: GET
    data_selector: TeamGame
    params: {}
- name: TeamGameTrends
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-matchup
    method: GET
    data_selector: TeamGameTrends
    params: {}
- name: TeamSeason
  endpoint:
    path: /developers/api-documentation/nba#team-season-stats
    method: GET
    data_selector: TeamSeason
    params: {}
- name: transactions
  endpoint:
    path: /developers/api-documentation/nba#transactions
    method: GET
    data_selector: records
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nhl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nhl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nhl#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: records
- name: League Hierarchy
  endpoint:
    path: /json/LeagueHierarchy
    method: GET
    data_selector: Conference[]
    params:
      key: string
- name: Teams
  endpoint:
    path: /json/Teams
    method: GET
    data_selector: Team[]
    params:
      key: string
- name: Are Any Games In Progress
  endpoint:
    path: /json/AreAnyGamesInProgress
    method: GET
    data_selector: boolean
    params:
      key: string
- name: Current Season
  endpoint:
    path: /json/CurrentSeason
    method: GET
    data_selector: Season
    params:
      key: string
- name: Schedules
  endpoint:
    path: /json/Games/{season}
    method: GET
    data_selector: Game[]
    params:
      key: string
      season: string
- name: Schedules Basic
  endpoint:
    path: /json/SchedulesBasic/{season}
    method: GET
    data_selector: ScheduleBasic[]
    params:
      key: string
      season: string
- name: Games by Date Final
  endpoint:
    path: /json/GamesByDateFinal/{date}
    method: GET
    data_selector: Game[]
    params:
      key: string
      date: string
- name: Games by Date Live & Final
  endpoint:
    path: /json/GamesByDate/{date}
    method: GET
    data_selector: Game[]
    params:
      key: string
      date: string
- name: BettingOutcome
  endpoint:
    path: /betting/outcome
    method: GET
    data_selector: results
- name: BettingOutcomeResult
  endpoint:
    path: /betting/outcome/result
    method: GET
    data_selector: results
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting/metadata
    method: GET
    data_selector: results
- name: BettingSplit
  endpoint:
    path: /betting/split
    method: GET
    data_selector: results
- name: BoxScore
  endpoint:
    path: /boxscore
    method: GET
    data_selector: results
- name: ConsensusOutcome
  endpoint:
    path: /consensus/outcome
    method: GET
    data_selector: results
- name: DfsSlate
  endpoint:
    path: /dfs/slate
    method: GET
    data_selector: results
- name: DfsSlateGame
  endpoint:
    path: /dfs/slate/game
    method: GET
    data_selector: results
- name: DfsSlatePlayer
  endpoint:
    path: /dfs/slate/player
    method: GET
    data_selector: results
- name: Competitions
  endpoint:
    path: /json/Competitions
    method: GET
    data_selector: Competition[]
    params:
      key: string
- name: PlayersByRank
  endpoint:
    path: /json/PlayersByRank/{discipline}/{gender}
    method: GET
    data_selector: Player[]
    params:
      key: string
      discipline: string
      gender: string
- name: ContestantsBySeason
  endpoint:
    path: /json/ContestantsBySeason/{seasonid}
    method: GET
    data_selector: Contestant[]
    params:
      key: string
      seasonid: integer
- name: Venues
  endpoint:
    path: /json/Venues
    method: GET
    data_selector: Venue[]
    params:
      key: string
- name: MatchesByRound
  endpoint:
    path: /json/MatchesByRound/{roundid}
    method: GET
    data_selector: Match[]
    params:
      key: string
      roundid: integer
- name: MatchesBySeasonAndDate
  endpoint:
    path: /json/MatchesBySeasonAndDate/{seasonid}/{date}
    method: GET
    data_selector: Match[]
    params:
      key: string
      seasonid: integer
      date: string
- name: Game
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-final
    method: GET
    data_selector: records
- name: GameBettingSplit
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-game
    method: GET
    data_selector: records
- name: GameInfo
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
    data_selector: records
- name: game_lines_pre_game
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
    data_selector: records
- name: game_lines_in_play
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds--by-date
    method: GET
    data_selector: records
- name: depth_charts_goalies
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
    data_selector: records
- name: starting_goaltenders
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
    data_selector: records
- name: player_headshots
  endpoint:
    path: /developers/api-documentation/nhl#headshots
    method: GET
    data_selector: records
- name: betting_trends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: records
- name: player_news
  endpoint:
    path: /developers/api-documentation/nhl#news
    method: GET
    data_selector: records
- name: team_season_stats
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: records
- name: MatchFinal
  endpoint:
    path: /scores/json/MatchFinal/{matchid}
    method: GET
    data_selector: Match
    params:
      key: string
      format: string
      matchid: string
- name: MatchLiveFinal
  endpoint:
    path: /scores/json/Match/{matchid}
    method: GET
    data_selector: Match
    params:
      key: string
      format: string
      matchid: string
- name: MatchOddsByDate
  endpoint:
    path: /odds/json/MatchOddsByDate/{date}
    method: GET
    data_selector: Match[]
    params:
      key: string
      format: string
      date: string
- name: MatchOddsBySeasonAndDate
  endpoint:
    path: /odds/json/MatchOddsBySeasonAndDate/{seasonid}/{date}
    method: GET
    data_selector: Match[]
    params:
      key: string
      format: string
      seasonid: integer
      date: string
- name: MatchOddsLineMovement
  endpoint:
    path: /odds/json/MatchOddsLineMovement/{matchid}
    method: GET
    data_selector: Match[]
    params:
      key: string
      format: string
      matchid: string
- name: schedules
  endpoint:
    path: /developers/api-documentation/nhl#schedules
    method: GET
- name: games_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-final
    method: GET
- name: games_live_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-live--final
    method: GET
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
- name: box_score_live_final
  endpoint:
    path: /developers/api-documentation/nhl#box-score-live--final
    method: GET
- name: play_by_play_final
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: BettingEntityMetadata
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/mlb#betting-metadata
    method: GET
    data_selector: BettingEntityMetadataCollection
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: BettingEvent
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/mlb#betting-markets--by-event
    method: GET
    data_selector: BettingMarket
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/mlb#betting-results--by-market
    method: GET
    data_selector: BettingMarketResult
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/mlb#betting-splits--by-game
    method: GET
    data_selector: BettingMarketSplit
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/mlb#betting-events--by-date
    method: GET
    data_selector: BettingOutcome
- name: play_by_play
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-live--final
    method: GET
    data_selector: plays
    params: {}
- name: player_details_by_active
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-active
    method: GET
    data_selector: players
    params: {}
- name: player_details_by_free_agents
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-free-agents
    method: GET
    data_selector: players
    params: {}
- name: players_details_by_team
  endpoint:
    path: /developers/api-documentation/nhl#players-details--by-team
    method: GET
    data_selector: players
    params: {}
- name: player_details_by_injured
  endpoint:
    path: /developers/api-documentation/nhl#player-details--by-injured
    method: GET
    data_selector: players
    params: {}
- name: BettingOutcomeResult
  endpoint:
    path: /developers/api-documentation/mlb/betting-results--by-market
    method: GET
    data_selector: records
- name: BettingResultingMetadata
  endpoint:
    path: /developers/api-documentation/mlb/betting-metadata
    method: GET
    data_selector: records
- name: BettingSplit
  endpoint:
    path: /developers/api-documentation/mlb/betting-splits--by-game
    method: GET
    data_selector: records
- name: BoxScore
  endpoint:
    path: /developers/api-documentation/mlb/box-score-final
    method: GET
    data_selector: records
- name: ConsensusOutcome
  endpoint:
    path: /developers/api-documentation/mlb/betting-events--by-date
    method: GET
    data_selector: records
- name: DepthChart
  endpoint:
    path: /developers/api-documentation/mlb/depth-charts
    method: GET
    data_selector: records
- name: DfsSlate
  endpoint:
    path: /developers/api-documentation/mlb/dfs-slates--by-date
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /developers/api-documentation/nhl#player-game-basic
    method: GET
    data_selector: records
    params: {}
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/nhl#projected-player-game-stats--by-date
    method: GET
    data_selector: records
    params: {}
- name: DfsSlatePlayerOwnershipProjection
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slate-ownership-projections--by-slate
    method: GET
    data_selector: records
- name: DfsSlateWithOwnershipProjection
  endpoint:
    path: /developers/api-documentation/mlb#dfs-slate-ownership-projections--by-slate
    method: GET
    data_selector: records
- name: FantasyGame
  endpoint:
    path: /developers/api-documentation/mlb#fantasy-points--by-date
    method: GET
    data_selector: records
- name: Game
  endpoint:
    path: /developers/api-documentation/mlb#schedules
    method: GET
    data_selector: records
- name: PlayerLine
  endpoint:
    path: /players/line
    method: GET
    data_selector: records
    params: {}
- name: PlayerSeason
  endpoint:
    path: /players/season
    method: GET
    data_selector: records
    params: {}
- name: ScheduleBasic
  endpoint:
    path: /schedules/basic
    method: GET
    data_selector: records
    params: {}
- name: GameBettingSplit
  endpoint:
    path: /betting-splits/game
    method: GET
    data_selector: records
    params: {}
- name: GameInfo
  endpoint:
    path: /game/info
    method: GET
    data_selector: records
    params: {}
- name: game
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-final
    method: GET
    data_selector: games
    params: {}
- name: game_odds
  endpoint:
    path: /developers/api-documentation/mlb#pregame-odds--by-date
    method: GET
    data_selector: odds
    params: {}
- name: player_headshots
  endpoint:
    path: /developers/api-documentation/mlb#headshots
    method: GET
    data_selector: headshots
    params: {}
- name: lineup
  endpoint:
    path: /developers/api-documentation/mlb#starting-lineups--by-date
    method: GET
    data_selector: lineups
    params: {}
- name: 'Scores & Game State: Final Only'
  endpoint:
    path: /developers/api-documentation/nhl#games-basic--by-date-final
    method: GET
    data_selector: records
- name: 'Scores & Game State: Live & Final'
  endpoint:
    path: /developers/api-documentation/nhl#games-basic--by-date-live--final
    method: GET
    data_selector: records
- name: Schedules & Game Day Info
  endpoint:
    path: /developers/api-documentation/nhl#schedules
    method: GET
    data_selector: records
- name: 'Team & Player Stats: Final Only'
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
    data_selector: records
- name: 'Team & Player Stats: Live & Final'
  endpoint:
    path: /developers/api-documentation/nhl#box-score-live--final
    method: GET
    data_selector: records
- name: 'Play by Play: Final Only'
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
    data_selector: records
- name: 'Play by Play: Live & Final'
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-live--final
    method: GET
    data_selector: records
- name: Sportsbook
  endpoint:
    path: /developers/api-documentation/nhl#sportsbooks--by-active
    method: GET
    data_selector: records
- name: Stadium
  endpoint:
    path: /developers/api-documentation/nhl#stadiums
    method: GET
    data_selector: records
- name: Standing
  endpoint:
    path: /developers/api-documentation/nhl#standings
    method: GET
    data_selector: records
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: stories
- name: pitches
  endpoint:
    path: /playbyplay/pitches
    method: GET
    data_selector: plays
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: players
- name: Player
  endpoint:
    path: /developers/api-documentation/mlb#player
    method: GET
    data_selector: records
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/mlb#player-game
    method: GET
    data_selector: records
- name: starting_goaltenders
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /developers/api-documentation/nhl#team-profiles--by-active
    method: GET
    data_selector: records
- name: team_game
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
    data_selector: records
- name: team_game_trends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: records
- name: team_goalie_depth_chart
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
    data_selector: records
- name: team_line
  endpoint:
    path: /developers/api-documentation/nhl#line-combinations--by-season
    method: GET
    data_selector: records
- name: player_game
  endpoint:
    path: /playergamebasic
    method: GET
    data_selector: records
    params: {}
- name: projected_player_game_stats_by_date
  endpoint:
    path: /developers/api-documentation/mlb/projected-player-game-stats--by-date
    method: GET
- name: Team
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: records
- name: TeamSeason
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: records
- name: TeamTrends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-team
    method: GET
    data_selector: records
- name: Transaction
  endpoint:
    path: /developers/api-documentation/nhl#transactions
    method: GET
    data_selector: records
- name: PlayerInfo
  endpoint:
    path: /player/info
    method: GET
    data_selector: records
- name: PlayerSeason
  endpoint:
    path: /player/season
    method: GET
    data_selector: records
- name: player_season_stats
  endpoint:
    path: /developers/api-documentation/mlb#projected-player-season-stats-with-adp
    method: GET
    data_selector: records
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /betting-events
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /betting-markets
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /betting-market-results
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /betting-market-splits
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /betting-outcomes
    method: GET
    data_selector: records
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/mlb#schedules-basic
    method: GET
    data_selector: records
- name: scores_basic
  endpoint:
    path: /developers/api-documentation/mlb#games-basic--by-date-final
    method: GET
    data_selector: records
- name: betting_futures
  endpoint:
    path: /betting/futures
    method: GET
- name: betting_results
  endpoint:
    path: /betting/results
    method: GET
- name: betting_metadata
  endpoint:
    path: /betting/metadata
    method: GET
- name: betting_splits
  endpoint:
    path: /betting/splits
    method: GET
- name: box_score
  endpoint:
    path: /boxscore
    method: GET
- name: conference
  endpoint:
    path: /conference
    method: GET
- name: consensus_outcome
  endpoint:
    path: /consensus/outcome
    method: GET
- name: dfs_slate
  endpoint:
    path: /dfs/slate
    method: GET
- name: season_current
  endpoint:
    path: /developers/api-documentation/mlb#season--current
    method: GET
    data_selector: records
    params: {}
- name: schedules
  endpoint:
    path: /developers/api-documentation/mlb#schedules
    method: GET
    data_selector: records
    params: {}
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-final
    method: GET
    data_selector: records
    params: {}
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/mlb#games--by-date-live--final
    method: GET
    data_selector: records
    params: {}
- name: game
  endpoint:
    path: /schedules
    method: GET
    data_selector: games
- name: gameBettingSplit
  endpoint:
    path: /betting-splits
    method: GET
    data_selector: bettingSplits
- name: gameInfo
  endpoint:
    path: /game-info
    method: GET
    data_selector: gameInfo
- name: StartingLineups
  endpoint:
    path: /developers/api-documentation/mlb#starting-lineups
    method: GET
    data_selector: records
    params: {}
- name: Teams
  endpoint:
    path: /developers/api-documentation/mlb#team-profiles--all
    method: GET
    data_selector: records
    params: {}
- name: DepthCharts
  endpoint:
    path: /developers/api-documentation/mlb#depth-charts
    method: GET
    data_selector: records
    params: {}
- name: TeamGame
  endpoint:
    path: /developers/api-documentation/mlb#box-score-final
    method: GET
    data_selector: records
    params: {}
- name: MatchupStats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
    params: {}
- name: BettingTrendsByMatchup
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-matchup
    method: GET
    data_selector: records
    params: {}
- name: BettingTrendsByTeam
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-team
    method: GET
    data_selector: records
    params: {}
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
    params: {}
- name: odds
  endpoint:
    path: /odds
    method: GET
    data_selector: records
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: records
    params: {}
- name: matchup_stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
    params: {}
- name: betting_trends_by_matchup
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-matchup
    method: GET
    data_selector: records
    params: {}
- name: betting_trends_by_team
  endpoint:
    path: /developers/api-documentation/mlb#betting-trends--by-team
    method: GET
    data_selector: records
    params: {}
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-logs--by-season
    method: GET
    data_selector: records
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats
    method: GET
    data_selector: records
- name: scores_basic
  endpoint:
    path: /scores/basic
    method: GET
    data_selector: records
- name: schedules_basic
  endpoint:
    path: /schedules/basic
    method: GET
    data_selector: records
- name: scoring_play
  endpoint:
    path: /scoring/play
    method: GET
    data_selector: records
- name: sportsbook
  endpoint:
    path: /sportsbooks
    method: GET
    data_selector: records
- name: stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-football#stadiums
    method: GET
    data_selector: stadiums
- name: teams
  endpoint:
    path: /developers/api-documentation/ncaa-football#team-profiles--all
    method: GET
    data_selector: teams
- name: teams_basic
  endpoint:
    path: /developers/api-documentation/ncaa-football#teams-basic--all
    method: GET
    data_selector: teams_basic
- name: team_game
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-score-final
    method: GET
    data_selector: team_game
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nba#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nba#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nba#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nba#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nba#betting-events--by-date
    method: GET
    data_selector: records
- name: matchup_stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
    params: {}
- name: betting_trends_by_matchup
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-matchup
    method: GET
    data_selector: records
    params: {}
- name: betting_trends_by_team
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-team
    method: GET
    data_selector: records
    params: {}
- name: TeamTrends
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-team
    method: GET
    data_selector: TeamGameTrends
    params: {}
- name: MatchupStats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: MatchupStats
    params: {}
- name: betting_outcome
  endpoint:
    path: /betting/outcome
    method: GET
    data_selector: records
- name: betting_result
  endpoint:
    path: /betting/result
    method: GET
    data_selector: records
- name: betting_metadata
  endpoint:
    path: /betting/metadata
    method: GET
    data_selector: records
- name: betting_split
  endpoint:
    path: /betting/split
    method: GET
    data_selector: records
- name: box_score
  endpoint:
    path: /box_score
    method: GET
    data_selector: records
- name: consensus_outcome
  endpoint:
    path: /consensus/outcome
    method: GET
    data_selector: records
- name: depth_chart
  endpoint:
    path: /depth_chart
    method: GET
    data_selector: records
- name: dfs_slate
  endpoint:
    path: /dfs/slate
    method: GET
    data_selector: records
- name: Game
  endpoint:
    path: /developers/api-documentation/nba#games--by-date-final
    method: GET
    data_selector: records
- name: GameBettingSplit
  endpoint:
    path: /developers/api-documentation/nba#betting-splits--by-game
    method: GET
    data_selector: records
- name: GameInfo
  endpoint:
    path: /developers/api-documentation/nba#pregame-odds--by-date
    method: GET
    data_selector: records
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
    data_selector: records
- name: Game
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: records
    params: {}
- name: GameOdd
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: records
    params: {}
- name: GameOddOutcome
  endpoint:
    path: /developers/api-documentation/nba#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: records
    params: {}
- name: GameOddResult
  endpoint:
    path: /developers/api-documentation/nba#ingame-odds-line-movement-with-resulting-sportsbook-group
    method: GET
    data_selector: records
    params: {}
- name: Headshot
  endpoint:
    path: /developers/api-documentation/nba#headshots
    method: GET
    data_selector: records
    params: {}
- name: Lineup
  endpoint:
    path: /developers/api-documentation/nba#starting-lineups--by-date
    method: GET
    data_selector: records
    params: {}
- name: MatchupTrends
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-matchup
    method: GET
    data_selector: records
    params: {}
- name: News
  endpoint:
    path: /developers/api-documentation/nba#news
    method: GET
    data_selector: records
    params: {}
- name: OpponentSeason
  endpoint:
    path: /developers/api-documentation/nba#team-season-stats
    method: GET
    data_selector: records
    params: {}
- name: play_by_play
  endpoint:
    path: /developers/api-documentation/nba#play-by-play
    method: GET
    data_selector: plays
    params: {}
- name: player_details
  endpoint:
    path: /developers/api-documentation/nba#player-details--by-active
    method: GET
    data_selector: players
    params: {}
- name: PlayerActiveBasic
  endpoint:
    path: /developers/api-documentation/nba#player-profiles--by-active
    method: GET
    data_selector: records
- name: PlayerBasic
  endpoint:
    path: /developers/api-documentation/nba#players-profiles--by-team
    method: GET
    data_selector: records
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/nba#box-score-final
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /developers/api-documentation/nba#PlayerGameBasic
    method: GET
    data_selector: records
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/nba#projected-player-game-stats--by-date
    method: GET
    data_selector: records
- name: PlayerGameProjection
  endpoint:
    path: /players/game-projections
    method: GET
    data_selector: projections
- name: PlayerInfo
  endpoint:
    path: /players/info
    method: GET
    data_selector: players
- name: PlayerSeason
  endpoint:
    path: /players/season
    method: GET
    data_selector: seasons
- name: PlayerSeasonProjection
  endpoint:
    path: /players/season-projections
    method: GET
    data_selector: seasonProjections
- name: Betting Events - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-date
    method: GET
- name: Betting Events - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-season
    method: GET
- name: Betting Markets - by Event
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-event
    method: GET
- name: Betting Markets - by Game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-game
    method: GET
- name: Betting Markets - by Market Type
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-market-type
    method: GET
- name: Betting Player Props - by Game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-player-props--by-game
    method: GET
- name: Betting Markets - by Event [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-event-sportsbook-group
    method: GET
- name: Betting Markets - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-game-sportsbook-group
    method: GET
- name: Betting Markets - by Market Type [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-market-type-sportsbook-group
    method: GET
- name: Betting Player Props - by Game [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-player-props--by-game-sportsbook-group
    method: GET
- name: Betting Results - by Market
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-results--by-market
    method: GET
- name: Betting Results - by Market [Sportsbook Group]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-results--by-market-sportsbook-group
    method: GET
- name: Betting Metadata
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
- name: Betting Splits - by Game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
- name: Betting Splits - by Betting Market
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-betting-market
    method: GET
- name: Box Score [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-score-final
    method: GET
- name: Box Scores - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-scores--by-date-final
    method: GET
- name: Box Score [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-score-live--final
    method: GET
- name: Box Scores - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-scores--by-date-live--final
    method: GET
- name: Box Scores Delta - by Date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#box-scores-delta--by-date
    method: GET
- name: Games - by Season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
- name: Games - by Date [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-date-final
    method: GET
- name: Games - by Season [Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season-final
    method: GET
- name: Games - by Date [Live & Final]
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-date-live--final
    method: GET
- name: Tournament Hierarchy
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#tournament-hierarchy
    method: GET
- name: quarter
  endpoint:
    path: /developers/api-documentation/nba#quarter
    method: GET
    data_selector: records
    params: {}
- name: referee
  endpoint:
    path: /developers/api-documentation/nba#referees
    method: GET
    data_selector: records
    params: {}
- name: rotoworld_player_news_item
  endpoint:
    path: /developers/api-documentation/nba#rotoworld-player-news-item
    method: GET
    data_selector: records
    params: {}
- name: schedule_basic
  endpoint:
    path: /developers/api-documentation/nba#schedules-basic
    method: GET
    data_selector: records
    params: {}
- name: score_basic
  endpoint:
    path: /developers/api-documentation/nba#games-basic--by-date-final
    method: GET
    data_selector: records
    params: {}
- name: matchups_trends_splits
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
    params: {}
- name: betting_splits_by_game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
    data_selector: records
    params: {}
- name: pregame_odds_by_date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-odds--by-date
    method: GET
    data_selector: records
    params: {}
- name: in_game_odds_by_date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#ingame-odds--by-date
    method: GET
    data_selector: records
    params: {}
- name: GameOdd
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-odds--by-date
    method: GET
- name: GameOddOutcome
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#ingame-odds--by-date
    method: GET
- name: GameOddResult
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: InjuredPlayer
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-injured
    method: GET
- name: MatchupTrends
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-matchup
    method: GET
- name: Period
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
- name: Player
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-active
    method: GET
- name: Season - Current
  endpoint:
    path: /developers/api-documentation/nba#season--current
    method: GET
- name: Schedules & Game Day Info
  endpoint:
    path: /developers/api-documentation/nba#schedules
    method: GET
- name: 'Scores & Game State: Final Only (No Game State)'
  endpoint:
    path: /developers/api-documentation/nba#games--by-date-final
    method: GET
- name: 'Scores & Game State: Live & Final (With Game State)'
  endpoint:
    path: /developers/api-documentation/nba#games--by-date-live--final
    method: GET
- name: 'Team & Player Stats: Final Only'
  endpoint:
    path: /developers/api-documentation/nba#box-score-final
    method: GET
- name: 'Team & Player Stats: Live & Final'
  endpoint:
    path: /developers/api-documentation/nba#box-score-live--final
    method: GET
- name: 'Play by Play: Final Only'
  endpoint:
    path: /developers/api-documentation/nba#play-by-play-final
    method: GET
- name: 'Play by Play: Live & Final'
  endpoint:
    path: /developers/api-documentation/nba#play-by-play-live--final
    method: GET
- name: 'Matchups, Trends & Splits: Matchup Stats'
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-team
    method: GET
- name: Sportsbooks - by Active
  endpoint:
    path: /developers/api-documentation/nba#sportsbooks--by-active
    method: GET
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/nba#stadiums
    method: GET
- name: Standings
  endpoint:
    path: /developers/api-documentation/nba#standings
    method: GET
- name: Starting Lineups - by Date
  endpoint:
    path: /developers/api-documentation/nba#starting-lineups--by-date
    method: GET
- name: Team Profiles - by Active
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--by-active
    method: GET
- name: Team Profiles - All
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--all
    method: GET
- name: Team Profiles - by Season
  endpoint:
    path: /developers/api-documentation/nba#team-profiles--by-season
    method: GET
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-game-stats--by-date-final
    method: GET
    data_selector: records
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-game-projections
    method: GET
    data_selector: records
- name: depth_charts
  endpoint:
    path: /developers/api-documentation/nba#depth-charts
    method: GET
    data_selector: DepthCharts
    params: {}
- name: team_game
  endpoint:
    path: /developers/api-documentation/nba#team-game-logs--by-season
    method: GET
    data_selector: TeamGame
    params: {}
- name: team_game_trends
  endpoint:
    path: /developers/api-documentation/nba#betting-trends--by-team
    method: GET
    data_selector: TeamGameTrends
    params: {}
- name: team_season_stats
  endpoint:
    path: /developers/api-documentation/nba#team-season-stats
    method: GET
    data_selector: TeamSeason
    params: {}
- name: PlayerSeason
  endpoint:
    path: /players/season
    method: GET
    data_selector: records
- name: ScheduleBasic
  endpoint:
    path: /schedules/basic
    method: GET
    data_selector: records
- name: ScoreBasic
  endpoint:
    path: /scores/basic
    method: GET
    data_selector: records
- name: matchup_stats
  endpoint:
    path: /developers/api-documentation/nba#matchup-stats
    method: GET
    data_selector: matchup_stats
    params: {}
- name: transactions
  endpoint:
    path: /developers/api-documentation/nba#transactions
    method: GET
    data_selector: transactions
    params: {}
- name: Season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#season--current
    method: GET
    data_selector: records
- name: Sportsbooks
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#sportsbooks--by-active
    method: GET
    data_selector: records
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#stadiums
    method: GET
    data_selector: records
- name: Teams
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#teams-basic--all
    method: GET
    data_selector: records
- name: Team Game Stats
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#team-game-logs-by-season
    method: GET
    data_selector: records
- name: TeamGameTrends
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-team
    method: GET
    data_selector: data
    params: {}
- name: Tournament
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#tournament-hierarchy
    method: GET
    data_selector: data
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nhl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nhl#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nhl#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/nhl#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nhl#betting-events--by-date
    method: GET
    data_selector: records
- name: betting_futures
  endpoint:
    path: /betting_futures
    method: GET
    data_selector: results
    params: {}
- name: betting_results
  endpoint:
    path: /betting_results
    method: GET
    data_selector: results
    params: {}
- name: betting_splits
  endpoint:
    path: /betting_splits
    method: GET
    data_selector: results
    params: {}
- name: box_score
  endpoint:
    path: /box_score
    method: GET
    data_selector: results
    params: {}
- name: dfs_slates
  endpoint:
    path: /dfs_slates
    method: GET
    data_selector: results
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /bettingEntityMetadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /bettingEntityMetadataCollection
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /bettingEvent
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /bettingMarket
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /bettingOutcome
    method: GET
    data_selector: records
- name: ConsensusOutcome
  endpoint:
    path: /consensusOutcome
    method: GET
    data_selector: records
- name: Courses
  endpoint:
    path: /courses
    method: GET
    data_selector: records
- name: DfsSlate
  endpoint:
    path: /dfsSlate
    method: GET
    data_selector: records
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-final
    method: GET
    data_selector: records
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-live--final
    method: GET
    data_selector: records
- name: betting_splits_by_game
  endpoint:
    path: /developers/api-documentation/nhl#betting-splits--by-game
    method: GET
    data_selector: records
- name: pre_game_odds_by_date
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
    data_selector: records
- name: in_game_odds_by_date
  endpoint:
    path: /developers/api-documentation/nhl#ingame-odds--by-date
    method: GET
    data_selector: records
- name: dfs_slates
  endpoint:
    path: /dfs/slates
    method: GET
    data_selector: slates
    params: {}
- name: dfs_slates_by_tournament
  endpoint:
    path: /dfs/slates/tournament/{tournamentId}
    method: GET
    data_selector: slates
    params: {}
- name: dfs_player_ownership_projections
  endpoint:
    path: /dfs/player/ownership
    method: GET
    data_selector: ownershipProjections
    params: {}
- name: PlayerRound
  endpoint:
    path: /developers/api-documentation/golf#player-hole-scores--by-tournament-final
    method: GET
    data_selector: records
- name: PlayerInfo
  endpoint:
    path: /developers/api-documentation/golf#rotoworld-player-news--by-recent
    method: GET
    data_selector: records
- name: PlayerTournament
  endpoint:
    path: /developers/api-documentation/golf#leaderboard-final
    method: GET
    data_selector: records
- name: game
  endpoint:
    path: /developers/api-documentation/nhl#pregame-odds--by-date
    method: GET
    data_selector: game
    params: {}
- name: gameodd
  endpoint:
    path: /developers/api-documentation/nhl#pregame-and-period-game-odds--by-date-sportsbook-group
    method: GET
    data_selector: gameodd
    params: {}
- name: goaliedepthchart
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
    data_selector: goaliedepthchart
    params: {}
- name: goaltender
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
    data_selector: goaltender
    params: {}
- name: headshot
  endpoint:
    path: /developers/api-documentation/nhl#headshots
    method: GET
    data_selector: headshot
    params: {}
- name: matchuptrends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: matchuptrends
    params: {}
- name: news
  endpoint:
    path: /developers/api-documentation/nhl#news
    method: GET
    data_selector: news
    params: {}
- name: opponentseason
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: opponentseason
    params: {}
- name: PlayerTournament
  endpoint:
    path: /players/tournament
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentHole
  endpoint:
    path: /players/tournament/hole
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentOdd
  endpoint:
    path: /players/tournament/odd
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentProjection
  endpoint:
    path: /players/tournament/projection
    method: GET
    data_selector: records
    params: {}
- name: RotoworldPlayerNewsItem
  endpoint:
    path: /players/news
    method: GET
    data_selector: records
    params: {}
- name: Player News
  endpoint:
    path: /developers/api-documentation/golf#rotoworld-player-news--by-recent
    method: GET
    data_selector: records
    params: {}
- name: schedules
  endpoint:
    path: /developers/api-documentation/nhl#schedules
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-final
    method: GET
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-live--final
    method: GET
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
- name: box_scores_by_date_final
  endpoint:
    path: /developers/api-documentation/nhl#box-scores--by-date-final
    method: GET
- name: box_score_live_final
  endpoint:
    path: /developers/api-documentation/nhl#box-score-live--final
    method: GET
- name: box_scores_by_date_live_final
  endpoint:
    path: /developers/api-documentation/nhl#box-scores--by-date-live--final
    method: GET
- name: play_by_play_final
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
- name: play_by_play_live_final
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-live--final
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/nascar#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/nascar#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/nascar#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/nascar#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/nascar#betting-market
    method: GET
    data_selector: records
- name: Driver
  endpoint:
    path: /developers/api-documentation/nascar#driver-profiles--all
    method: GET
    data_selector: records
- name: DriverBasic
  endpoint:
    path: /developers/api-documentation/nascar#drivers--by-active
    method: GET
    data_selector: records
- name: DriverRace
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-final
    method: GET
    data_selector: records
- name: DriverRaceBasic
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic-final
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /api/documentation/nhl#player-details--by-active
    method: GET
    data_selector: players
- name: player_basic
  endpoint:
    path: /api/documentation/nhl#players-profiles--by-team
    method: GET
    data_selector: players
- name: player_game
  endpoint:
    path: /api/documentation/nhl#player-game-logs--by-season
    method: GET
    data_selector: game_logs
- name: PlayerGameBasic
  endpoint:
    path: /projected-player-game-stats--by-date
    method: GET
    data_selector: records
- name: PlayerLine
  endpoint:
    path: /developers/coverage-guide/player-feeds/depth-charts-lineups-injuries
    method: GET
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/nhl/player-season-stats
    method: GET
- name: ScheduleBasic
  endpoint:
    path: /developers/api-documentation/nhl/schedules-basic
    method: GET
- name: DriverRaceOdd
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
    data_selector: DriverRaceOdd
    params: {}
- name: DriverRaceProjection
  endpoint:
    path: /developers/api-documentation/nascar#projected-player-race-stats--by-race
    method: GET
    data_selector: DriverRaceProjection
    params: {}
- name: FantasyRace
  endpoint:
    path: /developers/api-documentation/nascar#fantasy-points--by-race
    method: GET
    data_selector: FantasyRace
    params: {}
- name: Race
  endpoint:
    path: /developers/api-documentation/nascar#schedules
    method: GET
    data_selector: Race
    params: {}
- name: RaceBasic
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic
    method: GET
    data_selector: RaceBasic
    params: {}
- name: RaceOdds
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
    data_selector: RaceOdds
    params: {}
- name: RaceResult
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-final
    method: GET
    data_selector: RaceResult
    params: {}
- name: RaceResultBasic
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic-final
    method: GET
    data_selector: RaceResultBasic
    params: {}
- name: Series
  endpoint:
    path: /developers/api-documentation/nascar#series
    method: GET
    data_selector: Series
    params: {}
- name: Sportsbook
  endpoint:
    path: /developers/api-documentation/nascar#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook
    params: {}
- name: 'Scores & Game State: Final Only (No Game State)'
  endpoint:
    path: /developers/api-documentation/nhl#games-basic--by-date-final
    method: GET
    data_selector: records
- name: 'Scores & Game State: Live & Final (With Game State)'
  endpoint:
    path: /developers/api-documentation/nhl#games--by-date-live--final
    method: GET
    data_selector: records
- name: Schedules & Game Day Info
  endpoint:
    path: /developers/api-documentation/nhl#schedules
    method: GET
    data_selector: records
- name: 'Team & Player Stats: Final Only'
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
    data_selector: records
- name: 'Play by Play: Final Only'
  endpoint:
    path: /developers/api-documentation/nhl#play-by-play-final
    method: GET
    data_selector: records
- name: 'Matchups, Trends & Splits: Matchup Stats'
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-matchup
    method: GET
    data_selector: records
- name: Sportsbooks
  endpoint:
    path: /developers/api-documentation/nhl#sportsbooks--by-active
    method: GET
    data_selector: records
- name: Stadiums
  endpoint:
    path: /developers/api-documentation/nhl#stadiums
    method: GET
    data_selector: records
- name: Standings
  endpoint:
    path: /developers/api-documentation/nhl#standings
    method: GET
    data_selector: records
- name: areas
  endpoint:
    path: /developers/api-documentation/soccer#areas-countries
    method: GET
    data_selector: records
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/soccer#betting-metadata
    method: GET
    data_selector: records
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-date
    method: GET
    data_selector: records
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-season
    method: GET
    data_selector: records
- name: betting_futures_by_season
  endpoint:
    path: /developers/api-documentation/soccer#betting-futures--by-season
    method: GET
    data_selector: records
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: records
- name: starting_goaltenders
  endpoint:
    path: /developers/api-documentation/nhl#starting-goaltenders--by-date
    method: GET
- name: teams
  endpoint:
    path: /developers/api-documentation/nhl#team-profiles--all
    method: GET
- name: team_game
  endpoint:
    path: /developers/api-documentation/nhl#box-score-final
    method: GET
- name: team_game_trends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-team
    method: GET
- name: team_goalie_depth_chart
  endpoint:
    path: /developers/api-documentation/nhl#depth-charts--goalies
    method: GET
- name: team_line
  endpoint:
    path: /developers/api-documentation/nhl#line-combinations--by-season
    method: GET
- name: box_score_live_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-live--final
    method: GET
- name: box_scores_by_date_live_final
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-live--final
    method: GET
- name: box_scores_delta_by_date
  endpoint:
    path: /developers/api-documentation/soccer#box-scores-delta--by-date
    method: GET
- name: memberships_by_canceled
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-canceled
    method: GET
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
- name: box_scores_by_date_final
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-final
    method: GET
- name: games_by_competition_live_final
  endpoint:
    path: /developers/api-documentation/soccer#games--by-competition-live--final
    method: GET
- name: Team
  endpoint:
    path: /developers/api-documentation/nhl#team-season-stats
    method: GET
    data_selector: records
    params: {}
- name: TeamTrends
  endpoint:
    path: /developers/api-documentation/nhl#betting-trends--by-team
    method: GET
    data_selector: records
    params: {}
- name: Transaction
  endpoint:
    path: /developers/api-documentation/nhl#transactions
    method: GET
    data_selector: records
    params: {}
- name: game
  endpoint:
    path: /v4/games
    method: GET
    data_selector: games
    params: {}
- name: game_info
  endpoint:
    path: /v4/gameinfo
    method: GET
    data_selector: gameInfo
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-events--by-date
    method: GET
    data_selector: records
- name: game_lines_pre_game
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_in_play
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_pre_game_plus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: game_lines_in_play_plus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: team_player_stats_final_only
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: team_player_stats_live_final
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: lineup
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-active
    method: GET
    data_selector: records
- name: membership
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-recently-changed
    method: GET
    data_selector: records
- name: penalty_shootout
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /developers/api-documentation/soccer#player-details--by-team
    method: GET
    data_selector: records
- name: player_basic
  endpoint:
    path: /developers/api-documentation/soccer#player-profiles--by-team
    method: GET
    data_selector: records
- name: player_game
  endpoint:
    path: /developers/api-documentation/soccer#player-game-stats--by-date-final
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /betting/outcome
    method: GET
    data_selector: records
    params: {}
- name: BettingOutcomeResult
  endpoint:
    path: /betting/outcome/result
    method: GET
    data_selector: records
    params: {}
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting/metadata
    method: GET
    data_selector: records
    params: {}
- name: BettingSplit
  endpoint:
    path: /betting/split
    method: GET
    data_selector: records
    params: {}
- name: BoxScore
  endpoint:
    path: /box/score
    method: GET
    data_selector: records
    params: {}
- name: Conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
    params: {}
- name: ConsensusOutcome
  endpoint:
    path: /consensus/outcome
    method: GET
    data_selector: records
    params: {}
- name: DfsSlate
  endpoint:
    path: /dfs/slate
    method: GET
    data_selector: records
    params: {}
- name: DfsSlateGame
  endpoint:
    path: /dfs/slate/game
    method: GET
    data_selector: records
    params: {}
- name: DfsSlatePlayer
  endpoint:
    path: /dfs/slate/player
    method: GET
    data_selector: records
    params: {}
- name: player_game_basic
  endpoint:
    path: /developers/api-documentation/soccer#projected-player-game-stats--by-date
    method: GET
    data_selector: records
- name: player_game_projection
  endpoint:
    path: /developers/api-documentation/soccer#projected-player-game-stats--by-date
    method: GET
    data_selector: records
- name: PlayerSeasonStats
  endpoint:
    path: /api/playerseason
    method: GET
    data_selector: records
    params: {}
- name: PlayerSeasonProjections
  endpoint:
    path: /api/playerseasonprojections
    method: GET
    data_selector: records
    params: {}
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
    params: {}
- name: game_betting_split
  endpoint:
    path: /betting_splits
    method: GET
    data_selector: records
    params: {}
- name: game_info
  endpoint:
    path: /game_info
    method: GET
    data_selector: records
    params: {}
- name: game_info_result
  endpoint:
    path: /game_info_result
    method: GET
    data_selector: records
    params: {}
- name: Team Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#team-season-stats
    method: GET
- name: Player Season Stats
  endpoint:
    path: /developers/api-documentation/soccer#player-season-stats
    method: GET
- name: GameOdd
  endpoint:
    path: /developers/api-documentation/ncaa-football#pregame-odds--by-week
    method: GET
    data_selector: records
    params: {}
- name: MatchupTrends
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-matchup
    method: GET
    data_selector: records
    params: {}
- name: Period
  endpoint:
    path: /developers/api-documentation/ncaa-football#schedules
    method: GET
    data_selector: records
    params: {}
- name: Player
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-details--by-active
    method: GET
    data_selector: records
    params: {}
- name: games_final_only
  endpoint:
    path: /developers/api-documentation/soccer#games-basic--by-date-final
    method: GET
    data_selector: records
- name: games_live_final
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-live--final
    method: GET
    data_selector: records
- name: standings
  endpoint:
    path: /developers/api-documentation/soccer#standings
    method: GET
    data_selector: records
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-game-logs--by-season
    method: GET
    data_selector: records
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/ncaa-football#player-season-stats
    method: GET
    data_selector: records
- name: TeamDetail
  endpoint:
    path: /developers/api-documentation/soccer#teamdetail
    method: GET
    data_selector: records
    params: {}
- name: TeamGame
  endpoint:
    path: /developers/api-documentation/soccer#teamgame
    method: GET
    data_selector: records
    params: {}
- name: TeamSeason
  endpoint:
    path: /developers/api-documentation/soccer#teamseason
    method: GET
    data_selector: records
    params: {}
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/ncaa-football#schedules-basic
    method: GET
    data_selector: records
- name: scores_basic
  endpoint:
    path: /developers/api-documentation/ncaa-football#games-basic
    method: GET
    data_selector: records
- name: scoring_play
  endpoint:
    path: /developers/api-documentation/ncaa-football#box-score-final
    method: GET
    data_selector: records
- name: sportsbook
  endpoint:
    path: /developers/api-documentation/ncaa-football#sportsbooks--by-active
    method: GET
    data_selector: records
- name: venues
  endpoint:
    path: /developers/api-documentation/soccer#venues
    method: GET
    data_selector: records
    params: {}
- name: stadiums
  endpoint:
    path: /developers/api-documentation/ncaa-football#stadiums
    method: GET
    data_selector: stadiums
- name: teams
  endpoint:
    path: /developers/api-documentation/ncaa-football#teams-basic--all
    method: GET
    data_selector: teams
- name: Matchup Stats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
- name: Betting Trends - by Matchup
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-matchup
    method: GET
- name: Betting Trends - by Team
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-team
    method: GET
- name: MatchupStats
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
    data_selector: records
- name: BettingTrendsByMatchup
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-matchup
    method: GET
    data_selector: records
- name: BettingTrendsByTeam
  endpoint:
    path: /developers/api-documentation/ncaa-football#betting-trends--by-team
    method: GET
    data_selector: records
- name: BettingEntityMetadata
  endpoint:
    path: /betting-entity-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /betting-entity-metadata-collection
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /betting-event
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /betting-market
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /betting-outcome
    method: GET
    data_selector: records
- name: CareerStat
  endpoint:
    path: /career-stat
    method: GET
    data_selector: records
- name: ConsensusOutcome
  endpoint:
    path: /consensus-outcome
    method: GET
    data_selector: records
- name: Event
  endpoint:
    path: /event
    method: GET
    data_selector: records
- name: EventDetail
  endpoint:
    path: /event-detail
    method: GET
    data_selector: records
- name: EventOdds
  endpoint:
    path: /event-odds
    method: GET
    data_selector: records
- name: Fight
  endpoint:
    path: /fight
    method: GET
    data_selector: records
- name: FightBasic
  endpoint:
    path: /fight-basic
    method: GET
    data_selector: records
- name: fight
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-live--final
    method: GET
    data_selector: Fight
    params: {}
- name: fight_detail
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: FightDetail
    params: {}
- name: fighter
  endpoint:
    path: /developers/api-documentation/mma#fighter-profile--by-fighter
    method: GET
    data_selector: Fighter
    params: {}
- name: fighter_basic
  endpoint:
    path: /developers/api-documentation/mma#fighter-profiles-basic--all
    method: GET
    data_selector: FighterBasic
    params: {}
- name: fight_odds
  endpoint:
    path: /developers/api-documentation/mma#event-fight-odds
    method: GET
    data_selector: FightOdds
    params: {}
- name: fight_stat
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: FightStat
    params: {}
- name: league
  endpoint:
    path: /developers/api-documentation/mma#leagues
    method: GET
    data_selector: League
    params: {}
- name: sportsbook
  endpoint:
    path: /developers/api-documentation/mma#sportsbooks--by-active
    method: GET
    data_selector: Sportsbook
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingMarketResult
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-results--by-market
    method: GET
    data_selector: records
- name: BettingMarketSplit
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-splits--by-game
    method: GET
    data_selector: records
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/wnba#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
    data_selector: records
- name: BoxScore
  endpoint:
    path: /developers/api-documentation/wnba#box-score-final
    method: GET
    data_selector: records
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-date
    method: GET
    data_selector: events
    params: {}
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-events--by-season
    method: GET
    data_selector: events
    params: {}
- name: betting_markets_by_event
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-event
    method: GET
    data_selector: markets
    params: {}
- name: betting_markets_by_game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-game
    method: GET
    data_selector: markets
    params: {}
- name: betting_markets_by_market_type
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-markets--by-market-type
    method: GET
    data_selector: markets
    params: {}
- name: betting_player_props_by_game
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-player-props--by-game
    method: GET
    data_selector: props
    params: {}
- name: GameBettingSplit
  endpoint:
    path: /betting/splits
    method: GET
    data_selector: splits
- name: GameInfo
  endpoint:
    path: /game/info
    method: GET
    data_selector: gameInfo
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-season
    method: GET
- name: betting_markets_by_event
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
- name: betting_markets_by_game
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game
    method: GET
- name: schedules
  endpoint:
    path: /developers/api-documentation/wnba#schedules
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-live--final
    method: GET
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/wnba#box-score-final
    method: GET
- name: box_score_live_final
  endpoint:
    path: /developers/api-documentation/wnba#box-score-live--final
    method: GET
- name: GameOdd
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-odds--by-date
    method: GET
- name: GameOddOutcome
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#pregame-and-period-game-odds-line-movement-with-resulting-sportsbook-group
    method: GET
- name: GameOddResult
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#ingame-odds--by-date
    method: GET
- name: InjuredPlayer
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-injured
    method: GET
- name: MatchupTrends
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-matchup
    method: GET
- name: Period
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
- name: Player
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-details--by-active
    method: GET
- name: PlayerBasic
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-profiles--by-team
    method: GET
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/wnba#player-season-stats
    method: GET
    data_selector: records
- name: Quarter
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
    data_selector: records
- name: SchedulesBasic
  endpoint:
    path: /developers/api-documentation/wnba#schedules-basic
    method: GET
    data_selector: records
- name: PlayerGame
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-game-logs--by-season
    method: GET
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-game-projections
    method: GET
- name: TeamGame
  endpoint:
    path: /api/wnba/teamgames
    method: GET
    data_selector: records
- name: TeamSeason
  endpoint:
    path: /api/wnba/teamseason
    method: GET
    data_selector: records
- name: team_stats
  endpoint:
    path: /api/v2025/stats
    method: GET
    data_selector: records
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#player-season-stats
    method: GET
    data_selector: records
- name: ScheduleBasic
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#schedules-basic
    method: GET
    data_selector: records
- name: ScoreBasic
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games-basic--by-date
    method: GET
    data_selector: records
- name: season_current
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#season--current
    method: GET
- name: sportsbooks_active
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#sportsbooks--by-active
    method: GET
- name: games_by_season
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#games--by-season
    method: GET
- name: teams_basic_all
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#teams-basic--all
    method: GET
- name: Conference
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#conference
    method: GET
- name: Game
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#game
    method: GET
- name: Period
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#period
    method: GET
- name: ScheduleBasic
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedule-basic
    method: GET
- name: Season
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#season
    method: GET
- name: Team
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#team
    method: GET
- name: Tennis
  endpoint:
    path: /developers/coverage/tennis
    method: GET
- name: TeamGameTrends
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#betting-trends--by-team
    method: GET
    data_selector: records
    params: {}
- name: TeamSeason
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#team-season-stats
    method: GET
    data_selector: records
    params: {}
- name: Tournament
  endpoint:
    path: /developers/api-documentation/ncaa-basketball#tournament-hierarchy
    method: GET
    data_selector: records
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/golf#betting-metadata
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/golf#betting-events--by-date
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/golf#betting-markets--by-event
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/golf#betting-outcomes
    method: GET
    data_selector: records
- name: ConsensusOutcome
  endpoint:
    path: /developers/api-documentation/golf#consensus-outcomes
    method: GET
    data_selector: records
- name: Courses
  endpoint:
    path: /developers/api-documentation/golf#courses
    method: GET
    data_selector: records
- name: DfsSlate
  endpoint:
    path: /developers/api-documentation/golf#dfs-slates--by-tournament
    method: GET
    data_selector: records
- name: BettingEntityMetadata
  endpoint:
    path: /betting/entity/metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /betting/entity/metadata/collection
    method: GET
    data_selector: records
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting/metadata
    method: GET
    data_selector: records
- name: Competition
  endpoint:
    path: /competition
    method: GET
    data_selector: records
- name: Contestant
  endpoint:
    path: /contestant
    method: GET
    data_selector: records
- name: Discipline
  endpoint:
    path: /discipline
    method: GET
    data_selector: records
- name: Match
  endpoint:
    path: /match
    method: GET
    data_selector: records
- name: MatchOdd
  endpoint:
    path: /match/odd
    method: GET
    data_selector: records
- name: Period
  endpoint:
    path: /period
    method: GET
    data_selector: records
- name: Player
  endpoint:
    path: /player
    method: GET
    data_selector: records
- name: Round
  endpoint:
    path: /round
    method: GET
    data_selector: records
- name: Season
  endpoint:
    path: /season
    method: GET
    data_selector: records
- name: sportsbook
  endpoint:
    path: /developers/api-documentation/tennis#sportsbooks--by-active
    method: GET
    data_selector: records
- name: tour
  endpoint:
    path: /developers/api-documentation/tennis#tours
    method: GET
    data_selector: records
- name: tour_season
  endpoint:
    path: /developers/api-documentation/tennis#tours
    method: GET
    data_selector: records
- name: venue
  endpoint:
    path: /developers/api-documentation/tennis#venues
    method: GET
    data_selector: records
- name: dfs_slates
  endpoint:
    path: /dfs/slates
    method: GET
    data_selector: slates
    params: {}
- name: dfs_slate_players
  endpoint:
    path: /dfs/slates/players
    method: GET
    data_selector: players
    params: {}
- name: dfs_slate_ownership_projections
  endpoint:
    path: /dfs/slates/ownership-projections
    method: GET
    data_selector: ownershipProjections
    params: {}
- name: fantasy_tournament
  endpoint:
    path: /fantasy/tournaments
    method: GET
    data_selector: tournaments
    params: {}
- name: player_headshots
  endpoint:
    path: /players/headshots
    method: GET
    data_selector: headshots
    params: {}
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: news
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: PlayerRound
  endpoint:
    path: /developers/api-documentation/golf#player-hole-scores--by-tournament-final
    method: GET
    data_selector: PlayerRound
    params: {}
- name: PlayerTournament
  endpoint:
    path: /developers/api-documentation/golf#leaderboard-final
    method: GET
    data_selector: PlayerTournament
    params: {}
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/golf#player-season-stats
    method: GET
    data_selector: PlayerSeason
    params: {}
- name: PlayerTournament
  endpoint:
    path: /developers/api-documentation/golf#player-tournament
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentHole
  endpoint:
    path: /developers/api-documentation/golf#player-tournament-hole
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentOdd
  endpoint:
    path: /developers/api-documentation/golf#player-tournament-odd
    method: GET
    data_selector: records
    params: {}
- name: PlayerTournamentProjection
  endpoint:
    path: /developers/api-documentation/golf#player-tournament-projection
    method: GET
    data_selector: records
    params: {}
- name: RotoworldPlayerNewsItem
  endpoint:
    path: /developers/api-documentation/golf#rotoworld-player-news-item
    method: GET
    data_selector: records
    params: {}
- name: SimulatedScores
  endpoint:
    path: /v3/nfl/scores/JSON/SimulatedScores/{numberOfPlays}
    method: GET
    data_selector: data
    params:
      numberOfPlays: 0, 1, 5, 10, 50, 100, 200
- name: SimulatedBoxScoresV3
  endpoint:
    path: /v3/nfl/stats/JSON/SimulatedBoxScoresV3/{numberOfPlays}
    method: GET
    data_selector: data
    params:
      numberOfPlays: 0, 1, 5, 10, 50, 100, 200
- name: SimulatedPlayByPlay
  endpoint:
    path: /v3/nfl/pbp/JSON/SimulatedPlayByPlay/{numberOfPlays}
    method: GET
    data_selector: data
    params:
      numberOfPlays: 0, 1, 5, 10, 50, 100, 200
- name: Tournament
  endpoint:
    path: /v3/cbb/scores/JSON/Tournament/sim
    method: GET
    data_selector: data
    params:
      season: sim
- name: Player News
  endpoint:
    path: /developers/api-documentation/golf#rotoworld-player-news--by-recent
    method: GET
    data_selector: records
    params: {}
- name: BettingEntityMetadata
  endpoint:
    path: /betting-entity-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /betting-entity-metadata-collection
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /betting-event
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /betting-market
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /betting-outcome
    method: GET
    data_selector: records
- name: Driver
  endpoint:
    path: /driver
    method: GET
    data_selector: records
- name: DriverBasic
  endpoint:
    path: /driver-basic
    method: GET
    data_selector: records
- name: DriverRace
  endpoint:
    path: /driver-race
    method: GET
    data_selector: records
- name: DriverRaceBasic
  endpoint:
    path: /driver-race-basic
    method: GET
    data_selector: records
- name: NFL Headshots
  endpoint:
    path: /nfl#player-headshots
    method: GET
- name: MLB Headshots
  endpoint:
    path: /mlb#player-headshots
    method: GET
- name: NBA Headshots
  endpoint:
    path: /nba#player-headshots
    method: GET
- name: NHL Headshots
  endpoint:
    path: /nhl#player-headshots
    method: GET
- name: DriverRaceOdd
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
- name: DriverRaceProjection
  endpoint:
    path: /developers/api-documentation/nascar#projected-player-race-stats--by-race
    method: GET
- name: FantasyRace
  endpoint:
    path: /developers/api-documentation/nascar#fantasy-points--by-race
    method: GET
- name: Race
  endpoint:
    path: /developers/api-documentation/nascar#schedules
    method: GET
- name: RaceBasic
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic
    method: GET
- name: RaceOdds
  endpoint:
    path: /developers/api-documentation/nascar#race-odds
    method: GET
- name: RaceResult
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-final
    method: GET
- name: RaceResultBasic
  endpoint:
    path: /developers/api-documentation/nascar#leaderboard-basic-final
    method: GET
- name: Series
  endpoint:
    path: /developers/api-documentation/nascar#series
    method: GET
- name: Sportsbook
  endpoint:
    path: /developers/api-documentation/nascar#sportsbooks--by-active
    method: GET
- name: areas
  endpoint:
    path: /developers/api-documentation/soccer#areas-countries
    method: GET
    data_selector: records
- name: betting_metadata
  endpoint:
    path: /developers/api-documentation/soccer#betting-metadata
    method: GET
    data_selector: records
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-date
    method: GET
    data_selector: records
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/soccer#betting-events--by-season
    method: GET
    data_selector: records
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: records
- name: box_scores_by_date_final
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-final
    method: GET
    data_selector: records
- name: box_score_live_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-live--final
    method: GET
    data_selector: Game
    params: {}
- name: box_scores_by_date_live_final
  endpoint:
    path: /developers/api-documentation/soccer#box-scores--by-date-live--final
    method: GET
    data_selector: Game
    params: {}
- name: box_scores_delta_by_date
  endpoint:
    path: /developers/api-documentation/soccer#box-scores-delta--by-date
    method: GET
    data_selector: Game
    params: {}
- name: memberships_by_canceled
  endpoint:
    path: /developers/api-documentation/soccer#memberships--by-canceled
    method: GET
    data_selector: CanceledMembership
    params: {}
- name: box_score_final
  endpoint:
    path: /developers/api-documentation/soccer#box-score-final
    method: GET
    data_selector: Game
    params: {}
- name: teams_players_rosters
  endpoint:
    path: /developers/coverage-guide/competition-feeds/teams-players-rosters
    method: GET
    data_selector: Team
    params: {}
- name: standings_rankings_brackets
  endpoint:
    path: /developers/coverage-guide/competition-feeds/standings-rankings-brackets
    method: GET
    data_selector: Competition
    params: {}
- name: game
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: game_info
  endpoint:
    path: /game-info
    method: GET
    data_selector: records
- name: historical_odds
  endpoint:
    path: /historical-odds
    method: GET
    data_selector: odds
    params: {}
- name: Game Day Coverage
  endpoint:
    path: /gameday/coverage
    method: GET
    data_selector: coverage
    params: {}
- name: Historical Sports Data
  endpoint:
    path: /historical/data
    method: GET
    data_selector: historicalData
    params: {}
- name: GameLinesPreGameLines
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: GameLinesInPlayLines
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: GameLinesPreGameLinesPlus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: GameLinesInPlayLinesPlus
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
    data_selector: records
    params: {}
- name: TeamPlayerStatsFinalOnly
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: TeamPlayerStatsLiveFinal
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
    data_selector: records
    params: {}
- name: game_day_info
  endpoint:
    path: /game_day_info
    method: GET
    data_selector: data
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: data
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: data
- name: player_stats
  endpoint:
    path: /player_stats
    method: GET
    data_selector: data
- name: Game Day Coverage
  endpoint:
    path: /game-day-coverage
    method: GET
    data_selector: data
- name: Historical Sports Data
  endpoint:
    path: /historical-sports-data
    method: GET
    data_selector: data
- name: lineup
  endpoint:
    path: /lineup
    method: GET
    data_selector: records
- name: membership
  endpoint:
    path: /memberships
    method: GET
    data_selector: records
- name: penalty_shootout
  endpoint:
    path: /penaltyshootouts
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: player_basic
  endpoint:
    path: /players/basic
    method: GET
    data_selector: records
- name: player_game
  endpoint:
    path: /players/game
    method: GET
    data_selector: records
- name: PlayerGameBasic
  endpoint:
    path: /developers/api-documentation/soccer/player-game-basic
    method: GET
    data_selector: records
    params: {}
- name: PlayerGameProjection
  endpoint:
    path: /developers/api-documentation/soccer/projected-player-game-stats--by-date
    method: GET
    data_selector: records
    params: {}
- name: game_day_info
  endpoint:
    path: /api/v1/gameday
    method: GET
    data_selector: data
    params: {}
- name: scores
  endpoint:
    path: /api/v1/scores
    method: GET
    data_selector: data
    params: {}
- name: player_season
  endpoint:
    path: /developers/api-documentation/soccer/player-season
    method: GET
    data_selector: records
    params: {}
- name: player_season_projection
  endpoint:
    path: /developers/api-documentation/soccer/player-season-projection
    method: GET
    data_selector: records
    params: {}
- name: Game Day Coverage
  endpoint:
    path: /coverage/gameday
    method: GET
    data_selector: coverage
    params: {}
- name: Historical Sports Data
  endpoint:
    path: /historical/data
    method: GET
    data_selector: historical_data
    params: {}
- name: tournament_info
  endpoint:
    path: /tournaments
    method: GET
    data_selector: tournaments
- name: live_scores
  endpoint:
    path: /live-scores
    method: GET
    data_selector: scores
- name: standings
  endpoint:
    path: /developers/api-documentation/soccer#standings
    method: GET
    data_selector: records
- name: schedules_basic
  endpoint:
    path: /developers/api-documentation/soccer#schedules-basic
    method: GET
    data_selector: records
- name: games_final
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-final
    method: GET
    data_selector: records
- name: game_day_coverage
  endpoint:
    path: /game_day_coverage
    method: GET
    data_selector: data
- name: historical_data
  endpoint:
    path: /historical_data
    method: GET
    data_selector: data
- name: games_basic_final
  endpoint:
    path: /developers/api-documentation/soccer#games-basic--by-date-final
    method: GET
- name: games_live_final
  endpoint:
    path: /developers/api-documentation/soccer#games--by-date-live--final
    method: GET
- name: standings
  endpoint:
    path: /developers/api-documentation/soccer#standings
    method: GET
- name: game_day_info
  endpoint:
    path: /api/gameDayInfo
    method: GET
- name: live_scores
  endpoint:
    path: /api/liveScores
    method: GET
- name: final_scores
  endpoint:
    path: /api/finalScores
    method: GET
- name: TeamDetail
  endpoint:
    path: /developers/api-documentation/soccer#teamdetail
    method: GET
    data_selector: records
    params: {}
- name: TeamGame
  endpoint:
    path: /developers/api-documentation/soccer#teamgame
    method: GET
    data_selector: records
    params: {}
- name: TeamSeason
  endpoint:
    path: /developers/api-documentation/soccer#teamseason
    method: GET
    data_selector: records
    params: {}
- name: venues
  endpoint:
    path: /developers/api-documentation/soccer#venues
    method: GET
    data_selector: records
- name: Scores
  endpoint:
    path: /scores
    method: GET
    data_selector: data
- name: Stats
  endpoint:
    path: /stats
    method: GET
    data_selector: data
- name: Odds
  endpoint:
    path: /odds
    method: GET
    data_selector: data
- name: Projections
  endpoint:
    path: /projections
    method: GET
    data_selector: data
- name: News
  endpoint:
    path: /news
    method: GET
    data_selector: data
- name: Images
  endpoint:
    path: /images
    method: GET
    data_selector: data
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: stats
  endpoint:
    path: /stats
    method: GET
- name: medals_table
  endpoint:
    path: /medals
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
- name: images
  endpoint:
    path: /images
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /betting-entity-metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /betting-entity-metadata-collection
    method: GET
    data_selector: records
- name: BettingEvent
  endpoint:
    path: /betting-event
    method: GET
    data_selector: records
- name: BettingMarket
  endpoint:
    path: /betting-market
    method: GET
    data_selector: records
- name: BettingOutcome
  endpoint:
    path: /betting-outcome
    method: GET
    data_selector: records
- name: CareerStat
  endpoint:
    path: /career-stat
    method: GET
    data_selector: records
- name: ConsensusOutcome
  endpoint:
    path: /consensus-outcome
    method: GET
    data_selector: records
- name: Event
  endpoint:
    path: /event
    method: GET
    data_selector: records
- name: EventDetail
  endpoint:
    path: /event-detail
    method: GET
    data_selector: records
- name: EventOdds
  endpoint:
    path: /event-odds
    method: GET
    data_selector: records
- name: Fight
  endpoint:
    path: /fight
    method: GET
    data_selector: records
- name: FightBasic
  endpoint:
    path: /fight-basic
    method: GET
    data_selector: records
- name: fight
  endpoint:
    path: /developers/api-documentation/mma#fight-basic-live--final
    method: GET
    data_selector: records
    params: {}
- name: fight_detail
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: records
    params: {}
- name: fighter
  endpoint:
    path: /developers/api-documentation/mma#fighter-profile--by-fighter
    method: GET
    data_selector: records
    params: {}
- name: fighter_basic
  endpoint:
    path: /developers/api-documentation/mma#fighter-profiles-basic--all
    method: GET
    data_selector: records
    params: {}
- name: fight_odds
  endpoint:
    path: /developers/api-documentation/mma#event-fight-odds
    method: GET
    data_selector: records
    params: {}
- name: fight_stat
  endpoint:
    path: /developers/api-documentation/mma#fight-final
    method: GET
    data_selector: records
    params: {}
- name: league
  endpoint:
    path: /developers/api-documentation/mma#leagues
    method: GET
    data_selector: records
    params: {}
- name: sportsbook
  endpoint:
    path: /developers/api-documentation/mma#sportsbooks--by-active
    method: GET
    data_selector: records
    params: {}
- name: Core Sports Data
  endpoint:
    path: /scores-and-stats
    method: GET
- name: Betting Odds
  endpoint:
    path: /live-odds-api
    method: GET
- name: Fantasy Sports
  endpoint:
    path: /fantasy-sports-api
    method: GET
- name: News & Images
  endpoint:
    path: /news-and-images
    method: GET
- name: Widgets & Visualizations
  endpoint:
    path: /widgets
    method: GET
- name: BAKER Predictive Engine
  endpoint:
    path: /baker-predictive-engine
    method: GET
- name: GRid
  endpoint:
    path: /grid
    method: GET
- name: Vault
  endpoint:
    path: /vault
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /developers/api-documentation/wnba#betting-metadata
    method: GET
- name: BettingEntityMetadataCollection
  endpoint:
    path: /developers/api-documentation/wnba#betting-metadata
    method: GET
- name: BettingEvent
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
- name: BettingMarket
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
- name: BettingOutcome
  endpoint:
    path: /developers/api-documentation/wnba#betting-outcome
    method: GET
- name: BoxScore
  endpoint:
    path: /developers/api-documentation/wnba#box-score-final
    method: GET
- name: betting_events_by_date
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-date
    method: GET
- name: betting_events_by_season
  endpoint:
    path: /developers/api-documentation/wnba#betting-events--by-season
    method: GET
- name: betting_markets_by_event
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-event
    method: GET
- name: betting_markets_by_game
  endpoint:
    path: /developers/api-documentation/wnba#betting-markets--by-game
    method: GET
- name: schedules
  endpoint:
    path: /developers/api-documentation/wnba#schedules
    method: GET
- name: games_by_date_final
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
- name: games_by_date_live_final
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-live--final
    method: GET
- name: scores_stats
  endpoint:
    path: /scores
    method: GET
- name: live_odds
  endpoint:
    path: /odds
    method: GET
- name: fantasy_stats
  endpoint:
    path: /fantasy
    method: GET
- name: PlayerSeason
  endpoint:
    path: /developers/api-documentation/wnba#player-season-stats
    method: GET
    data_selector: records
- name: Quarter
  endpoint:
    path: /developers/api-documentation/wnba#games--by-date-final
    method: GET
    data_selector: records
- name: SchedulesBasic
  endpoint:
    path: /developers/api-documentation/wnba#schedules-basic
    method: GET
    data_selector: records
- name: Core Sports Data
  endpoint:
    path: /scores-and-stats
    method: GET
- name: Betting Odds
  endpoint:
    path: /live-odds-api
    method: GET
- name: Fantasy Sports
  endpoint:
    path: /fantasy-sports-api
    method: GET
- name: News & Images
  endpoint:
    path: /news-and-images
    method: GET
- name: BAKER Predictive Engine
  endpoint:
    path: /baker-predictive-engine
    method: GET
- name: Widgets & Visualizations
  endpoint:
    path: /widgets
    method: GET
- name: Coded Content
  endpoint:
    path: /ai-sports-content-automation
    method: GET
- name: GRid
  endpoint:
    path: /grid
    method: GET
- name: Vault
  endpoint:
    path: /vault
    method: GET
- name: Historical Data
  endpoint:
    path: /historical-sports-data
    method: GET
- name: Historical Odds
  endpoint:
    path: /historical-odds
    method: GET
- name: season_current
  endpoint:
    path: /developers/api-documentation/wnba#season--current
    method: GET
    data_selector: records
    params: {}
- name: sportsbooks_active
  endpoint:
    path: /developers/api-documentation/wnba#sportsbooks--by-active
    method: GET
    data_selector: records
    params: {}
- name: stadiums
  endpoint:
    path: /developers/api-documentation/wnba#stadiums
    method: GET
    data_selector: records
    params: {}
- name: teams_all
  endpoint:
    path: /developers/api-documentation/wnba#team-profiles--all
    method: GET
    data_selector: records
    params: {}
- name: team_game_stats_final
  endpoint:
    path: /developers/api-documentation/wnba#box-score-final
    method: GET
    data_selector: records
    params: {}
- name: team_season_stats
  endpoint:
    path: /developers/api-documentation/wnba#team-season-stats
    method: GET
    data_selector: records
    params: {}
- name: team_stats
  endpoint:
    path: /api/v2025/team_stats
    method: GET
    data_selector: records
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
- name: event_coverage
  endpoint:
    path: /event/coverage
    method: GET
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
- name: fantasy_data
  endpoint:
    path: /fantasy/data
    method: GET
- name: news_images
  endpoint:
    path: /news/images
    method: GET
- name: Conference
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#conference
    method: GET
    data_selector: records
- name: Game
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#game
    method: GET
    data_selector: records
- name: Period
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#period
    method: GET
    data_selector: records
- name: ScheduleBasic
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#schedule-basic
    method: GET
    data_selector: records
- name: Season
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#season
    method: GET
    data_selector: records
- name: Team
  endpoint:
    path: /developers/api-documentation/ncaa-womens-basketball#team
    method: GET
    data_selector: records
- name: fantasy_data
  endpoint:
    path: /fantasy-data
    method: GET
    data_selector: records
- name: player_stats
  endpoint:
    path: /player-stats
    method: GET
    data_selector: records
- name: nba_scores
  endpoint:
    path: /nba/scores
    method: GET
- name: nba_player_stats
  endpoint:
    path: /nba/player-stats
    method: GET
- name: BettingEntityMetadata
  endpoint:
    path: /betting/entity/metadata
    method: GET
    data_selector: records
- name: BettingEntityMetadataCollection
  endpoint:
    path: /betting/entity/metadata/collection
    method: GET
    data_selector: records
- name: BettingResultingMetadata
  endpoint:
    path: /betting/resulting/metadata
    method: GET
    data_selector: records
- name: Competition
  endpoint:
    path: /competition
    method: GET
    data_selector: records
- name: Contestant
  endpoint:
    path: /contestant
    method: GET
    data_selector: records
- name: Discipline
  endpoint:
    path: /discipline
    method: GET
    data_selector: records
- name: Match
  endpoint:
    path: /match
    method: GET
    data_selector: records
- name: MatchOdd
  endpoint:
    path: /match/odd
    method: GET
    data_selector: records
- name: Period
  endpoint:
    path: /period
    method: GET
    data_selector: records
- name: Player
  endpoint:
    path: /player
    method: GET
    data_selector: records
- name: Round
  endpoint:
    path: /round
    method: GET
    data_selector: records
- name: Season
  endpoint:
    path: /season
    method: GET
    data_selector: records
- name: Tour
  endpoint:
    path: /developers/api-documentation/tennis#tours
    method: GET
- name: TourSeason
  endpoint:
    path: /developers/api-documentation/tennis#tours
    method: GET
- name: Venue
  endpoint:
    path: /developers/api-documentation/tennis#venues
    method: GET
- name: NFL
  endpoint:
    path: /nfl
    method: GET
- name: MLB
  endpoint:
    path: /mlb
    method: GET
- name: NBA
  endpoint:
    path: /nba
    method: GET
- name: NHL
  endpoint:
    path: /nhl
    method: GET
- name: College Football
  endpoint:
    path: /ncaa-football
    method: GET
- name: College Basketball
  endpoint:
    path: /ncaa-basketball
    method: GET
- name: Golf
  endpoint:
    path: /golf
    method: GET
- name: NASCAR
  endpoint:
    path: /nascar
    method: GET
- name: Soccer
  endpoint:
    path: /soccer
    method: GET
- name: UFC/MMA
  endpoint:
    path: /mma-ufc
    method: GET
- name: Tennis
  endpoint:
    path: /tennis
    method: GET
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    data_selector: articles
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: data
    params: {}
- name: stats
  endpoint:
    path: /stats
    method: GET
    data_selector: data
    params: {}
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
    data_selector: data
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
    data_selector: data
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: data
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: data
- name: SimulatedScores
  endpoint:
    path: /v3/nfl/scores/JSON/SimulatedScores
    method: GET
    data_selector: data
    params:
      numberOfPlays: '5'
- name: SimulatedBoxScoresV3
  endpoint:
    path: /v3/nfl/stats/JSON/SimulatedBoxScoresV3
    method: GET
    data_selector: data
    params:
      numberOfPlays: '5'
- name: SimulatedPlayByPlay
  endpoint:
    path: /v3/nfl/pbp/JSON/SimulatedPlayByPlay
    method: GET
    data_selector: data
    params:
      numberOfPlays: '5'
- name: Tournament
  endpoint:
    path: /v3/cbb/scores/JSON/Tournament
    method: GET
    data_selector: data
    params:
      season: sim
- name: team_player_rosters
  endpoint:
    path: /soccer/{season}/teams/{teamId}/players
    method: GET
    data_selector: players
- name: match_schedules
  endpoint:
    path: /soccer/{season}/schedules
    method: GET
    data_selector: matches
- name: team_player_rosters
  endpoint:
    path: /teams/{team_id}/players
    method: GET
    data_selector: players
- name: game_schedules
  endpoint:
    path: /games/schedules
    method: GET
    data_selector: games
- name: live_scores
  endpoint:
    path: /games/live
    method: GET
    data_selector: scores
- name: scores
  endpoint:
    path: /v4/scores
    method: GET
    data_selector: data
- name: players
  endpoint:
    path: /v4/players
    method: GET
    data_selector: data
- name: team_player_rosters
  endpoint:
    path: /v1/nfl/teams
    method: GET
    data_selector: teams
- name: live_scores
  endpoint:
    path: /v1/nfl/scores
    method: GET
    data_selector: games
- name: player_stats
  endpoint:
    path: /v1/nfl/players
    method: GET
    data_selector: players
- name: standings
  endpoint:
    path: /standings
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: stadiums
  endpoint:
    path: /stadiums
    method: GET
- name: coaches
  endpoint:
    path: /coaches
    method: GET
- name: referees
  endpoint:
    path: /referees
    method: GET
- name: schedules
  endpoint:
    path: /schedules
    method: GET
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: play_by_play
  endpoint:
    path: /play-by-play
    method: GET
- name: player_stats
  endpoint:
    path: /player-stats
    method: GET
- name: rosters
  endpoint:
    path: /rosters
    method: GET
- name: injuries
  endpoint:
    path: /injuries
    method: GET
- name: depth_charts
  endpoint:
    path: /depth-charts
    method: GET
- name: live_odds
  endpoint:
    path: /live-odds
    method: GET
- name: pre_game_odds
  endpoint:
    path: /pre-game-odds
    method: GET
- name: props
  endpoint:
    path: /props
    method: GET
- name: futures
  endpoint:
    path: /futures
    method: GET
- name: predictions
  endpoint:
    path: /predictions
    method: GET
- name: settlement_verification
  endpoint:
    path: /settlement-verification
    method: GET
- name: odds_resulting
  endpoint:
    path: /odds-resulting
    method: GET
- name: projections
  endpoint:
    path: /projections
    method: GET
- name: salaries_slates
  endpoint:
    path: /salaries-slates
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
- name: images
  endpoint:
    path: /images
    method: GET
- name: Player Headshots
  endpoint:
    path: /developers/coverage-guide/news-images/player-headshots
    method: GET
- name: nfl_headshots
  endpoint:
    path: https://sportsdata.io/developers/api-documentation/nfl#player-headshots
    method: GET
- name: mlb_headshots
  endpoint:
    path: https://sportsdata.io/developers/api-documentation/mlb#player-headshots
    method: GET
- name: nba_headshots
  endpoint:
    path: https://sportsdata.io/developers/api-documentation/nba#player-headshots
    method: GET
- name: nhl_headshots
  endpoint:
    path: https://sportsdata.io/developers/api-documentation/nhl#player-headshots
    method: GET
- name: timeframes
  endpoint:
    path: /timeframes
    method: GET
    data_selector: data
    params: {}
- name: team_player_rosters
  endpoint:
    path: /teams/players
    method: GET
    data_selector: players
- name: venue_referees
  endpoint:
    path: /venues/referees
    method: GET
    data_selector: venues
- name: standings_rankings_brackets
  endpoint:
    path: /standings/rankings
    method: GET
    data_selector: standings
- name: schedules_game_day_info
  endpoint:
    path: /schedules/game_day_info
    method: GET
    data_selector: schedules
- name: scores_game_state
  endpoint:
    path: /scores/game_state
    method: GET
    data_selector: scores
- name: team_player_stats
  endpoint:
    path: /stats/team_player
    method: GET
    data_selector: stats
- name: injuries
  endpoint:
    path: /injuries
    method: GET
    data_selector: injuries
- name: live_odds_feeds
  endpoint:
    path: /live/odds
    method: GET
    data_selector: odds
- name: props_futures
  endpoint:
    path: /props/futures
    method: GET
    data_selector: props
- name: matchups_trends_splits
  endpoint:
    path: /matchups/trends
    method: GET
    data_selector: matchups
- name: coded_content
  endpoint:
    path: /content/coded
    method: GET
    data_selector: content
- name: editorial_news_feeds
  endpoint:
    path: /news/editorial
    method: GET
    data_selector: news
- name: player_headshots
  endpoint:
    path: /players/headshots
    method: GET
    data_selector: headshots
- name: golf_rankings
  endpoint:
    path: /golf/rankings
    method: GET
    data_selector: rankings
- name: golf_players
  endpoint:
    path: /golf/players
    method: GET
    data_selector: players
- name: golf_courses
  endpoint:
    path: /golf/courses
    method: GET
    data_selector: courses
- name: golf_tournaments
  endpoint:
    path: /golf/tournaments
    method: GET
    data_selector: tournaments
- name: team_player_roster
  endpoint:
    path: /api/v1/mlb/teams/rosters
    method: GET
    data_selector: rosters
- name: game_scores
  endpoint:
    path: /api/v1/mlb/games/scores
    method: GET
    data_selector: scores
- name: player_stats
  endpoint:
    path: /api/v1/mlb/players/stats
    method: GET
    data_selector: stats
- name: Historical NFL Odds
  endpoint:
    path: /historical-nfl-odds
    method: GET
    data_selector: odds
    params: {}
- name: Historical MLB Odds
  endpoint:
    path: /historical-mlb-odds
    method: GET
    data_selector: odds
    params: {}
- name: Historical NBA Odds
  endpoint:
    path: /historical-nba-odds
    method: GET
    data_selector: odds
    params: {}
- name: competition
  endpoint:
    path: /competitions
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: results
  endpoint:
    path: /results
    method: GET
- name: game_day_coverage
  endpoint:
    path: /api/gameday
    method: GET
    data_selector: data
    params: {}
- name: historical_data
  endpoint:
    path: /api/historical
    method: GET
    data_selector: data
    params: {}
- name: game_day_info
  endpoint:
    path: /api/game_day_info
    method: GET
- name: live_scores
  endpoint:
    path: /api/live_scores
    method: GET
- name: historical_data
  endpoint:
    path: /api/historical_data
    method: GET
- name: core_sports_data
  endpoint:
    path: /scores-and-stats
    method: GET
    data_selector: records
    params: {}
- name: betting_odds
  endpoint:
    path: /live-odds-api
    method: GET
    data_selector: records
    params: {}
- name: Game Day Coverage
  endpoint:
    path: /v1/gameday
    method: GET
    data_selector: gameDayData
    params: {}
- name: Historical Data
  endpoint:
    path: /v1/historical
    method: GET
    data_selector: historicalData
    params: {}
- name: player_feeds
  endpoint:
    path: /developers/coverage-guide/player-feeds/depth-charts-lineups-injuries
    method: GET
    data_selector: records
- name: wnba_odds
  endpoint:
    path: /developers/coverage-guide/fantasy-feeds/projections
    method: GET
    data_selector: records
- name: cbb_coverage
  endpoint:
    path: /sportsdataios-2025-cbb-confirmed-coverage
    method: GET
    data_selector: records
- name: ufc_mma_coverage
  endpoint:
    path: /sportsdataios-2025-ufcmma-confirmed-coverage
    method: GET
    data_selector: records
- name: soccer_coverage
  endpoint:
    path: /sportsdataios-2025-soccer-confirmed-coverage
    method: GET
    data_selector: records
- name: game_day_info
  endpoint:
    path: /game_day_info
    method: GET
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: player_stats
  endpoint:
    path: /player_stats
    method: GET
- name: team_stats
  endpoint:
    path: /team_stats
    method: GET
- name: game_day_info
  endpoint:
    path: /game_day_info
    method: GET
    data_selector: data
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: data
- name: team_stats
  endpoint:
    path: /team_stats
    method: GET
    data_selector: data
- name: player_stats
  endpoint:
    path: /player_stats
    method: GET
    data_selector: data
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
    data_selector: data
    params: {}
- name: event_coverage
  endpoint:
    path: /event/coverage
    method: GET
    data_selector: data
    params: {}
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
    data_selector: data
    params: {}
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: data
    params: {}
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: data
    params: {}
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: stats
  endpoint:
    path: /stats
    method: GET
- name: odds
  endpoint:
    path: /odds
    method: GET
- name: projections
  endpoint:
    path: /projections
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
- name: images
  endpoint:
    path: /images
    method: GET
- name: fighter_stats
  endpoint:
    path: /api/fighter_stats
    method: GET
    data_selector: data
    params: {}
- name: fight_history
  endpoint:
    path: /api/fight_history
    method: GET
    data_selector: data
    params: {}
- name: live_scores
  endpoint:
    path: /api/live_scores
    method: GET
    data_selector: data
    params: {}
- name: Core Sports Data
  endpoint:
    path: /scores-and-stats
    method: GET
- name: Betting Odds
  endpoint:
    path: /live-odds-api
    method: GET
- name: Fantasy Sports
  endpoint:
    path: /fantasy-sports-api
    method: GET
- name: News & Images
  endpoint:
    path: /news-and-images
    method: GET
- name: standings
  endpoint:
    path: /v1/soccer/standings
    method: GET
- name: teams
  endpoint:
    path: /v1/soccer/teams
    method: GET
- name: schedules
  endpoint:
    path: /v1/soccer/schedules
    method: GET
- name: scores
  endpoint:
    path: /v1/soccer/scores
    method: GET
- name: scores
  endpoint:
    path: /v4/scores
    method: GET
    data_selector: data
    params: {}
- name: golf_coverage
  endpoint:
    path: /golf/coverage
    method: GET
    data_selector: data
- name: cfb_coverage
  endpoint:
    path: /cfb/coverage
    method: GET
    data_selector: data
- name: nfl_coverage
  endpoint:
    path: /nfl/coverage
    method: GET
    data_selector: data
- name: schedules_game_day_info
  endpoint:
    path: /developers/coverage-guide/event-feeds/schedules-game-day-info
    method: GET
- name: scores_game_state
  endpoint:
    path: /developers/coverage-guide/event-feeds/scores-game-state
    method: GET
- name: team_player_stats
  endpoint:
    path: /developers/coverage-guide/event-feeds/team-player-stats
    method: GET
- name: play_by_play
  endpoint:
    path: /developers/coverage-guide/event-feeds/play-by-play
    method: GET
- name: game_lines
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: props
  endpoint:
    path: /developers/coverage-guide/betting-feeds/props
    method: GET
- name: futures
  endpoint:
    path: /developers/coverage-guide/betting-feeds/futures
    method: GET
- name: predictions_best_bets
  endpoint:
    path: /developers/coverage-guide/betting-feeds/predictions-best-bets
    method: GET
- name: matchups_trends_splits
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
- name: core_sports_data
  endpoint:
    path: /scores-and-stats
    method: GET
- name: betting_odds
  endpoint:
    path: /live-odds-api
    method: GET
- name: fantasy_sports
  endpoint:
    path: /fantasy-sports-api
    method: GET
- name: news_images
  endpoint:
    path: /news-and-images
    method: GET
- name: coded_content
  endpoint:
    path: /ai-sports-content-automation
    method: GET
- name: grid
  endpoint:
    path: /grid
    method: GET
- name: vault
  endpoint:
    path: /vault
    method: GET
- name: historical_data
  endpoint:
    path: /historical-sports-data
    method: GET
- name: historical_odds
  endpoint:
    path: /historical-odds
    method: GET
- name: competition_coverage
  endpoint:
    path: /developers/coverage-guide/competition-feeds
    method: GET
    data_selector: competition
    params: {}
- name: event_coverage
  endpoint:
    path: /developers/coverage-guide/event-feeds
    method: GET
    data_selector: events
    params: {}
- name: betting_coverage
  endpoint:
    path: /developers/coverage-guide/betting-feeds
    method: GET
    data_selector: betting
    params: {}
- name: fantasy_data
  endpoint:
    path: /developers/coverage-guide/fantasy-feeds
    method: GET
    data_selector: fantasy
    params: {}
- name: news_images
  endpoint:
    path: /developers/coverage-guide/news-images
    method: GET
    data_selector: news_images
    params: {}
- name: core_sports_data
  endpoint:
    path: /scores-stats
    method: GET
- name: fantasy_sports
  endpoint:
    path: /fantasy-sports
    method: GET
- name: betting_odds
  endpoint:
    path: /live-odds
    method: GET
- name: news_images
  endpoint:
    path: /news-images
    method: GET
- name: coverage
  endpoint:
    path: /confirmed-coverage
    method: GET
    data_selector: records
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
- name: news_articles
  endpoint:
    path: /articles
    method: GET
    data_selector: articles
    params: {}
- name: MMA Data
  endpoint:
    path: /2025/mma/data
    method: GET
- name: Live Odds
  endpoint:
    path: /2025/mma/live-odds
    method: GET
- name: Historical Fighter Stats
  endpoint:
    path: /2025/mma/historical-fighter-stats
    method: GET
- name: Fight Logs
  endpoint:
    path: /2025/mma/fight-logs
    method: GET
- name: Betting Odds Archive
  endpoint:
    path: /2025/mma/betting-odds-archive
    method: GET
- name: team_player_rosters
  endpoint:
    path: /soccer/team_player_rosters
    method: GET
    data_selector: data
- name: standings_rankings
  endpoint:
    path: /soccer/standings_rankings
    method: GET
    data_selector: data
- name: schedules_game_day_info
  endpoint:
    path: /soccer/schedules_game_day_info
    method: GET
    data_selector: data
- name: scores_game_state
  endpoint:
    path: /soccer/scores_game_state
    method: GET
    data_selector: data
- name: betting_odds
  endpoint:
    path: /soccer/betting_odds
    method: GET
    data_selector: data
- name: fantasy_projections
  endpoint:
    path: /soccer/fantasy_projections
    method: GET
    data_selector: data
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
    data_selector: data
- name: event_coverage
  endpoint:
    path: /event/coverage
    method: GET
    data_selector: data
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
    data_selector: data
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: data
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: data
- name: team_player_rosters
  endpoint:
    path: /teams/players
    method: GET
    data_selector: players
- name: game_schedules
  endpoint:
    path: /games/schedules
    method: GET
    data_selector: schedules
- name: live_scores
  endpoint:
    path: /games/live_scores
    method: GET
    data_selector: scores
- name: final_scores
  endpoint:
    path: /games/final_scores
    method: GET
    data_selector: final_scores
- name: player_injuries
  endpoint:
    path: /players/injuries
    method: GET
    data_selector: injuries
- name: betting_odds
  endpoint:
    path: /betting/odds
    method: GET
    data_selector: odds
- name: team_player_rosters
  endpoint:
    path: /teams/rosters
    method: GET
    data_selector: data
- name: venue_referees
  endpoint:
    path: /venues/referees
    method: GET
    data_selector: data
- name: standings_rankings_brackets
  endpoint:
    path: /standings/rankings/brackets
    method: GET
    data_selector: data
- name: game_day_info
  endpoint:
    path: /games/schedules
    method: GET
    data_selector: data
- name: scores_game_state
  endpoint:
    path: /games/scores
    method: GET
    data_selector: data
- name: team_player_stats
  endpoint:
    path: /games/team_player_stats
    method: GET
    data_selector: data
- name: final_scores_stats
  endpoint:
    path: /games/final_scores
    method: GET
    data_selector: data
- name: injury_reports
  endpoint:
    path: /teams/injuries
    method: GET
    data_selector: data
- name: live_odds_feeds
  endpoint:
    path: /odds/live
    method: GET
    data_selector: data
- name: props_futures
  endpoint:
    path: /odds/props_futures
    method: GET
    data_selector: data
- name: matchups_trends_splits
  endpoint:
    path: /odds/matchups_trends
    method: GET
    data_selector: data
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: data
- name: CFB Coverage
  endpoint:
    path: /developers/coverages/ncaa-football
    method: GET
- name: golf_coverage
  endpoint:
    path: /golf/coverage
    method: GET
- name: golf_tournament_details
  endpoint:
    path: /golf/tournaments
    method: GET
    data_selector: tournaments
- name: golf_player_stats
  endpoint:
    path: /golf/players
    method: GET
    data_selector: players
- name: golf_courses
  endpoint:
    path: /golf/courses
    method: GET
    data_selector: courses
- name: golf_live_scores
  endpoint:
    path: /golf/live
    method: GET
    data_selector: scores
- name: scores
  endpoint:
    path: /api/scores
    method: GET
- name: stats
  endpoint:
    path: /api/stats
    method: GET
- name: team_player_rosters
  endpoint:
    path: /api/nascar/teams-players-rosters
    method: GET
    data_selector: data
- name: venue_referees
  endpoint:
    path: /api/nascar/venue-referees
    method: GET
    data_selector: data
- name: standings_rankings_brackets
  endpoint:
    path: /api/nascar/standings-rankings-brackets
    method: GET
    data_selector: data
- name: schedules_game_day_info
  endpoint:
    path: /api/nascar/schedules-game-day-info
    method: GET
    data_selector: data
- name: scores_game_state
  endpoint:
    path: /api/nascar/scores-game-state
    method: GET
    data_selector: data
- name: team_player_stats
  endpoint:
    path: /api/nascar/team-player-stats
    method: GET
    data_selector: data
- name: play_by_play
  endpoint:
    path: /api/nascar/play-by-play
    method: GET
    data_selector: data
- name: driver_projections
  endpoint:
    path: /api/nascar/driver-projections
    method: GET
    data_selector: data
- name: news_feeds
  endpoint:
    path: /api/nascar/news-feeds
    method: GET
    data_selector: data
- name: game_data
  endpoint:
    path: /v1/games
    method: GET
    data_selector: games
- name: player_prop_lines
  endpoint:
    path: /api/player_props
    method: GET
    data_selector: props
    params: {}
- name: historical_data
  endpoint:
    path: /api/historical_data
    method: GET
    data_selector: history
    params: {}
- name: teams_players_rosters
  endpoint:
    path: /teams/players/rosters
    method: GET
    data_selector: rosters
- name: standings_rankings_playoffs
  endpoint:
    path: /standings/rankings/playoffs
    method: GET
    data_selector: standings
- name: schedules_game_day_info
  endpoint:
    path: /schedules/game_day_info
    method: GET
    data_selector: schedules
- name: scores_game_state
  endpoint:
    path: /scores/game_state
    method: GET
    data_selector: scores
- name: player_performance_data
  endpoint:
    path: /player/performance_data
    method: GET
    data_selector: performance
- name: betting_data
  endpoint:
    path: /betting/data
    method: GET
    data_selector: betting
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: news
- name: historical_data
  endpoint:
    path: /historical/data
    method: GET
    data_selector: historical
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
    data_selector: coverage_info
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
    data_selector: betting_info
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: news_content
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: historical_data
- name: competition_coverage
  endpoint:
    path: /competition/coverage
    method: GET
    data_selector: data
- name: event_coverage
  endpoint:
    path: /event/coverage
    method: GET
    data_selector: data
- name: betting_coverage
  endpoint:
    path: /betting/coverage
    method: GET
    data_selector: data
- name: fantasy_coverage
  endpoint:
    path: /fantasy/coverage
    method: GET
    data_selector: data
- name: news_images
  endpoint:
    path: /news/images
    method: GET
    data_selector: data
- name: vault
  endpoint:
    path: /vault
    method: GET
    data_selector: data
- name: standings
  endpoint:
    path: /scores-and-stats
    method: GET
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: players
  endpoint:
    path: /players
    method: GET
- name: venues
  endpoint:
    path: /venues
    method: GET
- name: schedules
  endpoint:
    path: /schedules
    method: GET
- name: scores
  endpoint:
    path: /scores
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: game_lines
  endpoint:
    path: /game-lines
    method: GET
- name: golf_coverage
  endpoint:
    path: /golf/coverage
    method: GET
    data_selector: data
    params: {}
- name: cfb_coverage
  endpoint:
    path: /cfb/coverage
    method: GET
    data_selector: data
    params: {}
- name: nfl_coverage
  endpoint:
    path: /nfl/coverage
    method: GET
    data_selector: data
    params: {}
- name: depth_charts_lineups_injuries
  endpoint:
    path: /depth/charts/lineups/injuries
    method: GET
- name: game_lines
  endpoint:
    path: /developers/coverage-guide/betting-feeds/game-lines
    method: GET
- name: props
  endpoint:
    path: /developers/coverage-guide/betting-feeds/props
    method: GET
- name: futures
  endpoint:
    path: /developers/coverage-guide/betting-feeds/futures
    method: GET
- name: predictions_best_bets
  endpoint:
    path: /developers/coverage-guide/betting-feeds/predictions-best-bets
    method: GET
- name: matchups_trends_splits
  endpoint:
    path: /developers/coverage-guide/betting-feeds/matchups-trends-splits
    method: GET
- name: player_news
  endpoint:
    path: /developers/coverage-guide/news-images/player-news-notes
    method: GET
    data_selector: records
- name: previews
  endpoint:
    path: /developers/coverage-guide/news-images/previews-recaps-breaking-news
    method: GET
    data_selector: records
- name: player_headshots
  endpoint:
    path: /developers/coverage-guide/news-images/player-headshots
    method: GET
    data_selector: records
notes:
- 'Call Interval: 1 Hour for most endpoints, 10 seconds for Fight endpoints, 30 seconds
  for Event Odds endpoints.'
- 'Call Interval: 1 Hour for most endpoints, 10 Seconds for Fight endpoints, 30 Seconds
  for Event Odds endpoints.'
- 'Call Interval: 10 Minutes'
- 'Call Interval: 1 Minute'
- 'Call Interval: 10 Minutes for most endpoints'
- 'Call Interval: 1 Minute for Betting Markets - by Market Type'
- Unlimited API calls means never worrying about hitting a quota
- The most powerful and adaptive Predictive Engine in the sports market.
- Simulates every game 10,000 times down to the play level.
- A standardized set of unique IDs designed to simplify the process of mapping and
  referencing data across the sports technology ecosystem.
- Provided at no cost, this service enables efficient collaboration and faster development
  for businesses and developers.
- Access a comprehensive suite of historical sports data, including rosters, schedules,
  box scores, and depth charts.
- Completely Free, Forever
- AI Content Automation Platform is built just for sports and leverages AI sports
  content to create custom, unique, and engaging material for brands.
- Data in the free trial is scrambled for demonstration purposes. Live, accurate data
  is available on paid plans.
- API responses may contain null values for certain fields.
- Rate limits apply to all API requests.
- API calls have specific call intervals, e.g., 5 minutes for standings.
- USA Today/IMAGN cropped action headshots for all active NFL players, delivered shortly
  after the season starts.
- Requires API key for access.
- Data may be subject to changes based on the season.
- Requires API key for authentication
- Data is updated in real-time during game events
- The documentation includes various player statistics.
- This field is expected to be NULL
- 'The unique ID of the team that the player is on Note: if the player is a free agent;
  this field is NULL'
- The unique ID of this opponent team
- The date of the game (in US Eastern Time)
- The date and time of the game (in US Eastern Time)
- A globally unique ID for this game. This value is guaranteed to be unique across
  all sports/leagues
- A globally unique ID for this team. This value is guaranteed to be unique across
  all sports/leagues
- A globally unique ID for this team's opponent. This value is guaranteed to be unique
  across all sports/leagues
- Unique ID of the score/game
- This field is deprecated
- 'Time of last sync (in US Eastern time) Note: this does not indicate that stats
  changed'
- This field is expected to be 0
- Fantasy points based on FanDuel's scoring system by the player in the red zone in
  the game
- Fantasy points based on DraftKings' scoring system by the player in the red zone
  in the game
- The player's salary for Yahoo daily fantasy contests
- Requires authentication setup with SportsDataIO.
- Data is expected to be in US Eastern Time.
- Ensure the API key is included in every request header.
- Total tackles for loss differential by the team in the game
- Total sack differential of the team in the game
- Total percentage of plays defended that resulted in a tackle for loss by the team
  in the game
- Fields may be NULL for bye weeks or if the player is a free agent.
- The player's current injury status; in the form of likelihood that player plays
  (Probable; Questionable; Doubtful; Out)
- The body part that is injured for the player (Knee; Groin; Calf; Hamstring; etc.)
- The day that the player's injury started or was first discovered
- A brief description of the player's injury and expected availability
- 'Whether the player has been declared inactive. This value is updated in the hours
  leading up to game start time; as teams announce their inactive players. Note: This
  is only updated for offensive skill position players (QB; RB; WR; TE)'
- 'The unique ID of the team that the player is on. Note: If the player is a free
  agent; this field is NULL'
- The details of the scoring plays this player in the red zone recorded in the game
- 'Time of last sync (in US Eastern time). Note: this does not indicate that stats
  changed'
- This API provides statistics for players across different seasons.
- The PlayerID remains the same throughout a player's career.
- Requires setup of connected app in SportsDataIO
- Some endpoints may have rate limits
- Data includes various statistics for NFL teams.
- Each team member will need to have an account with SportsDataIO in order to be added.
- API updates data at various intervals based on the endpoint.
- News is being written, edited, and published around-the-clock (24-hour news cycle).
- Rankings are updated throughout the year at the conclusion of each tournament.
- Players on tour are updated at the beginning of each tour season start and kept
  up to date throughout the calendar year.
- Odds are made available when sportsbooks publish opening lines, this varies by tournament
  and player field.
- Fantasy projections are available per tournament.
- Ownership projections are updated hourly and include a 'last update' field.
- We recommend using the Box Scores by Date Delta API for real-time integration.
- The API will always return the players' full stats for the game up until that point
  in time.
- 'Call Interval: 5 Minutes for most endpoints'
- Subscription Required for all endpoints
- 'Call Interval: 5 Seconds'
- 'Call Interval: 1 Minute for game stats, 5 Minutes for team stats.'
- 'Call Interval: 5 Minutes'
- 'Return Type: PlayerGame[] and TeamGame[]'
- 'Call Interval: Varies by endpoint'
- 'Call Interval: 5 Seconds for In-Game Odds, 15 Minutes for Line Movement, 30 Seconds
  for Pre-Game Odds'
- 'Call Interval: 15 Minutes for Betting Events - by Date'
- 'Call Interval: 1 Hour for Betting Events - by Season'
- 'Call Interval: 10 Minutes for Betting Markets endpoints'
- 'Call Interval: 10 Minutes for Betting Player Props'
- 'Call Interval: 15 Minutes for Betting Market'
- 'Call Interval: 30 Seconds for Betting Results'
- Call intervals vary by endpoint
- 'Call Interval: 3 Minutes'
- 'Call Interval: 1 Hour'
- 'Call Interval: 5 Minutes for Standings, 15 Minutes for Players Active, 1 Hour for
  Players Free Agents, 4 Hours for Teams and Schedules'
- 'Call Interval: Varies by endpoint, generally 1-15 minutes depending on the endpoint.'
- Uses Box Scores by Date API for real-time integration
- API returns full stats for the game up until that point in time
- 'Call Interval: 15 Minutes for Betting Events by Date.'
- 'Call Interval: 1 Hour for Betting Events by Season.'
- 'Call Interval: 10 Minutes for Betting Markets.'
- 'Call Interval: 15 Minutes'
- Check the rate limits for API calls.
- Data is updated in real-time during game events.
- 'Call Interval: 1 Hour for Players endpoints'
- 'Call Interval: 4 Hours for Teams endpoints'
- 'Call Interval: 15 Minutes for Betting Metadata'
- 'Call Interval: 30 Seconds'
- 'Call Interval: 15 Minutes for Betting Events by Date, 1 Hour for Betting Events
  by Season, 10 Minutes for Betting Markets endpoints.'
- Subscription is required for all endpoints.
- 'Call Interval: 1 Minute for Final endpoints'
- 'Call Interval: 5 Minutes for Team Game Stats and Season Stats'
- 'Call Interval: 15 Minutes for Player Season Stats'
- 'Call Interval: 1 Hour for Player Game Logs'
- 'Call Interval: 10 Minutes for player props'
- 'Call Interval: 30 Seconds for Betting Market Results'
- All Betting Market data for events older than 30 days old is stored in Archive endpoints
- Only returns player statistics that have changed in the last X minutes.
- Call Interval varies by endpoint and can be as frequent as every 3 seconds.
- 'Call Interval: 5 Seconds for In-Game Odds'
- 'Call Interval: 15 Minutes for Line Movement'
- 'Call Interval: 1 Minute for Period Game Odds'
- 'Call Interval: 30 Seconds for Pre-Game Odds'
- 'Call Interval: 5 Minutes for Standings and Schedules endpoints.'
- 'Call Interval: 15 Minutes for Players Active and Free Agents endpoints.'
- 'Call Interval: 1 Hour for Sportsbooks endpoint.'
- 'Call Interval: 10 Minutes for Betting Markets endpoints.'
- 'Call Interval: 1 Minute for Betting Markets by Market Type.'
- 'Call Interval: 1 Minute for BettingMarketsByMarketType, 10 Minutes for BettingPlayerPropsByGameID,
  15 Minutes for BettingMarket and BettingMarketResults'
- Returns all statistics for the specified game, including team and player stats,
  after the game has been completed.
- Returns all statistics for all games on the specified date.
- Data is updated following the most recent games.
- 'Call Interval: 1 Hour for Betting Futures'
- 'Call Interval: 15 Minutes for Betting Splits'
- 'Call Interval: 5 Minutes for Betting Trends'
- 'Call Interval: 5 Minutes for Player Game Stats'
- 'Call Interval: 5 Minutes for Fantasy Points'
- 'Call Interval: 3 Minutes for News'
- 'Call Interval: 4 Hours'
- 'Call Interval: 5 Seconds for In-Game Odds endpoints, 15 Minutes for Line Movement
  endpoints, 30 Seconds for Pre-Game Odds endpoints.'
- Due to stat corrections, box scores are subject to change after the game is Final.
- 'Call Interval: 1 Minute for most endpoints.'
- Defensive player stats update 1-2 hours after the game has ended.
- 'Call Interval: 1 Minute for BettingPlayerPropsByGameID, 10 Minutes for BettingMarket
  and BettingResults'
- 'Call Interval: 1 Hour for active players and 3 Minutes for injured players.'
- Call Interval for Betting Futures endpoints is 1 Hour
- Call Interval for Betting Splits endpoints is 15 Minutes
- Call Interval for Trends endpoints is 5 Minutes
- Call Interval for Fantasy Game Stats and DFS Slates endpoints is 5 Minutes
- 'Return Type: News[]'
- 'Call Interval: 5 Seconds for In-Game Odds.'
- 'Call Interval: 15 Minutes for Line Movement endpoints.'
- 'Call Interval: 1 Minute for Period Game Odds endpoints.'
- 'Call Interval: 30 Seconds for Pre-Game Odds endpoints.'
- Call Interval for Betting Events is 15 Minutes
- Call Interval for Betting Markets is 10 Minutes
- Call Interval for Betting Markets by Market Type is 1 Minute
- Call intervals vary from 30 seconds to 15 minutes depending on the endpoint.
- Call interval for most endpoints is 5 minutes.
- Some endpoints have longer call intervals (e.g., 1 hour, 4 hours).
- 'Call Interval: 1 Hour for certain endpoints'
- 'Call Interval: 15 Minutes for BettingSplitsByGameId'
- 'Call Interval: 5 Minutes for MatchupTrends and TeamTrends'
- 'Call Interval: 1 Minute for most endpoints, 5 Minutes for Player Season Stats and
  Team Season Stats.'
- 'Call Interval: 4 Hours for League Hierarchy and Stadiums, 5 Minutes for Players
  By Active, Team Profiles - All, and Schedules.'
- 'Call Interval: 5 Seconds for Games by Date Final and Games by Date Live & Final,
  5 Minutes for Games by Season Final, 1 Minute for Tournament Hierarchy.'
- 'Call Interval for Play By Play endpoints: 1 Minute'
- 'Call Interval for Goalie Depth Charts: 5 Minutes'
- 'Call Interval for Line Combinations: 15 Minutes'
- 'Call Interval for Player Details: 1 Hour'
- 'Call Interval for Injured Players: 1 Minute'
- 'Call Interval for Starting Goaltenders: 3 Minutes'
- 'Call Interval for Transactions: 1 Minute'
- Call intervals vary per endpoint, generally between 5 seconds to 1 hour.
- 'Call Interval: 1 Hour for players_active and players_by_team'
- 'Call Interval: 3 Minutes for players_injured'
- 'Call Interval: 15 Minutes for BettingEventsByDate'
- 'Call Interval: 1 Hour for BettingEventsBySeason'
- 'Call Interval: 10 Minutes for BettingMarkets endpoints'
- 'Call Interval: 1 Minute for BettingMarketsByMarketType'
- 'Call Interval: 10 Minutes for BettingPlayerPropsByGameID'
- 'Call Interval: 15 Minutes for BettingMarket and BettingResultsByMarket'
- 'Return Type: GameInfo[]'
- 'Call Interval for Betting Events - by Date: 15 Minutes'
- 'Call Interval for Betting Events - by Season: 1 Hour'
- 'Call Interval for Betting Markets - by Event: 10 Minutes'
- 'Call Interval for Betting Markets - by Game: 10 Minutes'
- 'Call Interval for Betting Markets - by Market Type: 10 Minutes'
- 'Call Interval: 1 Minute for Betting Markets, 10 Minutes for Player Props, 15 Minutes
  for Market Results'
- 'Call Interval: 4 Hours for most endpoints.'
- 'Call Interval: 1 Hour for Active Sportsbook endpoint.'
- 'Call Interval: 5 Minutes for several endpoints.'
- 'Call Interval: 30 Seconds for In-Play, 1 Minute for Tournament Odds, 5 Minutes
  for Line Movement'
- 'Return Type: BettingMarket[]'
- 'Call Interval: 1 Minute for Betting Markets, 10 Minutes for Player Props, 15 Minutes
  for Market Details, 30 Seconds for Results'
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Driver may return nulls in deeply nested fields
- 'Call Interval: 1 Hour for Futures endpoints.'
- 'Call Interval: 15 Minutes for Betting Splits by Game.'
- 'Call Interval: 5 Minutes for Trends endpoints.'
- 'Call Interval: 1 Hour for most endpoints'
- 'Call Interval: 5 Minutes for Schedules'
- 'Call Interval: 30 Seconds for Leaderboard endpoints'
- 'Call Interval: 1 Minute for Race Odds endpoints'
- 'Call Interval: 4 Hours for League Hierarchy, Team Profiles, and Stadiums.'
- 'Call Interval: 5 Minutes for Players by Active, Players Basic by Team, and Team
  Schedule.'
- 'Call Interval: 15 Minutes for Betting Metadata.'
- 'Call Interval: 1 Hour for Active Sportsbooks.'
- 'Call Interval: 10 Minutes for Betting Markets by Event.'
- 'Call Interval: 10 Minutes for Betting Markets by Race.'
- 'Call Interval: 5 Minutes for Projected Player Race Stats by Race.'
- 'Call Interval: 5 Minutes for Fantasy Points by Race.'
- 'Call Interval: 5 Seconds for most endpoints'
- 'Call Interval: 1 Minute for Tournament Hierarchy'
- 'Call Interval: 1 Minute for most endpoints, 5 Minutes for some.'
- Returns are subject to change after the game is Final.
- 'Call Interval: 4 Hours for Areas, Competitions, Venues, Team Profiles by Competition'
- 'Call Interval: 1 Hour for Competitions, Active Memberships, Recently Changed Memberships,
  Active Sportsbooks'
- 'Call Interval: 5 Minutes for Player Profiles by Team'
- 'Call Interval: 1 Hour for Players and by Team, 3 Minutes for Injured Players.'
- Call Interval for BoxScore and BoxScoresByDate is 1 Minute.
- Call Interval for PlayerGameStatsByDateFinal is 5 Minutes.
- Call Interval for TeamGameStatsByDateFinal and TeamSeasonStats is 5 Minutes.
- Call Interval for BoxScoresDeltaByDate is 5 Seconds.
- 'Call Interval: 5 Minutes for Lineups, 3 Minutes for Injured Players, 1 Hour for
  Players by Team'
- 'Call Interval: 5 Seconds for In-Game Odds, 15 Minutes for Line Movement, 30 Seconds
  for Pre-Game Odds.'
- 'Call Interval: 15 Minutes for Betting Metadata, 1 Hour for Player and Tournament
  data, 5 Minutes for Scores.'
- 'Call Interval: 5 Minutes for PlayerGameProjectionStatsByDate and FantasyGameStatsByDate,
  15 Minutes for DfsSlatesByDate and UpcomingDfsSlatesByCompetition'
- 'Call Interval: 10 Minutes for Betting Markets by Event [Sportsbook Group].'
- 'Call Interval: 10 Minutes for Betting Markets by Tournament.'
- 'Call Interval: 10 Minutes for Betting Markets by Tournament [Sportsbook Group].'
- 'Call Interval: 10 Minutes for Betting Player Props by Tournament [Sportsbook Group].'
- 'Call Interval: 4 Hours for Teams, Stadiums'
- 'Call Interval: 5 Minutes for Schedules, Current Season'
- 'Call Interval: 5 Seconds for Are Games In Progress, Games by Date'
- Returns data for games after completion.
- Subscription required for access.
- 'Call Interval: 1 Hour for most endpoints.'
- Subscription key is required for all calls.
- 'Return Type: BettingMarket'
- 'Call Interval: 5 Seconds for game-related endpoints'
- 'Call Interval: 4 Hours for initial endpoints'
- 'Call Interval: 1 Minute for most endpoints'
- 'Call Interval: 15 Minutes for Match Odds Line Movement'
- Return Type may include Game[], ScoreBasic[], ScheduleBasic[], etc.
- All dates & times are in US Eastern Time.
- Ensure to keep the API key secure and not hardcoded in source code.
- Data is updated in real-time during games.
- Ensure to handle potential delays in data updates.
- Data may vary by season and game status
- 'Call Interval: 5 Minutes for some endpoints'
- 'Call Interval: 15 Minutes for some endpoints'
- 'Call Interval: 5 Seconds for Games endpoints'
- 'Call Interval: 4 Hours for Teams and Stadiums endpoints'
- 'Call Interval: 1 Hour for Active Sportsbooks endpoint'
- 'Call Interval: 5 Minutes for Current Season endpoint'
- The player's unique PlayerID as assigned by SportsDataIO will stay with the player
  throughout their entire career.
- Returns only the most recent data and does not include line movement.
- Ensure to check player availability before fetching data.
- Subscription required for API access.
- Ensure to handle null values in fields.
- Various endpoints may have rate limits.
- 'Call Interval: 4 Hours for League Hierarchy and Team Profiles'
- 'Call Interval: 5 Seconds for Are Any Games In Progress and Games endpoints'
- 'Call Interval: 5 Minutes for Season Current'
- 'Call Interval: 1 Minute for scores endpoints'
- 'Call Interval: 15 Minutes for odds line movement endpoint'
- API provides data related to NHL players, games, and statistics.
- Data may be subject to availability based on the season and game status
- Uses OAuth2 with refresh token — requires setup of connected app in ncaa
- Some objects may return nulls in deeply nested fields
- PlayerID remains with the player their entire collegiate career.
- Requires authentication via OAuth2
- Data is updated in real-time during games
- The player's unique PlayerID is assigned by SportsDataIO and will stay with the
  player throughout their collegiate career.
- Ensure to use the correct API key for authentication.
- Ensure API key is included in the header for every request.
- Rate limits apply for API calls.
- Some fields may return null values depending on the game's status.
- Use the appropriate endpoints to obtain live and pre-game odds.
- Requires an API key for authentication.
- Team IDs are determined by the home team in the first leg of a matchup.
- Requires setup of connected app in api
- GameID is a unique identifier for each game.
- 'SeasonType indicates the type of season: Regular Season, Preseason, etc.'
- Requires API Key for authentication.
- Simulation APIs allow for testing at any time of year.
- Game simulation can be progressed at any speed.
- Notifications must be configured on the company's primary SportsDataIO account.
- Emails must be added to the Admin account connected to the production SportsDataIO
  API key.
- If you have a Live & Final subfeed, you also receive access to the Final subfeed
  for the feed in question.
- Be careful to only use the Live & Final one so that you receive the live stats you
  need.
- Endpoints with coaches’ biographical data are updated throughout the season and
  off-season for each sport.
- Injury information is updated in real-time throughout the year for all applicable
  sports.
- We only need your API keys from SharpSports. No other configuration is required
  on their site.
- Our Free Trial has some values that are 'scrambled,' or a value that is randomly
  adjusted up or down between 5% and 20% from the actual value.
- This Free Trial never expires. It gives access to all endpoints/operations (albeit
  with some data points scrambled), 1,000 API calls per month, and a 10-minute delay
  on live updates.
- Data is meticulously cleaned and normalized, ensuring consistent formats and fields
  across all datasets.
- Includes detailed statistics across all major sports, from 2010 onwards.
- Fields may have specific constraints regarding nullability and data types.
- Provides real-time updates for NFL games.
- Offers historical database for modeling and analytics.
- Provides continuous, real-time updates starting well before tipoff
- Offers decades of past information for modeling and analytics
- Provides real-time coverage of every D1 FBS game
- Includes historical database offers decades of past information
- Provides real-time coverage of every PGA tournament.
- Unlimited API Calls in XML & JSON.
- Provides real-time coverage of every NASCAR race.
- Provides real-time coverage for more than 20 of the top global soccer leagues.
- Provides real-time updates starting well before the first punch is thrown.
- Unlimited API Calls
- Free Trial never expires
- 'Official Data Independence: No license restrictions or rights fees required.'
- Industry-leading documentation available for integration.
- Industry-Leading Documentation
- No license restrictions or rights fees required.
- Award-winning API products with unparalleled accuracy and reliability.
- Real-time scores fueled live excitement
- Predictive data made outcomes feel within reach
- Improved lineup projections and expanded injury tracking.
- Provides real-time data and predictive analytics.
- New injury tracking and lineup projections for the 2025-26 season.
- Uses OAuth2 with refresh token
- Simulation starts whenever you want it to.
- 'API accepts parameter values for numberOfPlays: 0, 1, 5, 10, 50, 100, 200.'
- Real-time updates for scores and player stats.
- Historical data available dating back to 2015.
- Notifications must be configured on the company’s primary SportsDataIO account.
- All webhooks must be configured under your company's Admin account which is connected
  to your production SportsDataIO API key.
- Notifications will not be delivered if the webhook is not configured within the
  company's Admin account.
- You will only receive notifications relevant to your subscription.
- Data includes real-time updates and historical statistics dating back to 2016.
- Ensure OAuth2 credentials are valid.
- Rate limits apply to API calls.
- Seamless integration with comprehensive documentation
- Replay test environment for controlled data testing
- Comprehensive coverage includes real-time updates and detailed statistics.
- Data is available for all D1 conferences and bowl games.
- This Free Trial never expires. It gives access to all endpoints/operations, 1,000
  API calls per month, and a 10-minute delay on live updates.
- Comprehensive Golf data coverage includes live updates, player stats, and betting
  feeds.
- Data is meticulously cleaned and normalized
- Consistent structure across datasets ensures ease of use for developers and analysts
- Requires API key for access
- Historical odds data includes betting lines from 2019 onwards.
- Comprehensive NASCAR data coverage includes detailed driver and team stats, live
  race updates, and betting odds.
- Provides real-time coverage of every NFL game.
- Supports unlimited API calls.
- Provides real-time coverage of every MLB game.
- Baseball is experiencing a global expansion with increased data usage.
- Provides continuous, real-time updates starting well before the players take the
  ice.
- Provides real-time coverage of every D1 FBS game.
- Real-time data feeds for dynamic advertising
- Integrates seamlessly into advertising platforms
- Coverage includes pre-fight, live, and post-fight data.
- Real-time updates and historical data available.
- Unlimited API Calls in XML & JSON
- Ensure to include API key in requests
- Provides real-time updates throughout the group and knockout stages.
- API free trial available for efficient onboarding and faster go-live.
- New data coverage includes Golf, CFB, and NFL for 2025.
- Uses OAuth2 with refresh token — requires setup of connected app in SportsDataIO
- Some objects like Contact may return nulls in deeply nested fields
- Real-time updates covering player profiles, roster changes, and historical data.
- Comprehensive Documentation available for integration.
- Comprehensive MMA data package includes detailed fighter stats, bout history, and
  real-time fight insights.
- Live odds updates are provided during each bout, including moneyline and totals.
- Comprehensive NFL data coverage includes team, player, and game stats.
- Real-time updates for live scores and game statuses.
- Fantasy projections and player salaries are updated in real-time.
- Comprehensive documentation available for integration.
- Live updates provided for ongoing tournaments.
- Ensure your API key is set up correctly
- Comprehensive documentation is available for integration.
- Real-time updates for scores and game states are provided.
- API provides structured, real-time sports data that can be integrated directly into
  your site.
- International baseball is rapidly expanding.
- Real-time analytics are crucial for engagement.
- Real-time coverage with scores, stats, lineups, and betting data.
- Real-time results, fighter stats, historical matchups, and live scoring available.
- Enhanced fighter profiles and dynamic matchup analysis included.
- 2025 Golf Coverage delivers real-time PGA & LIV Golf data.
- 2025/26 CFB Coverage includes expanded betting and real-time player tracking.
- 2025 NFL Coverage includes injury return timelines and weekly depth charts.
errors:
- '401 Unauthorized: Check the API key.'
- '401 Unauthorized: Subscription Required'
- '429 Too Many Requests: Call Interval exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or subscription status'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check your API key'
- '404 Not Found: The requested resource does not exist'
- '429 Too Many Requests: Rate limit exceeded'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid API key or token.'
- '429 Too Many Requests: Reduce call frequency.'
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Verify the endpoint and parameters.'
- '401 Unauthorized: Check your API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Please try again later'
- '401 Unauthorized: Check API key or token'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your API key and its permissions.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your API key or access permissions.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck subscription key or token expiration.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- 'SUBSCRIPTION_REQUIRED: Subscription key is missing or invalid.'
- '401 Unauthorized: Subscription required'
- 'Subscription Required: You must provide a valid API key in your request'
- 'Subscription Required: Ensure you have a valid API key'
- 'Subscription Required: Check your subscription key'
- Subscription Required
- '404 Not Found: The requested resource does not exist.'
- 'Subscription Required: Check API key'
- '401 Unauthorized: Subscription key is required.'
- '429 Too Many Requests: Throttle your requests.'
- 'Subscription Required: Ensure you have a valid API key.'
- 'HTTP 400: Bad Request - Check your request parameters.'
- 'HTTP 404: Not Found - The requested resource does not exist.'
- 'Subscription Required: Ensure API key is included in the request'
- 'Subscription Required: Ensure you have a valid subscription key.'
- '401 Unauthorized: Recheck key or token expiration'
- 'Subscription Required: Ensure API key is provided in the header or query.'
- 'Invalid Season: Verify the season parameter format.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check required parameters and format'
- '401 Unauthorized: Check your API key.'
- '429 Too Many Requests: You are being rate limited.'
- '401 Unauthorized: Subscription key required or invalid'
- '404 Not Found: Event or Market ID not valid'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Ensure your API key is valid'
- 'Subscription Required: Ensure valid API key is provided.'
- 'Subscription Required: Ensure your API key is valid.'
- 'Subscription Required: Ensure you have an active subscription key.'
- '401 Unauthorized: Recheck subscription key validity'
- '429 Too Many Requests: Exceeded call limit.'
- '401 Unauthorized: Subscription key is missing or invalid.'
- '401 Unauthorized: Recheck API key validity'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency'
- 'Subscription Required: Ensure that you provide a valid API key.'
- 'Subscription Required: Check API subscription status'
- 'Subscription Required: Ensure valid API key is provided'
- '401 Unauthorized: Check API key.'
- '404 Not Found: Verify endpoint and parameters.'
- '401 Unauthorized: Check your subscription key.'
- '401 Unauthorized: Subscription key is missing or invalid'
- '403 Forbidden: Check your API key and permissions.'
- '500 Internal Server Error: Retry the request after some time.'
- '401 Unauthorized: Check API key'
- '401 Unauthorized: Check API key or permissions.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check API key and permissions.'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Verify endpoint path or resource availability'
- '500 Internal Server Error: Retry the request after some time'
- '401 Unauthorized: Check your API key or token expiration'
- '404 Not Found: Ensure the endpoint exists and is spelled correctly'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Confirm API key is valid.'
- '404 Not Found: Check the endpoint path for correctness.'
- '429 Too Many Requests: Throttle your requests to comply with rate limits.'
- '404 Not Found: Verify endpoint URL'
- '429 Too Many Requests: Slow down request frequency'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '404 Not Found: Check the GameID or endpoint URL.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '404 Not Found: Endpoint does not exist.'
- '500 Internal Server Error: Try again later.'
- 'Invalid API Key: Ensure the API key is valid.'
- 'Rate Limit Exceeded: Reduce the frequency of API calls.'
- '401 Unauthorized: Recheck authentication credentials.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'Invalid API Key: Recheck your API key value.'
- 'Rate Limit Exceeded: Throttle your requests.'
- '429 Too Many Requests: Consider reducing the frequency of requests.'
- '500 Internal Server Error: Please try again later.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check OAuth token.'
- 'INVALID_REQUEST: Check request parameters.'
- 'NOT_FOUND: Resource does not exist.'
- 'SERVER_ERROR: Try again later.'
- '401 Unauthorized: Recheck API key.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '404 Not Found: Check the endpoint URL'
auth_info:
  mentioned_objects:
  - ApiKey
  - Authorization
  - Player
  - Team
  - OauthToken
  - AuthProvider
  - NamedCredential
  - apiKey
  - APIKey
  - UserAccount
  - API Key
client:
  base_url: https://api.sportsdata.io/v3/mma
  auth:
    type: apikey
    location: header
    header_name: Ocp-Apim-Subscription-Key
source_metadata: null
