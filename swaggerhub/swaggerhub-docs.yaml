resources:
- name: user_management
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API Auto Mocking
  endpoint:
    path: /integrations/api-auto-mocking.html
    method: GET
- name: Azure DevOps Server
  endpoint:
    path: /integrations/azure-devops-server-and-tfs-integration.html
    method: GET
- name: GitHub
  endpoint:
    path: /integrations/github-sync.html
    method: GET
- name: Webhooks
  endpoint:
    path: /integrations/webhooks.html
    method: GET
- name: api
  endpoint:
    path: /apis
    method: GET
    data_selector: apis
    params: {}
- name: apis
  endpoint:
    path: /apis
    method: GET
    data_selector: data
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: data
    params: {}
- name: apis
  endpoint:
    path: /apis
    method: GET
    data_selector: apis
    params: {}
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
    params: {}
- name: User Management API
  endpoint:
    path: /swaggerhub-apis/user-management-api
    method: GET
- name: usage_data
  endpoint:
    path: /usage/data
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: GitHub Token
  endpoint:
    params: {}
- name: api
  endpoint:
    path: /apis
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: GitLab Integration
  endpoint:
    path: /configure-gitlab-integration
    method: POST
    data_selector: integration_parameters
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /user-management
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in SwaggerHub
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The API definitions being compared must be valid YAML.
- To use the 'compare and merge' tool, you must have the Edit permission in the current
  API.
- There is no support for Codegen for AsyncAPI APIs.
- There is no support for API Mocking for AsyncAPI APIs.
- Some objects like Contact may return nulls in deeply nested fields
- AsyncAPI components are described in the AsyncAPI specification.
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in SwaggerHub
- The components section can contain securitySchemes
- Domains cannot contain securitySchemes
- Integrations can be triggered automatically by certain events.
- You can enable or disable integrations temporarily.
- Lambda Sync is one-way, which means your API definitions go from SwaggerHub to API
  Gateway, but not vice versa.
- You should edit your API definitions in SwaggerHub only.
- 'Query and header parameter names can contain only the following characters: `A-Z
  a-z 0-9 - . _ $`.'
- Models with circular references are not supported.
- '`default` responses are imported as 200 responses, unless the operation has a 200
  response definition (in this case, the `default` response is ignored).'
- 'Form parameters (`in: formData`) are not supported and are ignored.'
- 'Cookie parameters (`in: cookie`) are not supported and are ignored.'
- Response code ranges (`4XX`) are not supported. Use specific response codes instead.
- TRACE operation definitions are not supported.
- Requires OAuth2 setup
- Some APIs may have rate limits
- The following limitations apply when importing OpenAPI definitions to Amazon API
  Gateway.
- '`default` responses are imported as 200 responses, unless the operation has a 200
  response definition.'
- The mock does not support business logic, that is, it cannot send specific responses
  based on the input.
- Uses OAuth2 for authentication
- API access may require additional permissions
- Requests to non-existent paths return HTTP status 404 'Not Found'.
- Requests that use HTTP methods not defined for the given path will return HTTP status
  405 'Method Not Allowed'.
- The mock is updated every time you save your API.
- Requires setup of connected app in API
- 'Rate limit: 10 requests per minute per API version'
- If you need a higher rate limit, consider using SwaggerHub On-Premise
- Self-signed certificates and private CAs are not supported in SwaggerHub SaaS, but
  are supported in SwaggerHub On-Premise.
- The integration requires a personal access token to connect to your Bitbucket Server.
- If you ever need to revoke this access token and generate a new one, be sure to
  update the token in the integration settings before you revoke the old token.
- The target repository must not be empty. It must contain, for example, a *README*
  or *.gitignore* file.
- The GitHub Sync configuration is bound to a specific version of the API, so you
  can synchronize the code for different versions separately.
- GitHub Sync supports OpenAPI 2.0, OpenAPI 3.0 and AsyncAPI 2.x.
- The target repository must not be empty.
- Your GitHub Enterprise Server must be accessible from the public Internet and allow
  connections from SwaggerHub's IP addresses.
- If your GitHub Enterprise Server uses an SSL certificate, it must be issued by a
  publicly-trusted certificate authority (CA).
- Your GitHub Enterprise Server must be accessible from the public Internet and allow
  connections from our IP addresses.
- If your GitHub Enterprise Server uses a self-signed SSL certificate or a certificate
  issued by a private CA, you need to add it to the trusted certificates on your SwaggerHub
  On-Premise instance.
- GitLab Sync supports OpenAPI 2.0, OpenAPI 3.0 and AsyncAPI 2.x.
- If you use SwaggerHub SaaS and self-hosted GitLab, your GitLab server must be accessible
  from the public Internet.
- GitLab tokens can have expiration dates. If a token expires, the integration will
  stop working until you provide a new token.
- API Standardization helps ensure that your API definitions comply with your company’s
  API style guide.
- API Standardization scan is performed on save.
- API must not have local definitions (i.e. only $refs are allowed)
- Channel path must not have empty parameter substitution pattern
- Channel path must not include query ('?') or fragment ('#') delimiter
- Channel path must not end with slash
- Headers schema type must be object
- Info description must be present and non-empty string
- License object must include url
- Info object must have license object
- AsyncAPI schema must be latest version (2.5.0)
- Operation description must be present and non-empty string
- Operation must have operationId
- Parameter objects must have description
- Server URL must not end with slash
- AsyncAPI object must have non-empty servers object
- Tag object must have description
- An AsyncAPI object must have non-empty tags array
- Automated standardization checks are available.
- Private APIs appear with the PRIVATE label on the SwaggerHub dashboard, in search
  results and on the API definition page.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Integration failures are indicated by an error message at the top of the editor.
- '401 Unauthorized: Check your credentials'
- '429 Too Many Requests: Rate limit exceeded'
- '429 (Too Many Requests): Rate limit exceeded'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Ensure the endpoint is correct'
- '429 Too Many Requests: The rate limit has been exceeded.'
- '429 Too Many Requests: Rate limit exceeded.'
- Failed to connect to Bitbucket. Please verify your token or username/password.
- If synchronization fails (for example, due to a permission problem), you will see
  an integration error at the top of the SwaggerHub Editor.
- Check the access token expiration date. If it is about to expire, generate a new
  token and update the token in the integration settings.
- If the token has expired, generate a new one and create the integration anew.
- The access token is valid (not expired or revoked) and has the api scope.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - API Key
  - OAuthToken
client:
  base_url: https://virtserver.swaggerhub.com/{owner}/{api}/{version}
source_metadata: null
