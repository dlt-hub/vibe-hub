resources:
- name: users
  endpoint:
    path: /docs/users
    method: GET
- name: events
  endpoint:
    path: /docs/events
    method: GET
- name: notification_category
  endpoint:
    path: /docs/notification-category
    method: GET
- name: tenant
  endpoint:
    path: /docs/tenants
    method: GET
- name: tenant
  endpoint:
    path: /tenants
    method: GET
    data_selector: tenants
- name: broadcast
  endpoint:
    path: /broadcast
    method: POST
- name: workflows.trigger
  endpoint:
    path: /workflows.trigger
    method: POST
    data_selector: body
- name: event
  endpoint:
    path: /trigger-event
    method: POST
    data_selector: data
    params: {}
- name: workflow
  endpoint:
    path: /trigger
    method: POST
    data_selector: data
    params: {}
- name: user_preferences
  endpoint:
    path: /user/preferences
    method: GET
    data_selector: preferencesData
    params: {}
- name: iOS Push
  endpoint:
    path: /docs/ios-push-vendor-integration
    method: GET
- name: webhook
  endpoint:
    path: /outbound-webhook
    method: POST
    data_selector: payload
- name: logs
  endpoint:
    path: /en/production/logs/
    method: GET
    data_selector: logs
    params: {}
- name: users
  endpoint:
    path: /reference/list-users
    method: GET
- name: workflows
  endpoint:
    path: /reference/trigger-workflow-api
    method: POST
- name: events
  endpoint:
    path: /reference/trigger-event
    method: POST
- name: objects
  endpoint:
    path: /reference/list-objects-by-type
    method: GET
- name: templates
  endpoint:
    path: /reference/get-template-list
    method: GET
- name: tenants
  endpoint:
    path: /reference/get-tenant-list
    method: GET
- name: lists
  endpoint:
    path: /reference/get-all-lists
    method: GET
- name: broadcast
  endpoint:
    path: /reference/trigger-broadcast
    method: POST
- name: get_user_full_preference
  endpoint:
    path: /reference/get-user-full-preference
    method: GET
- name: bulk_update_user_preference
  endpoint:
    path: /reference/bulk-update-user-preference
    method: POST
- name: reset_user_preference
  endpoint:
    path: /reference/reset-user-preferences
    method: POST
- name: list_users
  endpoint:
    path: /reference/list-users
    method: GET
    data_selector: users
    params: {}
- name: user_profile
  endpoint:
    path: /reference/get-user-profile
    method: GET
    data_selector: profile
    params: {}
- name: object_subscription
  endpoint:
    path: /v1/object/:object_type/:object_id/subscription/
    method: POST
    data_selector: results
- name: fetch_subscriptions
  endpoint:
    path: /v1/object/:object_type/:object_id/subscription/
    method: GET
    data_selector: results
- name: remove_subscription
  endpoint:
    path: /v1/object/:object_type/:object_id/subscription/
    method: DELETE
    data_selector: results
- name: object
  endpoint:
    path: /v1/object/:object_type/:id/
    method: POST
    data_selector: data
    params: {}
- name: workflow_trigger
  endpoint:
    path: /trigger/
    method: POST
    data_selector: data
    params: {}
- name: object_subscription
  endpoint:
    path: /v1/object/:object_type/:object_id/subscription/
    method: POST
    data_selector: data
    params: {}
- name: object
  endpoint:
    path: /v1/object/{object_type}/{id}/
    method: POST
    data_selector: object
    params: {}
- name: edit_object_profile
  endpoint:
    path: /v1/object/{object_type}/{id}/
    method: PATCH
    data_selector: object
    params: {}
- name: add_subscription
  endpoint:
    path: /v1/object/{object_type}/{id}/subscription
    method: POST
- name: users
  endpoint:
    path: /reference/list-users
    method: GET
- name: workflows
  endpoint:
    path: /reference/trigger-workflow-api
    method: POST
- name: events
  endpoint:
    path: /reference/trigger-event
    method: POST
- name: objects
  endpoint:
    path: /reference/list-objects-by-type
    method: GET
- name: templates
  endpoint:
    path: /reference/get-template-list
    method: GET
- name: tenants
  endpoint:
    path: /reference/get-tenant-list
    method: GET
- name: lists
  endpoint:
    path: /reference/get-all-lists
    method: GET
- name: broadcast
  endpoint:
    path: /reference/trigger-broadcast
    method: POST
- name: user
  endpoint:
    path: /v1/user/{distinct_id}/
    method: POST
    data_selector: response
    params: {}
- name: edit_user_profile
  endpoint:
    path: /v1/user/{distinct_id}/
    method: PATCH
    data_selector: operations
- name: user
  endpoint:
    path: /v1/user/{distinct_id}/
    method: GET
    data_selector: object
- name: user_object_subscriptions
  endpoint:
    path: /v1/user/{distinct_id}/subscribed_to/object/
    method: GET
    data_selector: results
- name: fetch_user_list_subscriptions
  endpoint:
    path: /v1/user/{distinct_id}/subscribed_to/list/
    method: GET
    data_selector: results
    params:
      limit: '10'
- name: users
  endpoint:
    path: /v1/user
    method: GET
    data_selector: results
- name: delete_user
  endpoint:
    path: /v1/user/{distinct_id}
    method: DELETE
    data_selector: No Content
- name: merge_user_profiles
  endpoint:
    path: /v1/user/{distinct_id}/merge/
    method: POST
    data_selector: user
    params: {}
- name: trigger_workflow
  endpoint:
    path: /trigger/
    method: POST
    data_selector: status
- name: dynamic_workflow_trigger
  endpoint:
    path: /{workspace_key}/trigger
    method: POST
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /event/
    method: POST
    data_selector: object
- name: object
  endpoint:
    path: /v1/object/{object_type}/{id}/
    method: GET
    data_selector: object
    params: {}
- name: fetch_object_subscriptions
  endpoint:
    path: /v1/object/{object_type}/{id}/subscribed_to/object/
    method: GET
    data_selector: results
- name: list_objects_by_type
  endpoint:
    path: /v1/object/{object_type}/
    method: GET
    data_selector: results
- name: list_object_subscriptions
  endpoint:
    path: /v1/object/{object_type}/{id}/subscription
    method: GET
    data_selector: results
    params: {}
- name: delete_object
  endpoint:
    path: /v1/object/{object_type}/{id}
    method: DELETE
    data_selector: '204'
    params: {}
- name: remove_object_subscriptions
  endpoint:
    path: /v1/object/{object_type}/{id}/subscription
    method: DELETE
    data_selector: null
    params:
      recipients: <string>
- name: template
  endpoint:
    path: /v1/template
    method: GET
    data_selector: results
- name: template
  endpoint:
    path: /v1/template/{template_slug}
    method: GET
    data_selector: object
- name: fetch_template_content_for_channel
  endpoint:
    path: /v1/template/{template_slug}/channel/{channel_slug}
    method: GET
- name: tenants
  endpoint:
    path: /v1/tenant/{tenant_id}
    method: POST
    data_selector: tenant_id
- name: tenant
  endpoint:
    path: /v1/tenant/{tenant_id}
    method: GET
    data_selector: ''
    params: {}
- name: tenant
  endpoint:
    path: /v1/tenant
    method: GET
    data_selector: results
    params:
      limit: 20
      offset: 0
- name: delete_tenant
  endpoint:
    path: /v1/tenant/{tenant_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: subscriber_list
  endpoint:
    path: /v1/subscriber_list
    method: POST
    data_selector: list
    params: {}
- name: add_users_to_list
  endpoint:
    path: /v1/subscriber_list/{list_id}/subscriber/add
    method: POST
    data_selector: success
    params: {}
- name: remove_subscribers
  endpoint:
    path: /v1/subscriber_list/{list_id}/subscriber/remove
    method: POST
    data_selector: success
- name: subscriber_list
  endpoint:
    path: /v1/subscriber_list
    method: GET
    data_selector: results
    params:
      offset: '0'
- name: subscriber_list
  endpoint:
    path: /v1/subscriber_list/{list_id}/
    method: GET
    data_selector: list_id
- name: list_users
  endpoint:
    path: /v1/subscriber_list/{list_id}/subscriber/
    method: GET
    data_selector: results
    params:
      limit: 20
- name: delete_list
  endpoint:
    path: /v1/subscriber_list/{list_id}/delete
    method: PATCH
    data_selector: success
    params: {}
- name: trigger_broadcast
  endpoint:
    path: /{workspace_key}/broadcast
    method: POST
    data_selector: object
    params: {}
notes:
- User profile should be created in SuprSend for passing in event call.
- Notification Categories are used for defining notification latency, setting category-level
  preferences, and setting category-level rules or limits.
- Tenant id is a unique identifier for your tenant and can't be changed once the tenant
  is created.
- If no tenant_id is passed, default tenant properties are picked.
- Tenant id is a unique identifier for your tenant and can’t be changed once the tenant
  is created.
- You have to pass tenant_id in your workflow / event calls to render tenant level
  customization in your templates.
- Make your message template name clear.
- Message templates with spelling mistakes will be rejected.
- Workflows enable you to build complex notifications by defining whom to notify,
  when, and through which channels.
- Does not require user creation beforehand to trigger notification.
- Use recipient properties in your template as $recipient.<property>.
- Public API Keys alone isn’t enough as they are insecure. Enable enhanced secure
  mode for signed user token.
- User preferences are automatically validated at each workflow run, guaranteeing
  notifications align with user’s latest preference settings.
- Requires integration of the JavaScript SDK
- Ensure the user is identified before making preference calls
- You’ll get all these information from Apple developer account
- Vendor fallback logic allows rerouting notifications through multiple vendors to
  ensure delivery.
- Currently, this support is extended for Email, SMS and MS Teams Channel. We’ll be
  expanding the functionality soon on other channels as well.
- Webhook must support POST method and content-type should be application/json
- Configure SuprSend tracking URL https://hub.suprsend.com/webhook/* in your vendor
  dashboard to track notification failure, delivery, seen and click response in your
  logs.
- 'Enhanced Security: We''ve replaced HMAC authentication with stateless JWT authentication
  for better security.'
- Subscriber is renamed to user in all APIs, including user preference APIs.
- You can subscribe up to 100 subscribers to an object in one go.
- You can notify all child subscribers from a parent object.
- Objects can have unique channels, preferences, and properties.
- Object settings apply when sending to object as a recipient.
- Pass as `Bearer <API_KEY>`. Get API Key from SuprSend dashboard Developers -> API
  Keys section.
- Pass as Bearer <API_KEY>. Get API Key from SuprSend dashboard Developers -> API
  Keys section.
- User profiles can be merged to resolve duplicate user records.
- Pass as `Bearer <API_KEY>`.
errors:
- '400 Bad Request: Check payload structure and required fields.'
- '401 Unauthorized: Recheck API key and secret.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- '403: if tenant passed doesn’t match with the JWT payload scope tenant_id'
- '401 Unauthorized: Check OAuth token or client credentials'
- '400 Bad Request: Validate request parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '404 Not Found: Verify object_type and object_id.'
- '400: Bad Request'
- 202 - application/json
- '200'
- '404'
- '401 Unauthorized: Pass as `Bearer <API_KEY>`'
- '204: Indicates a successful request with no content in the response body.'
- '404: Resource not found'
- '201: Created'
- '404: Not Found'
- 204 - No Content
- 404 - Not Found
- 201 - Created
- '400'
- 200 - OK
- '200: Success message when the list is successfully deleted'
- '404: List not found'
- 202 - Accepted
- 400 - Bad Request
auth_info:
  mentioned_objects:
  - SuprsendService
  - PreferenceOptions
  - ChannelLevelPreferenceOptions
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API_KEY
client:
  base_url: https://hub.suprsend.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    content-type: application/json
  paginator:
    type: cursor
    cursor_param: after
source_metadata: null
