resources:
- name: speak
  endpoint:
    path: /api/speak
    method: POST
    data_selector: result
- name: speak
  endpoint:
    path: /api/speak
    method: POST
    data_selector: result
    params: {}
- name: speak_status
  endpoint:
    path: /api/speak/v2/{ :id }
    method: GET
    data_selector: result
    params: {}
- name: audio_download
  endpoint:
    path: result.audio_download_url
    method: GET
    data_selector: null
    params: {}
- name: register_webhook
  endpoint:
    path: /api/me/callback-url
    method: PUT
- name: synthesize_voice
  endpoint:
    path: /api/speak
    method: POST
- name: text_to_speech
  endpoint:
    path: /api/text-to-speech
    method: POST
    data_selector: binary
    params: {}
- name: actor
  endpoint:
    path: /api/actor
    method: GET
    data_selector: result
    params: {}
- name: speak
  endpoint:
    path: /api/speak
    method: POST
- name: model_version
  endpoint:
    path: /api/speak
    method: POST
    data_selector: data
    params: {}
- name: speak
  endpoint:
    path: /speak
    method: POST
    data_selector: data
    params: {}
- name: speak
  endpoint:
    path: /api/speak
    method: POST
    data_selector: data
- name: speak
  endpoint:
    path: /speak
    method: POST
    data_selector: null
    params: {}
- name: limit_maximum_length
  endpoint:
    path: /api/speak
    method: POST
    data_selector: data
    params:
      max_seconds: '10'
- name: speak
  endpoint:
    path: /speak
    method: POST
    data_selector: response
    params:
      max_seconds: '30'
      duration: '20'
      model_version: latest
- name: pitch_control
  endpoint:
    path: /api/speak
    method: POST
    data_selector: response
    params: {}
- name: speak_resource
  endpoint:
    path: /api/speak/resource
    method: POST
    data_selector: result
    params:
      audio_format: wav
- name: speech_generation
  endpoint:
    path: /api/speak
    method: POST
    data_selector: result
    params:
      tts_mode: audio_file
      lang: en-us
- name: speech_status
  endpoint:
    path: /api/speak/v2/{speak_id}
    method: GET
    data_selector: result
- name: actor
  endpoint:
    path: /actor/
    method: GET
    data_selector: actors
- name: actor_versions
  endpoint:
    path: /actor/${24-letters-your_actor_id}/versions
    method: GET
    data_selector: versions
- name: speech_generation
  endpoint:
    path: /speak
    method: POST
    data_selector: result
- name: me
  endpoint:
    path: /api/me
    method: GET
- name: speak
  endpoint:
    path: /api/speak
    method: POST
    data_selector: result
    params: {}
- name: speak_v2
  endpoint:
    path: /api/speak/v2/{ :id }
    method: GET
    data_selector: result
    params: {}
- name: text_to_speech
  endpoint:
    path: /api/text-to-speech
    method: POST
    data_selector: result
    params: {}
- name: actor
  endpoint:
    path: /api/actor
    method: GET
    data_selector: result
    params: {}
- name: actor_versions
  endpoint:
    path: /api/actor/{ :id }/versions
    method: GET
    data_selector: result
    params: {}
- name: actor_version
  endpoint:
    path: /api/actor/{ :id }/versions/{ :version }
    method: GET
    data_selector: result
    params: {}
- name: me
  endpoint:
    path: /api/me
    method: GET
    data_selector: result
    params: {}
- name: callback_url
  endpoint:
    path: /api/me/callback-url
    method: PUT
    data_selector: result
    params: {}
- name: speak_resource
  endpoint:
    path: /api/speak/resource
    method: POST
    data_selector: result
    params: {}
- name: prosody_meta
  endpoint:
    path: /api/speak/prosody-meta/{ :id }
    method: POST
    data_selector: result
    params: {}
- name: speak
  endpoint:
    path: /api/speak/v2/{ :id }
    method: GET
    data_selector: result
    params: {}
- name: text_to_speech
  endpoint:
    path: /api/text-to-speech
    method: POST
    data_selector: result
- name: actor
  endpoint:
    path: /api/actor
    method: GET
    data_selector: result
    params: {}
- name: actor_versions
  endpoint:
    path: /api/actor/{ :id }/versions
    method: GET
    data_selector: result
    params: {}
- name: actor_versions
  endpoint:
    path: /api/actor/{ :id }/versions/{ :version }
    method: GET
    data_selector: result
    params: {}
- name: me
  endpoint:
    path: /api/me
    method: GET
    data_selector: result
    params: {}
- name: callback_url
  endpoint:
    path: /api/me/callback-url
    method: PUT
    data_selector: result
    params: {}
- name: speak_resource
  endpoint:
    path: /api/speak/resource
    method: POST
    data_selector: result
- name: prosody-meta
  endpoint:
    path: /api/speak/prosody-meta/{:id}
    method: POST
    data_selector: result
- name: speak
  endpoint:
    path: /api/speak/{:id}
    method: GET
    data_selector: result
- name: speak
  endpoint:
    path: /api/speak
    method: POST
    data_selector: result
notes:
- Polling is easy to implement, webhook is better for immediate results
- It is recommended to poll with a cycle of at least 1 second.
- Polling does not deduct from the given quota.
- result.audio_download_url will expire after 24 hours.
- Webhook transmission may retry up to 18 times on failure.
- To use a model with version alias of latest or version name of v1.
- Not all characters are available.
- Please check if `emotion_prompt` is activated through the character version api.
- This feature is not available in all characters!
errors:
- 'app/param/not-enough: Some required fields are not included in the request body.'
- 'app/invalid/text: The length of text is over 350, or text consists entirely of
  unpronounceable letters.'
- 'app/invalid/actor_id: actor_id is incorrect or disallowed.'
- 'auth/not-authorized: Authoriazation value in headers is not valid. Please check
  your api key.'
- 'auth/not-authorized: Your api-key is not allowed to perform this API. Please contact
  our sales team.'
- '401: Authorization Error'
- 401 Authorization Error
- '404: Version not found Error'
- 'app/param/not-enough/callback_url: when callback_url is not in request body.'
- 'app/invalid/callback_url: callback_url is invalid url format.'
- 'app/param/type-mismatch: When field types are mismatched.'
- 'app/invalid/audio_format: audio_format is incorrect or disallowed.'
- '403: Forbidden Error'
- '401: auth/not-authorized: Authoriazation value in headers is not valid'
- '404: There is no speak at the requested API address'
auth_info:
  mentioned_objects: []
client:
  base_url: https://typecast.ai
  headers:
    Content-Type: application/json
source_metadata: null
