resources:
- name: ChainHead
  endpoint:
    path: ''
    method: POST
    data_selector: result
    params: {}
- name: Lotus
  endpoint:
    path: /nodes/implementations/lotus
    method: GET
    data_selector: records
- name: Venus
  endpoint:
    path: /nodes/implementations/venus
    method: GET
    data_selector: records
- name: bootstrap_peers
  endpoint:
    path: /github.com/filecoin-project/lotus/blob/release/latest/release/build/bootstrap/mainnet.pi
    method: GET
    data_selector: peers
    params: {}
- name: lightweight_snapshot
  endpoint:
    path: https://forest-archive.chainsafe.dev/latest/mainnet/
    method: GET
    data_selector: snapshot
    params: {}
- name: complete_blockchain_data
  endpoint:
    path: https://forest-archive.chainsafe.dev/list/
    method: GET
    data_selector: data
    params: {}
- name: status_page
  endpoint:
    path: https://filecoin.statuspage.io/
    method: GET
    data_selector: status
    params: {}
- name: mainnet_explorer
  endpoint:
    path: https://filfox.info/en
    method: GET
    data_selector: explorer
    params: {}
- name: mainnet_faucet
  endpoint:
    path: https://forest-explorer.chainsafe.dev/faucet/mainnet
    method: GET
    data_selector: faucet
    params: {}
- name: Chainsafe Storage API
  endpoint:
    path: /api/chainsafe/storage
    method: GET
    data_selector: data
    params: {}
- name: NFT.storage
  endpoint:
    path: /api/nft/storage
    method: GET
    data_selector: data
    params: {}
- name: Web3.storage
  endpoint:
    path: /api/web3/storage
    method: GET
    data_selector: data
    params: {}
- name: Mainnet
  endpoint:
    path: /network/mainnet
    method: GET
- name: Calibration
  endpoint:
    path: /network/calibration
    method: GET
- name: Local Devnet
  endpoint:
    path: /network/local-devnet
    method: GET
- name: GLIF nodes
  endpoint:
    path: /lotus/developers/glif-nodes/
    method: GET
    data_selector: data
    params: {}
- name: Lotus JSON-RPC API
  endpoint:
    path: /lotus/get-started/what-is-lotus/
    method: GET
    data_selector: data
    params: {}
- name: Filrep.io API
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
- name: Filrep
  endpoint:
    path: /api
    method: GET
- name: native_currency
  endpoint:
    path: /api/native_currency
    method: GET
    data_selector: currency_data
- name: minting
  endpoint:
    path: /api/minting
    method: GET
    data_selector: minting_data
- name: vesting
  endpoint:
    path: /api/vesting
    method: GET
    data_selector: vesting_data
- name: collateral_and_slashing
  endpoint:
    path: /api/collateral_and_slashing
    method: GET
    data_selector: collateral_data
- name: total_supply
  endpoint:
    path: /api/total_supply
    method: GET
    data_selector: supply_data
- name: providers
  endpoint:
    path: /providers
    method: GET
    data_selector: data
    params: {}
- name: deals
  endpoint:
    path: /deals
    method: GET
    data_selector: data
    params: {}
- name: sectors
  endpoint:
    path: /sectors
    method: GET
    data_selector: data
    params: {}
- name: storage_market
  endpoint:
    path: /basics/what-is-filecoin/storage-market
    method: GET
    data_selector: deals
- name: actors
  endpoint:
    path: /actors
    method: GET
    data_selector: actors
    params: {}
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: nodes
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
    params: {}
- name: retrieval_market
  endpoint:
    path: /retrieval/market
    method: GET
    data_selector: data
    params: {}
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: deals
  endpoint:
    path: /deals
    method: GET
- name: sectors
  endpoint:
    path: /sectors
    method: GET
- name: calibration
  endpoint:
    path: /rpc/v0
    method: GET
    data_selector: data
    params: {}
- name: data_retrieval
  endpoint:
    path: /retrieval
    method: POST
    data_selector: retrieval_requests
    params:
      provider_id: storage_provider_id
      payload_cid: payload_cid
      address: address
- name: Filecoin Virtual Machine
  endpoint:
    path: /fvm
    method: GET
    data_selector: data
    params: {}
- name: built-in actors
  endpoint:
    path: /actors
    method: GET
    data_selector: actors
    params: {}
- name: blocks
  endpoint:
    path: /blocks
    method: GET
    data_selector: blocks
    params: {}
- name: state tree
  endpoint:
    path: /state-tree
    method: GET
    data_selector: state_tree
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: Calibration
  endpoint:
    path: /rpc/v0
    method: GET
- name: blocks
  endpoint:
    path: /api/v1/blocks
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: CronActor
  endpoint:
    path: /basics/the-blockchain/actors#cronactor
    method: GET
    data_selector: ''
    params: {}
- name: InitActor
  endpoint:
    path: /basics/the-blockchain/actors#initactor
    method: GET
    data_selector: ''
    params: {}
- name: AccountActor
  endpoint:
    path: /basics/the-blockchain/actors#accountactor
    method: GET
    data_selector: ''
    params: {}
- name: RewardActor
  endpoint:
    path: /basics/the-blockchain/actors#rewardactor
    method: GET
    data_selector: ''
    params: {}
- name: StorageMarketActor
  endpoint:
    path: /basics/the-blockchain/actors#storagemarketactor
    method: GET
    data_selector: ''
    params: {}
- name: StorageMinerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagemineractor
    method: GET
    data_selector: ''
    params: {}
- name: MultisigActor
  endpoint:
    path: /basics/the-blockchain/actors#multisigactor
    method: GET
    data_selector: ''
    params: {}
- name: PaymentChannelActor
  endpoint:
    path: /basics/the-blockchain/actors#paymentchannelactor
    method: GET
    data_selector: ''
    params: {}
- name: StoragePowerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagepoweractor
    method: GET
    data_selector: ''
    params: {}
- name: VerifiedRegistryActor
  endpoint:
    path: /basics/the-blockchain/actors#verifiedregistryactor
    method: GET
    data_selector: ''
    params: {}
- name: SystemActor
  endpoint:
    path: /basics/the-blockchain/actors#systemactor
    method: GET
    data_selector: ''
    params: {}
- name: StorageMinerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagemineractor
    method: GET
- name: StoragePowerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagepoweractor
    method: GET
- name: RewardActor
  endpoint:
    path: /basics/the-blockchain/actors#rewardactor
    method: GET
- name: addresses
  endpoint:
    path: /basics/the-blockchain/addresses
    method: GET
    data_selector: addresses
- name: actor_ids
  endpoint:
    path: /basics/the-blockchain/actor-ids
    method: GET
    data_selector: actor_ids
- name: public_keys
  endpoint:
    path: /basics/the-blockchain/public-keys
    method: GET
    data_selector: public_keys
- name: actors
  endpoint:
    path: /basics/the-blockchain/actors
    method: GET
    data_selector: actors
- name: CronActor
  endpoint:
    path: /basics/the-blockchain/actors#cronactor
    method: GET
- name: InitActor
  endpoint:
    path: /basics/the-blockchain/actors#initactor
    method: GET
- name: AccountActor
  endpoint:
    path: /basics/the-blockchain/actors#accountactor
    method: GET
- name: RewardActor
  endpoint:
    path: /basics/the-blockchain/actors#rewardactor
    method: GET
- name: StorageMarketActor
  endpoint:
    path: /basics/the-blockchain/actors#storagemarketactor
    method: GET
- name: StorageMinerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagemineractor
    method: GET
- name: MultisigActor
  endpoint:
    path: /basics/the-blockchain/actors#multisigactor
    method: GET
- name: PaymentChannelActor
  endpoint:
    path: /basics/the-blockchain/actors#paymentchannelactor
    method: GET
- name: StoragePowerActor
  endpoint:
    path: /basics/the-blockchain/actors#storagepoweractor
    method: GET
- name: VerifiedRegistryActor
  endpoint:
    path: /basics/the-blockchain/actors#verifiedregistryactor
    method: GET
- name: SystemActor
  endpoint:
    path: /basics/the-blockchain/actors#systemactor
    method: GET
- name: addresses
  endpoint:
    path: /basics/the-blockchain/addresses
    method: GET
    data_selector: actors
- name: actor_ids
  endpoint:
    path: /basics/the-blockchain/actor-ids
    method: GET
    data_selector: actor_ids
- name: public_keys
  endpoint:
    path: /basics/the-blockchain/public-keys
    method: GET
    data_selector: public_keys
- name: latest_randomness
  endpoint:
    path: /public/latest
    method: GET
    data_selector: round
    params: {}
- name: randomness_by_round
  endpoint:
    path: /public/<round>
    method: GET
    data_selector: signature
    params: {}
- name: blocks
  endpoint:
    path: /blocks
    method: GET
    data_selector: blocks
    params: {}
- name: tipsets
  endpoint:
    path: /tipsets
    method: GET
    data_selector: tipsets
    params: {}
- name: Proof-of-Replication
  endpoint:
    path: /basics/the-blockchain/proofs/#proof-of-replication-porep
    method: GET
    data_selector: Proof-of-Replication
- name: Proof-of-Spacetime
  endpoint:
    path: /basics/the-blockchain/proofs/#proof-of-spacetime-post
    method: GET
    data_selector: Proof-of-Spacetime
- name: consensus
  endpoint:
    path: /basics/the-blockchain/consensus
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: latest_randomness
  endpoint:
    path: /public/latest
    method: GET
    data_selector: round
- name: randomness_by_round
  endpoint:
    path: /public/<round>
    method: GET
    data_selector: round
- name: drand_info
  endpoint:
    path: /info
    method: GET
    data_selector: info
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: Filecoin Mainnet
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params:
      network: Filecoin
- name: Filecoin Calibration testnet
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params:
      network: Filecoin Calibration testnet
- name: Filecoin Local testnet
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params:
      network: Filecoin Local testnet
- name: wallets
  endpoint:
    path: /basics/assets/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: exchanges
  endpoint:
    path: /assets/get-fil/exchanges
    method: GET
    data_selector: exchanges
    params: {}
- name: fiat_onramps
  endpoint:
    path: /assets/get-fil/fiat-onramps
    method: GET
    data_selector: fiat_onramps
    params: {}
- name: crypto_atms
  endpoint:
    path: /assets/get-fil/crypto-atms
    method: GET
    data_selector: crypto_atms
    params: {}
- name: Filecoin Mainnet
  endpoint:
    path: /rpc/v1
    method: POST
- name: Filecoin Calibration testnet
  endpoint:
    path: /rpc/v1
    method: POST
- name: Filecoin Local testnet
  endpoint:
    path: /rpc/v1
    method: POST
- name: burner_wallet
  endpoint:
    path: /burner_wallet
    method: POST
    data_selector: wallet_details
    params: {}
- name: transfer_FIL
  endpoint:
    path: /transfer_FIL
    method: POST
    data_selector: transfer_details
    params: {}
- name: subnets
  endpoint:
    path: /api/v1/subnets
    method: GET
    data_selector: subnet_data
- name: DataCap
  endpoint:
    path: /data-cap
    method: GET
    data_selector: records
- name: DataCap
  endpoint:
    path: /datacap
    method: GET
    data_selector: records
- name: Quality Adjusted Power
  endpoint:
    path: /quality-adjusted-power
    method: GET
    data_selector: records
- name: Lighthouse
  endpoint:
    path: https://lighthouse.storage/
    method: GET
- name: Akave
  endpoint:
    path: https://www.akave.ai/
    method: GET
- name: Storacha
  endpoint:
    path: https://storacha.network/
    method: GET
- name: Singularity
  endpoint:
    path: https://singularity.storage/
    method: GET
- name: CID Gravity
  endpoint:
    path: https://www.cidgravity.com/
    method: GET
- name: Ramo
  endpoint:
    path: https://www.ramo.io/
    method: GET
- name: Filecoin Plus Overview
  endpoint:
    path: /filecoin/plus/overview
    method: GET
    data_selector: data
- name: DataCap Allocation
  endpoint:
    path: /filecoin/datacap/allocation
    method: GET
    data_selector: data
- name: Lighthouse
  endpoint:
    path: https://lighthouse.storage/
    method: POST
- name: Akave
  endpoint:
    path: https://www.akave.ai/
    method: POST
- name: Storacha
  endpoint:
    path: https://storacha.network/
    method: POST
- name: Singularity
  endpoint:
    path: https://singularity.storage/
    method: POST
- name: CID Gravity
  endpoint:
    path: https://www.cidgravity.com/
    method: POST
- name: Ramo
  endpoint:
    path: https://www.ramo.io/
    method: POST
- name: lassie
  endpoint:
    path: /lassie/fetch
    method: GET
    data_selector: data
    params: {}
- name: fetch_content
  endpoint:
    path: /ipfs/{cid}
    method: GET
    data_selector: data
    params: {}
- name: retrievals
  endpoint:
    path: /api/v1/retrievals
    method: GET
    data_selector: data
    params: {}
- name: lassie_fetch
  endpoint:
    path: /fetch/<CID>
    method: GET
    data_selector: content
    params: {}
- name: content
  endpoint:
    path: /ipfs/{cid}[/path][?params]
    method: GET
    data_selector: response
    params: {}
- name: content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
    params: {}
- name: discussion_forums
  endpoint:
    path: /basics/project-and-community/forums-and-fips
    method: GET
    data_selector: forums
- name: filecoin_improvement_proposals
  endpoint:
    path: /basics/project-and-community/forums-and-fips
    method: GET
    data_selector: fips
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: storage_providers
  endpoint:
    path: /api/v1/storage_providers
    method: GET
    data_selector: data
    params: {}
- name: nodes
  endpoint:
    path: /api/v1/nodes
    method: GET
    data_selector: data
    params: {}
- name: collateral_mechanisms
  endpoint:
    path: /storage-providers/filecoin-economics/fil-collateral
    method: GET
    data_selector: collateral_types
    params: {}
- name: commit_pledge
  endpoint:
    path: /storage-providers/filecoin-economics/commit-pledge
    method: GET
    data_selector: pledge_info
    params: {}
- name: gas_fees
  endpoint:
    path: /storage-providers/filecoin-economics/gas-fees
    method: GET
    data_selector: gas_statistics
    params: {}
- name: block_rewards
  endpoint:
    path: /storage-providers/filecoin-economics/block-rewards
    method: GET
    data_selector: block_rewards_data
- name: storage_capacity
  endpoint:
    path: /storage-providers/filecoin-economics/storage-capacity
    method: GET
    data_selector: storage_capacity_data
- name: collateral_mechanisms
  endpoint:
    path: /storage-providers/filecoin-economics/fil-collateral
    method: GET
    data_selector: collateral_types
    params: {}
- name: commit_pledge
  endpoint:
    path: /storage-providers/filecoin-economics/commit-pledge
    method: GET
    data_selector: pledge_details
    params: {}
- name: gas_fees
  endpoint:
    path: /storage-providers/filecoin-economics/gas-fees
    method: GET
    data_selector: gas_fee_details
    params: {}
- name: storage_fault_slashing
  endpoint:
    path: /storage/fault_slashing
    method: GET
    data_selector: fault_penalties
    params: {}
- name: honest_storage_providers
  endpoint:
    path: /storage/honest_providers
    method: GET
    data_selector: honest_exceptions
    params: {}
- name: Web3.storage
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: Filecoin Green
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: committed_capacity
  endpoint:
    path: /storage-providers/filecoin-economics/committed-capacity
    method: GET
    data_selector: data
    params: {}
- name: Web3.storage
  endpoint:
    path: /web3.storage/
    method: GET
- name: Filecoin Green
  endpoint:
    path: /green.filecoin.io/
    method: GET
- name: storage_deals
  endpoint:
    path: /api/storage_deals
    method: GET
    data_selector: records
- name: retrieval_deals
  endpoint:
    path: /api/retrieval_deals
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: lotus_daemon
  endpoint:
    path: /lotus/daemon
    method: GET
- name: lotus_miner
  endpoint:
    path: /lotus/miner
    method: GET
- name: lotus_worker
  endpoint:
    path: /lotus/worker
    method: GET
- name: boost
  endpoint:
    path: /boost
    method: GET
- name: AddPiece
  endpoint:
    path: /sealing/pipeline/addpiece
    method: POST
    data_selector: process
    params:
      AP_32G_MAX_CONCURRENT: 1
- name: PreCommit 1
  endpoint:
    path: /sealing/pipeline/precommit1
    method: POST
    data_selector: process
    params:
      PC1_32G_MAX_CONCURRENT: ''
- name: provider data records
  endpoint:
    path: /provider/data/records
    method: GET
    data_selector: records
- name: virtual_machines
  endpoint:
    path: /virtual_machines
    method: GET
    data_selector: data
    params: {}
- name: lotus_miner
  endpoint:
    path: /lotus_miner
    method: GET
    data_selector: data
    params: {}
- name: sata_storage
  endpoint:
    path: /sata_storage
    method: GET
    data_selector: data
    params: {}
- name: post_workers
  endpoint:
    path: /post_workers
    method: GET
    data_selector: data
    params: {}
- name: ZFS
  endpoint:
    path: /storage/zfs
    method: GET
    data_selector: data
    params: {}
- name: RAIDZ2
  endpoint:
    path: /storage/raidz2
    method: GET
    data_selector: data
    params: {}
- name: Snapshots and replication
  endpoint:
    path: /storage/snapshots
    method: GET
    data_selector: data
    params: {}
- name: wallet
  endpoint:
    path: /wallet
    method: POST
    data_selector: wallet
    params: {}
- name: snapshot
  endpoint:
    path: /latest/mainnet/
    method: GET
    data_selector: snapshot
    params: {}
- name: calibration_snapshot
  endpoint:
    path: /latest/calibnet/
    method: GET
    data_selector: snapshot
    params: {}
- name: snapshots
  endpoint:
    path: /latest/mainnet/
    method: GET
    data_selector: snapshot
    params: {}
- name: calibration_snapshots
  endpoint:
    path: /latest/calibnet/
    method: GET
    data_selector: snapshot
    params: {}
- name: wallets
  endpoint:
    path: /wallet
    method: GET
    data_selector: wallets
    params: {}
- name: wallet
  endpoint:
    path: /wallet
    method: POST
    data_selector: wallets
    params: {}
- name: sync
  endpoint:
    path: /sync
    method: GET
    data_selector: syncStatus
    params: {}
- name: lotus_wallet
  endpoint:
    path: /lotus/wallet
    method: POST
    data_selector: wallet_info
    params: {}
- name: curio
  endpoint:
    path: /curio/setup
    method: POST
    data_selector: setup_info
    params: {}
- name: wallet
  endpoint:
    path: /wallet
    method: POST
    data_selector: wallets
    params: {}
- name: snapshot_import
  endpoint:
    path: /snapshot/import
    method: POST
    data_selector: import_status
    params:
      remove_existing_chain: true
      halt_after_import: true
- name: chain_head
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: create_wallet
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: set_default_wallet
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: node_providers
  endpoint:
    path: /nodes/full-nodes/node-providers
    method: GET
    data_selector: nodes
    params: {}
- name: lite-node
  endpoint:
    path: /nodes/lite-nodes/spin-up-a-lite-node
    method: GET
- name: erc20_tokens
  endpoint:
    path: /api/v1/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: chain_head
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: wallet_new
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: wallet_set_default
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: faucet
  endpoint:
    path: /sendFunds
    method: POST
    data_selector: transactionID
    params: {}
- name: wallet
  endpoint:
    path: /api/v1/wallet
    method: POST
    data_selector: data
    params: {}
- name: deployed_contract
  endpoint:
    path: /services/data/vXX.X/sobjects/DeployedContract
    method: GET
    data_selector: records
    params: {}
- name: contract_deployment
  endpoint:
    path: /api/v1/deploy
    method: POST
    data_selector: deployment_records
- name: token_minting
  endpoint:
    path: /api/v1/mint
    method: POST
    data_selector: mint_records
- name: placeholder_actor
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#placeholder
    method: GET
    data_selector: actors
- name: ethereum_style_account
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#ethereum-style-account
    method: GET
    data_selector: accounts
- name: evm_smart_contract
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#evm-smart-contract
    method: GET
    data_selector: contracts
- name: address_types
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/address-types
    method: GET
    data_selector: addresses
- name: placeholder
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#placeholder
    method: GET
    data_selector: placeholder
- name: ethereum_style_account
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#ethereum-style-account
    method: GET
    data_selector: ethereum_style_account
- name: evm_smart_contract
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/actor-types#evm-smart-contract
    method: GET
    data_selector: evm_smart_contract
- name: address_types
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/address-types
    method: GET
    data_selector: address_types
    params: {}
- name: ID addresses
  endpoint:
    path: /id-addresses
    method: GET
    data_selector: addresses
- name: Actor addresses
  endpoint:
    path: /actor-addresses
    method: GET
    data_selector: addresses
- name: Wallet addresses
  endpoint:
    path: /wallet-addresses
    method: GET
    data_selector: addresses
- name: Delegated addresses
  endpoint:
    path: /delegated-addresses
    method: GET
    data_selector: addresses
- name: Ethereum addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: Filecoin addresses
  endpoint:
    path: /filecoin_addresses
    method: GET
    data_selector: records
- name: id_addresses
  endpoint:
    path: /addresses/id
    method: GET
    data_selector: addresses
    params: {}
- name: actor_addresses
  endpoint:
    path: /addresses/actor
    method: GET
    data_selector: addresses
    params: {}
- name: wallet_addresses
  endpoint:
    path: /addresses/wallet
    method: GET
    data_selector: addresses
    params: {}
- name: delegated_addresses
  endpoint:
    path: /addresses/delegated
    method: GET
    data_selector: addresses
    params: {}
- name: forward
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/filforwarder
    method: POST
    data_selector: response
    params: {}
- name: FilForwarder
  endpoint:
    path: /api/filforwarder
    method: POST
    data_selector: transaction
    params: {}
- name: FilForwarder
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/filforwarder
    method: GET
    data_selector: records
- name: GasEstimateMessageGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateGasLimit
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateGasPremium
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateFeeCap
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: EthEstimateGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: EthMaxPriorityFeePerGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateMessageGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateGasLimit
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateGasPremium
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateFeeCap
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: EthEstimateGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: EthMaxPriorityFeePerGas
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: resolve_address
  endpoint:
    path: /api/precompiles/resolve
    method: POST
    data_selector: result
    params: {}
- name: lookup_delegated_address
  endpoint:
    path: /api/precompiles/lookup_delegated_address
    method: POST
    data_selector: result
    params: {}
- name: call_actor_by_address
  endpoint:
    path: /api/precompiles/call_actor_by_address
    method: POST
    data_selector: result
    params: {}
- name: call_actor_by_id
  endpoint:
    path: /api/precompiles/call_actor_by_id
    method: POST
    data_selector: result
    params: {}
- name: Call Actor By ID
  endpoint:
    path: /smart-contracts/filecoin-evm-runtime/precompiles
    method: POST
    data_selector: data
    params: {}
- name: resolve_address
  endpoint:
    path: /precompiles/resolve_address
    method: POST
    data_selector: actor_id_bytes
    params: {}
- name: lookup_delegated_address
  endpoint:
    path: /precompiles/lookup_delegated_address
    method: POST
    data_selector: delegated_address_bytes
    params: {}
- name: call_actor_by_address
  endpoint:
    path: /precompiles/call_actor_by_address
    method: POST
    data_selector: success
    params: {}
- name: call_actor_by_id
  endpoint:
    path: /precompiles/call_actor_by_id
    method: POST
    data_selector: success
    params: {}
- name: Call Actor By ID
  endpoint:
    path: /0xfe00000000000000000000000000000000000005
    method: delegatecall
    data_selector: data
    params: {}
- name: programmatic_storage
  endpoint:
    path: /smart-contracts/programmatic-storage
    method: GET
    data_selector: data
    params: {}
- name: manual_storage
  endpoint:
    path: /manual-storage
    method: GET
    data_selector: data
    params: {}
- name: programmatic_storage
  endpoint:
    path: /smart-contracts/programmatic-storage
    method: GET
    data_selector: data
- name: manual_storage
  endpoint:
    path: /manual-storage
    method: GET
    data_selector: data
- name: aggregated_deal_making
  endpoint:
    path: /smart-contracts/programmatic-storage/aggregated-deal-making
    method: GET
    data_selector: data
    params: {}
- name: aggregation_proof
  endpoint:
    path: /proofs/aggregation
    method: POST
    data_selector: proofs
    params: {}
- name: deals
  endpoint:
    path: /api/v1/deals
    method: GET
    data_selector: data
    params: {}
- name: actors
  endpoint:
    path: /api/v1/actors
    method: GET
    data_selector: data
    params: {}
- name: aggregated_deal_making
  endpoint:
    path: /smart-contracts/programmatic-storage/aggregated-deal-making
    method: GET
    data_selector: records
- name: OnRamp Contract
  endpoint:
    path: /onramp
    method: POST
    data_selector: storage_requests
    params: {}
- name: Oracle Contract
  endpoint:
    path: /oracle
    method: GET
    data_selector: storage_confirmations
    params: {}
- name: Prover Contract
  endpoint:
    path: /prover
    method: POST
    data_selector: storage_deals
    params: {}
- name: Cross-Chain Messaging Bridge
  endpoint:
    path: /messaging
    method: POST
    data_selector: messages
    params: {}
- name: aggregation
  endpoint:
    path: /aggregation
    method: POST
    data_selector: proofs
    params: {}
- name: sub_piece_CID
  endpoint:
    path: /sub_piece_CID
    method: GET
    data_selector: results
    params: {}
- name: onramp_contract
  endpoint:
    path: /services/data/vXX.X/sobjects/OnRamp
    method: GET
    data_selector: records
    params: {}
- name: storage_deals
  endpoint:
    path: /api/storage_deals
    method: POST
    data_selector: data
    params: {}
- name: RaaS
  endpoint:
    path: /raas
    method: POST
    data_selector: deals
    params: {}
- name: register_jobs
  endpoint:
    path: /register_jobs
    method: POST
- name: getActiveDeals
  endpoint:
    path: /getActiveDeals
    method: GET
- name: getExpiringDeals
  endpoint:
    path: /getExpiringDeals
    method: GET
- name: StateMarketStorageDeal
  endpoint:
    path: /StateMarketStorageDeal
    method: GET
- name: OnRamp Contract
  endpoint:
    path: /onramp/contract
    method: POST
    data_selector: storage_requests
- name: Oracle Contract
  endpoint:
    path: /oracle/contract
    method: POST
    data_selector: storage_confirmations
- name: Prover Contract
  endpoint:
    path: /prover/contract
    method: POST
    data_selector: storage_deals
- name: smart_contracts
  endpoint:
    path: /smart-contracts/developing-contracts
    method: GET
    data_selector: contracts
    params: {}
- name: onramp_contract
  endpoint:
    path: /c-chain/address/0xeE857540dddB6E6EA10a5c84f57562F11D5Fb47D
    method: GET
    data_selector: data
    params: {}
- name: oracle_contract
  endpoint:
    path: /c-chain/address/0x476eE57404BD06c957a9BB6BF31216BFFa32dE18
    method: GET
    data_selector: data
    params: {}
- name: prover_contract
  endpoint:
    path: /en/address/0x75c9C9fAC04C696820260CC0bE4201859ff85397
    method: GET
    data_selector: data
    params: {}
- name: test_tokens
  endpoint:
    path: /networks/local-testnet/get-test-tokens
    method: GET
    data_selector: transaction_id
    params: {}
- name: RaaS
  endpoint:
    path: /raas
    method: POST
    data_selector: deals
    params: {}
- name: wallet_list
  endpoint:
    path: /wallet/list
    method: GET
    data_selector: wallets
    params: {}
- name: send_tokens
  endpoint:
    path: /wallet/send
    method: POST
    data_selector: transaction
    params:
      from: <PRE-MINED ADDRESS>
      to: <TO ADDRESS>
      value: <VALUE>
- name: wallet_balance
  endpoint:
    path: /wallet/balance
    method: GET
    data_selector: balance
    params:
      address: <ADDRESS>
- name: register_jobs
  endpoint:
    path: /register_jobs
    method: POST
    data_selector: job_status
- name: erc20_token
  endpoint:
    path: /smart-contracts/developing-contracts/remix
    method: GET
    data_selector: tokens
    params: {}
- name: get_test_tokens
  endpoint:
    path: /networks/local-testnet/get-test-tokens
    method: GET
- name: SimpleCoin
  endpoint:
    path: /rpc/v1
    method: POST
- name: ERC20
  endpoint:
    path: /smart-contracts/fundamentals/erc-20-quickstart
    method: GET
    data_selector: records
    params: {}
- name: OpenZeppelin
  endpoint:
    path: /smart-contracts/developing-contracts/solidity-libraries
    method: GET
    data_selector: records
    params: {}
- name: Protocol API
  endpoint:
    path: /reference/json-rpc
    method: POST
- name: filecoin.sol
  endpoint:
    path: /smart-contracts/developing-contracts/call-built-in-actors
    method: GET
- name: OpenZeppelin
  endpoint:
    path: /smart-contracts/developing-contracts/solidity-libraries
    method: GET
    data_selector: libraries
    params: {}
- name: DappSys
  endpoint:
    path: /smart-contracts/developing-contracts/dappsys
    method: GET
    data_selector: libraries
    params: {}
- name: Account
  endpoint:
    path: /Account
    method: GET
    data_selector: methods
    params: {}
- name: DataCap
  endpoint:
    path: /DataCap
    method: GET
    data_selector: methods
    params: {}
- name: Miner
  endpoint:
    path: /Miner
    method: GET
    data_selector: methods
    params: {}
- name: Multisig
  endpoint:
    path: /Multisig
    method: GET
    data_selector: methods
    params: {}
- name: StorageMarket
  endpoint:
    path: /StorageMarket
    method: GET
    data_selector: methods
    params: {}
- name: StoragePower
  endpoint:
    path: /StoragePower
    method: GET
    data_selector: methods
    params: {}
- name: VerifiedRegistry
  endpoint:
    path: /VerifiedRegistry
    method: GET
    data_selector: methods
    params: {}
- name: built_in_actors
  endpoint:
    path: /reference/built-in-actors
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: methods
    params: {}
- name: datacap
  endpoint:
    path: /datacap
    method: GET
    data_selector: methods
    params: {}
- name: miner
  endpoint:
    path: /miner
    method: GET
    data_selector: methods
    params: {}
- name: multisig
  endpoint:
    path: /multisig
    method: GET
    data_selector: methods
    params: {}
- name: storage_market
  endpoint:
    path: /storage_market
    method: GET
    data_selector: methods
    params: {}
- name: storage_power
  endpoint:
    path: /storage_power
    method: GET
    data_selector: methods
    params: {}
- name: verified_registry
  endpoint:
    path: /verified_registry
    method: GET
    data_selector: methods
    params: {}
- name: MarketAPI
  endpoint:
    path: /contracts/v0.8/MarketAPI.sol
    method: GET
    data_selector: records
- name: CommonTypes
  endpoint:
    path: /contracts/v0.8/types/CommonTypes.sol
    method: GET
    data_selector: records
- name: MarketTypes
  endpoint:
    path: /contracts/v0.8/types/MarketTypes.sol
    method: GET
    data_selector: records
- name: BigIntCBOR
  endpoint:
    path: /contracts/v0.8/cbor/BigIntCbor.sol
    method: GET
    data_selector: records
- name: AccountAPI
  endpoint:
    path: /contracts/v0.8/AccountAPI.sol
    method: GET
    data_selector: records
- name: MinerAPI
  endpoint:
    path: /contracts/v0.8/MinerAPI.sol
    method: GET
    data_selector: records
- name: PowerAPI
  endpoint:
    path: /contracts/v0.8/PowerAPI.sol
    method: GET
    data_selector: records
- name: DataCap
  endpoint:
    path: /contracts/v0.8/DataCap.sol
    method: GET
    data_selector: records
- name: VerifRegAPI
  endpoint:
    path: /contracts/v0.8/VerifRegAPI.sol
    method: GET
    data_selector: records
- name: StorageDealQuery
  endpoint:
    path: /storage/deal
    method: GET
    data_selector: deal_info
    params: {}
- name: MarketAPI
  endpoint:
    path: /contracts/v0.8/MarketAPI.sol
    method: GET
- name: CommonTypes
  endpoint:
    path: /contracts/v0.8/types/CommonTypes.sol
    method: GET
- name: MarketTypes
  endpoint:
    path: /contracts/v0.8/types/MarketTypes.sol
    method: GET
- name: BigIntCBOR
  endpoint:
    path: /contracts/v0.8/cbor/BigIntCbor.sol
    method: GET
- name: AccountAPI
  endpoint:
    path: /contracts/v0.8/AccountAPI.sol
    method: GET
- name: MinerAPI
  endpoint:
    path: /contracts/v0.8/MinerAPI.sol
    method: GET
- name: PowerAPI
  endpoint:
    path: /contracts/v0.8/PowerAPI.sol
    method: GET
- name: DataCap
  endpoint:
    path: /contracts/v0.8/DataCap.sol
    method: GET
- name: VerifRegAPI
  endpoint:
    path: /contracts/v0.8/VerifRegAPI.sol
    method: GET
- name: client_contract
  endpoint:
    path: /smart-contracts/developing-contracts/client-contract-tutorial
    method: GET
- name: StorageDealQuery
  endpoint:
    path: /market/getDealTerm
    method: GET
    data_selector: records
- name: get_deal_provider
  endpoint:
    path: /market/getDealProvider
    method: GET
    data_selector: records
- name: get_deal_provider_collateral
  endpoint:
    path: /market/getDealProviderCollateral
    method: GET
    data_selector: records
- name: client_contract
  endpoint:
    path: /smart-contracts/developing-contracts/client-contract-tutorial
    method: GET
    data_selector: tutorial
    params: {}
- name: make_deal_proposal
  endpoint:
    path: /make-deal-proposal
    method: POST
    data_selector: result
    params:
      contract: '0x0219eB1740C315fe5e20612D7E13AE2A883dB3f4'
      piece-cid: baga6ea4seaqn4eomxfk3ttog7lnvlvedu7nia377w4gotw2pm746k6kq7gwe6ga
      piece-size: 2097152
      car-size: 1439368
      start-epoch: 180000
      end-epoch: 700000
      location-ref: https://bafybeidguwwno5ohjss7g4l6ygvyy3dzxxrkkgtxqkobnnxnu62aw4ipxa.ipfs.w3s.link/ipfs/bafybeidguwwno5ohjss7g4l6ygvyy3dzxxrkkgtxqkobnnxnu62aw4ipxa/baga6ea4seaqn4eomxfk3ttog7lnvlvedu7nia377w4gotw2pm746k6kq7gwe6ga.car
- name: make_deal_proposal
  endpoint:
    path: /make-deal-proposal
    method: POST
    data_selector: parameters
    params:
      contract: '0x0219eB1740C315fe5e20612D7E13AE2A883dB3f4'
      piece-cid: baga6ea4seaqn4eomxfk3ttog7lnvlvedu7nia377w4gotw2pm746k6kq7gwe6ga
      piece-size: 2097152
      car-size: 1439368
      start-epoch: 180000
      end-epoch: 700000
      location-ref: https://bafybeidguwwno5ohjss7g4l6ygvyy3dzxxrkkgtxqkobnnxnu62aw4ipxa.ipfs.w3s.link/ipfs/bafybeidguwwno5ohjss7g4l6ygvyy3dzxxrkkgtxqkobnnxnu62aw4ipxa/baga6ea4seaqn4eomxfk3ttog7lnvlvedu7nia377w4gotw2pm746k6kq7gwe6ga.car
- name: deals
  endpoint:
    path: /api/v1/deals
    method: GET
    data_selector: deals
    params: {}
- name: BaseInterface
  endpoint:
    path: /smart-contracts/programmatic-storage/raas-interfaces
    method: GET
    data_selector: contracts
- name: FullInterface
  endpoint:
    path: /smart-contracts/programmatic-storage/raas-interfaces
    method: GET
    data_selector: contracts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Blockscout
  endpoint:
    path: https://filecoin.blockscout.com/contract-verification
    method: GET
- name: Filfox
  endpoint:
    path: https://filfox.info/en/contract
    method: GET
- name: Starboard
  endpoint:
    path: https://fvm.starboard.ventures/explorer/verifier
    method: GET
- name: Beryx
  endpoint:
    path: https://beryx.zondax.ch/contract_verifier
    method: GET
- name: Sourcify
  endpoint:
    path: https://docs.sourcify.dev/docs/how-to-verify/
    method: GET
- name: BaseInterface
  endpoint:
    path: /api/baseinterface
    method: POST
    data_selector: data
    params: {}
- name: FullInterface
  endpoint:
    path: /api/fullinterface
    method: GET
    data_selector: data
    params: {}
- name: contract_verification
  endpoint:
    path: /verify_contract
    method: GET
    data_selector: contracts
    params: {}
- name: Mainnet
  endpoint:
    path: /0x60E1773636CF5E4A227d9AC24F20fEca034ee25A
    method: GET
- name: Calibration testnet
  endpoint:
    path: /0xaC26a4Ab9cF2A8c5DBaB6fb4351ec0F4b07356c4
    method: GET
- name: Pyth
  endpoint:
    path: /pyth
    method: GET
    data_selector: data
    params: {}
- name: Tellor
  endpoint:
    path: /tellor
    method: GET
    data_selector: data
    params: {}
- name: Mainnet
  endpoint:
    path: /wrapped-fil/mainnet
    method: GET
    data_selector: addresses
- name: Calibration testnet
  endpoint:
    path: /wrapped-fil/calibration-testnet
    method: GET
    data_selector: addresses
- name: Pyth
  endpoint:
    path: /pyth
    method: GET
    data_selector: data
    params: {}
- name: Tellor
  endpoint:
    path: /tellor
    method: GET
    data_selector: data
    params: {}
- name: EOFeedManager
  endpoint:
    path: /eoracle/EOFeedManager
    method: GET
- name: EOFeedAdapter - AUD/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/AUD/USD
    method: GET
- name: EOFeedAdapter - BTC/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/BTC/USD
    method: GET
- name: EOFeedAdapter - ETH/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/ETH/USD
    method: GET
- name: EOFeedAdapter - EUR/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/EUR/USD
    method: GET
- name: EOFeedAdapter - FIL/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/FIL/USD
    method: GET
- name: EOFeedAdapter - GBP/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/GBP/USD
    method: GET
- name: EOFeedAdapter - LINK/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/LINK/USD
    method: GET
- name: EOFeedAdapter - SOL/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/SOL/USD
    method: GET
- name: EOFeedAdapter - USDT/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/USDT/USD
    method: GET
- name: EOFeedAdapter - XAU/USD
  endpoint:
    path: /eoracle/EOFeedAdapter/XAU/USD
    method: GET
- name: EOFeedAdapter - sFRAX/FRAX
  endpoint:
    path: /eoracle/EOFeedAdapter/sFRAX/FRAX
    method: GET
- name: EOFeedAdapter - sfrxETH/frxETH
  endpoint:
    path: /eoracle/EOFeedAdapter/sfrxETH/frxETH
    method: GET
- name: EOFeedAdapter - stETH/ETH
  endpoint:
    path: /eoracle/EOFeedAdapter/stETH/ETH
    method: GET
- name: multicall
  endpoint:
    path: /multicall
    method: POST
    data_selector: result
    params: {}
- name: aggregate3
  endpoint:
    path: /aggregate3
    method: POST
    data_selector: returnData
- name: Filecoin Native Multisig
  endpoint:
    path: /multisig/native
    method: GET
    data_selector: multisig_actors
- name: Glif Multisig
  endpoint:
    path: /multisig/glif
    method: GET
    data_selector: glif_multisig_ui
- name: MultisigActor CLI
  endpoint:
    path: /multisig/cli
    method: GET
    data_selector: multisig_actor_cli
- name: EOFeedManager
  endpoint:
    path: /0x4BCafd5f3fB32221BaEAF6B986d1449772885D1E
    method: GET
- name: EOFeedAdapter - AUD/USD
  endpoint:
    path: /0x6243357B9241Fe9C3BAfbA79DeD3300a855113FA
    method: GET
- name: EOFeedAdapter - BTC/USD
  endpoint:
    path: /0x705256d9B37950628F97A1a8De7Ab557345a0A80
    method: GET
- name: EOFeedAdapter - ETH/USD
  endpoint:
    path: /0x2bada837140A310f4A1d9D0e7fab114da6b87031
    method: GET
- name: EOFeedAdapter - EUR/USD
  endpoint:
    path: /0x7C01e105B9c3772Bc72ef55F450b9B96f81EDE82
    method: GET
- name: EOFeedAdapter - FIL/USD
  endpoint:
    path: /0x335C47CF754cf7f5d6DF78EF9fAb065aa5988D89
    method: GET
- name: EOFeedAdapter - GBP/USD
  endpoint:
    path: /0x2Af9bb239936aC3e5a35CC804CD09a8CF3B589e7
    method: GET
- name: EOFeedAdapter - LINK/USD
  endpoint:
    path: /0x7E8326Fd75aCa5A7dF43E999A1119c392EDFC93a
    method: GET
- name: EOFeedAdapter - SOL/USD
  endpoint:
    path: /0x7E3e2953d69890f6B7E5831144986113E9199593
    method: GET
- name: EOFeedAdapter - USDT/USD
  endpoint:
    path: /0x30f43F80279b7BB1b9206896DB90Aabf69494c16
    method: GET
- name: EOFeedAdapter - XAU/USD
  endpoint:
    path: /0x8609B3087D473cD2B6bc7674dD54FF13c909027f
    method: GET
- name: EOFeedAdapter - sFRAX/FRAX
  endpoint:
    path: /0xd56f6CC400f3bFC77faeC4bBb1e0400c6A26A925
    method: GET
- name: EOFeedAdapter - sfrxETH/frxETH
  endpoint:
    path: /0x626A1Cb309289Eb542710D6093C6341562769983
    method: GET
- name: EOFeedAdapter - stETH/ETH
  endpoint:
    path: /0x0834Bb4baf2758a3642636C89D18F97ED6672D1C
    method: GET
- name: Safe transaction service
  endpoint:
    path: /
    method: GET
- name: multicall
  endpoint:
    path: /multicall
    method: POST
    data_selector: result
- name: wfil-subgraph
  endpoint:
    path: /subgraph/wfil-subgraph
    method: POST
    data_selector: data
    params: {}
- name: multisig_wallets
  endpoint:
    path: /multisig/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: Axelar
  endpoint:
    path: /axelar
    method: GET
    data_selector: assets
    params: {}
- name: Celer
  endpoint:
    path: /celer
    method: GET
    data_selector: assets
    params: {}
- name: wfil-subgraph
  endpoint:
    path: /subgraph
    method: POST
    data_selector: data
    params:
      contract_address: '0xaC26a4Ab9cF2A8c5DBaB6fb4351ec0F4b07356c4'
      contract_network: filecoin-testnet
- name: proof_of_deal_sub_piece_inclusion
  endpoint:
    path: /aggregated-deal-making/proof-of-deal-sub-piece-inclusion
    method: GET
    data_selector: proofs
    params: {}
- name: Axelar
  endpoint:
    path: /axelar
    method: GET
    data_selector: assets
    params: {}
- name: Celer
  endpoint:
    path: /celer
    method: GET
    data_selector: assets
    params: {}
- name: Gelato
  endpoint:
    path: /gelato
    method: GET
    data_selector: relay_info
    params: {}
- name: Proof of Deal Sub-piece Inclusion
  endpoint:
    path: /aggregated-deal-making/pods
    method: GET
    data_selector: proofs
- name: sponsoredCallERC2771
  endpoint:
    path: /sponsoredCallERC2771
    method: POST
    data_selector: response.data
- name: web3_function
  endpoint:
    path: /web3-functions/YOUR-FUNCTION/index.ts
    method: POST
- name: Gelato
  endpoint:
    path: /relay/gelato
    method: GET
- name: ChainHead
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: null
    params: null
- name: ChainGetBlock
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: null
    params: null
- name: ChainGetMessage
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: null
    params: null
- name: sponsoredCallERC2771
  endpoint:
    path: /sponsoredCallERC2771
    method: POST
    data_selector: data
    params: {}
- name: Glif Nodes
  endpoint:
    path: /rpc/v1
    method: GET
    data_selector: records
- name: Ankr
  endpoint:
    path: ''
    method: GET
    data_selector: records
- name: Chainup Cloud
  endpoint:
    path: /rpc/v1
    method: GET
    data_selector: records
- name: NOWNodes
  endpoint:
    path: ''
    method: GET
    data_selector: records
- name: Lava
  endpoint:
    path: ''
    method: GET
    data_selector: records
- name: ChainHead
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: ChainGetBlock
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: ChainGetMessage
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: calibration_network
  endpoint:
    path: /networks/calibration
    method: GET
    data_selector: network_info
- name: Glif Nodes
  endpoint:
    path: /rpc/v1
    method: GET
- name: Ankr
  endpoint:
    path: /filecoin
    method: GET
- name: Chainup Cloud
  endpoint:
    path: /rpc/v1
    method: GET
- name: NOWNodes
  endpoint:
    path: ''
    method: GET
- name: Lava
  endpoint:
    path: ''
    method: GET
- name: chain_head
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: Beryx
  endpoint:
    path: https://beryx.zondax.ch
    method: GET
    data_selector: ''
    params: {}
- name: FILFOX
  endpoint:
    path: http://47.109.105.51/en
    method: GET
    data_selector: ''
    params: {}
- name: Filscan
  endpoint:
    path: https://calibration.filscan.io/
    method: GET
    data_selector: ''
    params: {}
- name: Blockscout Open-Source FEVM Explorer
  endpoint:
    path: https://filecoin-testnet.blockscout.com
    method: GET
    data_selector: ''
    params: {}
- name: Starboard
  endpoint:
    path: https://fvm.starboard.ventures/
    method: GET
    data_selector: ''
    params: {}
- name: Ankr
  endpoint:
    path: /
    method: GET
- name: ChainupCloud
  endpoint:
    path: /rpc/v1
    method: GET
- name: Glif
  endpoint:
    path: /rpc/v1
    method: GET
- name: chain_info
  endpoint:
    path: /chain/id
    method: GET
    data_selector: chain_id
- name: websocket_info
  endpoint:
    path: /websocket
    method: GET
    data_selector: websocket_url
- name: ChainHead
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: Beryx
  endpoint:
    path: beryx.zondax.ch
    method: GET
- name: FILFOX
  endpoint:
    path: calibration.filfox.info/en
    method: GET
- name: Filscan
  endpoint:
    path: calibration.filscan.io
    method: GET
- name: Blockscout Open-Source FEVM Explorer
  endpoint:
    path: filecoin-testnet.blockscout.com
    method: GET
- name: Starboard
  endpoint:
    path: fvm.starboard.ventures
    method: GET
- name: Ankr
  endpoint:
    path: /rpc/v1
    method: GET
- name: ChainupCloud
  endpoint:
    path: /rpc/v1
    method: GET
- name: Glif
  endpoint:
    path: /rpc/v1
    method: GET
- name: wallet
  endpoint:
    path: /wallet
    method: GET
    data_selector: wallets
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: transaction
- name: wallet
  endpoint:
    path: /lotus/wallet
    method: GET
    data_selector: wallets
    params: {}
- name: send
  endpoint:
    path: /lotus/send
    method: POST
    data_selector: transaction
    params: {}
- name: wallet_list
  endpoint:
    path: /wallet/list
    method: GET
    data_selector: wallets
    params: {}
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: transaction
    params: {}
- name: wallet_balance
  endpoint:
    path: /wallet/balance
    method: GET
    data_selector: balance
    params: {}
- name: Nerpanet
  endpoint:
    path: /networks/nerpanet
    method: GET
    data_selector: deprecated_date
    params: {}
- name: Spacenet
  endpoint:
    path: /networks/spacenet
    method: GET
    data_selector: deprecated_date
    params: {}
- name: Wallaby
  endpoint:
    path: /networks/wallaby
    method: GET
    data_selector: deprecated_date
    params: {}
- name: wallet
  endpoint:
    path: /wallet
    method: POST
    data_selector: address
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: transaction
- name: wallet
  endpoint:
    path: /lotus/wallet
    method: GET
    data_selector: wallets
    params: {}
- name: send_funds
  endpoint:
    path: /lotus/send
    method: POST
    data_selector: send_result
    params: {}
- name: wallet_list
  endpoint:
    path: /wallet/list
    method: GET
    data_selector: wallets
    params: {}
- name: wallet_balance
  endpoint:
    path: /wallet/balance
    method: GET
    data_selector: balance
    params: {}
- name: send
  endpoint:
    path: /send
    method: POST
    data_selector: transaction_id
    params: {}
- name: sync_status
  endpoint:
    path: /sync/status
    method: GET
    data_selector: sync_status
    params: {}
- name: specification
  endpoint:
    path: /reference/general/specifications
    method: GET
    data_selector: specification
- name: ChainHead
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: ChainGetTipSetByHeight
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: ChainGetParentMessages
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: WalletNew
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: WalletBalance
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: MpoolPushMessage
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: MpoolPending
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: result
    params: {}
- name: blocks
  endpoint:
    path: /blocks
    method: GET
    data_selector: blocks
    params: {}
- name: state_tree
  endpoint:
    path: /state/tree
    method: GET
    data_selector: state
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
    params: {}
- name: actor_code
  endpoint:
    path: /actor/code
    method: GET
    data_selector: actor_code
    params: {}
- name: types_of_actors
  endpoint:
    path: /actors/types
    method: GET
    data_selector: actors
    params: {}
- name: sync_status
  endpoint:
    path: /lotus/sync/status
    method: GET
    data_selector: sync_status
    params: {}
- name: AuthenticateMessage
  endpoint:
    path: AuthenticateMessage
    method: POST
    data_selector: EmptyValue
    params: {}
- name: UniversalReceiverHook
  endpoint:
    path: UniversalReceiverHook
    method: POST
    data_selector: EmptyValue
    params: {}
- name: Datacap
  endpoint:
    path: Name
    method: GET
    data_selector: DataCap
    params: {}
- name: ChainHead
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: ChainGetTipSetByHeight
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: ChainGetParentMessages
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: WalletNew
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: WalletBalance
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: MpoolPushMessage
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: MpoolPending
  endpoint:
    path: /rpc/v0
    method: POST
    data_selector: null
    params: {}
- name: AddBalance
  endpoint:
    path: /AddBalance
    method: POST
    data_selector: result
    params: {}
- name: GetBalance
  endpoint:
    path: /GetBalance
    method: GET
    data_selector: result
    params: {}
- name: WithdrawBalance
  endpoint:
    path: /WithdrawBalance
    method: POST
    data_selector: result
    params: {}
- name: PublishStorageDeals
  endpoint:
    path: /PublishStorageDeals
    method: POST
    data_selector: result
    params: {}
- name: GetDealDataCommitment
  endpoint:
    path: /GetDealDataCommitment
    method: GET
    data_selector: result
    params: {}
- name: GetDealClient
  endpoint:
    path: /GetDealClient
    method: GET
    data_selector: result
    params: {}
- name: GetDealProvider
  endpoint:
    path: /GetDealProvider
    method: GET
    data_selector: result
    params: {}
- name: CronActor
  endpoint:
    path: /reference/built-in-actors/overview/#cronactor
    method: GET
- name: InitActor
  endpoint:
    path: /reference/built-in-actors/overview/#initactor
    method: GET
- name: AccountActor
  endpoint:
    path: /reference/built-in-actors/overview/#accountactor
    method: GET
- name: RewardActor
  endpoint:
    path: /reference/built-in-actors/overview/#rewardactor
    method: GET
- name: StorageMarketActor
  endpoint:
    path: /reference/built-in-actors/overview/#storagemarketactor
    method: GET
- name: StorageMinerActor
  endpoint:
    path: /reference/built-in-actors/overview/#storagemineractor
    method: GET
- name: MultisigActor
  endpoint:
    path: /reference/built-in-actors/overview/#multisigactor
    method: GET
- name: PaymentChannelActor
  endpoint:
    path: /reference/built-in-actors/overview/#paymentchannelactor
    method: GET
- name: StoragePowerActor
  endpoint:
    path: /reference/built-in-actors/overview/#storagepoweractor
    method: GET
- name: VerifiedRegistryActor
  endpoint:
    path: /reference/built-in-actors/overview/#verifiedregistryactor
    method: GET
- name: SystemActor
  endpoint:
    path: /reference/built-in-actors/overview/#systemactor
    method: GET
- name: CronActor
  endpoint:
    path: /cron-actor
    method: GET
    data_selector: messages
- name: InitActor
  endpoint:
    path: /init-actor
    method: GET
    data_selector: initialization
- name: AccountActor
  endpoint:
    path: /account-actor
    method: GET
    data_selector: accounts
- name: RewardActor
  endpoint:
    path: /reward-actor
    method: GET
    data_selector: rewards
- name: StorageMarketActor
  endpoint:
    path: /storage-market-actor
    method: GET
    data_selector: deals
- name: StorageMinerActor
  endpoint:
    path: /storage-miner-actor
    method: GET
    data_selector: mining
- name: MultisigActor
  endpoint:
    path: /multisig-actor
    method: GET
    data_selector: signers
- name: PaymentChannelActor
  endpoint:
    path: /payment-channel-actor
    method: GET
    data_selector: channels
- name: StoragePowerActor
  endpoint:
    path: /storage-power-actor
    method: GET
    data_selector: storage
- name: VerifiedRegistryActor
  endpoint:
    path: /verified-registry-actor
    method: GET
    data_selector: clients
- name: SystemActor
  endpoint:
    path: /system-actor
    method: GET
    data_selector: system_info
- name: AuthenticateMessage
  endpoint:
    path: /reference/built-in-actors/protocol-api/#authenticateMessage
    method: GET
    data_selector: AuthenticateMessageParams
    params: {}
- name: UniversalReceiverHook
  endpoint:
    path: /reference/built-in-actors/protocol-api/#universalreceiverhook
    method: GET
    data_selector: RawBytes
    params: {}
- name: Datacap
  endpoint:
    path: /reference/built-in-actors/protocol-api/#datacap
    method: GET
    data_selector: Name
    params: {}
- name: GetDealLabel
  endpoint:
    path: /GetDealLabel
    method: GET
    data_selector: GetDealLabelReturn
    params: {}
- name: GetDealTerm
  endpoint:
    path: /GetDealTerm
    method: GET
    data_selector: GetDealTermReturn
    params: {}
- name: GetDealTotalPrice
  endpoint:
    path: /GetDealTotalPrice
    method: GET
    data_selector: GetDealTotalPriceReturn
    params: {}
- name: GetDealClientCollateral
  endpoint:
    path: /GetDealClientCollateral
    method: GET
    data_selector: GetDealClientCollateralReturn
    params: {}
- name: GetDealProviderCollateral
  endpoint:
    path: /GetDealProviderCollateral
    method: GET
    data_selector: GetDealProviderCollateralReturn
    params: {}
- name: GetDealVerified
  endpoint:
    path: /GetDealVerified
    method: GET
    data_selector: GetDealVerifiedReturn
    params: {}
- name: GetDealActivation
  endpoint:
    path: /GetDealActivation
    method: GET
    data_selector: GetDealActivationReturn
    params: {}
- name: CreateMiner
  endpoint:
    path: /CreateMiner
    method: GET
    data_selector: CreateMinerReturn
    params: {}
- name: NetworkRawPower
  endpoint:
    path: /NetworkRawPower
    method: GET
    data_selector: NetworkRawPowerReturn
    params: {}
- name: MinerRawPower
  endpoint:
    path: /MinerRawPower
    method: GET
    data_selector: MinerRawPowerParams
    params: {}
- name: MinerCount
  endpoint:
    path: /MinerCount
    method: GET
    data_selector: MinerCountReturn
    params: {}
- name: MinerConsensusCount
  endpoint:
    path: /MinerConsensusCount
    method: GET
    data_selector: MinerConsensusCountReturn
    params: {}
- name: AddVerifiedClient
  endpoint:
    path: /AddVerifiedClient
    method: GET
    data_selector: EmptyValue
    params: {}
- name: RemoveExpiredAllocations
  endpoint:
    path: /RemoveExpiredAllocations
    method: GET
    data_selector: RemoveExpiredAllocationsReturn
    params: {}
- name: GetClaims
  endpoint:
    path: /GetClaims
    method: GET
    data_selector: GetClaimsReturn
    params: {}
- name: ExtendClaimTerms
  endpoint:
    path: /ExtendClaimTerms
    method: GET
    data_selector: ExtendClaimTermsReturn
    params: {}
- name: RemoveExpiredClaims
  endpoint:
    path: /RemoveExpiredClaims
    method: GET
    data_selector: RemoveExpiredClaimsReturn
    params: {}
- name: AddBalance
  endpoint:
    path: /AddBalance
    method: POST
    data_selector: results
    params: {}
- name: GetBalance
  endpoint:
    path: /GetBalance
    method: GET
    data_selector: results
    params: {}
- name: WithdrawBalance
  endpoint:
    path: /WithdrawBalance
    method: POST
    data_selector: results
    params: {}
- name: PublishStorageDeals
  endpoint:
    path: /PublishStorageDeals
    method: POST
    data_selector: results
    params: {}
- name: GetDealDataCommitment
  endpoint:
    path: /GetDealDataCommitment
    method: GET
    data_selector: results
    params: {}
- name: GetDealClient
  endpoint:
    path: /GetDealClient
    method: GET
    data_selector: results
    params: {}
- name: GetDealProvider
  endpoint:
    path: /GetDealProvider
    method: GET
    data_selector: results
    params: {}
- name: account_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-account-actor
    method: GET
    data_selector: methods
- name: datacap_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-datacap-actor
    method: GET
    data_selector: methods
- name: miner_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-miner-actor
    method: GET
    data_selector: methods
- name: storage_market_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-storage-market-actor
    method: GET
    data_selector: methods
- name: storage_power_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-storage-power-actor
    method: GET
    data_selector: methods
- name: verified_registry_actor
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-verified-registry-actor
    method: GET
    data_selector: methods
- name: storage_market_actor
  endpoint:
    path: /call/storage_market_actor
    method: POST
    data_selector: results
- name: miner_actor
  endpoint:
    path: /call/miner_actor
    method: POST
    data_selector: results
- name: storage_power_actor
  endpoint:
    path: /call/storage_power_actor
    method: POST
    data_selector: results
- name: verified_registry_actor
  endpoint:
    path: /call/verified_registry_actor
    method: POST
    data_selector: results
- name: ChainBlockstoreInfo
  endpoint:
    path: /ChainBlockstoreInfo
    method: GET
    data_selector: abc
- name: ChainCheckBlockstore
  endpoint:
    path: /ChainCheckBlockstore
    method: GET
    data_selector: '{}'
- name: ChainDeleteObj
  endpoint:
    path: /ChainDeleteObj
    method: POST
    data_selector: '{}'
- name: ChainExport
  endpoint:
    path: /ChainExport
    method: POST
    data_selector: '"Ynl0ZSBhcnJheQ=="'
- name: ChainExportRangeInternal
  endpoint:
    path: /ChainExportRangeInternal
    method: POST
    data_selector: '{}'
- name: GetDealLabel
  endpoint:
    path: /GetDealLabel
    method: GET
    data_selector: GetDealLabelReturn
    params: {}
- name: GetDealTerm
  endpoint:
    path: /GetDealTerm
    method: GET
    data_selector: GetDealTermReturn
    params: {}
- name: GetDealTotalPrice
  endpoint:
    path: /GetDealTotalPrice
    method: GET
    data_selector: GetDealTotalPriceReturn
    params: {}
- name: GetDealClientCollateral
  endpoint:
    path: /GetDealClientCollateral
    method: GET
    data_selector: GetDealClientCollateralReturn
    params: {}
- name: GetDealProviderCollateral
  endpoint:
    path: /GetDealProviderCollateral
    method: GET
    data_selector: GetDealProviderCollateralReturn
    params: {}
- name: GetDealVerified
  endpoint:
    path: /GetDealVerified
    method: GET
    data_selector: GetDealVerifiedReturn
    params: {}
- name: GetDealActivation
  endpoint:
    path: /GetDealActivation
    method: GET
    data_selector: GetDealActivationReturn
    params: {}
- name: CreateMiner
  endpoint:
    path: /CreateMiner
    method: GET
    data_selector: CreateMinerReturn
    params: {}
- name: NetworkRawPower
  endpoint:
    path: /NetworkRawPower
    method: GET
    data_selector: NetworkRawPowerReturn
    params: {}
- name: MinerRawPower
  endpoint:
    path: /MinerRawPower
    method: GET
    data_selector: MinerRawPowerParams
    params: {}
- name: MinerCount
  endpoint:
    path: /MinerCount
    method: GET
    data_selector: MinerCountReturn
    params: {}
- name: MinerConsensusCount
  endpoint:
    path: /MinerConsensusCount
    method: GET
    data_selector: MinerConsensusCountReturn
    params: {}
- name: AddVerifiedClient
  endpoint:
    path: /AddVerifiedClient
    method: GET
    data_selector: EmptyValue
    params: {}
- name: RemoveExpiredAllocations
  endpoint:
    path: /RemoveExpiredAllocations
    method: GET
    data_selector: RemoveExpiredAllocationsReturn
    params: {}
- name: GetClaims
  endpoint:
    path: /GetClaims
    method: GET
    data_selector: GetClaimsReturn
    params: {}
- name: ExtendClaimTerms
  endpoint:
    path: /ExtendClaimTerms
    method: GET
    data_selector: ExtendClaimTermsReturn
    params: {}
- name: RemoveExpiredClaims
  endpoint:
    path: /RemoveExpiredClaims
    method: GET
    data_selector: RemoveExpiredClaimsReturn
    params: {}
- name: account
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-account-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: datacap
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-datacap-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: miner
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-miner-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: storage_market
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-storage-market-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: storage_power
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-storage-power-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: verified_registry
  endpoint:
    path: /reference/built-in-actors/filecoin.sol#call-the-verified-registry-actor
    method: GET
    data_selector: available actor methods
    params: {}
- name: storage_market_actor
  endpoint:
    path: /api/storage_market
    method: GET
    data_selector: methods
- name: miner_actor
  endpoint:
    path: /api/miner
    method: GET
    data_selector: methods
- name: storage_power_actor
  endpoint:
    path: /api/storage_power
    method: GET
    data_selector: methods
- name: verified_registry_actor
  endpoint:
    path: /api/verified_registry
    method: GET
    data_selector: methods
- name: GetBlock
  endpoint:
    path: /ChainGetBlock
    method: GET
    data_selector: response
    params: {}
- name: GetBlockMessages
  endpoint:
    path: /ChainGetBlockMessages
    method: GET
    data_selector: response
    params: {}
- name: GetEvents
  endpoint:
    path: /ChainGetEvents
    method: GET
    data_selector: response
    params: {}
- name: GetGenesis
  endpoint:
    path: /ChainGetGenesis
    method: GET
    data_selector: response
    params: {}
- name: GetMessage
  endpoint:
    path: /ChainGetMessage
    method: GET
    data_selector: response
    params: {}
- name: GetMessagesInTipset
  endpoint:
    path: /ChainGetMessagesInTipset
    method: GET
    data_selector: response
    params: {}
- name: GetNode
  endpoint:
    path: /ChainGetNode
    method: GET
    data_selector: response
    params: {}
- name: GetParentMessages
  endpoint:
    path: /ChainGetParentMessages
    method: GET
    data_selector: response
    params: {}
- name: GetParentReceipts
  endpoint:
    path: /ChainGetParentReceipts
    method: GET
    data_selector: response
    params: {}
- name: GetPath
  endpoint:
    path: /ChainGetPath
    method: GET
    data_selector: response
    params: {}
- name: GetTipSet
  endpoint:
    path: /ChainGetTipSet
    method: GET
    data_selector: response
    params: {}
- name: GetTipSetAfterHeight
  endpoint:
    path: /ChainGetTipSetAfterHeight
    method: GET
    data_selector: response
    params: {}
- name: GetTipSetByHeight
  endpoint:
    path: /ChainGetTipSetByHeight
    method: GET
    data_selector: response
    params: {}
- name: HasObj
  endpoint:
    path: /ChainHasObj
    method: GET
    data_selector: response
    params: {}
- name: Head
  endpoint:
    path: /ChainHead
    method: GET
    data_selector: response
    params: {}
- name: HotGC
  endpoint:
    path: /ChainHotGC
    method: POST
    data_selector: response
    params: {}
- name: Notify
  endpoint:
    path: /ChainNotify
    method: GET
    data_selector: response
    params: {}
- name: Prune
  endpoint:
    path: /ChainPrune
    method: POST
    data_selector: response
    params: {}
- name: PutObj
  endpoint:
    path: /ChainPutObj
    method: POST
    data_selector: response
    params: {}
- name: ReadObj
  endpoint:
    path: /ChainReadObj
    method: GET
    data_selector: response
    params: {}
- name: SetHead
  endpoint:
    path: /ChainSetHead
    method: POST
    data_selector: response
    params: {}
- name: StatObj
  endpoint:
    path: /ChainStatObj
    method: GET
    data_selector: response
    params: {}
- name: ChainBlockstoreInfo
  endpoint:
    path: /ChainBlockstoreInfo
    method: GET
    data_selector: abc
    params: {}
- name: ChainCheckBlockstore
  endpoint:
    path: /ChainCheckBlockstore
    method: GET
    data_selector: '{}'
    params: {}
- name: ChainDeleteObj
  endpoint:
    path: /ChainDeleteObj
    method: POST
    data_selector: '{}'
    params: {}
- name: ChainExport
  endpoint:
    path: /ChainExport
    method: POST
    data_selector: Ynl0ZSBhcnJheQ==
    params: {}
- name: ChainExportRangeInternal
  endpoint:
    path: /ChainExportRangeInternal
    method: POST
    data_selector: '{}'
    params: {}
- name: ChainTipSetWeight
  endpoint:
    path: /chain/tipset/weight
    method: POST
    data_selector: result
    params: {}
- name: CreateBackup
  endpoint:
    path: /createBackup
    method: POST
    data_selector: '{}'
- name: EthAccounts
  endpoint:
    path: /eth/accounts
    method: GET
    data_selector: '[]'
    params: {}
- name: EthAddressToFilecoinAddress
  endpoint:
    path: /eth/addressToFilecoinAddress
    method: POST
    data_selector: response
    params: {}
- name: FilecoinAddressToEthAddress
  endpoint:
    path: /eth/filecoinAddressToEthAddress
    method: POST
    data_selector: response
    params: {}
- name: EthBlockNumber
  endpoint:
    path: /eth/blockNumber
    method: GET
    data_selector: response
    params: {}
- name: ChainGetBlock
  endpoint:
    path: /ChainGetBlock
    method: POST
    data_selector: Block
    params: {}
- name: ChainGetBlockMessages
  endpoint:
    path: /ChainGetBlockMessages
    method: POST
    data_selector: Messages
    params: {}
- name: ChainGetEvents
  endpoint:
    path: /ChainGetEvents
    method: POST
    data_selector: Events
    params: {}
- name: ChainGetGenesis
  endpoint:
    path: /ChainGetGenesis
    method: POST
    data_selector: Genesis
    params: {}
- name: ChainGetMessage
  endpoint:
    path: /ChainGetMessage
    method: POST
    data_selector: Message
    params: {}
- name: ChainGetMessagesInTipset
  endpoint:
    path: /ChainGetMessagesInTipset
    method: POST
    data_selector: MessagesInTipset
    params: {}
- name: ChainGetNode
  endpoint:
    path: /ChainGetNode
    method: POST
    data_selector: Node
    params: {}
- name: ChainGetParentMessages
  endpoint:
    path: /ChainGetParentMessages
    method: POST
    data_selector: ParentMessages
    params: {}
- name: ChainGetParentReceipts
  endpoint:
    path: /ChainGetParentReceipts
    method: POST
    data_selector: ParentReceipts
    params: {}
- name: ChainGetPath
  endpoint:
    path: /ChainGetPath
    method: POST
    data_selector: Path
    params: {}
- name: ChainGetTipSet
  endpoint:
    path: /ChainGetTipSet
    method: POST
    data_selector: TipSet
    params: {}
- name: ChainGetTipSetAfterHeight
  endpoint:
    path: /ChainGetTipSetAfterHeight
    method: POST
    data_selector: TipSetAfterHeight
    params: {}
- name: ChainGetTipSetByHeight
  endpoint:
    path: /ChainGetTipSetByHeight
    method: POST
    data_selector: TipSetByHeight
    params: {}
- name: ChainHasObj
  endpoint:
    path: /ChainHasObj
    method: POST
    data_selector: HasObj
    params: {}
- name: ChainHead
  endpoint:
    path: /ChainHead
    method: POST
    data_selector: Head
    params: {}
- name: ChainHotGC
  endpoint:
    path: /ChainHotGC
    method: POST
    data_selector: HotGC
    params: {}
- name: ChainNotify
  endpoint:
    path: /ChainNotify
    method: POST
    data_selector: Notify
    params: {}
- name: ChainPrune
  endpoint:
    path: /ChainPrune
    method: POST
    data_selector: Prune
    params: {}
- name: ChainPutObj
  endpoint:
    path: /ChainPutObj
    method: POST
    data_selector: PutObj
    params: {}
- name: ChainReadObj
  endpoint:
    path: /ChainReadObj
    method: POST
    data_selector: ReadObj
    params: {}
- name: ChainSetHead
  endpoint:
    path: /ChainSetHead
    method: POST
    data_selector: SetHead
    params: {}
- name: ChainStatObj
  endpoint:
    path: /ChainStatObj
    method: POST
    data_selector: StatObj
    params: {}
- name: tipset_weight
  endpoint:
    path: /chain/tipset/weight
    method: POST
    data_selector: response
    params: {}
- name: CreateBackup
  endpoint:
    path: /reference/json-rpc/create
    method: POST
    data_selector: '{}'
- name: EthAccounts
  endpoint:
    path: /eth/accounts
    method: GET
    data_selector: result
    params: {}
- name: EthAddressToFilecoinAddress
  endpoint:
    path: /eth/addressToFilecoinAddress
    method: POST
    data_selector: result
    params: {}
- name: FilecoinAddressToEthAddress
  endpoint:
    path: /eth/filecoinAddressToEthAddress
    method: POST
    data_selector: result
    params: {}
- name: EthBlockNumber
  endpoint:
    path: /eth/blockNumber
    method: GET
    data_selector: result
    params: {}
- name: EthCall
  endpoint:
    path: /EthCall
    method: POST
    data_selector: result
- name: EthChainId
  endpoint:
    path: /EthChainId
    method: POST
    data_selector: result
- name: EthEstimateGas
  endpoint:
    path: /EthEstimateGas
    method: POST
    data_selector: result
- name: EthFeeHistory
  endpoint:
    path: /EthFeeHistory
    method: POST
    data_selector: result
- name: EthGasPrice
  endpoint:
    path: /EthGasPrice
    method: POST
    data_selector: result
- name: EthGetBalance
  endpoint:
    path: /EthGetBalance
    method: POST
    data_selector: result
- name: EthGetBlockByHash
  endpoint:
    path: /EthGetBlockByHash
    method: POST
    data_selector: result
- name: EthGetBlockByNumber
  endpoint:
    path: /EthGetBlockByNumber
    method: POST
    data_selector: result
- name: EthGetBlockTransactionCountByHash
  endpoint:
    path: /EthGetBlockTransactionCountByHash
    method: POST
    data_selector: result
- name: EthGetBlockTransactionCountByNumber
  endpoint:
    path: /EthGetBlockTransactionCountByNumber
    method: POST
    data_selector: result
- name: EthGetCode
  endpoint:
    path: /EthGetCode
    method: POST
    data_selector: result
- name: EthGetFilterChanges
  endpoint:
    path: /EthGetFilterChanges
    method: POST
    data_selector: result
- name: EthGetFilterLogs
  endpoint:
    path: /EthGetFilterLogs
    method: POST
    data_selector: result
- name: EthGetLogs
  endpoint:
    path: /EthGetLogs
    method: POST
    data_selector: result
- name: EthGetMessageCidByTransactionHash
  endpoint:
    path: /EthGetMessageCidByTransactionHash
    method: POST
    data_selector: result
- name: EthGetStorageAt
  endpoint:
    path: /EthGetStorageAt
    method: POST
    data_selector: result
- name: EthGetTransactionByBlockHashAndIndex
  endpoint:
    path: /EthGetTransactionByBlockHashAndIndex
    method: POST
    data_selector: result
- name: EthGetTransactionByBlockNumberAndIndex
  endpoint:
    path: /EthGetTransactionByBlockNumberAndIndex
    method: POST
    data_selector: result
- name: EthGetTransactionByHash
  endpoint:
    path: /EthGetTransactionByHash
    method: POST
    data_selector: result
- name: EthGetTransactionByHashLimited
  endpoint:
    path: /EthGetTransactionByHashLimited
    method: POST
    data_selector: result
- name: EthGetTransactionCount
  endpoint:
    path: /EthGetTransactionCount
    method: POST
    data_selector: result
- name: EthGetTransactionHashByCid
  endpoint:
    path: /EthGetTransactionHashByCid
    method: POST
    data_selector: result
- name: EthGetTransactionReceipt
  endpoint:
    path: /EthGetTransactionReceipt
    method: POST
    data_selector: result
- name: GetTransactionReceiptLimited
  endpoint:
    path: /GetTransactionReceiptLimited
    method: POST
    data_selector: transactionHash
    params: {}
- name: MaxPriorityFeePerGas
  endpoint:
    path: /MaxPriorityFeePerGas
    method: POST
    data_selector: result
    params: {}
- name: NewBlockFilter
  endpoint:
    path: /NewBlockFilter
    method: POST
    data_selector: result
    params: {}
- name: NewFilter
  endpoint:
    path: /NewFilter
    method: POST
    data_selector: result
    params: {}
- name: NewPendingTransactionFilter
  endpoint:
    path: /NewPendingTransactionFilter
    method: POST
    data_selector: result
    params: {}
- name: ProtocolVersion
  endpoint:
    path: /ProtocolVersion
    method: POST
    data_selector: result
    params: {}
- name: SendRawTransaction
  endpoint:
    path: /SendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: Subscribe
  endpoint:
    path: /Subscribe
    method: POST
    data_selector: result
    params: {}
- name: Syncing
  endpoint:
    path: /Syncing
    method: POST
    data_selector: result
    params: {}
- name: TraceBlock
  endpoint:
    path: /TraceBlock
    method: POST
    data_selector: result
    params: {}
- name: TraceReplayBlockTransactions
  endpoint:
    path: /TraceReplayBlockTransactions
    method: POST
    data_selector: result
    params: {}
- name: UninstallFilter
  endpoint:
    path: /UninstallFilter
    method: POST
    data_selector: result
    params: {}
- name: Unsubscribe
  endpoint:
    path: /Unsubscribe
    method: POST
    data_selector: result
    params: {}
- name: GasEstimateFeeCap
  endpoint:
    path: /GasEstimateFeeCap
    method: POST
    data_selector: Response
    params: {}
- name: GasEstimateGasLimit
  endpoint:
    path: /GasEstimateGasLimit
    method: POST
    data_selector: Response
    params: {}
- name: GasEstimateGasPremium
  endpoint:
    path: /GasEstimateGasPremium
    method: POST
    data_selector: Response
    params: {}
- name: EthCall
  endpoint:
    path: /EthCall
    method: POST
    data_selector: result
- name: EthChainId
  endpoint:
    path: /EthChainId
    method: POST
    data_selector: result
- name: EthEstimateGas
  endpoint:
    path: /EthEstimateGas
    method: POST
    data_selector: result
- name: EthFeeHistory
  endpoint:
    path: /EthFeeHistory
    method: POST
    data_selector: result
- name: EthGasPrice
  endpoint:
    path: /EthGasPrice
    method: POST
    data_selector: result
- name: EthGetBalance
  endpoint:
    path: /EthGetBalance
    method: POST
    data_selector: result
- name: EthGetBlockByHash
  endpoint:
    path: /EthGetBlockByHash
    method: POST
    data_selector: result
- name: EthGetBlockByNumber
  endpoint:
    path: /EthGetBlockByNumber
    method: POST
    data_selector: result
- name: EthGetBlockTransactionCountByHash
  endpoint:
    path: /EthGetBlockTransactionCountByHash
    method: POST
    data_selector: result
- name: EthGetBlockTransactionCountByNumber
  endpoint:
    path: /EthGetBlockTransactionCountByNumber
    method: POST
    data_selector: result
- name: EthGetCode
  endpoint:
    path: /EthGetCode
    method: POST
    data_selector: result
- name: EthGetFilterChanges
  endpoint:
    path: /EthGetFilterChanges
    method: POST
    data_selector: result
- name: EthGetFilterLogs
  endpoint:
    path: /EthGetFilterLogs
    method: POST
    data_selector: result
- name: EthGetLogs
  endpoint:
    path: /EthGetLogs
    method: POST
    data_selector: result
- name: EthGetMessageCidByTransactionHash
  endpoint:
    path: /EthGetMessageCidByTransactionHash
    method: POST
    data_selector: result
- name: EthGetStorageAt
  endpoint:
    path: /EthGetStorageAt
    method: POST
    data_selector: result
- name: EthGetTransactionByBlockHashAndIndex
  endpoint:
    path: /EthGetTransactionByBlockHashAndIndex
    method: POST
    data_selector: result
- name: EthGetTransactionByBlockNumberAndIndex
  endpoint:
    path: /EthGetTransactionByBlockNumberAndIndex
    method: POST
    data_selector: result
- name: EthGetTransactionByHash
  endpoint:
    path: /EthGetTransactionByHash
    method: POST
    data_selector: result
- name: EthGetTransactionByHashLimited
  endpoint:
    path: /EthGetTransactionByHashLimited
    method: POST
    data_selector: result
- name: EthGetTransactionCount
  endpoint:
    path: /EthGetTransactionCount
    method: POST
    data_selector: result
- name: EthGetTransactionHashByCid
  endpoint:
    path: /EthGetTransactionHashByCid
    method: POST
    data_selector: result
- name: EthGetTransactionReceipt
  endpoint:
    path: /EthGetTransactionReceipt
    method: POST
    data_selector: result
- name: GasEstimateMessageGas
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: ID
  endpoint:
    path: /reference/json-rpc/i
    method: GET
    data_selector: null
    params: {}
- name: LogAlerts
  endpoint:
    path: /log/alerts
    method: GET
    data_selector: ''
- name: LogList
  endpoint:
    path: /log/list
    method: GET
    data_selector: ''
- name: LogSetLevel
  endpoint:
    path: /log/setlevel
    method: POST
    data_selector: ''
- name: GetTransactionReceiptLimited
  endpoint:
    path: /eth/getTransactionReceiptLimited
    method: GET
    data_selector: transactionHash
    params: {}
- name: MaxPriorityFeePerGas
  endpoint:
    path: /eth/maxPriorityFeePerGas
    method: GET
    data_selector: result
    params: {}
- name: NewBlockFilter
  endpoint:
    path: /eth/newBlockFilter
    method: GET
    data_selector: result
    params: {}
- name: NewFilter
  endpoint:
    path: /eth/newFilter
    method: GET
    data_selector: result
    params: {}
- name: NewPendingTransactionFilter
  endpoint:
    path: /eth/newPendingTransactionFilter
    method: GET
    data_selector: result
    params: {}
- name: ProtocolVersion
  endpoint:
    path: /eth/protocolVersion
    method: GET
    data_selector: result
    params: {}
- name: SendRawTransaction
  endpoint:
    path: /eth/sendRawTransaction
    method: POST
    data_selector: result
    params: {}
- name: Subscribe
  endpoint:
    path: /eth/subscribe
    method: POST
    data_selector: result
    params: {}
- name: Syncing
  endpoint:
    path: /eth/syncing
    method: GET
    data_selector: result
    params: {}
- name: TraceBlock
  endpoint:
    path: /eth/traceBlock
    method: POST
    data_selector: result
    params: {}
- name: TraceReplayBlockTransactions
  endpoint:
    path: /eth/traceReplayBlockTransactions
    method: POST
    data_selector: result
    params: {}
- name: UninstallFilter
  endpoint:
    path: /eth/uninstallFilter
    method: POST
    data_selector: result
    params: {}
- name: Unsubscribe
  endpoint:
    path: /eth/unsubscribe
    method: POST
    data_selector: result
    params: {}
- name: MarketAddBalance
  endpoint:
    path: /MarketAddBalance
    method: POST
    data_selector: response
- name: MarketGetReserved
  endpoint:
    path: /MarketGetReserved
    method: POST
    data_selector: response
- name: MarketReleaseFunds
  endpoint:
    path: /MarketReleaseFunds
    method: POST
    data_selector: response
- name: MarketReserveFunds
  endpoint:
    path: /MarketReserveFunds
    method: POST
    data_selector: response
- name: MarketWithdraw
  endpoint:
    path: /MarketWithdraw
    method: POST
    data_selector: response
- name: GasEstimateFeeCap
  endpoint:
    path: /GasEstimateFeeCap
    method: POST
    data_selector: response
- name: GasEstimateGasLimit
  endpoint:
    path: /GasEstimateGasLimit
    method: POST
    data_selector: response
- name: GasEstimateGasPremium
  endpoint:
    path: /GasEstimateGasPremium
    method: POST
    data_selector: response
- name: MinerCreateBlock
  endpoint:
    path: /json-rpc/miner/createblock
    method: POST
    data_selector: Header
    params: {}
- name: MinerGetBaseInfo
  endpoint:
    path: /json-rpc/miner/getbaseinfo
    method: POST
    data_selector: Header
    params: {}
- name: gas_estimate
  endpoint:
    path: /gas/estimate
    method: POST
    data_selector: ''
    params: {}
- name: GetBaseInfo
  endpoint:
    path: /miner/getBaseInfo
    method: GET
    data_selector: MinerPower
    params: {}
- name: ID
  endpoint:
    path: /i
    method: GET
    data_selector: null
    params: {}
- name: MpoolBatchPush
  endpoint:
    path: /mpool/batchpush
    method: POST
    data_selector: result
- name: MpoolBatchPushMessage
  endpoint:
    path: /mpool/batchpushmessage
    method: POST
    data_selector: result
- name: LogAlerts
  endpoint:
    path: /log/alerts
    method: GET
    data_selector: Type
    params: {}
- name: LogList
  endpoint:
    path: /log/list
    method: GET
    data_selector: string value
    params: {}
- name: LogSetLevel
  endpoint:
    path: /log/setlevel
    method: POST
    data_selector: '{}'
    params: {}
- name: MarketAddBalance
  endpoint:
    path: /MarketAddBalance
    method: POST
    data_selector: response
    params: {}
- name: MarketGetReserved
  endpoint:
    path: /MarketGetReserved
    method: POST
    data_selector: response
    params: {}
- name: MarketReleaseFunds
  endpoint:
    path: /MarketReleaseFunds
    method: POST
    data_selector: response
    params: {}
- name: MarketReserveFunds
  endpoint:
    path: /MarketReserveFunds
    method: POST
    data_selector: response
    params: {}
- name: MarketWithdraw
  endpoint:
    path: /MarketWithdraw
    method: POST
    data_selector: response
    params: {}
- name: MinerCreateBlock
  endpoint:
    path: /miner/createBlock
    method: POST
    data_selector: Header
    params: {}
- name: GetBaseInfo
  endpoint:
    path: /reference/json-rpc/miner
    method: GET
    data_selector: MinerPower
    params: {}
- name: MpoolBatchPushUntrusted
  endpoint:
    path: /MpoolBatchPushUntrusted
    method: POST
    data_selector: Message
    params: {}
- name: MpoolCheckMessages
  endpoint:
    path: /MpoolCheckMessages
    method: POST
    data_selector: Message
    params: {}
- name: MpoolCheckPendingMessages
  endpoint:
    path: /MpoolCheckPendingMessages
    method: POST
    data_selector: Message
    params: {}
- name: MpoolCheckReplaceMessages
  endpoint:
    path: /MpoolCheckReplaceMessages
    method: POST
    data_selector: Message
    params: {}
- name: MpoolClear
  endpoint:
    path: /MpoolClear
    method: POST
    data_selector: Message
    params: {}
- name: MpoolGetConfig
  endpoint:
    path: /MpoolGetConfig
    method: GET
    data_selector: Message
    params: {}
- name: MpoolGetNonce
  endpoint:
    path: /MpoolGetNonce
    method: POST
    data_selector: Message
    params: {}
- name: MpoolPending
  endpoint:
    path: /MpoolPending
    method: GET
    data_selector: Message
    params: {}
- name: MpoolPush
  endpoint:
    path: /MpoolPush
    method: POST
    data_selector: Message
    params: {}
- name: MpoolPushMessage
  endpoint:
    path: /MpoolPushMessage
    method: POST
    data_selector: Message
    params: {}
- name: MpoolPushUntrusted
  endpoint:
    path: /MpoolPushUntrusted
    method: POST
    data_selector: Message
    params: {}
- name: MpoolSelect
  endpoint:
    path: /MpoolSelect
    method: POST
    data_selector: Message
    params: {}
- name: MpoolSetConfig
  endpoint:
    path: /MpoolSetConfig
    method: POST
    data_selector: Message
    params: {}
- name: MpoolSub
  endpoint:
    path: /MpoolSub
    method: GET
    data_selector: Message
    params: {}
- name: MpoolBatchPush
  endpoint:
    path: /mpool/batch_push
    method: POST
    data_selector: response
    params: {}
- name: MpoolBatchPushMessage
  endpoint:
    path: /mpool/batch_push_message
    method: POST
    data_selector: response
    params: {}
- name: MsigAddApprove
  endpoint:
    path: /reference/json-rpc/msig/msigaddapprove
    method: POST
    data_selector: Message
    params:
      perm: sign
- name: MsigAddCancel
  endpoint:
    path: /reference/json-rpc/msig/msigaddcancel
    method: POST
    data_selector: Message
    params:
      perm: sign
- name: MsigAddPropose
  endpoint:
    path: /reference/json-rpc/msig/msigaddpropose
    method: POST
    data_selector: Message
    params:
      perm: sign
- name: MsigApprove
  endpoint:
    path: /reference/json-rpc/msig/msigapprove
    method: POST
    data_selector: Message
    params:
      perm: sign
- name: MpoolBatchPushUntrusted
  endpoint:
    path: /MpoolBatchPushUntrusted
    method: POST
    data_selector: records
- name: MpoolCheckMessages
  endpoint:
    path: /MpoolCheckMessages
    method: POST
    data_selector: records
- name: MpoolCheckPendingMessages
  endpoint:
    path: /MpoolCheckPendingMessages
    method: POST
    data_selector: records
- name: MpoolCheckReplaceMessages
  endpoint:
    path: /MpoolCheckReplaceMessages
    method: POST
    data_selector: records
- name: MpoolClear
  endpoint:
    path: /MpoolClear
    method: POST
    data_selector: records
- name: MpoolGetConfig
  endpoint:
    path: /MpoolGetConfig
    method: GET
    data_selector: records
- name: MpoolGetNonce
  endpoint:
    path: /MpoolGetNonce
    method: POST
    data_selector: records
- name: MpoolPending
  endpoint:
    path: /MpoolPending
    method: GET
    data_selector: records
- name: MpoolPush
  endpoint:
    path: /MpoolPush
    method: POST
    data_selector: records
- name: MpoolPushMessage
  endpoint:
    path: /MpoolPushMessage
    method: POST
    data_selector: records
- name: MpoolPushUntrusted
  endpoint:
    path: /MpoolPushUntrusted
    method: POST
    data_selector: records
- name: MpoolSelect
  endpoint:
    path: /MpoolSelect
    method: POST
    data_selector: records
- name: MpoolSetConfig
  endpoint:
    path: /MpoolSetConfig
    method: POST
    data_selector: records
- name: MpoolSub
  endpoint:
    path: /MpoolSub
    method: GET
    data_selector: records
- name: MsigApproveTxnHash
  endpoint:
    path: /msig/approve_txn_hash
    method: POST
    data_selector: Message
    params: {}
- name: MsigCancel
  endpoint:
    path: /msig/cancel
    method: POST
    data_selector: Message
    params: {}
- name: MsigCancelTxnHash
  endpoint:
    path: /msig/cancel_txn_hash
    method: POST
    data_selector: Message
    params: {}
- name: MsigCreate
  endpoint:
    path: /msig/create
    method: POST
    data_selector: Message
    params: {}
- name: MsigGetAvailableBalance
  endpoint:
    path: /msig/get_available_balance
    method: POST
    data_selector: Message
    params: {}
- name: MsigGetPending
  endpoint:
    path: /msig/get_pending
    method: POST
    data_selector: Message
    params: {}
- name: MsigGetVested
  endpoint:
    path: /msig/get_vested
    method: POST
    data_selector: Message
    params: {}
- name: MsigGetVestingSchedule
  endpoint:
    path: /msig/get_vesting_schedule
    method: POST
    data_selector: Message
    params: {}
- name: MsigPropose
  endpoint:
    path: /msig/propose
    method: POST
    data_selector: Message
    params: {}
- name: MsigRemoveSigner
  endpoint:
    path: /msig/remove_signer
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapApprove
  endpoint:
    path: /msig/swap_approve
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapCancel
  endpoint:
    path: /msig/swap_cancel
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapPropose
  endpoint:
    path: /msig/swap_propose
    method: POST
    data_selector: Message
    params: {}
- name: MsigAddApprove
  endpoint:
    path: /reference/json-rpc/msigaddapprove
    method: POST
    data_selector: Message
- name: MsigAddCancel
  endpoint:
    path: /reference/json-rpc/msigaddcancel
    method: POST
    data_selector: Message
- name: MsigAddPropose
  endpoint:
    path: /reference/json-rpc/msigaddpropose
    method: POST
    data_selector: Message
- name: MsigApprove
  endpoint:
    path: /reference/json-rpc/msigapprove
    method: POST
    data_selector: Message
- name: NetAddrsListen
  endpoint:
    path: /net/addrs/listen
    method: GET
    data_selector: Addrs
- name: NetAgentVersion
  endpoint:
    path: /net/agent/version
    method: GET
    data_selector: string value
- name: NetAutoNatStatus
  endpoint:
    path: /net/autonat/status
    method: GET
    data_selector: Reachability
- name: NetBandwidthStats
  endpoint:
    path: /net/bandwidth/stats
    method: GET
    data_selector: TotalIn
- name: NetBlockAdd
  endpoint:
    path: /net/block/add
    method: POST
    data_selector: '{}'
- name: NetBlockList
  endpoint:
    path: /net/block/list
    method: GET
    data_selector: Peers
- name: NetConnect
  endpoint:
    path: /net/connect
    method: POST
    data_selector: '{}'
- name: NetDisconnect
  endpoint:
    path: /net/disconnect
    method: POST
    data_selector: '{}'
- name: MsigApproveTxnHash
  endpoint:
    path: /api/msig/approve_txn_hash
    method: POST
    data_selector: Message
    params: {}
- name: MsigCancel
  endpoint:
    path: /api/msig/cancel
    method: POST
    data_selector: Message
    params: {}
- name: MsigCancelTxnHash
  endpoint:
    path: /api/msig/cancel_txn_hash
    method: POST
    data_selector: Message
    params: {}
- name: MsigCreate
  endpoint:
    path: /api/msig/create
    method: POST
    data_selector: Message
    params: {}
- name: MsigGetAvailableBalance
  endpoint:
    path: /api/msig/get_available_balance
    method: GET
    data_selector: Message
    params: {}
- name: MsigGetPending
  endpoint:
    path: /api/msig/get_pending
    method: GET
    data_selector: Message
    params: {}
- name: MsigGetVested
  endpoint:
    path: /api/msig/get_vested
    method: GET
    data_selector: Message
    params: {}
- name: MsigGetVestingSchedule
  endpoint:
    path: /api/msig/get_vesting_schedule
    method: GET
    data_selector: Message
    params: {}
- name: MsigPropose
  endpoint:
    path: /api/msig/propose
    method: POST
    data_selector: Message
    params: {}
- name: MsigRemoveSigner
  endpoint:
    path: /api/msig/remove_signer
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapApprove
  endpoint:
    path: /api/msig/swap_approve
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapCancel
  endpoint:
    path: /api/msig/swap_cancel
    method: POST
    data_selector: Message
    params: {}
- name: MsigSwapPropose
  endpoint:
    path: /api/msig/swap_propose
    method: POST
    data_selector: Message
    params: {}
- name: NetFindPeer
  endpoint:
    path: /NetFindPeer
    method: GET
    data_selector: ID
- name: NetLimit
  endpoint:
    path: /NetLimit
    method: GET
    data_selector: Memory
- name: NetListening
  endpoint:
    path: /NetListening
    method: GET
    data_selector: 'true'
- name: NetPeerInfo
  endpoint:
    path: /NetPeerInfo
    method: GET
    data_selector: ID
- name: NetPeers
  endpoint:
    path: /NetPeers
    method: GET
    data_selector: ID
- name: NetPing
  endpoint:
    path: /NetPing
    method: GET
    data_selector: '60000000000'
- name: NetProtectAdd
  endpoint:
    path: /NetProtectAdd
    method: POST
    data_selector: '{}'
- name: NetProtectList
  endpoint:
    path: /NetProtectList
    method: GET
    data_selector: ID
- name: NetProtectRemove
  endpoint:
    path: /NetProtectRemove
    method: POST
    data_selector: '{}'
- name: NetPubsubScores
  endpoint:
    path: /NetPubsubScores
    method: GET
    data_selector: ID
- name: NetSetLimit
  endpoint:
    path: /NetSetLimit
    method: POST
    data_selector: '{}'
- name: NetStat
  endpoint:
    path: /NetStat
    method: GET
    data_selector: System
- name: NetVersion
  endpoint:
    path: /NetVersion
    method: GET
    data_selector: string value
- name: NodeStatus
  endpoint:
    path: /json-rpc/node/status
    method: POST
    data_selector: SyncStatus
    params: {}
- name: NetAddrsListen
  endpoint:
    path: /net/addrs/listen
    method: GET
    data_selector: Addrs
- name: NetAgentVersion
  endpoint:
    path: /net/agent/version
    method: GET
    data_selector: string value
- name: NetAutoNatStatus
  endpoint:
    path: /net/autonat/status
    method: GET
    data_selector: Reachability
- name: NetBandwidthStats
  endpoint:
    path: /net/bandwidth/stats
    method: GET
    data_selector: TotalIn
- name: NetBlockAdd
  endpoint:
    path: /net/block/add
    method: POST
    data_selector: '{}'
- name: NetBlockList
  endpoint:
    path: /net/block/list
    method: GET
    data_selector: Peers
- name: NetConnect
  endpoint:
    path: /net/connect
    method: POST
    data_selector: '{}'
- name: NetDisconnect
  endpoint:
    path: /net/disconnect
    method: POST
    data_selector: '{}'
- name: PaychAllocateLane
  endpoint:
    path: /paych/allocate-lane
    method: POST
    data_selector: response
    params: {}
- name: PaychAvailableFunds
  endpoint:
    path: /paych/available-funds
    method: POST
    data_selector: response
    params: {}
- name: PaychAvailableFundsByFromTo
  endpoint:
    path: /paych/available-funds-by-from-to
    method: POST
    data_selector: response
    params: {}
- name: PaychCollect
  endpoint:
    path: /paych/collect
    method: POST
    data_selector: response
    params: {}
- name: PaychFund
  endpoint:
    path: /paych/fund
    method: POST
    data_selector: response
    params: {}
- name: PaychGet
  endpoint:
    path: /paych/get
    method: POST
    data_selector: response
    params: {}
- name: PaychGetWaitReady
  endpoint:
    path: /paych/get-wait-ready
    method: POST
    data_selector: response
    params: {}
- name: PaychList
  endpoint:
    path: /paych/list
    method: GET
    data_selector: response
    params: {}
- name: NetFindPeer
  endpoint:
    path: /NetFindPeer
    method: GET
    data_selector: ID
- name: NetLimit
  endpoint:
    path: /NetLimit
    method: GET
    data_selector: Memory
- name: NetListening
  endpoint:
    path: /NetListening
    method: GET
    data_selector: 'true'
- name: NetPeerInfo
  endpoint:
    path: /NetPeerInfo
    method: GET
    data_selector: ID
- name: NetPeers
  endpoint:
    path: /NetPeers
    method: GET
    data_selector: ID
- name: NetPing
  endpoint:
    path: /NetPing
    method: GET
    data_selector: '60000000000'
- name: NetProtectAdd
  endpoint:
    path: /NetProtectAdd
    method: POST
    data_selector: '{}'
- name: NetProtectList
  endpoint:
    path: /NetProtectList
    method: GET
    data_selector: ID
- name: NetProtectRemove
  endpoint:
    path: /NetProtectRemove
    method: POST
    data_selector: '{}'
- name: NetPubsubScores
  endpoint:
    path: /NetPubsubScores
    method: GET
    data_selector: ID
- name: NetSetLimit
  endpoint:
    path: /NetSetLimit
    method: POST
    data_selector: '{}'
- name: NetStat
  endpoint:
    path: /NetStat
    method: GET
    data_selector: NumStreamsInbound
- name: NetVersion
  endpoint:
    path: /NetVersion
    method: GET
    data_selector: string value
- name: NewPayment
  endpoint:
    path: /PaychNewPayment
    method: POST
    data_selector: Vouchers
- name: Settle
  endpoint:
    path: /PaychSettle
    method: POST
    data_selector: /
- name: Status
  endpoint:
    path: /PaychStatus
    method: POST
    data_selector: ControlAddr
- name: VoucherAdd
  endpoint:
    path: /PaychVoucherAdd
    method: POST
    data_selector: '0'
- name: VoucherCheckSpendable
  endpoint:
    path: /PaychVoucherCheckSpendable
    method: POST
    data_selector: 'true'
- name: VoucherCheckValid
  endpoint:
    path: /PaychVoucherCheckValid
    method: POST
    data_selector: '{}'
- name: VoucherCreate
  endpoint:
    path: /PaychVoucherCreate
    method: POST
    data_selector: Voucher
- name: VoucherList
  endpoint:
    path: /PaychVoucherList
    method: POST
    data_selector: '[]'
- name: VoucherSubmit
  endpoint:
    path: /PaychVoucherSubmit
    method: POST
    data_selector: /
- name: NodeStatus
  endpoint:
    path: /reference/json-rpc/node
    method: GET
    data_selector: SyncStatus
    params: {}
- name: RaftLeader
  endpoint:
    path: /raft/leader
    method: GET
    data_selector: response
    params: {}
- name: RaftState
  endpoint:
    path: /raft/state
    method: GET
    data_selector: response
    params: {}
- name: StartTime
  endpoint:
    path: /reference/json-rpc/start
    method: GET
    data_selector: Response
    params: {}
- name: PaychAllocateLane
  endpoint:
    path: /paych/allocate-lane
    method: POST
    data_selector: response
    params: {}
- name: PaychAvailableFunds
  endpoint:
    path: /paych/available-funds
    method: POST
    data_selector: response
    params: {}
- name: PaychAvailableFundsByFromTo
  endpoint:
    path: /paych/available-funds-by-from-to
    method: POST
    data_selector: response
    params: {}
- name: PaychCollect
  endpoint:
    path: /paych/collect
    method: POST
    data_selector: response
    params: {}
- name: PaychFund
  endpoint:
    path: /paych/fund
    method: POST
    data_selector: response
    params: {}
- name: PaychGet
  endpoint:
    path: /paych/get
    method: POST
    data_selector: response
    params: {}
- name: PaychGetWaitReady
  endpoint:
    path: /paych/get-wait-ready
    method: POST
    data_selector: response
    params: {}
- name: PaychList
  endpoint:
    path: /paych/list
    method: POST
    data_selector: response
    params: {}
- name: StateAccountKey
  endpoint:
    path: /StateAccountKey
    method: POST
    data_selector: response
    params: {}
- name: StateActorCodeCIDs
  endpoint:
    path: /StateActorCodeCIDs
    method: POST
    data_selector: response
    params: {}
- name: StateActorManifestCID
  endpoint:
    path: /StateActorManifestCID
    method: POST
    data_selector: response
    params: {}
- name: PaychNewPayment
  endpoint:
    path: /PaychNewPayment
    method: POST
    data_selector: Vouchers
- name: PaychSettle
  endpoint:
    path: /PaychSettle
    method: POST
    data_selector: /
- name: PaychStatus
  endpoint:
    path: /PaychStatus
    method: POST
    data_selector: ControlAddr
- name: PaychVoucherAdd
  endpoint:
    path: /PaychVoucherAdd
    method: POST
    data_selector: '0'
- name: PaychVoucherCheckSpendable
  endpoint:
    path: /PaychVoucherCheckSpendable
    method: POST
    data_selector: 'true'
- name: PaychVoucherCheckValid
  endpoint:
    path: /PaychVoucherCheckValid
    method: POST
    data_selector: '{}'
- name: PaychVoucherCreate
  endpoint:
    path: /PaychVoucherCreate
    method: POST
    data_selector: Voucher
- name: PaychVoucherList
  endpoint:
    path: /PaychVoucherList
    method: POST
    data_selector: ChannelAddr
- name: PaychVoucherSubmit
  endpoint:
    path: /PaychVoucherSubmit
    method: POST
    data_selector: /
- name: RaftLeader
  endpoint:
    path: /json-rpc/raftleader
    method: GET
    data_selector: response
    params: {}
- name: RaftState
  endpoint:
    path: /json-rpc/raftstate
    method: GET
    data_selector: response
    params: {}
- name: StateAllMinerFaults
  endpoint:
    path: /state/all/miner/faults
    method: GET
    data_selector: records
- name: StateCall
  endpoint:
    path: /state/call
    method: POST
    data_selector: Msg
- name: StateChangedActors
  endpoint:
    path: /state/changed/actors
    method: GET
    data_selector: records
- name: StateCirculatingSupply
  endpoint:
    path: /state/circulating/supply
    method: GET
    data_selector: supply
- name: StateCompute
  endpoint:
    path: /state/compute
    method: POST
    data_selector: Root
- name: StateComputeDataCID
  endpoint:
    path: /state/compute/dataCID
    method: POST
    data_selector: /
- name: StateDealProviderCollateralBounds
  endpoint:
    path: /state/deal/provider/collateral/bounds
    method: POST
    data_selector: Min
- name: StateDecodeParams
  endpoint:
    path: /state/decode/params
    method: POST
    data_selector: '{}'
- name: StateEncodeParams
  endpoint:
    path: /state/encode/params
    method: POST
    data_selector: Ynl0ZSBhcnJheQ==
- name: StateGetActor
  endpoint:
    path: /state/get/actor
    method: GET
    data_selector: Nonce
- name: StateGetAllocation
  endpoint:
    path: /state/get/allocation
    method: GET
    data_selector: Client
- name: StateGetAllocationForPendingDeal
  endpoint:
    path: /state/get/allocation/pending/deal
    method: GET
    data_selector: Client
- name: StateGetAllocations
  endpoint:
    path: /state/get/allocations
    method: GET
    data_selector: '{}'
- name: StartTime
  endpoint:
    path: /reference/json-rpc/start
    method: GET
    data_selector: null
    params: {}
- name: StateAccountKey
  endpoint:
    path: /StateAccountKey
    method: GET
    data_selector: Response
    params: {}
- name: StateActorCodeCIDs
  endpoint:
    path: /StateActorCodeCIDs
    method: GET
    data_selector: Response
    params: {}
- name: StateActorManifestCID
  endpoint:
    path: /StateActorManifestCID
    method: GET
    data_selector: Response
    params: {}
- name: StateAllMinerFaults
  endpoint:
    path: /StateAllMinerFaults
    method: GET
    data_selector: records
- name: StateCall
  endpoint:
    path: /StateCall
    method: GET
    data_selector: records
- name: StateChangedActors
  endpoint:
    path: /StateChangedActors
    method: GET
    data_selector: records
- name: StateCirculatingSupply
  endpoint:
    path: /StateCirculatingSupply
    method: GET
    data_selector: records
- name: StateCompute
  endpoint:
    path: /StateCompute
    method: GET
    data_selector: records
- name: StateComputeDataCID
  endpoint:
    path: /StateComputeDataCID
    method: GET
    data_selector: records
- name: StateDealProviderCollateralBounds
  endpoint:
    path: /StateDealProviderCollateralBounds
    method: GET
    data_selector: records
- name: StateDecodeParams
  endpoint:
    path: /StateDecodeParams
    method: GET
    data_selector: records
- name: StateEncodeParams
  endpoint:
    path: /StateEncodeParams
    method: GET
    data_selector: records
- name: StateGetActor
  endpoint:
    path: /StateGetActor
    method: GET
    data_selector: records
- name: StateGetAllocation
  endpoint:
    path: /StateGetAllocation
    method: GET
    data_selector: records
- name: StateGetAllocationForPendingDeal
  endpoint:
    path: /StateGetAllocationForPendingDeal
    method: GET
    data_selector: records
- name: StateGetAllocations
  endpoint:
    path: /StateGetAllocations
    method: GET
    data_selector: records
- name: StateGetBeaconEntry
  endpoint:
    path: /StateGetBeaconEntry
    method: GET
    data_selector: Round
- name: StateGetClaim
  endpoint:
    path: /StateGetClaim
    method: GET
    data_selector: Provider
- name: StateGetClaims
  endpoint:
    path: /StateGetClaims
    method: GET
    data_selector: {}
- name: StateGetNetworkParams
  endpoint:
    path: /StateGetNetworkParams
    method: GET
    data_selector: NetworkName
- name: StateGetRandomnessDigestFromBeacon
  endpoint:
    path: /StateGetRandomnessDigestFromBeacon
    method: GET
    data_selector: {}
- name: StateGetRandomnessDigestFromTickets
  endpoint:
    path: /StateGetRandomnessDigestFromTickets
    method: GET
    data_selector: {}
- name: StateGetRandomnessFromBeacon
  endpoint:
    path: /StateGetRandomnessFromBeacon
    method: GET
    data_selector: {}
- name: StateGetRandomnessFromTickets
  endpoint:
    path: /StateGetRandomnessFromTickets
    method: GET
    data_selector: {}
- name: StateListActors
  endpoint:
    path: /StateListActors
    method: GET
    data_selector: {}
- name: StateListMessages
  endpoint:
    path: /StateListMessages
    method: GET
    data_selector: {}
- name: StateListMiners
  endpoint:
    path: /StateListMiners
    method: GET
    data_selector: {}
- name: StateLookupID
  endpoint:
    path: /StateLookupID
    method: GET
    data_selector: {}
- name: StateLookupRobustAddress
  endpoint:
    path: /StateLookupRobustAddress
    method: GET
    data_selector: {}
- name: StateMarketBalance
  endpoint:
    path: /StateMarketBalance
    method: GET
    data_selector: Escrow
- name: StateMarketDeals
  endpoint:
    path: /StateMarketDeals
    method: GET
    data_selector: {}
- name: StateMarketParticipants
  endpoint:
    path: /StateMarketParticipants
    method: GET
    data_selector: {}
- name: StateMarketStorageDeal
  endpoint:
    path: /StateMarketStorageDeal
    method: GET
    data_selector: {}
- name: StateMinerActiveSectors
  endpoint:
    path: /StateMinerActiveSectors
    method: GET
    data_selector: {}
- name: StateMinerAllocated
  endpoint:
    path: /StateMinerAllocated
    method: GET
    data_selector: {}
- name: StateMinerAvailableBalance
  endpoint:
    path: /StateMinerAvailableBalance
    method: GET
    data_selector: {}
- name: StateMinerDeadlines
  endpoint:
    path: /StateMinerDeadlines
    method: GET
    data_selector: {}
- name: StateMinerFaults
  endpoint:
    path: /StateMinerFaults
    method: GET
    data_selector: {}
- name: StateMinerInfo
  endpoint:
    path: /StateMinerInfo
    method: GET
    data_selector: Owner
- name: StateGetBeaconEntry
  endpoint:
    path: /StateGetBeaconEntry
    method: GET
    data_selector: response
- name: StateGetClaim
  endpoint:
    path: /StateGetClaim
    method: GET
    data_selector: response
- name: StateGetClaims
  endpoint:
    path: /StateGetClaims
    method: GET
    data_selector: response
- name: StateGetNetworkParams
  endpoint:
    path: /StateGetNetworkParams
    method: GET
    data_selector: response
- name: StateGetRandomnessDigestFromBeacon
  endpoint:
    path: /StateGetRandomnessDigestFromBeacon
    method: GET
    data_selector: response
- name: StateGetRandomnessDigestFromTickets
  endpoint:
    path: /StateGetRandomnessDigestFromTickets
    method: GET
    data_selector: response
- name: StateGetRandomnessFromBeacon
  endpoint:
    path: /StateGetRandomnessFromBeacon
    method: GET
    data_selector: response
- name: StateGetRandomnessFromTickets
  endpoint:
    path: /StateGetRandomnessFromTickets
    method: GET
    data_selector: response
- name: StateListActors
  endpoint:
    path: /StateListActors
    method: GET
    data_selector: response
- name: StateListMessages
  endpoint:
    path: /StateListMessages
    method: GET
    data_selector: response
- name: StateListMiners
  endpoint:
    path: /StateListMiners
    method: GET
    data_selector: response
- name: StateLookupID
  endpoint:
    path: /StateLookupID
    method: GET
    data_selector: response
- name: StateLookupRobustAddress
  endpoint:
    path: /StateLookupRobustAddress
    method: GET
    data_selector: response
- name: StateMarketBalance
  endpoint:
    path: /StateMarketBalance
    method: GET
    data_selector: response
- name: StateMarketDeals
  endpoint:
    path: /StateMarketDeals
    method: GET
    data_selector: response
- name: StateMarketParticipants
  endpoint:
    path: /StateMarketParticipants
    method: GET
    data_selector: response
- name: StateMarketStorageDeal
  endpoint:
    path: /StateMarketStorageDeal
    method: GET
    data_selector: response
- name: StateMinerActiveSectors
  endpoint:
    path: /StateMinerActiveSectors
    method: GET
    data_selector: response
- name: StateMinerAllocated
  endpoint:
    path: /StateMinerAllocated
    method: GET
    data_selector: response
- name: StateMinerAvailableBalance
  endpoint:
    path: /StateMinerAvailableBalance
    method: GET
    data_selector: response
- name: StateMinerDeadlines
  endpoint:
    path: /StateMinerDeadlines
    method: GET
    data_selector: response
- name: StateMinerFaults
  endpoint:
    path: /StateMinerFaults
    method: GET
    data_selector: response
- name: StateMinerInfo
  endpoint:
    path: /StateMinerInfo
    method: GET
    data_selector: response
- name: StateMinerInitialPledgeCollateral
  endpoint:
    path: /state/miner/initial_pledge_collateral
    method: POST
    data_selector: response
- name: StateMinerPartitions
  endpoint:
    path: /state/miner/partitions
    method: POST
    data_selector: response
- name: StateMinerPower
  endpoint:
    path: /state/miner/power
    method: POST
    data_selector: response
- name: StateMinerPreCommitDepositForPower
  endpoint:
    path: /state/miner/pre_commit_deposit_for_power
    method: POST
    data_selector: response
- name: StateMinerProvingDeadline
  endpoint:
    path: /state/miner/proving_deadline
    method: POST
    data_selector: response
- name: StateMinerRecoveries
  endpoint:
    path: /state/miner/recoveries
    method: POST
    data_selector: response
- name: StateMinerSectorAllocated
  endpoint:
    path: /state/miner/sector_allocated
    method: POST
    data_selector: response
- name: StateMinerSectorCount
  endpoint:
    path: /state/miner/sector_count
    method: POST
    data_selector: response
- name: StateMinerSectors
  endpoint:
    path: /state/miner/sectors
    method: POST
    data_selector: response
- name: StateNetworkName
  endpoint:
    path: /state/network/name
    method: GET
    data_selector: response
- name: StateNetworkVersion
  endpoint:
    path: /state/network/version
    method: GET
    data_selector: response
- name: StateReadState
  endpoint:
    path: /state/read_state
    method: POST
    data_selector: response
- name: StateReplay
  endpoint:
    path: /state/replay
    method: POST
    data_selector: response
- name: StateSearchMsg
  endpoint:
    path: /state/search_msg
    method: POST
    data_selector: response
- name: StateSectorExpiration
  endpoint:
    path: /state/sector/expiration
    method: POST
    data_selector: response
- name: StateSectorGetInfo
  endpoint:
    path: /State/SectorGetInfo
    method: POST
    data_selector: SectorInfo
    params: {}
- name: StateSectorPartition
  endpoint:
    path: /State/SectorPartition
    method: POST
    data_selector: SectorPartition
    params: {}
- name: StateSectorPreCommitInfo
  endpoint:
    path: /State/SectorPreCommitInfo
    method: POST
    data_selector: PreCommitInfo
    params: {}
- name: StateVMCirculatingSupplyInternal
  endpoint:
    path: /State/VMCirculatingSupplyInternal
    method: POST
    data_selector: CirculatingSupply
    params: {}
- name: StateVerifiedClientStatus
  endpoint:
    path: /State/VerifiedClientStatus
    method: POST
    data_selector: ClientStatus
    params: {}
- name: StateVerifiedRegistryRootKey
  endpoint:
    path: /State/VerifiedRegistryRootKey
    method: POST
    data_selector: RegistryRootKey
    params: {}
- name: StateVerifierStatus
  endpoint:
    path: /State/VerifierStatus
    method: POST
    data_selector: VerifierStatus
    params: {}
- name: StateWaitMsg
  endpoint:
    path: /State/WaitMsg
    method: POST
    data_selector: MessageStatus
    params: {}
- name: StateMinerInitialPledgeCollateral
  endpoint:
    path: /StateMinerInitialPledgeCollateral
    method: GET
    data_selector: response
    params: {}
- name: StateMinerPartitions
  endpoint:
    path: /StateMinerPartitions
    method: GET
    data_selector: response
    params: {}
- name: StateMinerPower
  endpoint:
    path: /StateMinerPower
    method: GET
    data_selector: response
    params: {}
- name: StateMinerPreCommitDepositForPower
  endpoint:
    path: /StateMinerPreCommitDepositForPower
    method: GET
    data_selector: response
    params: {}
- name: StateMinerProvingDeadline
  endpoint:
    path: /StateMinerProvingDeadline
    method: GET
    data_selector: response
    params: {}
- name: StateMinerRecoveries
  endpoint:
    path: /StateMinerRecoveries
    method: GET
    data_selector: response
    params: {}
- name: StateMinerSectorAllocated
  endpoint:
    path: /StateMinerSectorAllocated
    method: GET
    data_selector: response
    params: {}
- name: StateMinerSectorCount
  endpoint:
    path: /StateMinerSectorCount
    method: GET
    data_selector: response
    params: {}
- name: StateMinerSectors
  endpoint:
    path: /StateMinerSectors
    method: GET
    data_selector: response
    params: {}
- name: StateNetworkName
  endpoint:
    path: /StateNetworkName
    method: GET
    data_selector: response
    params: {}
- name: StateNetworkVersion
  endpoint:
    path: /StateNetworkVersion
    method: GET
    data_selector: response
    params: {}
- name: StateReadState
  endpoint:
    path: /StateReadState
    method: GET
    data_selector: response
    params: {}
- name: StateReplay
  endpoint:
    path: /StateReplay
    method: GET
    data_selector: response
    params: {}
- name: StateSearchMsg
  endpoint:
    path: /StateSearchMsg
    method: GET
    data_selector: response
    params: {}
- name: StateSectorExpiration
  endpoint:
    path: /StateSectorExpiration
    method: GET
    data_selector: response
    params: {}
- name: StateSectorGetInfo
  endpoint:
    path: /State/SectorGetInfo
    method: GET
    data_selector: SectorInfo
    params: {}
- name: StateSectorPartition
  endpoint:
    path: /State/SectorPartition
    method: GET
    data_selector: PartitionInfo
    params: {}
- name: StateSectorPreCommitInfo
  endpoint:
    path: /State/SectorPreCommitInfo
    method: GET
    data_selector: PreCommitInfo
    params: {}
- name: StateVMCirculatingSupplyInternal
  endpoint:
    path: /State/VMCirculatingSupplyInternal
    method: GET
    data_selector: CirculatingSupply
    params: {}
- name: StateVerifiedClientStatus
  endpoint:
    path: /State/VerifiedClientStatus
    method: GET
    data_selector: ClientStatus
    params: {}
- name: StateVerifiedRegistryRootKey
  endpoint:
    path: /State/VerifiedRegistryRootKey
    method: GET
    data_selector: RegistryRootKey
    params: {}
- name: StateVerifierStatus
  endpoint:
    path: /State/VerifierStatus
    method: GET
    data_selector: VerifierStatus
    params: {}
- name: StateWaitMsg
  endpoint:
    path: /State/WaitMsg
    method: GET
    data_selector: MessageInfo
    params: {}
- name: SyncCheckBad
  endpoint:
    path: /sync/checkbad
    method: POST
    data_selector: string value
    params: {}
- name: SyncCheckpoint
  endpoint:
    path: /sync/checkpoint
    method: POST
    data_selector: '{}'
    params: {}
- name: SyncIncomingBlocks
  endpoint:
    path: /sync/incomingblocks
    method: GET
    data_selector:
      Miner: f01234
      Ticket:
        VRFProof: Ynl0ZSBhcnJheQ==
      ElectionProof:
        WinCount: 9
        VRFProof: Ynl0ZSBhcnJheQ==
      BeaconEntries:
      - Round: 42
        Data: Ynl0ZSBhcnJheQ==
      WinPoStProof:
      - PoStProof: 8
        ProofBytes: Ynl0ZSBhcnJheQ==
      Parents:
      - /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      ParentWeight: '0'
      Height: 10101
      ParentStateRoot:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      ParentMessageReceipts:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      Messages:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      BLSAggregate:
        Type: 2
        Data: Ynl0ZSBhcnJheQ==
      Timestamp: 42
      BlockSig:
        Type: 2
        Data: Ynl0ZSBhcnJheQ==
      ForkSignaling: 42
      ParentBaseFee: '0'
    params: {}
- name: SyncMarkBad
  endpoint:
    path: /sync/markbad
    method: POST
    data_selector: '{}'
    params: {}
- name: SyncState
  endpoint:
    path: /sync/state
    method: GET
    data_selector:
      ActiveSyncs:
      - WorkerID: 42
        Base:
          Cids: null
          Blocks: null
          Height: 0
        Target:
          Cids: null
          Blocks: null
          Height: 0
        Stage: 1
        Height: 10101
        Start: '0001-01-01T00:00:00Z'
        End: '0001-01-01T00:00:00Z'
        Message: string value
      VMApplied: 42
    params: {}
- name: SyncSubmitBlock
  endpoint:
    path: /sync/submit-block
    method: POST
    data_selector: Header
    params:
      perm: write
- name: SyncUnmarkAllBad
  endpoint:
    path: /sync/unmark-all-bad
    method: POST
    data_selector: null
    params:
      perm: admin
- name: SyncUnmarkBad
  endpoint:
    path: /sync/unmark-bad
    method: POST
    data_selector: /
    params:
      perm: admin
- name: SyncValidateTipset
  endpoint:
    path: /sync/validate-tipset
    method: POST
    data_selector: /
    params:
      perm: read
- name: SyncCheckBad
  endpoint:
    path: /sync/checkbad
    method: POST
    data_selector: string value
    params: {}
- name: SyncCheckpoint
  endpoint:
    path: /sync/checkpoint
    method: POST
    data_selector: '{}'
    params: {}
- name: SyncIncomingBlocks
  endpoint:
    path: /sync/incomingblocks
    method: GET
    data_selector:
      Miner: f01234
      Ticket:
        VRFProof: Ynl0ZSBhcnJheQ==
      ElectionProof:
        WinCount: 9
        VRFProof: Ynl0ZSBhcnJheQ==
      BeaconEntries:
      - Round: 42
        Data: Ynl0ZSBhcnJheQ==
      WinPoStProof:
      - PoStProof: 8
        ProofBytes: Ynl0ZSBhcnJheQ==
      Parents:
      - /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      ParentWeight: '0'
      Height: 10101
      ParentStateRoot:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      ParentMessageReceipts:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      Messages:
        /: bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4
      BLSAggregate:
        Type: 2
        Data: Ynl0ZSBhcnJheQ==
      Timestamp: 42
      BlockSig:
        Type: 2
        Data: Ynl0ZSBhcnJheQ==
      ForkSignaling: 42
      ParentBaseFee: '0'
    params: {}
- name: SyncMarkBad
  endpoint:
    path: /sync/markbad
    method: POST
    data_selector: '{}'
    params: {}
- name: SyncState
  endpoint:
    path: /sync/state
    method: GET
    data_selector:
      ActiveSyncs:
      - WorkerID: 42
        Base:
          Cids: null
          Blocks: null
          Height: 0
        Target:
          Cids: null
          Blocks: null
          Height: 0
        Stage: 1
        Height: 10101
        Start: '0001-01-01T00:00:00Z'
        End: '0001-01-01T00:00:00Z'
        Message: string value
      VMApplied: 42
    params: {}
- name: SyncSubmitBlock
  endpoint:
    path: /sync/submit_block
    method: POST
    data_selector: Header
    params: {}
- name: SyncUnmarkAllBad
  endpoint:
    path: /sync/unmark_all_bad
    method: POST
    data_selector: null
    params: {}
- name: SyncUnmarkBad
  endpoint:
    path: /sync/unmark_bad
    method: POST
    data_selector: null
    params: {}
- name: SyncValidateTipset
  endpoint:
    path: /sync/validate_tipset
    method: POST
    data_selector: null
    params: {}
- name: WalletBalance
  endpoint:
    path: /WalletBalance
    method: GET
    data_selector: balance
    params: {}
- name: WalletDefaultAddress
  endpoint:
    path: /WalletDefaultAddress
    method: GET
    data_selector: defaultAddress
    params: {}
- name: WalletDelete
  endpoint:
    path: /WalletDelete
    method: POST
    data_selector: deleteResponse
    params: {}
- name: WalletExport
  endpoint:
    path: /WalletExport
    method: POST
    data_selector: privateKey
    params: {}
- name: WalletHas
  endpoint:
    path: /WalletHas
    method: GET
    data_selector: hasAddress
    params: {}
- name: WalletImport
  endpoint:
    path: /WalletImport
    method: POST
    data_selector: importResponse
    params: {}
- name: WalletList
  endpoint:
    path: /WalletList
    method: GET
    data_selector: addresses
    params: {}
- name: WalletNew
  endpoint:
    path: /WalletNew
    method: POST
    data_selector: newAddress
    params: {}
- name: WalletSetDefault
  endpoint:
    path: /WalletSetDefault
    method: POST
    data_selector: setDefaultResponse
    params: {}
- name: WalletSign
  endpoint:
    path: /WalletSign
    method: POST
    data_selector: signResponse
    params: {}
- name: WalletSignMessage
  endpoint:
    path: /WalletSignMessage
    method: POST
    data_selector: signMessageResponse
    params: {}
- name: WalletValidateAddress
  endpoint:
    path: /WalletValidateAddress
    method: GET
    data_selector: validateResponse
    params: {}
- name: wallet_verify
  endpoint:
    path: /reference/json-rpc/wallet
    method: POST
    data_selector: response
    params: {}
- name: Web3ClientVersion
  endpoint:
    path: /web3/clientVersion
    method: GET
    data_selector: string value
    params: {}
- name: WalletBalance
  endpoint:
    path: /WalletBalance
    method: GET
    data_selector: Response
- name: WalletDefaultAddress
  endpoint:
    path: /WalletDefaultAddress
    method: GET
    data_selector: Response
- name: WalletDelete
  endpoint:
    path: /WalletDelete
    method: POST
    data_selector: Response
- name: WalletExport
  endpoint:
    path: /WalletExport
    method: POST
    data_selector: Response
- name: WalletHas
  endpoint:
    path: /WalletHas
    method: POST
    data_selector: Response
- name: WalletImport
  endpoint:
    path: /WalletImport
    method: POST
    data_selector: Response
- name: WalletList
  endpoint:
    path: /WalletList
    method: GET
    data_selector: Response
- name: WalletNew
  endpoint:
    path: /WalletNew
    method: POST
    data_selector: Response
- name: WalletSetDefault
  endpoint:
    path: /WalletSetDefault
    method: POST
    data_selector: Response
- name: WalletSign
  endpoint:
    path: /WalletSign
    method: POST
    data_selector: Response
- name: WalletSignMessage
  endpoint:
    path: /WalletSignMessage
    method: POST
    data_selector: Response
- name: WalletValidateAddress
  endpoint:
    path: /WalletValidateAddress
    method: GET
    data_selector: Response
- name: wallet_verify
  endpoint:
    path: /wallet/verify
    method: POST
    data_selector: response
    params: {}
- name: Web3ClientVersion
  endpoint:
    path: /web3/clientVersion
    method: GET
    data_selector: string value
    params: {}
- name: storage_deals
  endpoint:
    path: /api/v1/storage/deals
    method: GET
    data_selector: deals
    params: {}
- name: retrieval_deals
  endpoint:
    path: /api/v1/retrieval/deals
    method: GET
    data_selector: deals
    params: {}
- name: storage_provider
  endpoint:
    path: /api/storage_provider
    method: GET
    data_selector: data
    params: {}
- name: data_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: deal_aggregation
  endpoint:
    path: /submit
    method: POST
    data_selector: transaction
- name: data_preparation
  endpoint:
    path: /data/preparation
    method: POST
    data_selector: data
    params: {}
- name: storage_deals
  endpoint:
    path: /storage/deals
    method: POST
    data_selector: deals
    params: {}
- name: data_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: deal_aggregation
  endpoint:
    path: /submit
    method: POST
    data_selector: transaction
    params: {}
- name: DealClient
  endpoint:
    path: /0x0219eB1740C315fe5e20612D7E13AE2A883dB3f4
    method: POST
    data_selector: transaction
    params: {}
- name: DealStatus
  endpoint:
    path: /0x01ccBC72B2f0Ac91B79Ff7D2280d79e25f745960
    method: POST
    data_selector: transaction
    params: {}
- name: FVM Data Depot
  endpoint:
    path: https://data.lighthouse.storage/
    method: POST
    data_selector: data
    params: {}
- name: IPFS
  endpoint:
    path: https://www.lighthouse.storage/
    method: POST
    data_selector: data
    params: {}
- name: DealClient
  endpoint:
    path: /contracts/DealClient
    method: POST
- name: DealStatus
  endpoint:
    path: /contracts/DealStatus
    method: POST
- name: content_retrieval
  endpoint:
    path: /retrieve/content
    method: GET
    data_selector: data
    params: {}
- name: lassie
  endpoint:
    path: /lassie/fetch
    method: POST
    data_selector: content
    params: {}
- name: saturn
  endpoint:
    path: /saturn/fetch
    method: POST
    data_selector: content
    params: {}
- name: smart_contract_events
  endpoint:
    path: /rpc/v1
    method: POST
    data_selector: result
    params: {}
- name: Tellor
  endpoint:
    path: /oracles/tellor
    method: GET
- name: transferOut
  endpoint:
    path: /transferOut
    method: POST
    data_selector: transferId
    params: {}
- name: transferIn
  endpoint:
    path: /transferIn
    method: POST
    data_selector: transferId
    params: {}
- name: confirm
  endpoint:
    path: /confirm
    method: POST
    data_selector: transferId
    params: {}
- name: Tellor Oracle
  endpoint:
    path: /tellor/oracle
    method: GET
    data_selector: data
    params: {}
- name: aggregator_table
  endpoint:
    path: /create
    method: POST
    data_selector: results
    params: {}
- name: insert_record
  endpoint:
    path: /insert
    method: POST
    data_selector: results
    params: {}
- name: update_record
  endpoint:
    path: /update
    method: POST
    data_selector: results
    params: {}
- name: query_records
  endpoint:
    path: /query
    method: GET
    data_selector: results
    params: {}
- name: cBridge
  endpoint:
    path: /cbridge
    method: GET
- name: Filrep
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
- name: GLIF nodes
  endpoint:
    path: /lotus/developers/glif-nodes/
    method: GET
    data_selector: data
    params: {}
- name: Lotus JSON-RPC API
  endpoint:
    path: /lotus/get-started/what-is-lotus/
    method: GET
    data_selector: data
    params: {}
- name: aggregator_table
  endpoint:
    path: /create
    method: POST
    data_selector: results
    params: {}
- name: Mainnet
  endpoint:
    path: /networks/mainnet
    method: GET
- name: Calibration
  endpoint:
    path: /networks/calibration
    method: GET
- name: Local Devnet
  endpoint:
    path: /networks/local-devnet
    method: GET
- name: Filrep
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
notes:
- To become a storage provider in the Filecoin network you need a range of technical,
  financial and business skills.
- Running a storage operation is a serious business, with client data and pledged
  funds at stake.
- Lotus is the reference implementation of the Filecoin protocol, developed by Protocol
  Labs
- Venus is an open-source implementation of the Filecoin network, developed by IPFSForce
- Forest is focused on blockchain analytics, and does not support storage, retrieval
  or mining.
- Forest is currently used for generating up-to-date snapshots and managing archival
  copies of the Filecoin blockchain.
- Mainnet began on block 148,888.
- Supports 32 GiB and 64 GiB sectors.
- Filecoin combines the benefits of content-addressed data leveraged by IPFS with
  blockchain-powered storage guarantees.
- Developers choose Filecoin because it is the world’s largest distributed storage
  network, without centralized servers or authority.
- Mainnet network status reports incidents.
- Filecoin’s native currency, FIL, is a utility token that incentivizes persistent
  storage on the Filecoin network.
- FIL’s maximum circulating supply is capped at 2 billion FIL.
- Filecoin’s maximum circulating supply is capped at 2 billion FIL.
- 75% of block rewards earned by miners vest linearly over 180 days.
- Sectors come in standard sizes, typically 32 GiB or 64 GiB.
- Filecoin Plus aims to maximize useful storage on the Filecoin network by incentivizing
  the storage of meaningful and valuable data.
- Calibration testnet offers the closest simulation of the mainnet.
- Calibration testnet uses the same sector size as the mainnet.
- FVM enables compute-over-data on the Filecoin network
- Uses OAuth2 with refresh token — requires setup of connected app in Filecoin
- Some endpoints may have rate limits
- f4 addresses may only be assigned by and in association with specific, built-in
  actors called address managers.
- Once users are able to deploy custom WebAssembly actors, this restriction will likely
  be relaxed in a future FIP.
- Filecoin has a block time of 30 seconds.
- Currently, per FIP 0048, f4 addresses may only be assigned by and in association
  with specific, built-in actors called address managers.
- Any Drand beacon outage will effectively halt Filecoin block production.
- During the catch-up period, Filecoin nodes will backdate their blocks.
- In the Filecoin blockchain, network consensus is achieved using the Expected Consensus
  (EC) algorithm.
- A block producer can be verified by any participant in the network.
- Requires proper configuration for authentication to access the API.
- Drand is used as a randomness beacon for leader election in Filecoin.
- Wallets provide a way to securely store Filecoin, along with other digital assets.
- Wallets that have conducted third-party audits of their open-source code by a reputable
  security auditor are marked *recommended*.
- FIL is the cryptocurrency that powers the Filecoin network.
- Various types of cryptocurrency wallets include desktop, mobile, hardware, and web-based
  wallets.
- Users are cautioned to do their own due diligence with respect to choosing a fiat
  on-ramp provider.
- Uses ChainID.network for network configuration
- MetaMask supports Filecoin EVM addresses
- ASSETS ON THE FILECOIN NETWORK ARE NOT AVAILABLE ON ANY OTHER NETWORK
- Expert Mode must be enabled before interacting with the Filecoin Ledger app.
- Create a burner wallet using Glif to transfer FIL to a 0x address.
- Ledger Live supports sending to a Filecoin `f4` address, which has an automatic
  `0x` equivalent that you can look up on any block explorer.
- A hot wallet is a cryptocurrency wallet that is always connected to the internet.
- Hot wallets tend to be somewhat more vulnerable to hacks and theft than cold storage
  methods.
- IPC is designed for horizontal scalability of decentralized applications.
- Supports multi-chain interoperability with Filecoin and Ethereum.
- Visit the website for more information
- Read the docs for detailed guidance
- DataCap allocations are a one-time credit for a Filecoin address and cannot be transferred
  between smart contracts.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Lassie only returns data in CAR format, specifically, CARv1 format.
- Saturn is a Web3 CDN in Filecoin’s retrieval market.
- Content on Saturn is IPFS content-addressed.
- Some objects like Contact may return nulls in deeply nested fields
- Get ready to dive into the valuable resources of the storage provider documentation.
- It’s time to roll up your sleeves and embark on a hands-on adventure.
- Storage providers must preserve the data for a minimum duration of 180 days and
  a maximum duration of 540 days.
- Every storage sector gets verified once in each 24 hour period.
- Filecoin is a huge project and undertaking, and with lots of code comes the need
  for lots of good documentation!
- Comprehensive guide offers a wealth of information about the role of storage providers
  in the Filecoin ecosystem
- It's crucial to understand the concept of Return on Investment (ROI) and the significance
  of collateral
- Collateral is required for storage capacity, proportional to the hardware committed.
- Storage providers must respond to WindowsPoSt challenges within 30 minutes.
- Deals must have a minimum duration of 180 days, and maximum duration of 540 days.
- Every storage sector of 32 GiB or 64 GiB gets verified once in each 24 hour period.
- Storage providers have a deadline of 30 minutes to respond to WindowPoSt challenge.
- Block rewards are an incentive mechanism for storage providers.
- Block rewards are volatile and depend on the state of the network.
- The slower minting rate allows for minting over a longer period.
- A lower circulating supply has a positive effect on the price of FIL.
- Fault fees are incurred for each day a storage provider’s sector is offline.
- The fault fee applies only to the sectors already faulty.
- Collateral required increases with the volume of storage pledged.
- Gas fees fluctuate over time and are required for on-chain activities.
- Providing committed capacity is the easiest way to get started as a storage provider,
  but the economics are very dependent on the price of FIL.
- Profitability can be increased by utilizing Filecoin Plus, along with extra services
  you can charge for.
- WinningPoSt is used for block rewards.
- Block rewards depend on the state of the network.
- Filecoin has a capped maximum token supply of 2 billion FIL.
- DataCap is a non-exchangeable asset allocated by notaries to data clients.
- A 10x quality adjustment multiplier is set at the protocol level for storage offered
  for verified deals.
- Storage fault slashing penalizes storage providers that fail to provide reliable
  uptime or act maliciously.
- Honest storage providers may experience exceptions to fault fees.
- Storage providers can now batch pre-commit up to 256 sectors at once.
- Charging for data stored on your storage provider network is an essential aspect
  of running a sustainable business.
- It is crucial to develop a pricing strategy that is competitive, yet profitable.
- DataCap is a non-exchangeable asset that is allocated by notaries to data clients.
- DataCap gets assigned to a wallet but cannot be sold or exchanged.
- Rewards on Fil+ deals are 10x, but so are the penalties.
- The stakes are high - after all, we’re storing humanity’s most important information
  with Filecoin.
- Saturn aims to be the biggest Web3 CDN, and biggest CDN overall with the introduction
  of Saturn, data stored on Filecoin is no longer limited to archive or cold storage,
  but can also be cached into a CDN layer for fast retrieval.
- Another potential service to offer is storage tiers with various performance profiles.
- Snapping up sectors with snap deals puts a lot less stress on the storage provider’s
  infrastructure.
- Do not forget to provide the collateral funds when snapping up a verified deal.
- Some objects may return nulls in deeply nested fields
- New use-cases for Filecoin network are emerging as new technologies are introduced.
- Calculating the ROI of your storage provider business is complex and requires a
  thorough understanding of the costs and income streams involved.
- Storage providers should use lightweight snapshots to import the most recent messages.
- Synced chain data should be stored on an SSD; faster NVMe drives are recommended.
- Filecoin chain grows as much as 50GB a day.
- It is imperative to have at least one daily backup of your Lotus miner state.
- The maximum Piece size is equal to the sector size, which is either 32 GiB or 64
  GiB.
- The process of sealing a single 32 GiB sector takes roughly 3 hours.
- Batching is configured by default to avoid sending messages to the chain for every
  single sector.
- The timeout interval for messaging is set to 24 hours by default.
- The machine running the Lotus daemon must be connected to the public internet for
  the storage provider to function.
- It is not advised for storage providers to sync the entire history of the network.
- Cost is an important factor in determining a storage provider’s sealing rate.
- A common reason for faster sealing rates is customer expectations.
- The `sectorstore.json` file is required for restoration in the event of a failure.
- A storage provider’s sealing capacity scales linearly with the hardware you add
  to it.
- 1-click deployment automation for the storage provider stack allows new storage
  providers to quickly learn and deploy Lotus and Boost.
- This automation is still evolving and will receive more features and capabilities
  over time.
- RAID configurations favor capacity and read performance.
- Double parity configurations like RAID6 and RAIDZ2 are preferred.
- Configuring wide VDEVs can impact performance and availability.
- Separate disk pools for sealed and unsealed copies are recommended.
- Maximum Piece size is equal to the sector size, which is either 32 GiB or 64 GiB.
- For best performance, compile Lotus with CUDA support instead of OpenCL.
- Batching is configured to avoid sending messages to the chain for every single sector,
  with a configurable timeout interval set to 24 hours by default.
- A minimum bandwidth of 10 Gbps is recommended for setups that include a Saturn node.
- The internal connectivity between servers should be at least 10 Gbps.
- It is recommended to keep all sealing workers, Lotus miners, and storage systems
  in the same VLAN.
- RTO is typically less concerning for storage providers.
- RPO for data owners is less of a concern, especially once the data is sealed.
- When setting up their business, storage providers must determine how fast they should
  seal and, thus, how much sealing hardware they should buy.
- A common reason that a storage provider may want or need a faster sealing rate is
  customer expectations.
- The art of building a well-balanced sealing pipeline means having the bottlenecks
  where you expect them to be.
- While a Lotus worker can run all of the various tasks in the sealing pipeline, different
  storage provider configurations may split tasks between workers.
- 'As of FIP006: No repay debt requirement for DeclareFaultsRecovered, storage providers
  are no longer required to pay fee debt prior to recovering a new storage fault.'
- Using Sealing-as-a-Service providers allows you to scale your sealing capacity without
  adding more hardware.
- Storage providers publish data to indexers so that clients can find that data using
  the CID or multihash of the content.
- Using Sealing-as-a-Service reduces the requirements to have a fast performing sealing
  setup.
- PC1 is a single-threaded process, requiring enough CPU cores to run multiple PC1
  tasks in parallel.
- ZFS performs automatic healing tasks called scrubbing.
- It is recommended to create separate disk pools for sealed and unsealed copies.
- Network skills are crucial for building and maintaining a well-functioning storage
  provider setup.
- Monitoring the network is crucial in identifying potential issues and ensuring smooth
  data flow.
- Read performance is optimal when choosing for RAIDZ2 VDEVs of 10 to 15 disks.
- RAID-sets using parity like RAIDZ and RAIDZ2 will employ all spindles for read operations.
- Performance is a critical aspect of a storage provider setup, particularly when
  dealing with high network throughput requirements.
- Network benchmarking tools such as iperf and iperf3 can help identify potential
  performance issues and optimize the network setup.
- To make informed decisions about the network setup, you also need to make trade-offs
  between performance and cost by analyzing the impact of each component and comparing
  it to the cost.
- A bandwidth between 1 Gbps and 10 Gbps is generally sufficient for most organizations.
- It is crucial to have a backup of any production system.
- Fast recovery means a shorter RTO (typically measured in hours/minutes/seconds).
- Enterprises plan for very short RTOs when downtime is not acceptable to their business.
- RPO zero and RTO zero are the ideal, in practice it is rarely economical.
- Wallet addresses typically do not change, so the only thing to worry about is your
  sealed storage.
- For maximum resilience, you could host your backup system (server + storage) in
  a different datacenter than your primary system.
- Having the services on a floating IP allows to assign this IP to another machine
  and start the service on it.
- Configuring ZFS requires knowledge and skills that go beyond the basics of traditional
  file systems.
- RAIDZ2 is a configuration that provides double parity, meaning that two disks can
  fail simultaneously without data loss.
- Snapshots are read-only copies of a ZFS file system at a particular point in time.
- PC1 is a single-threaded process requiring enough CPU cores to run multiple PC1
  tasks in parallel.
- Sales skills are important for storage providers to differentiate themselves from
  the competition, market their services effectively, and attract new customers.
- Financial management skills are crucial for running a successful storage provider
  business.
- A solid understanding of network architecture, topology, protocols, and security
  principles can help optimize performance, prevent bottlenecks, and protect against
  security threats.
- ALPHA FEATURE - UNDER DEVELOPMENT
- This tool is intended for testing and experimental use only.
- Storage is a critical aspect of the Filecoin network and storage providers must
  have the necessary skills and knowledge to provide high-quality storage services
  to clients.
- Read-cache on the other hand is typically not useful in the context of Filecoin.
- This documentation covers the PDP (Proof of Data Possession) feature, which is currently
  in alpha and under active development.
- Ensure to back up your wallet keys securely before continuing.
- Make sure to send a small amount of FIL to each wallet - we recommend 1 FIL per
  wallet to ensure the creation of your Storage Provider in Curio.
- Requires setup of connected app in api
- Make sure to send a small amount of FIL to each wallet - we recommend 1 FIL per
  wallet
- Ensure to increase UDP buffer size for Curio installation.
- For database configuration, use the default YugabyteDB settings.
- Always use 'public' for the '--service-name' flag
- Make sure to send a small amount of FIL to each wallet - we recommend 1 FIL per
  wallet.
- Calibration test FIL faucet information available in documentation.
- Lotus provides a comprehensive API that allows developers to interact with the Filecoin
  network programmatically.
- Lotus is designed to be modular and extensible, allowing developers to create custom
  plugins that add new functionality to the network.
- Venus provides a comprehensive API that allows developers to interact with the Filecoin
  network programmatically.
- Venus includes a powerful command-line interface that allows developers to interact
  with the Filecoin network from the terminal.
- Ensure to back up wallet keys securely.
- Use 1 FIL per wallet for creation.
- Always use `public` for the `--service-name` flag
- Lotus is compatible with Windows, macOS, and various Linux distributions.
- Lotus requires at least 8GB of RAM to run efficiently.
- Lotus requires several GB of free disk space for the blockchain data.
- Venus is an open-source implementation of the Filecoin network, developed by the
  blockchain company IPFSForce.
- Venus is built in Go and is designed to be fast, efficient, and scalable.
- One of the key features of Venus is its support for the Chinese language and market.
- Ensure that your operating system is compatible with the version of Lotus you intend
  to install.
- Ensure that your computer has a 64-bit CPU.
- Lotus requires several GB of free disk space for the blockchain data, as well as
  additional space for the Lotus binaries and other files.
- Lotus requires a stable and high-speed internet connection to synchronize with the
  Filecoin network and communicate with other nodes.
- Ensure that your firewall settings and port forwarding rules allow incoming and
  outgoing traffic on the ports used by Lotus.
- Lotus is primarily operated through the command line interface.
- 'To install Lotus on your computer, follow these steps: Download the appropriate
  binary file for your operating system.'
- Run the lotus binary file to start the Lotus daemon.
- The lite-node is now set up to accept local JSON-RPC requests.
- Requires MetaMask wallet for authentication
- Ensure to have test currency in your wallet for transactions
- The lite-node is set up to accept local JSON-RPC requests.
- Test-filecoin (TFIL) is FIL that has no value in the real world, used for testing.
- MetaMask is required for wallet interactions.
- Remix does not support the Filecoin network, which may lead to discrepancies in
  displayed values.
- The goal of the FVM project is to add general programmability to the Filecoin blockchain.
- Filecoin was the first network deploying programmability, post-genesis, to ensure
  that layer 0 of the Filecoin blockchain was stable and fully functional.
- Further incremental protocol refactors to enhance programmability
- To complete in 2023
- Deployment confirmation may take around 60 to 90 seconds.
- Minting requires attoFil value.
- If you need assistance while exploring the Filecoin virtual machine, you can reach
  out to the team and community using the links on this page.
- FVM allows developers to write and deploy custom code to run on top of the Filecoin
  blockchain.
- The input data should either be empty or encoded as a CBOR byte string.
- The return data will either be empty or encoded as a CBOR byte string.
- This address type plays an essential role in supporting the FEVM.
- The supported foreign addresses can be cast as f4/t4 addresses, and vice-versa.
- Filecoin addresses can be represented either as raw bytes or a string.
- Raw bytes format will always be used on-chain.
- The Ethereum Address Manager (EAM) manages Ethereum address space.
- The f410/t410 address will be used for Ethereum-compatible FVM development tools.
- Addresses can be represented either as raw bytes or a string.
- Each address class has its own rules for converting between binary and text.
- Ethereum addresses can be cast as f410 addresses, and vice-versa.
- It generally takes around two minutes for a transaction to complete and for the
  funds to be available at the destination.
- Filecoin gas costs are not set in stone and should never be hard-coded. Future network
  upgrades will break any smart contracts that depend on gas costs not changing.
- Filecoin charges Filecoin gas only.
- Gas costs are not set in stone and should never be hard-coded.
- Precompiles are already deployed contracts for use by developers.
- Data depots hold your data for the duration of this process so that you don't have
  to maintain your connection to the network.
- Once an SP verifiably holds your data, the data depot discards your data.
- Aggregation can be done off-chain or on-chain.
- Uses Avalanche Fuji testnet and Filecoin Calibration testnet for development.
- Storage providers may take time to publish deals on-chain.
- Deals on the Calibration testnet will be picked up within 24 hours.
- The system uses the Axelar network to transport messages between Avalanche and Filecoin.
- Each component plays a vital role in ensuring trust-minimized and seamless data
  storage between chains.
- This section contains a wealth of information specifically about building smart
  contracts on the Filecoin network.
- Use Avalanche Fuji testnet and Filecoin Calibration testnet for deployment
- Ensure wallet is connected to Metamask with sufficient tokens for fees and payments
- RaaS refers to replication, renewal and repair as a service, for data stored in
  storage deals on Filecoin.
- Uses event listeners for handling job submissions.
- Developers can leverage the self-hosted RaaS to provide RaaS features, within their
  storage solution, using the RaaS Starter Kit.
- Remix provides a workspace to create and deploy contracts on the Filecoin network.
- MetaMask integration is required for deploying contracts.
- Remix uses a default of 2.5 nanoFIL per gas as a priority fee, which is usually
  too high for the Filecoin network.
- Always be careful when dealing with your private key. Double-check that you’re not
  hardcoding it anywhere or committing it to Git.
- Manage local testnet tokens using MetaMask by creating a t4 address.
- Uses MetaMask for authentication
- Remix does not support the Filecoin network
- Remix uses a default of 2.5 nanoFIL per gas as a priority fee.
- Recommended to switch from site-suggested gas fees to oracle-supplied gas fees.
- You should also have an address on the Filecoin Calibration testnet.
- You also need test tFIL in your wallet.
- The library can be embedded into your smart contract without needing to be present
  on chain first.
- Requires authentication for some API calls.
- This page covers the client contract, and includes a tutorial on how developers
  can use the client contract to create storage deals programmatically.
- 'Before continuing, make sure you have the following software installed and prerequisites
  ready: Git, NodeJS, Yarn or NPM, A code editor such as VS Code, A wallet with Calibration
  testnet FIL.'
- Parameters such as the collateral and price-per-epoch are set to 0.
- This is on the Calibration testnet.
- Requires OAuth2 setup for authentication.
- To use this, call `yarn service` in the terminal and proceed through the frontend,
  as you normally would when uploading a file.
- Consistently generating transaction receipts may take between 30 and 90 seconds.
- Gas fees on the network can fluctuate depending on network demand.
- You can add workers to perform replication, renewal, and repair jobs by having them
  listen to the SubmitAggregatorRequest.
- All contracts interacting with built-in actors must upgrade to the latest version
  of Filecoin Solidity library, currently v0.8.
- DAG_CBOR support will be re-enabled in the future.
- Advanced features for smart contract developers
- Receipts may take between 30 and 90 seconds to return.
- Change the default transaction receipt timeout to 90 seconds or more.
- Users should resubmit messages with a higher gas fee to avoid blocking the mempool.
- It is highly recommended for all FVM smart contracts to complete the verification
  process, soon after deployment.
- Use the correct wFIL contract address on Filecoin when wrapping and unwrapping FIL.
- Do not directly send FIL to the wFIL contract address.
- Ensure you do not send FIL using the METHOD_SEND method.
- 'Only use the following addresses when wrapping and unwrapping FIL: Mainnet: 0x60E1773636CF5E4A227d9AC24F20fEca034ee25A;
  Calibration testnet: 0xaC26a4Ab9cF2A8c5DBaB6fb4351ec0F4b07356c4.'
- Always use the InvokeEVM method.
- Pyth data is sourced directly from financial institutions.
- Tellor is an optimistic oracle.
- Multicall allows you to aggregate multiple contract reads into a single JSON-RPC
  request.
- Multicall3 is deployed on over 100 chains at 0xcA11bde05977b3631167028862bE2a173976CA11.
- Multicall3 can be safely used for batching on-chain writes when used correctly.
- Signing a transaction from an account with no previous activity on the Filecoin
  blockchain will fail.
- Executing a transaction can produce gas estimation issues for accounts that have
  a very small amount of funds.
- Transaction confirmation times may lead to prolonged 'processing' status in the
  UI.
- Safe addresses from other networks can sometimes be used but require additional
  technical steps.
- Multisig wallets enhance security and decentralization by requiring multiple signatures
  for transactions.
- Subgraphs have to be stored somewhere.
- Glif Nodes currently offers this service completely free of charge.
- Goldsky supports the Filecoin mainnet & testnet.
- Subgraph querying is free so far, although it requires an API key.
- Cross-chain bridges serve as a link between different blockchains.
- Security is the top concern for bridges.
- Users can submit transactions without paying gas fees.
- Relayer handles gas fee payment either off-chain or on-chain.
- PoDSI is heavily used in the aggregated deal-making workflow.
- Without a specific API key, the relay request will fail!
- Web3 Function deployed to IPFS
- Relay services enable users to interact with the Filecoin network without having
  to hold FIL tokens or manage their own wallets.
- Current Filecoin network performance is primarily determined by security parameters
  and Filecoin’s proof constructions.
- It is highly non-trivial to provide highly reliable benchmarks for Filecoin network
  performance.
- The calibration network is the most realistic testnet simulation of the Filecoin
  mainnet.
- Endpoints are limited to read-only operations except for MPoolPush and EthSendRawTransaction.
- Most publicly hosted endpoints only guarantee recent state, i.e. 2000 of the latest
  blocks.
- Calibration network is a realistic testnet simulation of the Filecoin mainnet.
- Filecoin storage currently meets similar performance bars as traditional warm or
  cold storage.
- Most users utilize Filecoin with a caching layer such as IPFS for better performance.
- Publicly available hosted endpoints only guarantee 2000 of the latest blocks.
- Calibration network is the most realistic testnet simulation of the Filecoin mainnet.
- Local networks are a useful way to get started with Filecoin development.
- Uses a client-server architecture with storage provider and client nodes.
- Uses environmental variables for setup
- Client and storage provider nodes must be run in separate terminal windows
- Uses a local devnet setup for testing.
- Ensure to run nodes in separate terminal windows.
- Ensure to export devnet-specific variables each time a new terminal is opened.
- Environmental variables must be exported every time we start a new terminal.
- Requires a local testnet running to test transactions
- 'A Filecoin network has two node types: storage provider nodes and client nodes.'
- The Nerpa test network was deprecated on 2021-08-16.
- The Spacenet test network was deprecated on 2023-09-11.
- The Wallaby test network was deprecated on 2023-02-07.
- If you receive an error when trying to call your Lotus daemon, either your `lotus
  daemon` isn’t running or you haven’t re-exported the necessary variables.
- Requires setup of local devnet
- Export environment variables for devnet before starting nodes
- Connect apps to the Filecoin blockchain with iso-filecoin.
- Lotus is the reference implementation node for the Filecoin network
- Lightweight, performant and type-safe
- Enables dapps access to Filecoin accounts using Metamask
- To connect to the Filecoin network, use the JSON-RPC API.
- Ensure that you have set up API tokens on your node to grant necessary permissions.
- Actors trigger state transitions by sending messages.
- Each actor has a Filecoin balance and a nonce.
- Not all built-in actors and methods are supported
- The method requires that the lotus daemon is running with the LOTUS_BACKUP_BASE_PATH
  environment variable set to some path, and that the path specified when calling
  CreateBackup is within the base path
- Mpool methods are for interacting with the message pool.
- 'Perms: sign'
- Permits for actions include sign, read, and write depending on the endpoint.
- 'Perms: read'
- 'Perms: admin'
- Requires setup of OAuth application in Filecoin
- API rate limits apply
- Some endpoints may have rate limits.
- Data stored using lighthouse SDK will be automatically registered for deal aggregation
  as well as RaaS.
- Prepare data into CAR files before making storage deals.
- Use FVM Data Depot for uploading files and generating CAR.
- Utilizes Lighthouse SDK for data upload.
- Requires an API key from a Lighthouse storage account.
- Client Contract serves as a crucial component in making on-chain storage deal proposals
  on the Filecoin network.
- RaaS jobs can be registered when uploading data using either the Lighthouse SDK
  or smart contracts.
- Ensure your dataset is encrypted for good privacy hygiene when storing files.
- Lassie is designed to fetch content in the content-addressed archive (CAR) form.
- Saturn Javascript Client is still a work in progress and not recommended for use
  in production yet.
- 'Oracle contract address (on both Calibration Testnet and Mainnet): 0xb2CB696fE5244fB9004877e58dcB680cB86Ba444'
- Most public node providers offer limited access, typically allowing read-only JSON
  RPC calls and MPoolPush to send signed messages to the Filecoin networks.
- Note that there is an expected finality period when conducting inter-chain messaging
  with Celer.
- There is an expected finality period when conducting inter-chain messaging with
  Celer.
- Making deep calls into the chain’s history may take some time to return.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Verify the endpoint path.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Slashing means a portion of the collateral will be forfeited.
- 'PLEDGE_FAILURE: Collateral is forfeited for failing to meet storage deal rules.'
- Failure to submit proof results in slashing.
- Fault fees continue until the associated wallet is empty.
- Sector penalties are incurred for a faulted sector that was not declared faulted.
- 'FAULT_NOT_DETECTED: Ensure sectors are monitored for reliability.'
- 'PENALTY_NOT_APPLIED: Verify provider history for previous proving periods.'
- '401 Unauthorized: Recheck wallet credentials or token expiration'
- API Token not set and requested, capabilities might be limited.
- '403 Forbidden: Check your access permissions'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check your OAuth token'
- 'TRANSACTION_FAILED: Check contract address or parameters'
- 'NETWORK_TIMEOUT: Ensure connectivity to Filecoin network'
- No gas refund for self-destruct.
- CALLCODE opcode has not been implemented.
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- Error handling is not specified in the documentation.
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Check API key or authentication method.'
- 'NOT_FOUND: The requested resource does not exist.'
- 'ERROR: could not get API info for FullNode: could not get api endpoint: API not
  running (no endpoint)'
- '429 Too Many Requests: Slow down your requests'
- '500 Internal Server Error: Try again later'
- '429 Too Many Requests: Reduce request frequency.'
- 'INVALID_CID: Ensure the CID format is correct.'
- 'STORAGE_DEAL_FAILED: Check the provided parameters for the deal.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - LOTUS_ADMIN_KEY
  - OAuthToken
client:
  base_url: https://api.calibration.node.glif.io/rpc/v0
source_metadata: null
