resources:
- name: customers
  endpoint:
    path: /api/p/v{version}/customers
    method: GET
    data_selector: records
    params:
      id: conditional
      companyNumber: conditional
- name: customers_search
  endpoint:
    path: /api/p/v{version}/customers/search
    method: POST
    data_selector: records
    params:
      page: page
      pageSize: pageSize
      statuses: statuses
- name: drivers
  endpoint:
    path: /api/p/v{version}/drivers/{id}
    method: GET
- name: drivers
  endpoint:
    path: /api/p/v{version}/drivers
    method: GET
- name: customers
  endpoint:
    path: /api/p/v{version}/customers
    method: GET
- name: driver
  endpoint:
    path: /api/p/v{version}/drivers/{id}
    method: GET
    data_selector: object
    params: {}
- name: drivers
  endpoint:
    path: /api/p/v{version}/drivers
    method: GET
- name: customers
  endpoint:
    path: /api/p/v{version}/customers
    method: GET
- name: drivers
  endpoint:
    path: /api/p/v{version}/drivers
    method: GET
    data_selector: drivers
    params:
      version: v{version}
- name: drivers
  endpoint:
    path: /drivers
    method: GET
- name: drivers_search
  endpoint:
    path: /api/p/v{version}/drivers/search
    method: POST
    data_selector: results
    params:
      version: v{version}
- name: drivers_search
  endpoint:
    path: /api/p/v{version}/drivers/search
    method: POST
- name: driver_events
  endpoint:
    path: /drivers/events/search
    method: POST
- name: driver_events
  endpoint:
    path: /drivers/events/search
    method: POST
    data_selector: response
    params: {}
- name: driver_document
  endpoint:
    path: /api/p/v{version}/drivers/{driverId}/document
    method: POST
    data_selector: id
    params: {}
- name: document
  endpoint:
    path: /api/p/v{version}/drivers/{driverId}/document
    method: POST
    data_selector: id
    params:
      driverId: path
      version: path
- name: fuel
  endpoint:
    path: /api/p/v{version}/fuel/{id}
    method: GET
    data_selector: response
    params: {}
- name: fuel
  endpoint:
    path: /api/p/v{version}/fuel/{id}
    method: GET
    data_selector: null
    params: {}
- name: fuel_search
  endpoint:
    path: /fuel/search
    method: POST
    data_selector: Items
    params:
      version: v1
- name: fuel_search
  endpoint:
    path: /api/p/v{version}/fuel/search
    method: POST
    data_selector: Items
    params:
      pageSize: '100'
- name: invoices
  endpoint:
    path: /api/p/v{version}/invoices
    method: GET
    params:
      version: v{version}
      id: Conditionally
      invoice_number: Conditionally
- name: invoices
  endpoint:
    path: /api/p/v{version}/invoices
    method: GET
    params:
      version: '{version}'
      id: id
      invoice_number: invoiceNumber
- name: invoices
  endpoint:
    path: /api/p/v{version}/invoices
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /api/p/v{version}/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoices_search
  endpoint:
    path: /api/p/v{version}/invoices/search
    method: POST
    data_selector: data
    params:
      version: v1
- name: invoices_search
  endpoint:
    path: /api/p/v{version}/invoices/search
    method: POST
    data_selector: results
    params:
      version: '1'
- name: invoice
  endpoint:
    path: /api/p/v{version}/invoices/search
    method: GET
    data_selector: items
    params: {}
- name: loads
  endpoint:
    path: /api/p/v{version}/loads
    method: GET
    params:
      version: v1
      id: loadId
      loadNumber: loadNumber
      orderNumber: orderNumber
- name: loads
  endpoint:
    path: /api/p/v{version}/loads
    method: GET
    params:
      version: v1
      id: loadId
      loadNumber: loadNumber
      orderNumber: orderNumber
- name: loads_search
  endpoint:
    path: /api/p/v{version}/loads/search
    method: POST
    data_selector: loads
    params:
      version: '1'
- name: loads_search
  endpoint:
    path: /api/p/v{version}/loads/search
    method: POST
    data_selector: data
    params:
      version: '1'
- name: load_document
  endpoint:
    path: /api/p/v{version}/loads/{loadNumber}/document
    method: POST
    data_selector: ''
    params: {}
- name: load_document
  endpoint:
    path: /api/p/v{version}/loads/{loadNumber}/document
    method: POST
    data_selector: ''
    params:
      loadNumber: path
      version: path
- name: maintenance
  endpoint:
    path: /api/p/v{version}/maintenance/{id}
    method: GET
- name: maintenance
  endpoint:
    path: /api/p/v{version}/maintenance/{id}
    method: GET
- name: maintenance_search
  endpoint:
    path: /api/p/v{version}/maintenance/search
    method: POST
    data_selector: items
    params:
      pageSize: pageSize
- name: maintenance_search
  endpoint:
    path: /maintenance/search
    method: POST
    data_selector: items
    params:
      page: 0
      pageSize: 100
- name: toll_transaction
  endpoint:
    path: /api/p/v{version}/tolls/{id}
    method: GET
- name: toll_transaction
  endpoint:
    path: /api/p/v{version}/tolls/{id}
    method: GET
- name: tolls_search
  endpoint:
    path: /api/p/v{version}/tolls/search
    method: POST
    data_selector: transaction_records
    params: {}
- name: tolls_search
  endpoint:
    path: /api/p/v{version}/tolls/search
    method: POST
    data_selector: tollTransactions
    params:
      version: '{version}'
- name: toll_transactions
  endpoint:
    path: /api/p/v{version}/tolls/search
    method: POST
    data_selector: items
    params: {}
- name: toll_transactions
  endpoint:
    path: /api/p/v{version}/tolls/search
    method: POST
    data_selector: items
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers
    method: GET
    data_selector: trailer
    params:
      version: '1.0'
      id: '{trailerId}'
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers/{id}
    method: GET
    data_selector: object
    params:
      version: '1.0'
      id: '{trailerId}'
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers
    method: GET
    data_selector: records
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers
    method: GET
    data_selector: object
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers
    method: GET
    data_selector: trailer
    params:
      version: '{version}'
- name: trailers
  endpoint:
    path: /api/p/v{version}/trailers
    method: GET
    data_selector: trailerData
- name: trailers_search
  endpoint:
    path: /api/p/v{version}/trailers/search
    method: POST
    data_selector: items
    params:
      pageSize: pageSize
- name: trailers_search
  endpoint:
    path: /api/p/v{version}/trailers/search
    method: POST
    data_selector: items
    params:
      page: 0
      pageSize: 50
- name: trailer_events
  endpoint:
    path: /api/p/v{version}/trailers/events/search
    method: POST
    data_selector: response
    params: {}
- name: trailer_events
  endpoint:
    path: /api/p/v{version}/trailers/events/search
    method: POST
    data_selector: response
    params:
      startDate: required
      endDate: required
      trailerIds: required
- name: trailer_document
  endpoint:
    path: /api/p/v{version}/trailers/{trailerId}/document
    method: POST
    data_selector: id
    params: {}
- name: trips
  endpoint:
    path: /api/p/v{version}/trips
    method: GET
    data_selector: trips
    params: {}
- name: trips_search
  endpoint:
    path: /api/p/v{version}/trips/search
    method: POST
- name: document
  endpoint:
    path: /api/p/v{version}/trailers/{trailerId}/document
    method: POST
    data_selector: ''
    params:
      trailerId: path
      version: path
- name: trips
  endpoint:
    path: /api/p/v{version}/trips/search
    method: POST
    data_selector: items
    params: {}
- name: trips
  endpoint:
    path: /api/p/v{version}/trips
    method: GET
    params:
      version: v1
- name: trips
  endpoint:
    path: /api/p/v{version}/trips
    method: GET
    data_selector: trips
    params: {}
- name: trips_document
  endpoint:
    path: /api/p/v{version}/trips/{tripId}/document
    method: POST
    data_selector: id
    params:
      tripId: path
      version: path
- name: trips
  endpoint:
    path: /api/p/v{version}/trips
    method: GET
- name: trucks
  endpoint:
    path: /api/p/v{version}/trucks/{id}
    method: GET
    data_selector: response
    params:
      version: '{version}'
      id: '{truckId}'
- name: trips_search
  endpoint:
    path: /api/p/v{version}/trips/search
    method: POST
    data_selector: items
    params:
      incremental: updatedAt
- name: trucks
  endpoint:
    path: /api/p/v{version}/trucks
    method: GET
- name: trips_document
  endpoint:
    path: /api/p/v{version}/trips/{tripId}/document
    method: POST
    data_selector: id
    params:
      tripId: required
      version: required
- name: trucks_search
  endpoint:
    path: /api/p/v{version}/trucks/search
    method: POST
    data_selector: results
    params:
      version: '1'
- name: trucks
  endpoint:
    path: /api/p/v{version}/trucks/{id}
    method: GET
- name: trucks
  endpoint:
    path: /api/p/v{version}/trucks/search
    method: GET
    data_selector: items
- name: trucks
  endpoint:
    path: /api/p/v{version}/trucks
    method: GET
    data_selector: records
- name: trucks_events_search
  endpoint:
    path: /api/p/v{version}/trucks/events/search
    method: POST
    data_selector: response
    params: {}
- name: trucks_search
  endpoint:
    path: /api/p/v{version}/trucks/search
    method: POST
    data_selector: results
    params:
      version: v1
- name: truck
  endpoint:
    path: /api/p/v{version}/trucks/search
    method: GET
    data_selector: items
- name: trucks_document
  endpoint:
    path: /api/p/v{version}/trucks/{truckId}/document
    method: POST
    data_selector: response
    params:
      truckId: path
      version: path
- name: truck_events
  endpoint:
    path: /api/p/v{version}/trucks/events/search
    method: POST
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /api/p/v{version}/users/list
    method: GET
    data_selector: users
    params:
      version: v{version}
- name: users
  endpoint:
    path: /api/p/v{version}/users/list
    method: GET
    data_selector: users
    params:
      version: v1
- name: users_search
  endpoint:
    path: /api/p/v{version}/users/search
    method: POST
    data_selector: items
    params:
      version: '1.0'
      pageSize: 100
- name: users
  endpoint:
    path: /api/p/v{version}/users/search
    method: POST
- name: users_list
  endpoint:
    path: /api/p/v{version}/users/list
    method: GET
- name: users_search
  endpoint:
    path: /api/p/v{version}/users/search
    method: POST
    data_selector: items
    params:
      version: '1.0'
- name: visibility_inbound_history
  endpoint:
    path: /api/p/v{version}/visibility/inbound/{loadNumber}/history
    method: GET
- name: users_list
  endpoint:
    path: /api/p/v{version}/users/list
    method: GET
- name: visibility_outbound_history
  endpoint:
    path: /api/p/v{version}/visibility/outbound/{loadNumber}/history
    method: GET
- name: visibility_inbound_history
  endpoint:
    path: /visibility/inbound/{loadNumber}/history
    method: GET
- name: visibility_outbound_history
  endpoint:
    path: /api/p/v{version}/visibility/outbound/{loadNumber}/history
    method: GET
    data_selector: records
    params:
      version: v1
      loadNumber: '{loadNumber}'
- name: outbound_errors
  endpoint:
    path: /visibility/outbound/errors
    method: POST
    params:
      page: '0'
      pageSize: '10'
      timeRange:
        start: '2024-11-11T15:15:13.876Z'
        end: '2024-11-18T15:15:13.876Z'
- name: dispatch_preferences
  endpoint:
    path: /api/p/v{version}/dispatchpreferences/search
    method: POST
    data_selector: records
    params: {}
- name: outbound_errors
  endpoint:
    path: /visibility/outbound/errors
    method: POST
    data_selector: items
    params:
      page: page
      pageSize: pageSize
      timeRange: timeRange
- name: dispatch_preferences
  endpoint:
    path: /dispatchpreferences/search
    method: POST
    data_selector: ''
    params: {}
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/{id}
    method: GET
    data_selector: carriers
    params:
      version: '{version}'
      id: '{id}'
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/{id}
    method: GET
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/{id}
    method: GET
    params:
      version: '{version}'
      id: '{id}'
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/{id}
    method: GET
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/search
    method: POST
    data_selector: items
    params:
      page: '0'
      pageSize: '100'
- name: carriers
  endpoint:
    path: /api/p/v{version}/carriers/search
    method: POST
    data_selector: items
    params:
      page: '0'
      pageSize: '100'
- name: document
  endpoint:
    path: /api/p/v{version}/carriers/{carrierId}/document
    method: POST
- name: locations
  endpoint:
    path: /api/p/v{version}/locations
    method: GET
    data_selector: records
    params: {}
- name: document
  endpoint:
    path: /api/p/v{version}/carriers/{carrierId}/document
    method: POST
    data_selector: id
    params:
      carrierId: string
      version: string
- name: locations
  endpoint:
    path: /api/p/v{version}/locations
    method: GET
    params:
      id: string
      companyNumber: string
- name: locations
  endpoint:
    path: /api/p/v{version}/locations/search
    method: POST
    data_selector: items
    params:
      PageSize: '100'
- name: locations_search
  endpoint:
    path: /api/p/v{version}/locations/search
    method: POST
    data_selector: items
    params:
      PageSize: PageSize
notes:
- 'An API Token is Mandatory: To authenticate every request to the Alvys API, a valid
  access token is required.'
- All clients must migrate to the new flow by July 31, 2025 to avoid disruption.
- The Public API only exposes read operations—write functionality is not yet available.
- Double-check your `client_id`, `client_secret`, and `audience`
- Ensure scopes are correctly assigned in API Access- Admin Portal
- Validate that the client is active and not expired
- 'Use only supported content types: `application/json` or `application/x-www-form-urlencoded`'
- The endpoint for searching customers allows you to retrieve a paginated list of
  customer records based on specific filters and criteria.
- All endpoints are subject to rate limits to protect the API from traffic spikes.
- Endpoint requires specifying the API version in the URL path.
- The endpoint requires specifying the API version in the URL path.
- Rate limits apply to all endpoints.
- Max file size 25 MB
- 'Allowed MIME types: application/pdf, image/jpeg, image/png'
- Each request must contain exactly one file
- Upload multipart/form-data. One file per request. Max file size 25 MB.
- 'Allowed document types: License, Medical, Driver License, Driver Sheet, Drug Test,
  Operating Authority, Completed W9 Tax Form (W9 Form), Other Documents.'
- 'Allowed MIME types: application/pdf, image/jpeg, image/png.'
- Replace {version} with the API version number and {id} with the actual fuel ID.
- Endpoint allows retrieval of detailed information about a specific fuel entry.
- Requests require specifying the API version in the URL path.
- The endpoint for searching fuel transactions requires specifying the API version
  in the URL path.
- The Search Invoices endpoint allows you to search and retrieve a list of invoices
  based on various criteria such as invoiced date range, paid date range, status,
  and associated load numbers.
- This endpoint is subject to standard rate limiting.
- The default rate limit is 10 requests per minute.
- This endpoint is subject to standard rate limiting. The default rate limit is 10
  requests per minute.
- The endpoint for searching loads requires specifying the API version in the URL
  path.
- 'Max file size: 25 MB'
- Each request must contain exactly one file.
- The GET Maintenance by ID API endpoint allows you to retrieve detailed information
  about a specific maintenance record using its unique ID.
- This endpoint allows you to get detailed information about a specific maintenance
  record using its unique ID.
- The Search Maintenance API endpoint allows you to search for maintenance records
  within the Alvys system based on various criteria.
- This endpoint enables you to search for maintenance records based on various criteria
  such as trailer IDs, categories, status, and date ranges.
- The Search Toll Transactions API endpoint allows you to search for toll transactions
  within the Alvys TMS system based on various criteria.
- PageSize must be greater than 0.
- Including the version number ensures that your application interacts with the correct
  version of the API.
- The Search Trailers API endpoint allows you to search for trailers within the Alvys
  system based on various criteria.
- The Search Trailers API endpoint allows you to search for trailers within the Alvys
  system on various criteria such as status, trailer number, fleet name, and VIN number.
- The pageSize must be greater than 0.
- Conditional filters must be provided for status, loadNumbers, tripNumbers, or updatedBy.
- 'Allowed Document Types: Proof of Delivery, Bill of Lading, Carrier Rate Confirmation,
  Load Manifest, Trip Report, Temp. Log, Proof of Pickup, Scale Ticket, Notice of
  Assignment, Shipping Labels'
- The endpoint for retrieving trucks by ID requires specifying the API version in
  the URL path.
- The page number is zero-based.
- 'Allowed Document Types: Proof of Delivery, Bill of Lading, Carrier Rate Confirmation,
  Load Manifest, Trip Report, Temperature Log, Proof of Pickup, Scale Ticket, Notice
  of Assignment, Shipping Labels'
- Ensure to replace the Authorization header value with your actual Bearer token for
  the request.
- 'Allowed Document Types: Motor Vehicle Record, Vehicle Image, Inspection Certificate,
  Certificate of Insurance (COI), Insurance Certificate, Other Documents'
- The List Users API endpoint is used for fetching comprehensive details of all users.
- The inclusion of versioning in the URL path ensures compatibility with different
  API versions.
- The Search Users API endpoint allows users to search for specific user accounts
  within the Alvys system based on a keyword.
- The location history endpoint provides access to inbound updates for a specific
  load by using the loadNumber and version in your request.
- The time range must be 7 days or less.
- At least one filter field (status, ids, mcNumbers, dotNumbers) must be provided
  along with pagination fields.
- The Search Carriers API endpoint allows you to search for carriers and subsidiaries
  within the Alvys system based on specific filters.
- 'The endpoint for retrieving a single location requires specifying the API version
  in the path and one identifier in the query: either id or companyNumber.'
- The Locations endpoint provides detailed information about company-related sites
  such as Terminals, Shippers/Consignees, Cold Warehouses, and Dry Warehouses.
- The endpoint for searching locations requires specifying the API version in the
  path and providing filters in the request body.
- The legacy /authentication/{tenant_id}/token-based method will be deprecated soon.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All new token requests must now use the token endpoint at https://auth.alvys.com/oauth/token.
- New tokens now follow a fine-grained permissions model, ensuring each application
  only has access to the specific API features it was granted.
- Alvys reserves the right to adjust rate limits as necessary to protect our system.
- Respecting the Retry-After header is essential to avoid further rate limiting.
- Alvys handles various temporal data types for representing dates and times and uses
  the RFC 3339 format to represent timestamps as strings.
- Unix timestamps represent the number of seconds that have elapsed since the Unix
  epoch, which is 00:00:00 UTC on 1 January 1970.
- Ensure the parameter names match exactly as defined here.
- The AccessToken query will return the accessToken, which can be dynamically used
  in other API queries.
- Only newly generated credentials—with proper API scopes—are allowed in the new authentication
  flow.
- The legacy authentication method will no longer be supported soon.
- To refresh the token, select the 'Access token' query and click the refresh preview
  button.
- The file will now fetch data dynamically using your credentials.
errors:
- Rate limits apply to all endpoints.
- '400 Bad Request: Check request parameters and data format.'
- '400 Bad Request: Check request parameters and ensure they are valid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Rate limit exceeded: Reduce frequency of requests.'
- '401 Unauthorized: Ensure valid access token.'
- '400 Bad Request: Ensure all required parameters are provided and valid.'
- '400 Bad Request: Check the request parameters and body'
- '401 Unauthorized: Recheck authorization token'
- '413 Payload Too Large: The file exceeds the maximum size'
- '200 OK: Successful upload'
- '400 Bad Request: Check request parameters'
- '200 OK: Successful request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '400 Bad Request: Check the request parameters and body format'
- '401 Unauthorized: Ensure the authorization token is valid'
- '413 Payload Too Large: File size exceeds the limit of 25 MB'
- '400 Bad Request: Check request parameters for correctness.'
- '400 Bad Request: Check request parameters and body for correct formatting.'
- 'Rate limit exceeded: Please refer to the Rate Limits section.'
- 'Rate limits: All endpoints are subject to rate limits to protect the API from traffic
  spikes.'
- '401 Unauthorized: Recheck client_id, client_secret, and audience'
- '429 Too Many Requests: Respect the Retry-After header to avoid further rate limiting.'
- '429 Too Many Requests: Block'
- '400: Bad Request - General client error, possibly malformed data. Common error
  messages include: "Configuration limit exceeded" (e.g., system limits on creating
  more objects like users, drivers, and documents). Contact Support to request increases.'
- '401: Unauthenticated - The API key is missing or invalid.'
- '403: Permission Denied - You do not have access to the requested resource.'
- '404: Not Found - The API endpoint is invalid, or a path parameter is missing or
  invalid (e.g., id in /drivers/{id}).'
- '405: Method Not Allowed - The API endpoint does not accept that HTTP method.'
- '415: Unsupported Media Type - The request''s `Content-Type` is not supported by
  this endpoint. Only `application/json` and `application/x-www-form-urlencoded` are
  accepted.'
- '429: Too Many Requests - The client has reached or exceeded a rate limit, a usage
  limit, or the server is overloaded.'
- '5XX: Internal Server Errors - something went wrong with Samsara''s servers. These
  responses are likely momentary errors (e.g., temporary unavailability), and as a
  result, requests should be retried using exponential backoff.'
- '400: Bad Request - General client error, possibly malformed data.'
- '404: Not Found - The API endpoint is invalid, or a path parameter is missing or
  invalid.'
- '415: Unsupported Media Type - The request''s Content-Type is not supported by this
  endpoint.'
- '429: Too Many Requests - The client has reached or exceeded a rate limit.'
- '5XX: Internal Server Errors - something went wrong with the server.'
- 'unauthorized: Check your credentials or permissions'
auth_info:
  mentioned_objects:
  - AccessToken
client:
  base_url: https://integrations.alvys.com/api/p/v{version}/customers
  headers:
    Authorization: Bearer YOUR_ACCESS_TOKEN
  paginator:
    type: cursor
source_metadata: null
