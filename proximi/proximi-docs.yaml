resources:
- name: applications
  endpoint:
    path: /core/applications
    method: GET
    data_selector: applications
    params:
      limit: '1000'
      skip: '0'
- name: specific_application
  endpoint:
    path: /core/applications/{application_id}
    method: GET
    data_selector: application
    params: {}
- name: telemetries
  endpoint:
    path: /core/telemetries
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /core/events
    method: POST
    data_selector: event
- name: geofences
  endpoint:
    path: /core/geofences
    method: POST
    data_selector: geofence
- name: telemetries
  endpoint:
    path: /telemetries
    method: GET
    data_selector: records
    params: {}
- name: places
  endpoint:
    path: /places
    method: POST
    data_selector: place
    params: {}
- name: floors
  endpoint:
    path: /floors
    method: POST
    data_selector: floor
    params: {}
- name: telemetries
  endpoint:
    path: /telemetries
    method: GET
    data_selector: records
    params:
      limit: 1000
      skip: 0
- name: departments
  endpoint:
    path: /departments
    method: GET
    data_selector: records
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: records
    params: {}
- name: telemetries
  endpoint:
    path: /telemetries
    method: GET
    data_selector: records
    params:
      limit: '1000'
      skip: '0'
- name: visitors
  endpoint:
    path: /visitors
    method: POST
    data_selector: data
    params: {}
- name: input_monitoring
  endpoint:
    path: /input_monitoring
    method: GET
    data_selector: records
    params: {}
- name: style
  endpoint:
    path: /style
    method: GET
- name: styles
  endpoint:
    path: /styles
    method: GET
- name: features
  endpoint:
    path: /features
    method: GET
- name: feature
  endpoint:
    path: /features/:id
    method: GET
- name: update_feature
  endpoint:
    path: /features/:id
    method: PUT
- name: delete_feature
  endpoint:
    path: /features
    method: DELETE
- name: amenities
  endpoint:
    path: /amenities
    method: GET
- name: amenity_categories
  endpoint:
    path: /amenity_categories
    method: GET
- name: routing
  endpoint:
    path: /routing
    method: POST
    data_selector: ''
    params:
      startLng: ''
      startLat: ''
      startLevel: ''
      endLng: ''
      endLat: ''
      endLevel: ''
- name: route
  endpoint:
    path: /route
    method: GET
    data_selector: route
    params: {}
notes:
- The API does not require authentication.
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '405: Method Not Allowed'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '1011: Email Format error'
- '1012: Email is already Registered'
- '1013: Ownership error'
- '429: To o Many Requests'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.proximi.fi
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
