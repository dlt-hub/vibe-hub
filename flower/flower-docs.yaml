resources:
- name: workers
  endpoint:
    path: /api/workers
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
    data_selector: records
- name: task_types
  endpoint:
    path: /api/task/types
    method: GET
    data_selector: task-types
- name: queues_length
  endpoint:
    path: /api/queues/length
    method: GET
    data_selector: length
- name: workers
  endpoint:
    path: /api/workers
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
    data_selector: records
- name: task_types
  endpoint:
    path: /api/task/types
    method: GET
    data_selector: task-types
- name: queues_length
  endpoint:
    path: /api/queues/length
    method: GET
    data_selector: length
- name: queues_length
  endpoint:
    path: /api/queues/length
    method: GET
    data_selector: active_queues
- name: task_info
  endpoint:
    path: /api/task/info/(.*)
    method: GET
    data_selector: result
- name: task_apply
  endpoint:
    path: /api/task/apply/(.+)
    method: POST
    data_selector: result
- name: task_async_apply
  endpoint:
    path: /api/task/async-apply/(.+)
    method: POST
    data_selector: result
- name: task_send
  endpoint:
    path: /api/task/send-task/(.+)
    method: POST
    data_selector: result
- name: task_result
  endpoint:
    path: /api/task/result/(.+)
    method: GET
    data_selector: result
- name: task_abort
  endpoint:
    path: /api/task/abort/(.+)
    method: POST
    data_selector: message
- name: task_timeout
  endpoint:
    path: /api/task/timeout/(.+)
    method: POST
- name: task_rate_limit
  endpoint:
    path: /api/task/rate-limit/(.+)
    method: POST
- name: task_revoke
  endpoint:
    path: /api/task/revoke/(.+)
    method: POST
- name: queues_length
  endpoint:
    path: /api/queues/length
    method: GET
- name: task_info
  endpoint:
    path: /api/task/info/(.*)
    method: GET
- name: task_apply
  endpoint:
    path: /api/task/apply/(.+)
    method: POST
- name: task_async_apply
  endpoint:
    path: /api/task/async-apply/(.+)
    method: POST
- name: task_send_task
  endpoint:
    path: /api/task/send-task/(.+)
    method: POST
- name: task_result
  endpoint:
    path: /api/task/result/(.+)
    method: GET
- name: task_abort
  endpoint:
    path: /api/task/abort/(.+)
    method: POST
- name: task_timeout
  endpoint:
    path: /api/task/timeout/(.+)
    method: POST
- name: task_rate_limit
  endpoint:
    path: /api/task/rate-limit/(.+)
    method: POST
- name: task_revoke
  endpoint:
    path: /api/task/revoke/(.+)
    method: POST
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
notes:
- Metrics are available at localhost:5555/metrics
- Note that you should not expose this site to the public internet without any sort
  of authentication!
- 'The following endpoints are exempt from authentication: /healthcheck, /metrics'
- By default, flower runs on port 5555, which can be modified with the port option
- Tasks can be filtered by worker, type, state, received and started datetime.
- Flower uses github-style syntax for args/kwargs/result filtering.
errors:
- '401 Unauthorized: unauthorized request'
- '404 Not Found: unknown task'
- '503 Service Unavailable: result backend is not configured'
auth_info:
  mentioned_objects:
  - HTTP Basic Authentication
  - Google OAuth
  - GitHub OAuth
  - Okta OAuth
  - GitLab OAuth
client:
  base_url: http://localhost:5555
  headers:
    Authorization: optional OAuth token to authenticate
source_metadata: null
