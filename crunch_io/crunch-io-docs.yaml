resources:
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: body
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: body
- name: sources
  endpoint:
    path: /sources/
    method: POST
    data_selector: body
- name: batches
  endpoint:
    path: /datasets/{dataset_id}/batches/
    method: POST
    data_selector: body
- name: variable_entity
  endpoint:
    path: /datasets/{dataset_id}/variables/
    method: POST
    data_selector: body
- name: multitable_definition
  endpoint:
    path: /datasets/{dataset_id}/multitables/
    method: GET
    data_selector: body
- name: comparison
  endpoint:
    path: /datasets/{dataset_id}/comparisons/
    method: POST
    data_selector: body
- name: actions
  endpoint:
    path: /datasets/{id}/actions/
    method: POST
    data_selector: value
- name: savepoints
  endpoint:
    path: /datasets/{id}/savepoints/
    method: POST
    data_selector: value
- name: forks
  endpoint:
    path: /datasets/{id}/forks/
    method: POST
    data_selector: value
- name: upstream_delta
  endpoint:
    path: /dataset/{id}/actions/upstream_delta
    method: GET
    data_selector: value
- name: account_users
  endpoint:
    path: /account/users/
    method: GET
    data_selector: index
- name: account_datasets
  endpoint:
    path: /account/datasets/
    method: GET
    data_selector: index
- name: account_projects
  endpoint:
    path: /account/projects/
    method: GET
    data_selector: index
- name: account_teams
  endpoint:
    path: /account/teams/
    method: GET
    data_selector: index
- name: account_collaborators
  endpoint:
    path: /account/collaborators/
    method: GET
    data_selector: index
- name: batches
  endpoint:
    path: /datasets/{id}/batches/
    method: GET
    data_selector: index
- name: batches_compare
  endpoint:
    path: /datasets/{id}/batches/compare/
    method: GET
    data_selector: conflicts
- name: align
  endpoint:
    path: /datasets/align/
    method: POST
    data_selector: where
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: result
- name: catalog
  endpoint:
    path: /datasets/{id}/boxdata/
    method: GET
    data_selector: result
    params: {}
- name: create_catalog
  endpoint:
    path: /datasets/{id}/boxdata/
    method: POST
    data_selector: body
    params: {}
- endpoint:
    path: /datasets/{id}/comparisons/{id}/
    method: POST
- endpoint:
    path: /datasets/{id}/comparisons/{id}/cube/
    method: GET
- endpoint:
    path: /api/xlsx/
    method: POST
- name: datasets_order
  endpoint:
    path: /projects/6c01/datasets/order/
    method: GET
    data_selector: element
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: element
- name: datasets_catalog
  endpoint:
    path: /datasets/
    method: GET
    data_selector: element
- name: create_dataset
  endpoint:
    path: /api/datasets/
    method: POST
    data_selector: element
- name: patch_datasets
  endpoint:
    path: /api/datasets/
    method: PATCH
    data_selector: element
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: Location
    params: {}
- name: sources
  endpoint:
    path: /sources/
    method: POST
    data_selector: Location
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets/{dataset_id}/variables/
    method: POST
    data_selector: element
    params: {}
- name: variable_cast
  endpoint:
    path: /variable/:id/cast/
    method: POST
- name: variable_integrate
  endpoint:
    path: /api/dataset/abc/variables/123/
    method: PATCH
- name: create_variable
  endpoint:
    path: /api/dataset/abc/variables/
    method: POST
- name: add_subvariable
  endpoint:
    path: /api/dataset/abc/variables/
    method: PATCH
- name: datasets
  endpoint:
    path: /datasets/
    method: GET
    data_selector: value
    params: {}
- name: multitables
  endpoint:
    path: /datasets/{id}/multitables/
    method: GET
    data_selector: element
    params: {}
- name: actions
  endpoint:
    path: /datasets/{id}/actions/
    method: GET
    data_selector: value
    params: {}
- name: savepoints
  endpoint:
    path: /datasets/{dataset_id}/savepoints/
    method: POST
    data_selector: self
- name: revert_savepoints
  endpoint:
    path: /datasets/{dataset_id}/savepoints/{version_id}/revert/
    method: POST
    data_selector: progress
- name: forks
  endpoint:
    path: /datasets/{id}/forks/
    method: POST
    data_selector: self
- name: actions
  endpoint:
    path: /datasets/{id}/actions/
    method: POST
    data_selector: self
- name: account
  endpoint:
    path: /account/
    method: GET
    data_selector: body
- name: applications
  endpoint:
    path: /account/applications/
    method: GET
    data_selector: index
- name: users
  endpoint:
    path: /account/users/
    method: GET
    data_selector: index
- name: datasets
  endpoint:
    path: /account/datasets/
    method: GET
    data_selector: index
- name: projects
  endpoint:
    path: /account/projects/
    method: GET
    data_selector: index
- name: teams
  endpoint:
    path: /account/teams/
    method: GET
    data_selector: index
- name: collaborators
  endpoint:
    path: /account/collaborators/
    method: GET
    data_selector: index
- name: collaborators_order
  endpoint:
    path: /account/collaborators/order/
    method: GET
    data_selector: null
- name: batches
  endpoint:
    path: /datasets/{id}/batches/
    method: GET
    data_selector: index
- name: boxdata
  endpoint:
    path: /datasets/{id}/boxdata/
    method: GET
    data_selector: null
- name: catalog
  endpoint:
    path: /datasets/
    method: GET
    data_selector: index
- name: boxdata
  endpoint:
    path: /datasets/{id}/boxdata/{id}/
    method: GET
    data_selector: body
- name: comparisons
  endpoint:
    path: /datasets/{id}/comparisons/
    method: GET
    data_selector: index
- name: datasets
  endpoint:
    path: /api/datasets/
    method: POST
    data_selector: body
- name: datasets
  endpoint:
    path: /datasets/{dataset_id}/
    method: GET
    data_selector: element
    params: {}
- name: export
  endpoint:
    path: /datasets/{id}/export/
    method: GET
    data_selector: views
    params: {}
- name: match
  endpoint:
    path: /datasets/match/
    method: POST
    data_selector: matches
    params: {}
- name: datasets_stream
  endpoint:
    path: /datasets/{id}/stream/
    method: POST
    data_selector: body
    params: {}
- name: datasets_settings
  endpoint:
    path: /datasets/{id}/settings/
    method: GET
    data_selector: body
    params: {}
- name: datasets_preferences
  endpoint:
    path: /datasets/{id}/preferences/
    method: GET
    data_selector: body
    params: {}
- name: datasets_primary_key
  endpoint:
    path: /datasets/{dataset_id}/pk/
    method: GET
    data_selector: body
    params: {}
- name: datasets_users
  endpoint:
    path: /datasets/{dataset_id}/users/
    method: GET
    data_selector: body
    params: {}
- name: datasets_batches
  endpoint:
    path: /datasets/{dataset_id}/batches/
    method: GET
    data_selector: body
    params: {}
- name: decks
  endpoint:
    path: /datasets/{dataset_id}/decks/
    method: GET
- name: filters
  endpoint:
    path: /datasets/{dataset_id}/filters/
    method: GET
- name: permissions
  endpoint:
    path: /datasets/{dataset_id}/permissions/
    method: GET
- name: savepoints
  endpoint:
    path: /datasets/{dataset_id}/savepoints/
    method: GET
- name: variables
  endpoint:
    path: /datasets/{dataset_id}/variables/
    method: GET
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
- name: deck_entity
  endpoint:
    path: /datasets/{id}/decks/{id}/
    method: GET
- name: slide
  endpoint:
    path: /api/datasets/123/decks/123/slides/123/
    method: GET
    data_selector: body
    params: {}
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: body.result
    params: {}
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: result
    params: {}
- name: geodata_catalog
  endpoint:
    path: /geodata/
    method: GET
    data_selector: index
- name: geodata_entity
  endpoint:
    path: /geodata/{geodata_id}/
    method: GET
    data_selector: body
- name: joins
  endpoint:
    path: /datasets/{id}/joins/
    method: GET
    data_selector: index
- name: entity
  endpoint:
    path: /datasets/{id}/joins/{id}/
    method: GET
    data_selector: element
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: body.result
- name: multitables
  endpoint:
    path: /datasets/{dataset_id}/multitables/
    method: GET
- name: entity
  endpoint:
    path: /datasets/{dataset_id}/multitables/{multitable_id}/
    method: GET
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
- name: progress
  endpoint:
    path: /progress/{id}/
    method: GET
    data_selector: value
- name: projects
  endpoint:
    path: /projects/
    method: GET
    data_selector: index
- name: users
  endpoint:
    path: /projects/abcd/users/
    method: GET
    data_selector: index
- name: datasets
  endpoint:
    path: /projects/6c01/datasets/
    method: GET
    data_selector: index
- name: datasets_order
  endpoint:
    path: /projects/6c01/datasets/order/
    method: GET
    data_selector: graph
- name: search
  endpoint:
    path: /search/
    method: GET
    data_selector: value.groups
    params:
      limit: 10
      offset: 0
- name: teams
  endpoint:
    path: /teams/
    method: GET
    data_selector: index
- name: team_datasets
  endpoint:
    path: /teams/{team_id}/datasets/
    method: GET
    data_selector: index
- name: create_team
  endpoint:
    path: /teams/
    method: POST
    data_selector: body
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: body
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: body
- name: sources
  endpoint:
    path: /sources/
    method: POST
    data_selector: body
- name: batches
  endpoint:
    path: /datasets/{dataset_id}/batches/
    method: POST
    data_selector: body
- name: datasets
  endpoint:
    path: /api/datasets/
    method: POST
    data_selector: element.body
    params: {}
- name: variables
  endpoint:
    path: /api/datasets/{dataset_id}/variables/
    method: POST
    data_selector: element.body
    params: {}
- name: batches
  endpoint:
    path: /api/datasets/{dataset_id}/batches/
    method: POST
    data_selector: element.body
    params: {}
- name: datasets
  endpoint:
    path: /api/datasets/{dataset_id}/
    method: POST
    data_selector: function
    params: {}
- name: variables
  endpoint:
    path: /api/datasets/{dataset_id}/variables/
    method: POST
    data_selector: element
    params: {}
- name: variable_cast
  endpoint:
    path: /variable/:id/cast/
    method: POST
- name: integrate_variable
  endpoint:
    path: /api/dataset/abc/variables/123/
    method: PATCH
- name: add_subvariable
  endpoint:
    path: /api/dataset/abc/variables/
    method: PATCH
- name: multitables
  endpoint:
    path: /datasets/{id}/multitables/
    method: GET
    data_selector: element
    params: {}
- name: savepoints
  endpoint:
    path: /datasets/{id}/savepoints/
    method: POST
    data_selector: element
    params: {}
- name: savepoints
  endpoint:
    path: /datasets/{dataset_id}/savepoints/
    method: POST
    data_selector: self
- name: forks
  endpoint:
    path: /datasets/{dataset_id}/forks/
    method: POST
    data_selector: self
- name: actions
  endpoint:
    path: /datasets/{dataset_id}/actions/
    method: POST
    data_selector: self
- name: account
  endpoint:
    path: /account/
    method: GET
    data_selector: body
- name: users
  endpoint:
    path: /account/users/
    method: GET
    data_selector: index
- name: projects
  endpoint:
    path: /account/projects/
    method: GET
    data_selector: index
- name: teams
  endpoint:
    path: /account/teams/
    method: GET
    data_selector: index
- name: collaborators
  endpoint:
    path: /account/collaborators/
    method: GET
    data_selector: index
- name: collaborators_order
  endpoint:
    path: /account/collaborators/order/
    method: GET
- name: batches
  endpoint:
    path: /datasets/{id}/batches/
    method: GET
- name: boxdata
  endpoint:
    path: /datasets/{id}/boxdata/
    method: GET
- name: catalog
  endpoint:
    path: /datasets/
    method: GET
    data_selector: index
- name: create_boxdata
  endpoint:
    path: /datasets/{id}/boxdata/
    method: POST
    data_selector: body
- name: get_boxdata
  endpoint:
    path: /datasets/{id}/boxdata/{id}/
    method: GET
    data_selector: body
- name: delete_boxdata
  endpoint:
    path: /datasets/{id}/boxdata/{id}/
    method: DELETE
- name: get_comparisons
  endpoint:
    path: /datasets/{id}/comparisons/
    method: GET
    data_selector: index
- name: create_comparison
  endpoint:
    path: /datasets/{id}/comparisons/
    method: POST
    data_selector: body
- name: get_comparison
  endpoint:
    path: /datasets/{id}/comparisons/{id}/
    method: GET
    data_selector: body
- name: delete_comparison
  endpoint:
    path: /datasets/{id}/comparisons/{id}/
    method: DELETE
- name: datasets
  endpoint:
    path: /datasets/
    method: POST
    data_selector: body
- name: dataset_order
  endpoint:
    path: /datasets/{dataset_id}/order/
    method: GET
    data_selector: graph
- name: export
  endpoint:
    path: /datasets/{id}/export/
    method: GET
    data_selector: views
- name: deck
  endpoint:
    path: /datasets/{id}/decks/
    method: GET
    data_selector: decks
    params: {}
- name: slide
  endpoint:
    path: /datasets/{id}/decks/{deck_id}/slides/
    method: GET
    data_selector: slides
    params: {}
- name: filter
  endpoint:
    path: /datasets/{id}/filters/
    method: GET
    data_selector: filters
    params: {}
- name: geodata_catalog
  endpoint:
    path: /geodata/
    method: GET
    data_selector: index
- name: geodata_entity
  endpoint:
    path: /geodata/{geodata_id}/
    method: GET
    data_selector: body
- name: progress
  endpoint:
    path: /progress/{id}/
    method: GET
    data_selector: value
    params: {}
- name: projects
  endpoint:
    path: /projects/
    method: GET
    data_selector: self
    params: {}
- name: members
  endpoint:
    path: /projects/{id}/members/
    method: GET
    data_selector: index
    params: {}
- name: datasets
  endpoint:
    path: /projects/{id}/datasets/
    method: GET
    data_selector: index
    params: {}
- name: search
  endpoint:
    path: /search/
    method: GET
    data_selector: groups
    params: {}
- name: sources
  endpoint:
    path: /sources/
    method: POST
    data_selector: body
    params: {}
- name: entity
  endpoint:
    path: /sources/{id}/
    method: PUT
    data_selector: body
    params: {}
- name: tabbook
  endpoint:
    path: /datasets/{dataset_id}/multitables/{multitable_id}/tabbook/
    method: POST
    data_selector: value
    params: {}
- name: tab_book
  endpoint:
    path: /datasets/:id/table/
    method: GET
    data_selector: data
    params: {}
- name: teams
  endpoint:
    path: /teams/
    method: GET
    data_selector: element
    params: {}
- name: create_team
  endpoint:
    path: /teams/
    method: POST
    data_selector: body
    params: {}
- name: team
  endpoint:
    path: /teams/{team_id}/
    method: GET
    data_selector: body
- name: team_members
  endpoint:
    path: /teams/{team_id}/members/
    method: GET
    data_selector: index
- name: team_datasets
  endpoint:
    path: /teams/{team_id}/datasets/
    method: GET
    data_selector: datasets
- name: users
  endpoint:
    path: /users/{?email,id}
    method: GET
    data_selector: index
- name: user_entity
  endpoint:
    path: /users/{id}/{?reason_url}
    method: GET
- name: send_invitation_email
  endpoint:
    path: /users/{id}/invite/
    method: POST
- name: change_password
  endpoint:
    path: /users/{id}/password/
    method: POST
- name: reset_password
  endpoint:
    path: /users/{id}/password_reset/
    method: GET
- name: change_email
  endpoint:
    path: /users/{id}/change_email/
    method: POST
- name: expropriate_user
  endpoint:
    path: /users/{id}/expropriate/
    method: POST
- name: user_datasets
  endpoint:
    path: /account/users/{id}/datasets/
    method: GET
- name: user_visible_datasets
  endpoint:
    path: /users/{id}/visible_datasets/
    method: GET
- name: xlsx_endpoint
  endpoint:
    path: /api/xlsx/
    method: POST
- name: entity
  endpoint:
    path: /datasets/{id}/variables/{id}/
    method: GET
    data_selector: body
    params: {}
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: result
    params: {}
- name: summary
  endpoint:
    path: /datasets/{id}/variables/{id}/summary/{?filter}
    method: GET
    data_selector: result
- name: frequencies
  endpoint:
    path: /datasets/{id}/variables/{id}/frequencies/{?filter,exclude_exclusion_filter}
    method: GET
    data_selector: rows
- name: cast
  endpoint:
    path: /datasets/{id}/variables/{id}/cast/
    method: POST
    data_selector: null
- name: private_variables
  endpoint:
    path: /datasets/{id}/variables/private/
    method: GET
    data_selector: null
- name: savepoints
  endpoint:
    path: /datasets/{dataset_id}/savepoints/
    method: GET
    data_selector: null
- name: xlsx
  endpoint:
    path: /api/xlsx/
    method: POST
    data_selector: result
    params: {}
- name: entity
  endpoint:
    path: /api/users/{id}/
    method: GET
    data_selector: body
    params: {}
- name: catalog
  endpoint:
    path: /api/users/
    method: GET
    data_selector: index
    params: {}
- name: view
  endpoint:
    path: /api/views/
    method: GET
    data_selector: body
    params: {}
- name: order
  endpoint:
    path: /api/users/order/
    method: GET
    data_selector: graph
    params: {}
- name: allpets
  endpoint:
    path: /allpets
    method: GET
    data_selector: records
- name: q1
  endpoint:
    path: /q1
    method: GET
    data_selector: records
- name: petloc
  endpoint:
    path: /petloc
    method: GET
    data_selector: records
- name: ndogs
  endpoint:
    path: /ndogs
    method: GET
    data_selector: records
- name: ndogs_a
  endpoint:
    path: /ndogs_a
    method: GET
    data_selector: records
- name: ndogs_b
  endpoint:
    path: /ndogs_b
    method: GET
    data_selector: records
- name: q3
  endpoint:
    path: /q3
    method: GET
    data_selector: records
- name: country
  endpoint:
    path: /country
    method: GET
    data_selector: records
- name: wave
  endpoint:
    path: /wave
    method: GET
    data_selector: records
- name: caseid
  endpoint:
    path: /caseid
    method: GET
    data_selector: records
notes:
- Nearly all interactions with the Crunch API need to be authenticated.
- The standard password authentication method involves POSTing credentials and receiving
  a cookie back.
- The ‘case’ function derives a variable using values from the first argument.
- You may include an extra value for the case when none of the boolean expressions
  match; if not provided, it defaults to the system ‘No Data’ missing value.
- The API endpoints are subject to change, check the documentation regularly.
- A POST to create new boxdata must specify unique combinations of where and filter
  data.
- Rows have a ‘marginal’ column positioned first after the row label.
- If display settings indicate `rowPct`, rows have an additional marginal column intended
  to show unconditional N for each row.
- The remaining row labels are all accounted for in the sum of `spans`.
- Column titles are placed in merged cells above one or more labels.
- The same filter(s) are applied to all tables on a page.
- No “freeze panes” are applied to the result.
- If the table contains percentages, they should be percentages, not proportions (0
  to 100, not 0 to 1).
- Only project editors can update datasets order.
- When PATCHing, only attributes that are modifiable can be included.
- The client should store the Cookie and pass it along with each subsequent request.
- Imports are done in strict mode by default.
- Strict imports are faster and alert you if there is a mismatch between data and
  metadata.
- Supports versioning of datasets and actions
- Requires setup of connected app in Crunch
- The POST savepoints endpoint will respond with a Location header that points to
  /progress/{operation_id}/result.
- PATCH requests require edit privileges on the dataset.
- Joins are an experimental feature.
- Rows in the principal which have no corresponding row in the subordinate are filled
  with the 'No Data' missing value.
- Must be authenticated to GET this resource.
- Regular Shoji POST payloads are also supported to create new sources from remote
  source URLs.
- Dataset viewers can only access the metadata portion of the response.
- If the file is large (>100 megabytes), consider uploading it to a file-sharing service.
- The CSV must include a header row of variable identifiers.
- To loosen strictness, append `?strict=0` to the URL of the POST request.
- Requires setup of OAuth2 authentication.
- Multiple response variables must have at least one selected category.
- All Crunch datasets keep track of the changes you make to them.
- Requires setup of OAuth2 for authorization.
- New boxdata is only created with a new combination of where and filter data.
- Existing combinations will result in a modification of metadata.
- Only the dataset owner can change the ownership to another user.
- You cannot PATCH to add new datasets, nor can you PATCH a null tuple to delete them.
- Only the project’s editors can make changes to datasets.
- 'Entities possess a ''body'' member: a JSON object where each key/value pair is
  an attribute name and value.'
- No 'freeze panes' are applied to the result.
errors:
- '401 Unauthorized: Failure will return 401 Unauthorized'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: Check the endpoint path and parameters.'
- '500 Internal Server Error: Retry the request after a moment.'
- '400: Invalid dataset or incomplete list'
- '403: Not authorized to make changes'
- '401 Unauthorized: Failure will return 401 Unauthorized.'
- '409 Conflict: Fix your CSV locally or PATCH the variable metadata before re-POSTing.'
- '201 Created: Indicates success for POST requests.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check dataset ID or endpoint path'
- '400 Bad Request: Review request parameters or body'
- '400 Bad Request: The requested subdomain is unavailable or invalid.'
- '204 No Content: Action completed successfully.'
- '202 Accepted: Action is still processing.'
- '403 Forbidden: You do not have permission to edit this dataset.'
- '409 Conflict: You cannot modify attributes while streaming.'
- '400: Bad Request - The authenticated user will need to have reading access to the
  right dataset.'
- '409 Conflict: Fix your CSV locally and re-POST it.'
- '201 Created: Indicates success.'
- '404 Not Found: Check the dataset ID or endpoint path.'
- '400 Bad Request: Ensure all required parameters are included.'
- '404 Not Found: Check the dataset ID or permissions.'
- '403 Forbidden: Ensure you have the required permissions.'
- '400: Attempting to modify attributes that cannot be modified will return a 400
  response.'
- '403: If you try to PATCH and are not authorized, you will receive a 403 response.'
- '409: If you have edit permissions but are not the current editor, PATCH requests
  will respond with 409 status.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - oauth_providers
  - account_permissions
client:
  base_url: https://app.crunch.io
  auth:
    type: password
    location: cookie
    header_name: Set-Cookie
source_metadata: null
