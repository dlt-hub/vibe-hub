resources:
- name: weather_overview
  endpoint:
    path: /onecall/overview
    method: GET
    data_selector: weather_overview
    params:
      lat: '{lat}'
      lon: '{lon}'
      appid: '{API key}'
      date: YYYY-MM-DD
      units: standard
- name: session_start
  endpoint:
    path: /assistant/session
    method: POST
    data_selector: answer
    params: {}
- name: session_resume
  endpoint:
    path: /assistant/session/{session_id}
    method: POST
    data_selector: answer
    params: {}
- name: weather_data
  endpoint:
    path: /data/2.5/onecall
    method: GET
    data_selector: data
    params: {}
- name: alerts
  endpoint:
    path: /data/2.5/onecall/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: weather
  endpoint:
    path: /onecall
    method: GET
    data_selector: data
    params:
      units: standard
- name: current_weather
  endpoint:
    path: /current
    method: GET
- name: hourly_forecast
  endpoint:
    path: /api/hourly-forecast
    method: GET
- name: daily_forecast
  endpoint:
    path: /forecast16
    method: GET
- name: historical_weather
  endpoint:
    path: /history
    method: GET
- name: air_pollution
  endpoint:
    path: /api/air-pollution
    method: GET
- name: current_weather
  endpoint:
    path: /weather
    method: GET
    data_selector: ''
    params:
      lat: '{lat}'
      lon: '{lon}'
      appid: '{API key}'
- name: current_weather
  endpoint:
    path: /data/2.5/weather
    method: GET
    data_selector: weather
    params:
      lat: required
      lon: required
      appid: required
- name: weather_by_city_name
  endpoint:
    path: /weather
    method: GET
    data_selector: coord
    params:
      q: required
      appid: required
- name: weather_by_city_id
  endpoint:
    path: /weather
    method: GET
    data_selector: coord
    params:
      id: required
      appid: required
- name: weather_by_zip_code
  endpoint:
    path: /weather
    method: GET
    data_selector: coord
    params:
      zip: required
      appid: required
- name: current_weather
  endpoint:
    path: /weather
    method: GET
    data_selector: ''
    params: {}
- name: hourly_forecast
  endpoint:
    path: /forecast/hourly
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
- name: location
  endpoint:
    path: /weatherdata/location
    method: GET
    data_selector: location
    params: {}
- name: forecast
  endpoint:
    path: /weatherdata/forecast
    method: GET
    data_selector: forecast
    params: {}
- name: hourly_forecast
  endpoint:
    path: /forecast/hourly
    method: GET
    data_selector: list
    params:
      q: '{city name},{country code}'
      appid: '{API key}'
- name: weather
  endpoint:
    path: /weather
    method: GET
    data_selector: list
    params: {}
- name: forecast_hourly
  endpoint:
    path: /forecast/hourly
    method: GET
    data_selector: list
    params:
      cnt: '3'
- name: hourly_forecast
  endpoint:
    path: /forecast/hourly
    method: GET
    data_selector: list
    params:
      lang: optional
- name: daily_forecast
  endpoint:
    path: /forecast/daily
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
      cnt: optional
- name: forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: forecast.time
    params: {}
- name: location
  endpoint:
    path: /location
    method: GET
    data_selector: location
    params: {}
- name: daily_forecast
  endpoint:
    path: /forecast/daily
    method: GET
    data_selector: list
    params:
      cnt: '16'
      appid: '{API key}'
- name: daily_forecast
  endpoint:
    path: /forecast/daily
    method: GET
    data_selector: list
    params:
      zip: '{zip code},{country code}'
      appid: '{API key}'
      cnt: '7'
- name: weather
  endpoint:
    path: /weather
    method: GET
    data_selector: ''
    params: {}
- name: forecast
  endpoint:
    path: /forecast/daily
    method: GET
    data_selector: ''
    params:
      cnt: '3'
- name: forecast_daily
  endpoint:
    path: /forecast/daily
    method: GET
    data_selector: list
- name: weather
  endpoint:
    path: /weather
    method: GET
    data_selector: test
    params: {}
- name: climatic_forecast
  endpoint:
    path: /forecast/climate
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
- name: forecast
  endpoint:
    path: /forecast/climate
    method: GET
    data_selector: list
    params:
      cnt: '3'
- name: forecast
  endpoint:
    path: /data/2.5/forecast/climate
    method: GET
    data_selector: list
    params:
      units: standard
- name: forecast
  endpoint:
    path: /forecast/climate
    method: GET
    data_selector: test
    params:
      q: London,uk
- name: current_weather
  endpoint:
    path: /snapshot/{BULK_FILE_NAME}
    method: GET
    data_selector: weather_data
    params:
      appid: '{API key}'
- name: forecast_weather
  endpoint:
    path: /snapshot/{BULK_FILE_NAME}
    method: GET
    data_selector: forecast_data
    params:
      appid: '{API key}'
- name: archive_weather
  endpoint:
    path: /archive/{BULK_FILE_NAME}
    method: GET
    data_selector: archive_data
    params:
      appid: '{API key}'
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alert
    params: {}
- name: forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
- name: weather_forecast
  endpoint:
    path: /data/2.5/forecast
    method: GET
    data_selector: list
- name: weather_forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: list
    params:
      appid: '{API key}'
- name: weather_forecast
  endpoint:
    path: /data/2.5/forecast
    method: GET
    data_selector: list
    params: {}
- name: weather
  endpoint:
    path: /weather
    method: GET
    data_selector: ''
    params:
      q: London
- name: forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: ''
    params:
      lat: 57
      lon: -2.15
      cnt: 3
- name: forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: list
    params:
      units: standard
- name: forecast
  endpoint:
    path: /forecast
    method: GET
    data_selector: list
    params:
      q: London,uk
      appid: '{API key}'
- name: road_risk
  endpoint:
    path: /roadrisk
    method: POST
    data_selector: '[]'
    params:
      lat: required
      lon: required
      dt: required
      appid: required
- name: interval_data
  endpoint:
    path: /solar/interval_data
    method: GET
    data_selector: data
    params:
      lat: ''
      lon: ''
      date: ''
      interval: 1h
- name: solar_irradiance_forecast
  endpoint:
    path: /api/solar-irradiance/history
    method: GET
    data_selector: data
    params: {}
- name: location
  endpoint:
    path: /locations
    method: POST
    data_selector: location_id
    params:
      appid: '{API key}'
- name: get_location
  endpoint:
    path: /location/{location_id}
    method: GET
    data_selector: location_id
    params:
      appid: '{API key}'
- name: get_all_locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params:
      appid: '{API key}'
- name: panel
  endpoint:
    path: /location/{location_id}/panels
    method: POST
    data_selector: panel_id
    params:
      appid: '{API key}'
- name: get_panel
  endpoint:
    path: /panel/{panel_id}
    method: GET
    data_selector: panel_id
    params:
      appid: '{API key}'
- name: get_all_panels
  endpoint:
    path: /location/{location_id}/panels
    method: GET
    data_selector: panels
    params:
      appid: '{API key}'
- name: interval_data
  endpoint:
    path: /location/{location_id}/interval_data
    method: GET
    data_selector: data
    params:
      date: YYYY-MM-DD
      interval: 1h
      appid: '{API key}'
- name: hourly_historical_data
  endpoint:
    path: /history/city
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      type: hour
      appid: required
- name: historical_data_by_city_name
  endpoint:
    path: /history/city
    method: GET
    params:
      q: '{city name},{country code}'
      type: hour
      appid: '{API key}'
- name: historical_data_by_city_id
  endpoint:
    path: /history/city
    method: GET
    params:
      id: '{id}'
      type: hour
      appid: '{API key}'
- name: weather_data
  endpoint:
    path: /data/2.5/history/city
    method: GET
    data_selector: list
    params:
      units: standard
- name: weather_history
  endpoint:
    path: /history/city
    method: GET
    data_selector: list
    params:
      lat: '41.85'
      lon: '-87'
      type: hour
      start: '1643720400'
      end: '1643806800'
      units: imperial
- name: history
  endpoint:
    path: /api#history
    method: GET
- name: historical_weather_data
  endpoint:
    path: /history_bulks
    method: GET
    data_selector: data
- name: historical_forecast
  endpoint:
    path: /history_forecast_bulk
    method: GET
    data_selector: forecast
    params: {}
- name: yearly_aggregation
  endpoint:
    path: /aggregated/day
    method: GET
    data_selector: result
    params:
      lat: '{lat}'
      lon: '{lon}'
      month: '{number of the month}'
      day: '{number of the day}'
      appid: '{API key}'
- name: monthly_aggregation
  endpoint:
    path: /aggregated/day
    method: GET
    data_selector: result
    params:
      lat: '{lat}'
      lon: '{lon}'
      month: '{number of the month}'
      day: '{number of the day}'
      appid: '{API key}'
- name: daily_aggregation
  endpoint:
    path: /aggregated/day
    method: GET
    data_selector: result
    params:
      lat: '{lat}'
      lon: '{lon}'
      month: '{number of the month}'
      day: '{number of the day}'
      appid: '{API key}'
- name: daily_aggregation
  endpoint:
    path: /aggregated/day
    method: GET
    data_selector: result
    params:
      lat: required
      lon: required
      month: required
      day: required
      appid: required
- name: monthly_aggregation
  endpoint:
    path: /aggregated/month
    method: GET
    data_selector: result
    params:
      q: required
      month: required
      appid: required
- name: yearly_aggregation
  endpoint:
    path: /aggregated/year
    method: GET
    data_selector: result
    params:
      q: required
      appid: required
- name: accumulated_temperature
  endpoint:
    path: /history/accumulated_temperature
    method: GET
    params:
      lat: '{lat}'
      lon: '{lon}'
      start: '{start}'
      end: '{end}'
      appid: '{API key}'
- name: accumulated_precipitation
  endpoint:
    path: /history/accumulated_precipitation
    method: GET
    params:
      lat: '{lat}'
      lon: '{lon}'
      start: '{start}'
      end: '{end}'
      appid: '{API key}'
- name: current_weather
  endpoint:
    path: /weather/{op}/{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
- name: forecast_weather
  endpoint:
    path: /weather/{op}/{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
- name: historical_weather
  endpoint:
    path: /weather/{op}/{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
      date: '1552861800'
- name: weather_map
  endpoint:
    path: /weather/1h/{op}/{z}/{x}/{y}
    method: GET
    data_selector: weather
    params:
      appid: '{API key}'
- name: clouds
  endpoint:
    path: /map/clouds_new/{z}/{x}/{y}.png
    method: GET
    data_selector: layer
- name: precipitation
  endpoint:
    path: /map/precipitation_new/{z}/{x}/{y}.png
    method: GET
    data_selector: layer
- name: pressure
  endpoint:
    path: /map/pressure_new/{z}/{x}/{y}.png
    method: GET
    data_selector: layer
- name: wind
  endpoint:
    path: /map/wind_new/{z}/{x}/{y}.png
    method: GET
    data_selector: layer
- name: temperature
  endpoint:
    path: /map/temp_new/{z}/{x}/{y}.png
    method: GET
    data_selector: layer
- name: global_precipitation_map
  endpoint:
    path: /{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
      tm: '{date}'
- name: global_precipitation_forecast
  endpoint:
    path: /radar/forecast/{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
      tm: '{date}'
- name: relief_maps
  endpoint:
    path: /relief/{z}/{x}/{y}
    method: GET
    data_selector: maps
- name: fire_weather_index
  endpoint:
    path: /{z}/{x}/{y}
    method: GET
    data_selector: data
    params:
      appid: '{API key}'
      date: optional
- name: current_air_pollution_data
  endpoint:
    path: /air_pollution
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
- name: forecast_air_pollution_data
  endpoint:
    path: /air_pollution/forecast
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      appid: required
- name: historical_air_pollution_data
  endpoint:
    path: /air_pollution/history
    method: GET
    data_selector: list
    params:
      lat: required
      lon: required
      start: required
      end: required
      appid: required
- name: current_fire_weather_index
  endpoint:
    path: /fwi
    method: GET
    data_selector: list
    params:
      lat: '{lat}'
      lon: '{lon}'
      appid: '{API key}'
- name: forecast_fire_weather_index
  endpoint:
    path: /fwi/forecast
    method: GET
    data_selector: list
    params:
      lat: '{lat}'
      lon: '{lon}'
      appid: '{API key}'
- name: direct_geocoding
  endpoint:
    path: /direct
    method: GET
    data_selector: results
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: GET
    data_selector: results
    params: {}
- name: direct_geocoding
  endpoint:
    path: /direct
    method: GET
    data_selector: ''
    params:
      q: ''
      limit: ''
- name: reverse_geocoding
  endpoint:
    path: /reverse
    method: GET
    data_selector: ''
    params:
      lat: ''
      lon: ''
      limit: ''
- name: zip_code_geocoding
  endpoint:
    path: /zip
    method: GET
    data_selector: ''
    params:
      zip: ''
- name: reverse_geocoding
  endpoint:
    path: /geo/reverse
    method: GET
    data_selector: locations
    params: {}
- name: stations
  endpoint:
    path: /stations
    method: POST
    data_selector: ''
    params: {}
- name: measurements
  endpoint:
    path: /measurements
    method: POST
    data_selector: ''
    params: {}
- name: current_weather
  endpoint:
    path: /data/2.5/weather
    method: GET
    data_selector: weather
    params: {}
- name: forecast
  endpoint:
    path: /data/2.5/forecast
    method: GET
    data_selector: list
    params: {}
- name: current_weather
  endpoint:
    path: /onecall
    method: GET
    data_selector: data
    params:
      lat: '{lat}'
      lon: '{lon}'
      exclude: '{part}'
      appid: '{API key}'
- name: historical_weather
  endpoint:
    path: /onecall/timemachine
    method: GET
    data_selector: data
    params:
      lat: '{lat}'
      lon: '{lon}'
      dt: '{time}'
      appid: '{API key}'
- name: daily_aggregation
  endpoint:
    path: /onecall/day_summary
    method: GET
    data_selector: data
    params:
      lat: '{lat}'
      lon: '{lon}'
      date: '{date}'
      appid: '{API key}'
- name: weather_overview
  endpoint:
    path: /onecall/overview
    method: GET
    data_selector: data
    params:
      lat: '{lat}'
      lon: '{lon}'
      appid: '{API key}'
- name: weather
  endpoint:
    path: /weather
    method: GET
- name: forecast
  endpoint:
    path: /forecast
    method: GET
notes:
- The AI Weather Assistant is a work in progress. Its knowledge of the world and weather
  is being continuously enhanced.
- Requires an OpenWeather API key
- Offers a Free rate that grants access to a variety of data types, including current
  weather, forecasts, and weather maps.
- Upon registration, you will receive an API key that allows for 60 free calls per
  minute.
- API key is required for all requests and should be included as 'appid' parameter.
- Default unit is standard if no units parameter is used.
- Weather data is available in JSON and XML formats.
- API requests by city name, zip-codes, and city id have been deprecated.
- Translation is applied for the city name and description fields.
- API requests by city name, zip-codes and city id have been deprecated.
- Searching by states available only for the USA locations.
- If country is not specified then the search works for USA as a default.
- Uses optional parameters for units and language.
- Data is available in JSON and XML formats.
- Use of Geocoding API is recommended for converting city names and zip-codes.
- If you do not use the `units` parameter, `standard` units will be applied by default.
- Weather data in the files get updated regularly.
- Dissemination of alerts issued by national weather agencies may experience delays
  of up to 30 minutes.
- Weather alerts are provided in English by default.
- Forecast is available in JSON or XML format.
- Units of measurement can be standard, metric, or imperial.
- API requests by city name, zip-codes and city id have been deprecated. Although
  they are still available for use, bug fixing and updates are no longer available
  for this functionality.
- The forecast includes multiple time points with weather data.
- 'Units of measurement: standard, metric, imperial.'
- If the service detected timezone for your location incorrectly, you can specify
  correct timezone manually by adding tz parameter.
- Availability of hourly historical data depends on a type of your subscription.
- API requests by city name and city id have been deprecated but are still available
  for use.
- The maximum historical data depth in one API response is one week.
- When you do not use the `units` parameter, format is `standard` by default.
- Historical weather data available from 1st January 1979 with 1-hour step.
- Data available from 7 October 2017
- Forecasts are updated at 00:00 UTC, 06:00 UTC, 12:00 UTC, 18:00 UTC
- Statistical API doesn't return real historical data, but statistically calculated
  data based on real historical data.
- Date and time specified in the request will be rounded to the previous 3-hour interval.
- You can get current, forecast and historical weather maps using only the 'date'
  parameter.
- Please specify dates with 10 minutes steps.
- Please specify dates not earlier than 2 days from the current time and not later
  than 6 hours from the current time.
- You need to insert the generated URL into the special plugins.
- You can create a custom palette for each layer.
- Current Fire Weather Index maps can be retrieved without specifying a date.
- Response fields may vary based on a country or specific location.
- Requires setup of an account to receive API key.
- API provides high-precision environmental data across various industries.
- Do not share your API key with anyone who doesn`t take part in your project.
- In accordance with the Creative Common license you can only use the free data for
  students in your academic research projects.
- You can exclude some parts of the weather data from the API response using the exclude
  parameter.
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API key and ensure it is included in the request.'
- '400000: You can get the 400000 error when you request data for a period not covered
  by your subscription.'
- '401: You did not specify your API key in API request.'
- '404: You can get this error when you specified the wrong city name, ZIP-code or
  city ID.'
- '429: You will get the error 429 if you are a user of a Free subscription and make
  more than 60 API calls per minute.'
- '500: In case you receive one of the following errors 500, 502, 503 or 504 please
  contact us for assistance.'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check your API key'
- '404 Not Found: Check the endpoint and parameters.'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Endpoint does not exist'
- '429 Too Many Requests: Rate limit exceeded'
- '400: Invalid date format'
- '5xx: Unexpected Error'
- '5xx: Server Error'
- '400: Bad Request. You can get error 400 error if either some mandatory parameters
  in the request are missing or some of request parameters have incorrect format or
  values out of allowed range.'
- '401: Unauthorized. You can get 401 error if API token did not providen in the request
  or in case API token provided in the request does not grant access to this API.'
- '404: Not Found. You can get 404 error if data with requested parameters (lat, lon,
  date, location_id, panel_id) does not exist in service database.'
- '429: Too Many Requests. You can get 429 error if key quato of requests for provided
  API to this API was exceeded.'
- '5xx: Unexpected Error. You can get ''5xx'' error in case of other internal errors.'
- '401 Unauthorized: Check API key or account status.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- '400 Bad Request: Check if all required parameters are included.'
- '401 Unauthorized: Invalid API key.'
- '404 Not Found: The requested weather layer does not exist.'
- 'Invalid API key: Check your API key and try again.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'Invalid API key: Check your unique API key.'
- 'Missing parameters: Ensure all required parameters are included in the request.'
- '401 Unauthorized: Recheck API key or account status'
- '404 Not Found: Check the endpoint or parameters.'
- '401 Unauthorized: Verify API key or permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- '204: Successful operation'
- '201: Successful creation'
- '400: Bad request'
- '404: Not found'
- '400000: Error in input data'
- '500000: Internal error'
- '404000: Object not found'
- '401 Unauthorized: Check your API key and permissions'
- '404 Not Found: Verify the endpoint and parameters'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.openweathermap.org/data/2.5
  auth:
    type: apikey
source_metadata: null
