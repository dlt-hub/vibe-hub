resources:
- name: get_version
  endpoint:
    path: /webui/api/service
    method: GET
    data_selector: result
    params:
      method: get_version
      api_version: 3
- name: get_api_access_token
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_api_access_token
- name: get_available_players
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.players
    params:
      api_version: 3
      method: get_available_players
      content_id: test
- name: open_in_player
  endpoint:
    path: /open_in_player
    method: GET
    data_selector: result
    params: {}
- name: get_media_files
  endpoint:
    path: /get_media_files
    method: GET
    data_selector: result.files
    params: {}
- name: get_content_id
  endpoint:
    path: /get_content_id
    method: GET
    data_selector: result
    params: {}
- name: get_channel_icon
  endpoint:
    path: /get_channel_icon
    method: GET
    data_selector: result
    params: {}
- name: analyze_content
  endpoint:
    path: /analyze_content
    method: GET
    data_selector: result
    params: {}
- name: analyze_content_multi
  endpoint:
    path: /analyze_content_multi
    method: GET
    data_selector: result
    params: {}
- name: get_status
  endpoint:
    path: /get_status
    method: GET
    data_selector: result
    params: {}
- name: get_network_connection_status
  endpoint:
    path: /get_network_connection_status
    method: GET
    data_selector: result
    params: {}
- name: parse_m3u_playlist
  endpoint:
    path: /parse_m3u_playlist
    method: GET
    data_selector: result
    params: {}
- name: playlist_get
  endpoint:
    path: /playlist_get
    method: GET
    data_selector: result.playlist
    params: {}
- name: playlist_add_item
  endpoint:
    path: /playlist_add_item
    method: POST
    data_selector: result
    params: {}
- name: playlist_update_item
  endpoint:
    path: /playlist_update_item
    method: POST
    data_selector: result
    params: {}
- name: playlist_delete_item
  endpoint:
    path: /playlist_delete_item
    method: POST
    data_selector: result
    params: {}
- name: playlist_trash_get
  endpoint:
    path: /playlist_trash_get
    method: GET
    data_selector: result.data
    params: {}
- name: playlist_trash_clear
  endpoint:
    path: /playlist_trash_clear
    method: POST
    data_selector: result
    params: {}
- name: playlist_clear
  endpoint:
    path: /playlist_clear
    method: POST
    data_selector: result
    params: {}
- name: playlist_item_set_favorite
  endpoint:
    path: /playlist_item_set_favorite
    method: POST
    data_selector: result
    params: {}
- name: playlist_item_set_enabled
  endpoint:
    path: /api?api_version=3&method=playlist_item_set_enabled
    method: GET
    data_selector: result
    params: {}
- name: playlist_items_set_enabled
  endpoint:
    path: /api?api_version=3&method=playlist_items_set_enabled
    method: GET
    data_selector: result
    params: {}
- name: playlist_item_set_locked
  endpoint:
    path: /api?api_version=3&method=playlist_item_set_locked
    method: GET
    data_selector: result
    params: {}
- name: playlist_item_set_auto_search
  endpoint:
    path: /api?api_version=3&method=playlist_item_set_auto_search
    method: GET
    data_selector: result
    params: {}
- name: playlist_import
  endpoint:
    path: /api?api_version=3&method=playlist_import
    method: POST
    data_selector: task_id
    params: {}
- name: external_playlist_add
  endpoint:
    path: /api?api_version=3&method=external_playlist_add
    method: POST
    data_selector: result
    params: {}
- name: external_playlist_delete
  endpoint:
    path: /api?api_version=3&method=external_playlist_delete
    method: POST
    data_selector: result
    params: {}
- name: external_playlist_update
  endpoint:
    path: /api?api_version=3&method=external_playlist_update
    method: POST
    data_selector: result
    params: {}
- name: external_playlist_edit
  endpoint:
    path: /api?api_version=3&method=external_playlist_edit
    method: POST
    data_selector: result
    params: {}
- name: external_playlist_get
  endpoint:
    path: /api?api_version=3&method=external_playlist_get
    method: GET
    data_selector: result
    params: {}
- name: update_all_external_playlists
  endpoint:
    path: /api?api_version=3&method=update_all_external_playlists
    method: GET
    data_selector: task_id
    params: {}
- name: check_auth
  endpoint:
    path: /api?api_version=3&method=check_auth
    method: GET
    data_selector: result
    params: {}
- name: get_version
  endpoint:
    path: /webui/api/service
    method: GET
    data_selector: result
    params:
      method: get_version
- name: get_api_access_token
  endpoint:
    path: /service/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_api_access_token
- name: get_available_players
  endpoint:
    path: /service/api
    method: GET
    data_selector: result.players
    params:
      api_version: 3
      method: get_available_players
      content_id: test
- name: get_media_files
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.files
    params:
      api_version: 3
      method: get_media_files
- name: get_content_id
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.content_id
    params:
      api_version: 3
      method: get_content_id
- name: get_channel_icon
  endpoint:
    path: /server/api
    method: GET
    data_selector: image
    params:
      api_version: 3
      method: get_channel_icon
- name: analyze_content
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: analyze_content
- name: analyze_content_multi
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: analyze_content_multi
- name: get_status
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_status
- name: get_network_connection_status
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_network_connection_status
- name: parse_m3u_playlist
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.epg_sources
    params:
      api_version: 3
      method: parse_m3u_playlist
- name: playlist_get
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.playlist
    params:
      api_version: 3
      method: playlist_get
- name: playlist_item_set_enabled
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_items_set_enabled
- name: playlist_item_set_locked
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_item_set_locked
- name: playlist_item_set_auto_search
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_item_set_auto_search
- name: playlist_import
  endpoint:
    path: /server/api
    method: POST
    data_selector: task_id
    params:
      api_version: 3
      method: playlist_import
- name: external_playlist_add
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_add
- name: external_playlist_delete
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_delete
- name: external_playlist_update
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_update
- name: external_playlist_edit
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_edit
- name: external_playlist_get
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_get
- name: update_all_external_playlists
  endpoint:
    path: /server/api
    method: GET
    data_selector: task_id
    params:
      api_version: 3
      method: update_all_external_playlists
- name: check_auth
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: check_auth
- name: sign_in
  endpoint:
    path: /server/api
    method: GET
    data_selector: ok
    params:
      api_version: 3
      method: sign_in
- name: get_version
  endpoint:
    path: /webui/api/service
    method: GET
    data_selector: result
    params:
      method: get_version
- name: get_api_access_token
  endpoint:
    path: /service/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_api_access_token
- name: get_available_players
  endpoint:
    path: /service/api
    method: GET
    data_selector: result.players
    params:
      api_version: 3
      method: get_available_players
      content_id: test
- name: get_media_files
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.files
    params:
      api_version: 3
      method: get_media_files
- name: get_content_id
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.content_id
    params:
      api_version: 3
      method: get_content_id
- name: get_channel_icon
  endpoint:
    path: /server/api
    method: GET
    data_selector: image
    params:
      api_version: 3
      method: get_channel_icon
- name: analyze_content
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: analyze_content
- name: get_status
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_status
- name: get_network_connection_status
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: get_network_connection_status
- name: parse_m3u_playlist
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.epg_sources
    params:
      api_version: 3
      method: parse_m3u_playlist
- name: playlist_add_item
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_add_item
- name: playlist_update_item
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_update_item
- name: playlist_delete_item
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_delete_item
- name: playlist_get
  endpoint:
    path: /server/api
    method: GET
    data_selector: result.playlist
    params:
      api_version: 3
      method: playlist_get
- name: playlist_clear
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_clear
- name: playlist_item_set_enabled
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_items_set_enabled
- name: playlist_item_set_locked
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_item_set_locked
- name: playlist_item_set_auto_search
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: playlist_item_set_auto_search
- name: external_playlist_add
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_add
- name: external_playlist_delete
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_delete
- name: external_playlist_update
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_update
- name: external_playlist_edit
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_edit
- name: external_playlist_get
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: external_playlist_get
- name: update_all_external_playlists
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: update_all_external_playlists
- name: check_auth
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: check_auth
- name: sign_in
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: sign_in
- name: sign_out
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params:
      api_version: 3
      method: sign_out
- name: sign_in
  endpoint:
    path: /server/api
    method: GET
    data_selector: result
    params: {}
- name: Windows
  endpoint:
    path: https://download.acestream.media/products/acestream-full/win/latest
    method: GET
- name: Android
  endpoint:
    path: https://android.acestream.net/download/apk
    method: GET
- name: Ace Stream Media (Smart & TV)
  endpoint:
    path: https://download.acestream.media/products/acestream-engine/android/armv7/latest
    method: GET
- name: Ace Stream Engine
  endpoint:
    path: https://download.acestream.media/products/android/acestream-core/armv7/latest
    method: GET
- name: Linux
  endpoint:
    path: https://download.acestream.media/linux/acestream_3.2.11_ubuntu_22.04_x86_64_py3.10.tar.gz
    method: GET
- name: Ace Assets
  endpoint:
    path: /list-of-operations/ace-asset/
    method: GET
    data_selector: records
- name: Ace Byte (XAB)
  endpoint:
    path: /ace-byte/
    method: GET
- name: Ace Time (XAT)
  endpoint:
    path: /ace-time/
    method: GET
- name: Ace Stream Token (AST)
  endpoint:
    path: /ace-stream-token/
    method: GET
- name: Ace Byte Issuing
  endpoint:
    path: /issuing
    method: GET
    data_selector: issuing_info
- name: Ace Byte Pricing
  endpoint:
    path: /pricing
    method: GET
    data_selector: pricing_info
- name: Payment and Distribution of Funds
  endpoint:
    path: /payment-distribution
    method: GET
    data_selector: payment_info
- name: Ace Time Multimedia
  endpoint:
    path: /services/data/vXX.X/sobjects/AceTimeMultimedia
    method: GET
    data_selector: records
- name: Ace Time Audio
  endpoint:
    path: /services/data/vXX.X/sobjects/AceTimeAudio
    method: GET
    data_selector: records
- name: Token Issuing
  endpoint:
    path: /token/issuing
    method: GET
    data_selector: records
    params: {}
- name: Token Distribution
  endpoint:
    path: /token/distribution
    method: GET
    data_selector: records
    params: {}
- name: payment_for_traffic
  endpoint:
    path: /traffic/payments
    method: GET
    data_selector: payments
    params: {}
- name: traffic_payment
  endpoint:
    path: /payment-for-traffic
    method: GET
    data_selector: traffic_details
    params: {}
- name: credit_traffic
  endpoint:
    path: /credit_traffic
    method: GET
    data_selector: credit_data
    params: {}
- name: reward_uploaders
  endpoint:
    path: /list-of-operations/reward-uploaders
    method: GET
- name: copyright_holder
  endpoint:
    path: /copyright_holders
    method: GET
- name: Distributors
  endpoint:
    path: /distributors
    method: GET
    data_selector: records
- name: oracles
  endpoint:
    path: /oracles
    method: GET
    data_selector: oracles
    params: {}
- name: premium_pool
  endpoint:
    path: /premium_pool
    method: GET
    data_selector: data
    params: {}
- name: per_minute_billing
  endpoint:
    path: /billing/per-minute
    method: GET
- name: one_time_access
  endpoint:
    path: /billing/one-time-access
    method: GET
- name: subscription
  endpoint:
    path: /billing/subscription
    method: GET
- name: user_channels
  endpoint:
    path: /users/channels
    method: GET
    data_selector: channels
- name: system_smart_contracts
  endpoint:
    path: /ace-network/system-smart-contracts
    method: GET
- name: standard_operations
  endpoint:
    path: /ace-network/standard-operations
    method: GET
- name: oracles_operations
  endpoint:
    path: /ace-network/oracles-operations
    method: GET
- name: pools
  endpoint:
    path: /pools
    method: GET
    data_selector: pools
- name: subscriptions
  endpoint:
    path: /getUnprocessedSubscriptions
    method: GET
    data_selector: subscriptions
- name: watch_duration
  endpoint:
    path: /getWatchDuration
    method: GET
    data_selector: watchDuration
- name: remove_subscription
  endpoint:
    path: /removeSubscription
    method: POST
    data_selector: response
- name: purge_devices
  endpoint:
    path: /purge-devices
    method: DELETE
    data_selector: null
    params:
      operation_limit: 1 every 24 hours
- name: Purge Subscriptions
  endpoint:
    path: /purge-subscriptions
    method: DELETE
- name: reward_uploaders
  endpoint:
    path: /reward_uploaders
    method: POST
    data_selector: result
- name: add_device
  endpoint:
    path: /add-device
    method: POST
    data_selector: device
    params:
      device_public_key: public key identifies device which is linking to account
- name: Buy One-time Access
  endpoint:
    path: /buy-one-time-access
    method: GET
    data_selector: parameters
    params: {}
- name: Buy Subscription
  endpoint:
    path: /buy-subscription
    method: GET
    data_selector: parameters
    params:
      subscription id: subscription identifier
- name: remove_device
  endpoint:
    path: /remove_device
    method: POST
    data_selector: response
    params:
      device_public_key: public key of the device that you want to unlink
- name: mint
  endpoint:
    path: /mint
    method: POST
- name: convert
  endpoint:
    path: /convert
    method: POST
    data_selector: result
- name: mint
  endpoint:
    path: /mint
    method: POST
    data_selector: result
- name: burn
  endpoint:
    path: /burn
    method: POST
    data_selector: result
- name: bind
  endpoint:
    path: /bind
    method: POST
    data_selector: mapping
- name: Unlock System Tokens
  endpoint:
    path: /unlock/system/tokens
    method: POST
    data_selector: result
    params: {}
- name: Creating NFT
  endpoint:
    path: /creating-nft
    method: GET
    data_selector: data
    params: {}
- name: Add Device
  endpoint:
    path: /list-of-operations/add-device/
    method: GET
- name: Remove Device
  endpoint:
    path: /list-of-operations/remove-device/
    method: GET
- name: transaction_fee
  endpoint:
    path: /fees/transaction
    method: GET
    data_selector: transaction_fee_data
- name: traffic_fee
  endpoint:
    path: /fees/traffic
    method: GET
    data_selector: traffic_fee_data
- name: content_access_fee
  endpoint:
    path: /fees/content_access
    method: GET
    data_selector: content_access_fee_data
- name: Transport File
  endpoint:
    path: /transport-file
    method: GET
- name: Content Identifier
  endpoint:
    path: /content/identifier
    method: GET
    data_selector: data
- name: traffic_unit
  endpoint:
    path: /traffic-unit
    method: GET
    data_selector: traffic_unit
- name: astLockedPool
  endpoint:
    path: /system-pools/astLockedPool
    method: GET
- name: txFeePool
  endpoint:
    path: /system-pools/txFeePool
    method: GET
- name: trafficFeePool
  endpoint:
    path: /system-pools/trafficFeePool
    method: GET
- name: contentAccessFeePool
  endpoint:
    path: /system-pools/contentAccessFeePool
    method: GET
- name: premiumFeePool
  endpoint:
    path: /system-pools/premiumFeePool
    method: GET
- name: Proxy account
  endpoint:
    path: /proxy/account
    method: GET
- name: Ace Asset Account
  endpoint:
    path: /ace/asset/account
    method: GET
- name: geotag
  endpoint:
    path: /geotags
    method: GET
    data_selector: content
    params: {}
- name: traffic_user_payment_fee
  endpoint:
    path: /traffic_user_payment_fee
    method: GET
    data_selector: current_value
    params: {}
- name: traffic_broadcaster_payment_fee
  endpoint:
    path: /traffic_broadcaster_payment_fee
    method: GET
    data_selector: current_value
    params: {}
- name: ace_asset_asf_share
  endpoint:
    path: /ace_asset_asf_share
    method: GET
    data_selector: current_value
    params: {}
- name: premium_pool_access_fee
  endpoint:
    path: /premium_pool_access_fee
    method: GET
    data_selector: current_value
    params: {}
- name: ace_asset_min_lock_interval
  endpoint:
    path: /ace_asset_min_lock_interval
    method: GET
    data_selector: current_value
    params: {}
- name: traffic_credit_limit
  endpoint:
    path: /traffic_credit_limit
    method: GET
    data_selector: current_value
    params: {}
- name: add_device_fee
  endpoint:
    path: /add_device_fee
    method: GET
    data_selector: current_value
    params: {}
- name: system_smart_contracts
  endpoint:
    path: /operations/
    method: GET
- name: playback
  endpoint:
    path: /ace/manifest.m3u8
    method: GET
    data_selector: response
    params: {}
- name: session_info
  endpoint:
    path: /ace/stat/{session_id}
    method: GET
    data_selector: response
    params: {}
- name: stop_session
  endpoint:
    path: /ace/cmd/{session_id}
    method: GET
    data_selector: response
    params:
      method: stop
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      page: 0
      page_size: 10
- name: engine_windows
  endpoint:
    path: /path/to/engine/ace_engine.exe
    method: GET
- name: engine_console_windows
  endpoint:
    path: /path/to/engine/ace_console.exe
    method: GET
- name: engine_linux_gui
  endpoint:
    path: /path/to/engine/start-engine --client-gtk
    method: GET
- name: engine_linux_console
  endpoint:
    path: /path/to/engine/start-engine --client-console
    method: GET
- name: torrent
  endpoint:
    path: /LOADASYNC
    method: POST
    data_selector: status
- name: playback
  endpoint:
    path: /PLAY
    method: POST
    data_selector: state
notes:
- Private methods require an access token in the request parameters.
- Public methods can be accessed without an access token.
- Private methods require an 'access token' in the request parameters.
- The Internet does not provide any guarantees of reliability and performance when
  operating in a centralized data delivery mode.
- Internetwork is not efficient or reliable as it can be negatively affected by a
  number of factors.
- Peering point congestion can cause packet loss and increase latency.
- BGP has limitations that affect routing efficiency.
- TCP protocol carries significant overhead and can have suboptimal performance for
  high latency or packet loss links.
- The reference peer-to-peer (P2P) network is unlimited in scalability, without shortage
  of resources and bandwidth, and does not harm the environment!
- No special software for broadcasting - the same software is used both for the client
  node and for broadcasting.
- '30% to the Ace Stream DAO treasury, to be distributed by such directions: 5% -
  RnD and software development, 5% - marketing and business development, 10% - stimulus
  programs to bring more broadcasters of exclusive premium content to the Ace Network,
  10% - charity and non-commercial projects.'
- 70% - to the reward pool, to be distributed among Ace Assets program participants,
  in proportion to the amount of their tokens activated in this program within 14
  full days.
- Ace Stream technologies and products are absolutely legal and operate in full compliance
  with the DMCA terms.
- The initial issuance is 10,000,000,000 AST
- 'The initial rate of AST token at the start of sales: 1 ''Ace Stream Token'' = $1'
- Payment for traffic with AceTime tokens is possible only if third-party tokens are
  used.
- Traffic can be paid with tokens Ace Byte and Ace Time.
- Payment for traffic with AceTime tokens is possible only if third-party tokens are
  used that encapsulate the AceTime token.
- The network takes a fee of 10% from each payment for traffic.
- Funds for lottery distribution are accumulated in the main blockchain in the reward
  pool.
- Tokens are required to participate in the 'Ace Assets' program and receive payments
  from the reward pool.
- The redistributions perform by the 'Ace Assets' smart contract, which runs once
  a day to make transfers.
- The premium pool earns income in the form of payments for access to content.
- Funds received from payment of subscriptions are distributed in a 30% network fee
  and 70% to broadcasters.
- Operations described are specific to the Ace Network, extending Stellar's standard
  operations.
- An operation can be initiated by any account, but the network will only accept one
  transaction every 24 hours.
- Deletes from the network all expired subscriptions created more than 180 days ago.
- The operation can be started by any account, but the network will only accept one
  operation every 24 hours.
- An operation can be initiated by any account, but the network will only accept one
  attempt every 28 days.
- This method can be executed only by the oracle (account with type RIGHTS_ORACLE)
- MPEG TS stream must have exactly one source node.
- Public HLS stream doesn't require any nodes at all.
- Private HLS stream requires at least one support node.
- Maximum page size is 200
errors:
- '401 Unauthorized: Token cannot be retrieved from untrusted environment.'
- '401 Unauthorized: Access token may be missing or invalid.'
- '403 Forbidden: Access denied for the requested resource.'
- 'auth_error: Bad username or password'
- '401 Unauthorized: Access token may be invalid or expired.'
auth_info:
  mentioned_objects: []
client:
  base_url: http://127.0.0.1:6878
  auth:
    type: apikey
  headers:
    Accept: application/json
source_metadata: null
