resources:
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: access_token
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    data_selector: records
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: required
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: required
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: online_offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: required
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: mccodes
  endpoint:
    path: /policy/mccodes
    method: GET
- name: reporting_templates
  endpoint:
    path: /reporting/templates/{templatename}
    method: GET
- name: reporting_template_reports
  endpoint:
    path: /reporting/templates/{templatename}/reports/{reportid}
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: POST
    data_selector: accounts
    params: {}
- name: accounts_by_company
  endpoint:
    path: /accounts/company/{companyid}
    method: GET
    data_selector: accounts
    params:
      companyid: required
- name: accounts
  endpoint:
    path: /accounts
    method: POST
- name: accounts_company
  endpoint:
    path: /accounts/company/{companyid}
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: required
      benefit_type: one of meals_entertainment, living_expenses
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: required
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: online_offers
  endpoint:
    path: /offers/{id}/online
    method: GET
    params: {}
- name: online_offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: offers_online
  endpoint:
    path: /offers/{id}/online
    method: GET
    params:
      client_id: '*required (string)*'
- name: pin_reveal
  endpoint:
    path: /pin/reveal
    method: POST
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: pin_reveal
  endpoint:
    path: /pin/reveal
    method: POST
- name: offers
  endpoint:
    path: /offers/{id}/online
    method: GET
- name: webhook_message
  endpoint:
    path: /notification/webhook
    method: POST
    data_selector: data
- name: base_message
  endpoint:
    path: /notification/webhook.html
    method: POST
    data_selector: data
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: data
    params: {}
- name: undeliverable_alert
  endpoint:
    path: /undeliverable_alert
    method: POST
    data_selector: data
    params: {}
- name: batch_transfer
  endpoint:
    path: /batch_transfer
    method: POST
    data_selector: data
    params: {}
- name: text
  endpoint:
    path: /text
    method: POST
    data_selector: data
    params: {}
- name: run_template
  endpoint:
    path: /run_template
    method: POST
    data_selector: data
    params: {}
- name: save_template
  endpoint:
    path: /save_template
    method: POST
    data_selector: data
    params: {}
- name: transaction_message
  endpoint:
    path: /transactions
    method: POST
    data_selector: data
    params: {}
- name: undeliverable_alert
  endpoint:
    path: /undeliverable_alerts
    method: POST
    data_selector: data
    params: {}
- name: batch_transfer
  endpoint:
    path: /batch_transfers
    method: POST
    data_selector: data
    params: {}
- name: text_message
  endpoint:
    path: /text_messages
    method: POST
    data_selector: data
    params: {}
- name: run_template
  endpoint:
    path: /run_templates
    method: POST
    data_selector: data
    params: {}
- name: save_template
  endpoint:
    path: /save_templates
    method: POST
    data_selector: data
    params: {}
- name: Notification API
  endpoint:
    path: /notification/notification.html
    method: POST
- name: Webhook Message Reference
  endpoint:
    path: /notification/webhook.html
    method: GET
- name: token
  endpoint:
    path: /3.0/token
    method: POST
    data_selector: access_token
- name: webhook_status
  endpoint:
    path: /hooks
    method: GET
    data_selector: webhooks
- name: register_webhook
  endpoint:
    path: /hooks
    method: POST
    data_selector: webhook
- name: update_webhook
  endpoint:
    path: /hooks/{id}
    method: PATCH
    data_selector: webhook
- name: delete_webhook
  endpoint:
    path: /hooks/{id}
    method: DELETE
- name: failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable
    method: GET
    data_selector: failed_deliveries
- name: failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable
    method: GET
    data_selector: undeliverable
- name: resolve_failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable/dismiss
    method: POST
    data_selector: message_ids
- name: webhook_status
  endpoint:
    path: /hooks
    method: GET
- name: register_webhook
  endpoint:
    path: /hooks
    method: POST
- name: update_webhook
  endpoint:
    path: /hooks/{id}
    method: PATCH
- name: delete_webhook
  endpoint:
    path: /hooks/{id}
    method: DELETE
- name: failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable
    method: GET
- name: failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable
    method: GET
    data_selector: messages
    params:
      page_number: '1'
      page_size: '10'
- name: resolve_failed_deliveries
  endpoint:
    path: /hooks/{id}/undeliverable/dismiss
    method: POST
    data_selector: dismissed_messages
    params: {}
notes:
- All JSON sent to and from the API must be sent with the Content-Type HTTP header
  set to application/vnd.eml+json.
- 'Requests to the EML APIs are subject to rate limiting: 1,000 requests per 10 seconds
  against each whitelisted IP address.'
- 'Requests to the EML APIs is subject to rate limiting as follows: calls to APIs
  are limited to 1,000 requests per 10 seconds against each whitelisted IP address.'
- Each message sent to your webhook will have an HMAC for authentication.
- You should respond to messages within 10 seconds.
- Each message sent to the webhook will conform to the HTTP 1.1 request using the
  POST method.
- The request body is text encoded in UTF-8 and JSON formatted.
- The response format must have HTTP 200 status code, content type of application/json,
  and a JSON body echoing the id property of the request.
- The time limit for responses is currently configured to 10 seconds.
- Messages older than 7 days which have not been dismissed will automatically expire.
- Webhooks without any successful deliveries in a 5 day period will be automatically
  disabled.
- EML will not perpetually store undeliverable messages. Messages older than 7 days
  which have not been dismissed will automatically expire.
- Tokens are issued with 12 hour lifespans.
- If you receive a 401 UNAUTHORIZED response, request a new access token.
- Methods typically use the 204 No Content status code for empty result sets.
- This document attempts to explain and demystify some of the complexities present
  when processing transactions.
- There are two different models for transaction lifecycle which are employed.
- You should especially avoid using JSON.stringify to compute hmac, as there is no
  guarantee it will roundtrip exactly byte-for-byte to the original data.
errors:
- '401 Unauthorized: Invalid or expired token.'
- '403 Forbidden: The user is not authorised to the specified company.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- '403: The user is not authorised to the specified company'
- '401: Invalid or expired token.'
- '400: Your request was invalid. Correct your request and try again.'
- '429 Too Many Requests: Calls exceeding the rate limit.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Invalid request fields. The invalid fields are listed in the response error
  message'
- '400 Bad Request: Invalid request fields.'
- '401: Invalid or expired token'
- '403 Forbidden: The user is not authorised to the specified company'
- '403: The user is not authorised to the specified company.'
- '429 Too Many Requests: Exceeded rate limit.'
- '429 Too Many Requests: Exceeded the rate limit.'
- '404 Not Found: The supplied account_id was invalid or could not be found.'
- '500 Internal Server Error: Try again soon, or contact support.'
- '401 Unauthorized: Invalid or expired token'
- '404: The supplied account_id was invalid or could not be found.'
- '500: An internal server error occurred.'
- '400: Invalid request fields'
- '400: Invalid request fields.'
- 401 Invalid or expired token.
- 403 The user is not authorised to the specified company.
- 400 Invalid request fields.
- '400 Bad Request: Invalid request fields. The invalid fields are listed in the response
  error message.'
- 'InvalidKeyException: Ensure the key is correct.'
- 'NoSuchAlgorithmException: Ensure the algorithm is supported.'
- 'Invalid request: The response does not match the expected format.'
- 'Unauthorized: Check your HMAC and authorization header.'
- '401 UNAUTHORIZED: Request a new access token.'
- '401 UNAUTHORIZED: Request and wait for a new access token.'
- 'server_error: An unknown error occurred.'
- 'unauthorized: You are not authorized to attach a webhook in scope: 1234'
- 'no_response: Timed-out sending a ping message.'
- 'invalid_hook_id: The request URI contains an invalid hook id.'
- 'invalid_message_id: One or more of your message_ids were invalid.'
- 'invalid_request: The request was not valid JSON.'
- 'invalid_uri: Your webhook URI does not appear to be a valid HTTPS URI.'
- 'invalid_scope: Your scope was malformed.'
- 'invalid_filter_spec: Your filter specification was malformed.'
- 'invalid_enabled: You did not supply true or false for the enabled field.'
- 'invalid_reliability_mode: Your reliability_mode was not one of the allowable values.'
- 'invalid_hmac_key_id: Your hmac_key_id was malformed.'
- 'invalid_hmac_key_secret: Your hmac_key_secret was not a 256bit hex string.'
- 'no_response: You attempted to enable your webhook, but it did not respond successfully
  to our ping message.'
auth_info:
  mentioned_objects:
  - hmac_key_id
  - hmac_key_secret
client:
  base_url: https://ws.emerchants.com.au/3.0/
  auth:
    type: oauth2
    flow: client_credentials
    token_url: https://ws.emerchants.com.au/3.0/token
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/vnd.eml+json
source_metadata: null
