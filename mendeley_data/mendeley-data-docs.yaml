resources:
- name: draft_dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: delete_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: DELETE
    data_selector: response
- name: update_properties_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: PATCH
    data_selector: response
- name: draft_datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: contributor
  endpoint:
    path: /datasets/{dataset_id}/contributors/{contributor_id}
    method: GET
    data_selector: contributor
- name: categories
  endpoint:
    path: /datasets/{dataset_id}/categories
    method: GET
    data_selector: categories
- name: get_contributors
  endpoint:
    path: /contributors
    method: GET
- name: add_contributors
  endpoint:
    path: /contributors
    method: POST
- name: update_contributor_property
  endpoint:
    path: /contributors/{contributor_id}/properties
    method: PUT
- name: get_events
  endpoint:
    path: /events
    method: GET
- name: get_file
  endpoint:
    path: /files/{file_id}
    method: GET
- name: add_file
  endpoint:
    path: /files
    method: POST
- name: get_folder
  endpoint:
    path: /folders/{folder_id}
    method: GET
- name: delete_folder
  endpoint:
    path: /folders/{folder_id}
    method: DELETE
- name: institutions
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: institutions
- name: folders
  endpoint:
    path: /get/folders
    method: GET
    data_selector: folders
- name: funders
  endpoint:
    path: /get/funders
    method: GET
    data_selector: funders
- name: institution
  endpoint:
    path: /get/institution
    method: GET
    data_selector: institution
- name: add_institution_to_draft_dataset
  endpoint:
    path: /add_institution
    method: POST
    data_selector: ancestors
    params: {}
- name: get_metadata_for_entity
  endpoint:
    path: /get_metadata
    method: GET
    data_selector: metadata
    params: {}
- name: update_metadata_for_entity
  endpoint:
    path: /update_metadata
    method: PUT
    data_selector: metadata
    params: {}
- name: clear_metadata_for_entity
  endpoint:
    path: /clear_metadata
    method: DELETE
    data_selector: metadata
    params: {}
- name: get_permissions_for_draft_dataset
  endpoint:
    path: /get_permissions
    method: GET
    data_selector: permissions
    params: {}
- name: get_property_for_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/properties/{property_name}
    method: GET
- name: update_property_for_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/properties/{property_name}
    method: PUT
- name: delete_draft_dataset_property
  endpoint:
    path: /datasets/{dataset_id}/properties/{property_name}
    method: DELETE
- name: publish_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/publish
    method: POST
- name: get_related_links_for_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/related-links
    method: GET
- name: add_related_link_to_a_dataset
  endpoint:
    path: /datasets/{dataset_id}/related-links
    method: POST
- name: delete_related_link_from_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/related-links/{related_link_id}
    method: DELETE
- name: get_all_versions_of_a_draft_dataset
  endpoint:
    path: /datasets/{dataset_id}/versions
    method: GET
- name: get_public_datasets
  endpoint:
    path: /datasets/public
    method: GET
- name: public_dataset
  endpoint:
    path: /datasets/{id}
    method: GET
- name: dataset_versions
  endpoint:
    path: /datasets/{id}/versions
    method: GET
- name: dataset_snapshot
  endpoint:
    path: /datasets/{id}/snapshot
    method: GET
- name: custom_metadata
  endpoint:
    path: /datasets/{id}/custom_metadata
    method: GET
- name: dataset_files
  endpoint:
    path: /datasets/{id}/files
    method: GET
- name: file_download_url
  endpoint:
    path: /datasets/{id}/files/{file_uuid}/download
    method: GET
- name: public_dataset_folders
  endpoint:
    path: /datasets/{id}/folders
    method: GET
- name: public_dataset_folder
  endpoint:
    path: /datasets/{id}/folders/{folder_id}
    method: GET
- name: upload_file
  endpoint:
    path: /datasets/{id}/upload
    method: POST
- name: files_of_public_dataset
  endpoint:
    path: /files
    method: GET
    data_selector: records
    params:
      version: any
      folder_id: any
      $start: '>= 0'
      $limit: '>= 1'
- name: file_of_public_dataset
  endpoint:
    path: /files/{file_id}
    method: GET
    data_selector: records
    params:
      version: any
- name: file_download_url
  endpoint:
    path: /files/{file_uuid}/download
    method: GET
    data_selector: records
    params:
      version: any
- name: licences
  endpoint:
    path: /licences
    method: GET
    data_selector: records
    params:
      $properties: string
- name: create_licence
  endpoint:
    path: /licences
    method: POST
    data_selector: records
- name: get_licence
  endpoint:
    path: /licences/{licence_id}
    method: GET
    data_selector: records
- name: update_licence
  endpoint:
    path: /licences/{licence_id}
    method: PATCH
    data_selector: records
- name: delete_licence
  endpoint:
    path: /licences/{licence_id}
    method: DELETE
    data_selector: records
- name: get_categories_for_a_draft_collection
  endpoint:
    path: /get/categories
    method: GET
- name: get_specific_content_of_a_draft_collection
  endpoint:
    path: /get/specific/content
    method: GET
- name: delete_content_from_a_draft_collection
  endpoint:
    path: /delete/content
    method: DELETE
- name: get_contents_of_a_draft_collection
  endpoint:
    path: /get/contents
    method: GET
- name: add_content_to_a_draft_collection
  endpoint:
    path: /add/content
    method: POST
- name: get_contributors_for_a_draft_collection
  endpoint:
    path: /get/contributors
    method: GET
- name: get_institutions_for_a_draft_collection
  endpoint:
    path: /get/institutions
    method: GET
- name: get_draft_collections
  endpoint:
    path: /get/draft/collections
    method: GET
- name: create_a_draft_collection
  endpoint:
    path: /create/draft/collection
    method: POST
- name: get_a_public_collection
  endpoint:
    path: /get/public/collection
    method: GET
- name: delete_a_public_collection
  endpoint:
    path: /delete/public/collection
    method: DELETE
- name: publish_a_draft_collection
  endpoint:
    path: /publish/draft/collection
    method: POST
- name: list_contents_of_a_public_collection
  endpoint:
    path: /list/contents/public/collection
    method: GET
- name: get_workspace_discovery_details
  endpoint:
    path: /get/workspace/discovery
    method: GET
- name: get_actor_type_enumerators
  endpoint:
    path: /get/actor/types
    method: GET
- name: get_content_state_enumerators
  endpoint:
    path: /get/content/states
    method: GET
- name: get_content_type_enumerators
  endpoint:
    path: /get/content/types
    method: GET
- name: get_entity_type_enumerators
  endpoint:
    path: /get/entity/types
    method: GET
- name: get_event_operation_types
  endpoint:
    path: /event-operation-type
    method: GET
- name: get_owner_types
  endpoint:
    path: /owner-type
    method: GET
- name: get_permission_enumerators
  endpoint:
    path: /permission
    method: GET
- name: get_workspace_type_enumerators
  endpoint:
    path: /workspace-type
    method: GET
- name: get_my_entitlements_for_workspaces
  endpoint:
    path: /my-entitlements/workspaces
    method: GET
- name: get_a_workspace
  endpoint:
    path: /workspaces/{workspace_id}
    method: GET
- name: delete_a_workspace
  endpoint:
    path: /workspaces/{workspace_id}
    method: DELETE
- name: get_workspaces
  endpoint:
    path: /workspaces
    method: GET
- name: create_a_workspace
  endpoint:
    path: /workspaces
    method: POST
- name: get_workspace_container
  endpoint:
    path: /workspaces/{workspace_id}/containers/{container_id}
    method: GET
- name: delete_a_workspace_container
  endpoint:
    path: /workspaces/{workspace_id}/containers/{container_id}
    method: DELETE
- name: get_workspace_containers
  endpoint:
    path: /workspaces/{workspace_id}/containers
    method: GET
- name: create_a_workspace_container
  endpoint:
    path: /workspaces/{workspace_id}/containers
    method: POST
- name: draft_dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: records
- name: draft_file_contents
  endpoint:
    path: /datasets/{dataset_id}/files/{file_id}
    method: GET
    data_selector: file_contents
- name: draft_datasets
  endpoint:
    path: /draft_datasets
    method: GET
    params: {}
- name: article
  endpoint:
    path: /articles
    method: GET
    params: {}
- name: contributors
  endpoint:
    path: /contributors
    method: GET
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    params: {}
- name: workspace_events
  endpoint:
    path: /workspace/events
    method: GET
    params:
      $limit: '100'
- name: workspace_invitees
  endpoint:
    path: /workspace/invitees
    method: GET
    params:
      $limit: '100'
- name: workspace_members
  endpoint:
    path: /workspace/members
    method: GET
    params:
      $limit: '100'
- name: workspace_role_member
  endpoint:
    path: /create_workspace_role_member
    method: POST
- name: workspace_role_permission
  endpoint:
    path: /get_workspace_role_permission
    method: GET
- name: template_container
  endpoint:
    path: /create_template_container
    method: POST
- name: get_institutions
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: '200'
    params: {}
- name: get_folders
  endpoint:
    path: /get/folders
    method: GET
    data_selector: '200'
    params:
      dataset_id: required
- name: add_folder
  endpoint:
    path: /add/folder
    method: POST
    data_selector: '200'
    params:
      dataset_id: required
- name: get_property
  endpoint:
    path: /get/property
    method: GET
    data_selector: '200'
    params:
      dataset_id: required
      property_name: required
- name: updates_property
  endpoint:
    path: /updates/property
    method: PATCH
    data_selector: '200'
    params:
      dataset_id: required
      property_name: required
- name: retrieve_funder
  endpoint:
    path: /retrieve/funder
    method: GET
    data_selector: '200'
    params:
      dataset_id: required
      funder_id: required
- name: delete_funder
  endpoint:
    path: /delete/funder
    method: DELETE
    data_selector: '200'
    params:
      dataset_id: required
      funder_id: required
- name: retrieve_all_funders
  endpoint:
    path: /retrieve/all/funders
    method: GET
    data_selector: '200'
    params:
      dataset_id: required
- name: add_funder
  endpoint:
    path: /add/funder
    method: POST
    data_selector: '200'
    params:
      dataset_id: required
- name: update_funder_property
  endpoint:
    path: /update/funder/property
    method: PATCH
    data_selector: '200'
    params:
      dataset_id: required
      funder_id: required
      property_name: required
- name: get_institution
  endpoint:
    path: /get/institution
    method: GET
    data_selector: '200'
    params:
      dataset_id: required
      institution_id: required
- name: delete_institution
  endpoint:
    path: /delete/institution
    method: DELETE
    data_selector: '200'
    params:
      dataset_id: required
      institution_id: required
- name: template_workspace_container
  endpoint:
    path: /template/workspace/container
    method: POST
- name: template_workspace_metadata
  endpoint:
    path: /template/workspace/metadata
    method: GET
- name: template_workspace_role
  endpoint:
    path: /template/workspace/role
    method: GET
- name: add_institution_to_draft_dataset
  endpoint:
    path: /add_institution_to_draft_dataset
    method: POST
    data_selector: response
    params:
      dataset_id: required
      $context: string
- name: get_metadata_for_entity
  endpoint:
    path: /get_metadata_for_entity
    method: GET
    data_selector: response
    params:
      dataset_id: required
- name: update_metadata_for_entity
  endpoint:
    path: /update_metadata_for_entity
    method: PUT
    data_selector: response
    params:
      dataset_id: required
- name: clear_metadata_for_entity
  endpoint:
    path: /clear_metadata_for_entity
    method: DELETE
    data_selector: response
    params:
      dataset_id: required
- name: audit_events
  endpoint:
    path: /audit_events
    method: GET
    params:
      $sort: string
      $start: integer
      $limit: integer
      $page: integer
- name: dataset_events
  endpoint:
    path: /dataset_events
    method: GET
    params:
      $sort: string
      $start: integer
      $limit: integer
      $page: integer
- name: draft_datasets
  endpoint:
    path: /draft_datasets
    method: GET
- name: public_datasets
  endpoint:
    path: /public_datasets
    method: GET
- name: public_dataset
  endpoint:
    path: /public_dataset
    method: GET
    params:
      dataset_id: string
      $properties: string
- name: public_datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: results
    params:
      limit: '20'
- name: get_related_link
  endpoint:
    path: /datasets/{dataset_id}/related_links/{related_link_id}
    method: GET
    data_selector: results
    params: {}
- name: update_property
  endpoint:
    path: /datasets/{dataset_id}/properties/{property_name}
    method: PUT
    data_selector: results
    params: {}
- name: delete_property
  endpoint:
    path: /datasets/{dataset_id}/properties/{property_name}
    method: DELETE
    data_selector: results
    params: {}
- name: public_datasets
  endpoint:
    path: /public_datasets
    method: GET
    data_selector: records
    params:
      $limit: '100'
      $page: '1'
- name: linked_articles
  endpoint:
    path: /linked_articles
    method: GET
    data_selector: records
    params:
      $limit: '100'
      $page: '1'
- name: featured_sections
  endpoint:
    path: /featured_sections
    method: GET
    data_selector: records
    params:
      $limit: '100'
      $page: '1'
- name: get_institutions
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: institutions
- name: create_moderation
  endpoint:
    path: /create/moderation
    method: POST
    data_selector: moderation
- name: public_dataset
  endpoint:
    path: /datasets/{id}
    method: GET
    data_selector: data
    params:
      version: latest
- name: public_dataset_versions
  endpoint:
    path: /datasets/{id}/versions
    method: GET
    data_selector: data
- name: public_dataset_snapshot
  endpoint:
    path: /datasets/{id}/snapshot
    method: GET
    data_selector: data
    params:
      version: latest
- name: public_dataset_custom_metadata
  endpoint:
    path: /datasets/{id}/custom_metadata
    method: GET
    data_selector: data
    params:
      version: latest
- name: public_dataset_files
  endpoint:
    path: /datasets/{id}/files
    method: GET
    data_selector: data
    params:
      version: latest
- name: public_dataset_file
  endpoint:
    path: /datasets/{id}/files/{file_id}
    method: GET
    data_selector: data
    params:
      version: latest
- name: file_download_url
  endpoint:
    path: /datasets/{id}/files/{file_uuid}/download
    method: GET
    data_selector: data
- name: public_dataset_folders
  endpoint:
    path: /datasets/{id}/folders
    method: GET
    data_selector: data
    params:
      version: latest
- name: public_dataset_folder
  endpoint:
    path: /datasets/{id}/folders/{folder_id}
    method: GET
    data_selector: data
    params:
      version: latest
- name: moderation_activities
  endpoint:
    path: /get/moderation_activities
    method: GET
    data_selector: records
    params: {}
- name: approved_datasets
  endpoint:
    path: /get/approved_datasets
    method: GET
    data_selector: records
    params:
      $limit: 100
- name: rejected_datasets
  endpoint:
    path: /get/rejected_datasets
    method: GET
    data_selector: records
    params:
      $limit: 100
- name: institution_tree
  endpoint:
    path: /get/institution_tree
    method: GET
    data_selector: records
    params: {}
- name: institution_by_id
  endpoint:
    path: /get/institution_by_id
    method: GET
    data_selector: records
    params: {}
- name: institutions
  endpoint:
    path: /institutions
    method: GET
    params:
      limit: 10
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: files_of_a_public_dataset
  endpoint:
    path: /files
    method: GET
    params:
      $limit: 100
- name: file_of_a_public_dataset
  endpoint:
    path: /files/{file_id}
    method: GET
    params: {}
- name: file_download_url_for_a_public_dataset
  endpoint:
    path: /files/{file_uuid}/download
    method: GET
    params: {}
- name: get_licences
  endpoint:
    path: /licences
    method: GET
    params: {}
- name: create_a_licence
  endpoint:
    path: /licences
    method: POST
    params: {}
- name: get_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: GET
    params: {}
- name: update_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: PATCH
    params: {}
- name: delete_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: DELETE
    params: {}
- name: get_a_draft_collection
  endpoint:
    path: /drafts/{collection_id}
    method: GET
    params: {}
- name: delete_a_draft_collection
  endpoint:
    path: /drafts/{collection_id}
    method: DELETE
    params: {}
- name: update_a_draft_collection
  endpoint:
    path: /drafts/{collection_id}
    method: PATCH
    params: {}
- name: draft_collection_contents
  endpoint:
    path: /draft-collections
    method: GET
    data_selector: contents
- name: public_collection
  endpoint:
    path: /public-collections
    method: GET
    data_selector: contents
- name: actor_types
  endpoint:
    path: /actor-types
    method: GET
    data_selector: types
- name: content_states
  endpoint:
    path: /content-states
    method: GET
    data_selector: states
- name: content_types
  endpoint:
    path: /content-types
    method: GET
    data_selector: types
- name: entity_types
  endpoint:
    path: /entity-types
    method: GET
    data_selector: types
- name: draft_dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: draft_datasets
  endpoint:
    path: /draft_datasets
    method: GET
    data_selector: datasets
    params:
      $limit: 100
- name: add_contributor
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors
    method: POST
    data_selector: contributor
- name: Get a workspace container allowed content-type
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/allowed-content-type
    method: GET
- name: Delete a workspace container allowed content-type
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/allowed-content-type
    method: DELETE
- name: Get workspace container allowed content-types
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/allowed-content-types
    method: GET
- name: Create a workspace container allowed content-type
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/allowed-content-type
    method: POST
- name: Delete workspace container allowed content-types
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/allowed-content-types
    method: DELETE
- name: Get workspace container contents
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/contents
    method: GET
- name: Create a workspace container content
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/content
    method: POST
- name: Get a workspace container property
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/property/{property_name}
    method: GET
- name: Update a workspace container property
  endpoint:
    path: /workspace/{workspace_id}/container/{container_id}/property/{property_name}
    method: PUT
- name: Get a workspace content
  endpoint:
    path: /workspace/{workspace_id}/content/{content_id}
    method: GET
- name: Delete a workspace content
  endpoint:
    path: /workspace/{workspace_id}/content/{content_id}
    method: DELETE
- name: Get workspace contents
  endpoint:
    path: /workspace/{workspace_id}/contents
    method: GET
- name: Create a workspace content
  endpoint:
    path: /workspace/{workspace_id}/content
    method: POST
- name: workspace_invitees
  endpoint:
    path: /workspaces/{workspace_id}/invitees
    method: GET
    params:
      $limit: 100
- name: workspace_members
  endpoint:
    path: /workspaces/{workspace_id}/members
    method: GET
    params:
      $limit: 100
- name: update_contributor_property
  endpoint:
    path: /update_contributor_property
    method: PATCH
- name: get_events
  endpoint:
    path: /get_events
    method: GET
- name: get_file
  endpoint:
    path: /get_file
    method: GET
- name: delete_file
  endpoint:
    path: /delete_file
    method: DELETE
- name: get_files
  endpoint:
    path: /get_files
    method: GET
- name: add_file
  endpoint:
    path: /add_file
    method: POST
- name: get_file_contents
  endpoint:
    path: /get_file_contents
    method: GET
- name: get_property
  endpoint:
    path: /get_property
    method: GET
- name: update_property
  endpoint:
    path: /update_property
    method: PATCH
- name: get_folder
  endpoint:
    path: /get_folder
    method: GET
- name: delete_folder
  endpoint:
    path: /delete_folder
    method: DELETE
- name: get_folders
  endpoint:
    path: /get_folders
    method: GET
- name: add_folder
  endpoint:
    path: /add_folder
    method: POST
- name: get_dataset_property
  endpoint:
    path: /get_dataset_property
    method: GET
- name: workspace_metadata
  endpoint:
    path: /workspaces/{workspace_id}/metadata
    method: GET
- name: workspace_role_members
  endpoint:
    path: /workspaces/{workspace_id}/roles/{role_id}/members
    method: GET
- name: get_institutions
  endpoint:
    path: /institutions
    method: GET
- name: create_workspace_role_member
  endpoint:
    path: /create_workspace_role_member
    method: POST
    data_selector: ancestors
    params: {}
- name: get_workspace_role_permission
  endpoint:
    path: /get_workspace_role_permission
    method: GET
    data_selector: permission_id
    params: {}
- name: delete_workspace_role_permission
  endpoint:
    path: /delete_workspace_role_permission
    method: DELETE
    data_selector: permission_id
    params: {}
- name: get_workspace_role_permissions
  endpoint:
    path: /get_workspace_role_permissions
    method: GET
    data_selector: permissions
    params:
      $limit: 100
- name: create_workspace_role_permission
  endpoint:
    path: /create_workspace_role_permission
    method: POST
    data_selector: permission
    params: {}
- name: get_workspace_role_property
  endpoint:
    path: /get_workspace_role_property
    method: GET
    data_selector: property_name
    params: {}
- name: update_workspace_role_property
  endpoint:
    path: /update_workspace_role_property
    method: PUT
    data_selector: property_name
    params: {}
- name: get_template_discovery_details
  endpoint:
    path: /get_template_discovery_details
    method: GET
    data_selector: templates
    params: {}
- name: get_template_container
  endpoint:
    path: /get_template_container
    method: GET
    data_selector: container_id
    params: {}
- name: delete_template_container
  endpoint:
    path: /delete_template_container
    method: DELETE
    data_selector: container_id
    params: {}
- name: get_template_containers
  endpoint:
    path: /get_template_containers
    method: GET
    data_selector: containers
    params:
      $limit: 100
- name: create_template_container
  endpoint:
    path: /create_template_container
    method: POST
    data_selector: name
    params: {}
- name: template_workspace
  endpoint:
    path: /workspaces
    method: GET
- name: template_workspace_container
  endpoint:
    path: /workspaces/containers
    method: GET
- name: get_tokens_for_draft_datasets_related_links
  endpoint:
    path: /get/tokens
    method: GET
    data_selector: tokens
- name: get_tokens_relating_to_draft_datasets_status
  endpoint:
    path: /get/tokens/status
    method: GET
    data_selector: tokens
- name: get_all_versions_of_draft_dataset
  endpoint:
    path: /get/versions/draft
    method: GET
    data_selector: versions
- name: get_public_datasets
  endpoint:
    path: /get/public/datasets
    method: GET
    data_selector: datasets
- name: get_a_public_dataset
  endpoint:
    path: /get/public/dataset
    method: GET
    data_selector: dataset
- name: get_versions_for_public_dataset
  endpoint:
    path: /get/versions/public
    method: GET
    data_selector: versions
- name: get_snapshot_of_public_dataset
  endpoint:
    path: /get/snapshot/public
    method: GET
    data_selector: snapshot
- name: get_custom_metadata_for_public_dataset
  endpoint:
    path: /get/custom_metadata/public
    method: GET
    data_selector: custom_metadata
- name: get_files_of_public_dataset
  endpoint:
    path: /get/files/public
    method: GET
    data_selector: files
- name: get_file_of_public_dataset
  endpoint:
    path: /get/file/public
    method: GET
    data_selector: file
- name: get_file_download_url_for_public_dataset
  endpoint:
    path: /get/file/download
    method: GET
    data_selector: download_url
- name: get_public_dataset_folders
  endpoint:
    path: /get/public/dataset/folders
    method: GET
    data_selector: folders
- name: get_public_dataset_folder
  endpoint:
    path: /get/public/dataset/folder
    method: GET
    data_selector: folder
- name: template_workspace_container
  endpoint:
    path: /create/template/workspace/container
    method: POST
- name: template_workspace_metadata
  endpoint:
    path: /get/template/workspace/metadata
    method: GET
- name: template_workspace_property
  endpoint:
    path: /get/template/workspace/property
    method: GET
- name: template_workspace_role
  endpoint:
    path: /get/template/workspace/role
    method: GET
- name: audit_events
  endpoint:
    path: /audit_events
    method: GET
    params:
      $limit: 100
- name: dataset_events
  endpoint:
    path: /dataset_events
    method: GET
    params:
      $limit: 100
- name: draft_datasets
  endpoint:
    path: /draft_datasets
    method: GET
- name: public_datasets
  endpoint:
    path: /public_datasets
    method: GET
- name: public_dataset
  endpoint:
    path: /public_datasets/{dataset_id}
    method: GET
    params:
      $properties: string
- name: get_files_of_a_public_dataset
  endpoint:
    path: /files
    method: GET
    params:
      version: any
      folder_id: any
      $start: number
      $limit: number
- name: get_file_of_a_public_dataset
  endpoint:
    path: /files/{file_id}
    method: GET
    params:
      version: any
- name: get_file_download_url_for_a_public_dataset
  endpoint:
    path: /files/{file_uuid}/download
    method: GET
    params:
      version: any
- name: get_licences
  endpoint:
    path: /licences
    method: GET
    params:
      $properties: string
- name: create_a_licence
  endpoint:
    path: /licences
    method: POST
    params: {}
- name: get_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: GET
    params: {}
- name: update_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: PATCH
    params: {}
- name: delete_a_licence
  endpoint:
    path: /licences/{licence_id}
    method: DELETE
    params: {}
- name: get_a_draft_collection
  endpoint:
    path: /drafts/{collection_id}
    method: GET
    params:
      $properties: string
- name: institutions
  endpoint:
    path: /institutions
    method: GET
    data_selector: '{}'
- name: article_link
  endpoint:
    path: /link_article
    method: POST
    data_selector: '{}'
- name: moderation
  endpoint:
    path: /moderation
    method: POST
    data_selector: records
- name: datasets_in_moderation
  endpoint:
    path: /datasets_in_moderation
    method: GET
    data_selector: records
- name: delete_workspace_invitee
  endpoint:
    path: /delete_workspace_invitee
    method: DELETE
- name: get_workspace_invitee
  endpoint:
    path: /get_workspace_invitee
    method: GET
- name: delete_workspace_content
  endpoint:
    path: /delete_workspace_content
    method: DELETE
- name: get_workspace_contents
  endpoint:
    path: /get_workspace_contents
    method: GET
- name: create_workspace_content
  endpoint:
    path: /create_workspace_content
    method: POST
- name: get_workspace_container_property
  endpoint:
    path: /get_workspace_container_property
    method: GET
- name: update_workspace_container_property
  endpoint:
    path: /update_workspace_container_property
    method: PUT
- name: get_workspace_events
  endpoint:
    path: /get_workspace_events
    method: GET
- name: Get institution by id
  endpoint:
    path: /institutions/{id}
    method: GET
- name: Get approved datasets
  endpoint:
    path: /institutions
    method: GET
    params:
      $limit: 100
- name: Get rejected datasets
  endpoint:
    path: /institutions
    method: GET
    params:
      $limit: 100
- name: Create moderation approval for a dataset
  endpoint:
    path: /institutions
    method: POST
- name: Create moderation rejection
  endpoint:
    path: /institutions
    method: POST
- name: Get partial institution tree
  endpoint:
    path: /institutions/{id}
    method: GET
- name: Get complete institution trees
  endpoint:
    path: /institutions
    method: GET
- name: List roles
  endpoint:
    path: /institutions
    method: GET
- name: List members for a role
  endpoint:
    path: /institutions
    method: GET
- name: Adds member to a role
  endpoint:
    path: /institutions
    method: POST
- name: Delete a user from a role
  endpoint:
    path: /institutions/{role_name}/{profile_id}
    method: DELETE
- name: institutions
  endpoint:
    path: /institutions
    method: GET
    params:
      limit: '10'
- name: workspace_invitees
  endpoint:
    path: /workspaces/{workspace_id}/invitees
    method: GET
    data_selector: records
    params:
      $start: '0'
      $limit: '100'
- name: workspace_members
  endpoint:
    path: /workspaces/{workspace_id}/members
    method: GET
    data_selector: records
    params:
      $start: '0'
      $limit: '100'
- name: workspace_metadata
  endpoint:
    path: /workspaces/{workspace_id}/metadata
    method: GET
    data_selector: records
    params:
      $start: '0'
      $limit: '100'
- name: data_sources
  endpoint:
    path: /data_sources
    method: GET
    data_selector: data_sources
- name: shared_draft_datasets
  endpoint:
    path: /shared_draft_datasets
    method: GET
    data_selector: datasets
- name: published_data
  endpoint:
    path: /published_data
    method: GET
    data_selector: datasets
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
    params: {}
- name: template_workspace_role
  endpoint:
    path: /create_template_workspace_role
    method: POST
- name: template_workspace_role_permission
  endpoint:
    path: /create_template_workspace_role_permission
    method: POST
- name: audit_events
  endpoint:
    path: /get_audit_events
    method: GET
- name: dataset_events
  endpoint:
    path: /get_dataset_events
    method: GET
- name: draft_datasets
  endpoint:
    path: /get_draft_datasets
    method: GET
- name: public_datasets
  endpoint:
    path: /get_public_datasets
    method: GET
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: results
- name: institutions
  endpoint:
    path: /institutions
    method: GET
    data_selector: records
- name: approved_datasets
  endpoint:
    path: /datasets/approved
    method: GET
    params:
      $start: 0
      $limit: 100
      $page: 1
- name: moderation_activities
  endpoint:
    path: /moderation/activities
    method: GET
- name: draft_dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: get_rejected_datasets
  endpoint:
    path: /get/rejected_datasets
    method: GET
- name: create_moderation_rejection
  endpoint:
    path: /create/moderation/rejection
    method: POST
- name: create_moderation_approval
  endpoint:
    path: /create/moderation/approval
    method: POST
- name: list_roles
  endpoint:
    path: /list/roles
    method: GET
- name: delete_user_from_role
  endpoint:
    path: /delete/user/from/role
    method: DELETE
- name: list_members_for_role
  endpoint:
    path: /list/members/for/role
    method: GET
- name: add_member_to_role
  endpoint:
    path: /add/member/to/role
    method: POST
- name: get_partial_institution_tree
  endpoint:
    path: /get/partial/institution/tree
    method: GET
- name: get_complete_institution_trees
  endpoint:
    path: /get/complete/institution/trees
    method: GET
- name: get_institution_by_id
  endpoint:
    path: /get/institution/by/id
    method: GET
- name: get_institutions
  endpoint:
    path: /get/institutions
    method: GET
- name: draft_datasets
  endpoint:
    path: /draft_datasets
    method: GET
    params:
      $limit: 100
- name: create_draft_dataset
  endpoint:
    path: /draft_datasets
    method: POST
- name: get_article_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/articles/{doi}
    method: GET
- name: delete_article_from_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/articles/{doi}
    method: DELETE
- name: get_articles_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/articles
    method: GET
- name: add_article_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/articles
    method: POST
- name: get_categories_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/categories
    method: GET
- name: add_category_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/categories
    method: POST
- name: get_contributor_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors/{contributor_id}
    method: GET
- name: delete_contributor_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors/{contributor_id}
    method: DELETE
- name: update_contributor_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors/{contributor_id}
    method: PUT
- name: get_contributors_for_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors
    method: GET
- name: add_contributors_to_draft_dataset
  endpoint:
    path: /draft_datasets/{dataset_id}/contributors
    method: POST
- name: firm_level_data
  endpoint:
    path: /path/to/firm_level_data
    method: GET
    data_selector: records
    params:
      filter: inactive status by 2019
      fields: Firm name, registration date, deregistration date, employee size, branch
        status, accounting type, WOCO membership, location
- name: city_level_data
  endpoint:
    path: /path/to/city_level_data
    method: GET
    data_selector: records
    params: {}
- name: draft_dataset_contributor
  endpoint:
    path: /path/to/update/contributor
    method: PATCH
    data_selector: response
    params:
      dataset_id: required
      contributor_id: required
      property_name: required
- name: draft_dataset_events
  endpoint:
    path: /path/to/get/events
    method: GET
    data_selector: response
    params:
      dataset_id: required
- name: draft_dataset_files
  endpoint:
    path: /path/to/get/files
    method: GET
    data_selector: response
    params:
      dataset_id: required
- name: add_file_to_draft_dataset
  endpoint:
    path: /path/to/add/file
    method: POST
    data_selector: response
    params:
      dataset_id: required
- name: delete_file_for_draft_dataset
  endpoint:
    path: /path/to/delete/file
    method: DELETE
    data_selector: response
    params:
      dataset_id: required
      file_id: required
- name: get_folder_for_draft_dataset
  endpoint:
    path: /path/to/get/folder
    method: GET
    data_selector: response
    params:
      dataset_id: required
      folder_id: required
- name: delete_folder_for_draft_dataset
  endpoint:
    path: /path/to/delete/folder
    method: DELETE
    data_selector: response
    params:
      dataset_id: required
      folder_id: required
- name: add_folder_to_draft_dataset
  endpoint:
    path: /path/to/add/folder
    method: POST
    data_selector: response
    params:
      dataset_id: required
- name: institutions
  endpoint:
    path: /institutions
    method: GET
    data_selector: Found institutions
- name: dataset_metadata
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
- name: get_tokens_for_draft_dataset_related_links
  endpoint:
    path: /draft_dataset/related_links
    method: GET
    data_selector: data
- name: get_tokens_relate_to_draft_datasets_status
  endpoint:
    path: /draft_datasets/status
    method: GET
    data_selector: data
- name: get_all_versions_of_a_draft_dataset
  endpoint:
    path: /draft_datasets/versions
    method: GET
    data_selector: data
- name: get_public_datasets
  endpoint:
    path: /public_datasets
    method: GET
    data_selector: data
- name: get_a_public_dataset
  endpoint:
    path: /public_datasets/{id}
    method: GET
    data_selector: data
- name: get_versions_for_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/versions
    method: GET
    data_selector: data
- name: get_snapshot_of_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/snapshot
    method: GET
    data_selector: data
- name: get_custom_metadata_for_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/custom_metadata
    method: GET
    data_selector: data
- name: get_files_of_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/files
    method: GET
    data_selector: data
- name: get_file_of_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/files/{file_id}
    method: GET
    data_selector: data
- name: get_file_download_url_for_a_public_dataset
  endpoint:
    path: /public_datasets/{id}/files/{file_uuid}/download
    method: GET
    data_selector: data
- name: get_public_dataset_folders
  endpoint:
    path: /public_dataset_folders/{id}
    method: GET
    data_selector: data
- name: get_public_dataset_folder
  endpoint:
    path: /public_dataset_folder/{id}/{folder_id}
    method: GET
    data_selector: data
- name: files_of_public_dataset
  endpoint:
    path: /datasets/files
    method: GET
    params:
      $limit: 100
      $start: 0
- name: file_of_public_dataset
  endpoint:
    path: /datasets/files/{file_id}
    method: GET
    params:
      version: any
- name: get_file_download_url
  endpoint:
    path: /datasets/files/{file_uuid}/download
    method: GET
    params:
      version: any
- name: get_licences
  endpoint:
    path: /licences
    method: GET
    params:
      $properties: string
- name: create_licence
  endpoint:
    path: /licences
    method: POST
    params: {}
- name: draft_collection
  endpoint:
    path: /get/draft/collection
    method: GET
- name: public_collection
  endpoint:
    path: /get/public/collection
    method: GET
- name: event-operation-type
  endpoint:
    path: /get/event-operation-type
    method: GET
- name: owner-type
  endpoint:
    path: /get/owner-type
    method: GET
- name: permission
  endpoint:
    path: /get/permission
    method: GET
- name: workspace-type
  endpoint:
    path: /get/workspace-type
    method: GET
- name: my-entitlements-for-workspaces
  endpoint:
    path: /get/my-entitlements-for-workspaces
    method: GET
- name: workspace
  endpoint:
    path: /get/workspace
    method: GET
- name: workspace-container
  endpoint:
    path: /get/workspace-container
    method: GET
- name: workspaces
  endpoint:
    path: /get/workspaces
    method: GET
- name: workspace_container_allowed_content_types
  endpoint:
    path: /workspace/container/allowed/content-types
    method: GET
- name: delete_workspace_invitee
  endpoint:
    path: /workspace/invitee
    method: DELETE
- name: get_workspace_invitee
  endpoint:
    path: /workspace/invitee
    method: GET
- name: workspace_invitees
  endpoint:
    path: /workspaces/{workspace_id}/invitees
    method: GET
    data_selector: invitees
    params:
      $limit: '100'
- name: workspace_members
  endpoint:
    path: /workspaces/{workspace_id}/members
    method: GET
    data_selector: members
    params:
      $limit: '100'
- name: workspace_metadata
  endpoint:
    path: /workspaces/{workspace_id}/metadata
    method: GET
    data_selector: metadata
    params:
      $limit: '100'
- name: update_workspace_property
  endpoint:
    path: /update_workspace_property
    method: POST
- name: get_workspace_role
  endpoint:
    path: /get_workspace_role
    method: GET
- name: delete_workspace_role
  endpoint:
    path: /delete_workspace_role
    method: DELETE
- name: get_workspace_roles
  endpoint:
    path: /get_workspace_roles
    method: GET
- name: create_workspace_role
  endpoint:
    path: /create_workspace_role
    method: POST
- name: get_workspace_role_member
  endpoint:
    path: /get_workspace_role_member
    method: GET
- name: delete_workspace_role_member
  endpoint:
    path: /delete_workspace_role_member
    method: DELETE
- name: get_workspace_role_members
  endpoint:
    path: /get_workspace_role_members
    method: GET
- name: create_workspace_role_member
  endpoint:
    path: /create_workspace_role_member
    method: POST
- name: get_workspace_role_permission
  endpoint:
    path: /get_workspace_role_permission
    method: GET
- name: delete_workspace_role_permission
  endpoint:
    path: /delete_workspace_role_permission
    method: DELETE
- name: get_workspace_role_permissions
  endpoint:
    path: /get_workspace_role_permissions
    method: GET
- name: create_workspace_role_permission
  endpoint:
    path: /create_workspace_role_permission
    method: POST
- name: get_workspace_role_property
  endpoint:
    path: /get_workspace_role_property
    method: GET
- name: update_workspace_role_property
  endpoint:
    path: /update_workspace_role_property
    method: POST
- name: get_template_workspaces
  endpoint:
    path: /get_template_workspaces
    method: GET
    params:
      $limit: 100
- name: template_workspace
  endpoint:
    path: /template_workspace
    method: POST
    data_selector: template_workspace
    params: {}
- name: template_workspace_container
  endpoint:
    path: /template_workspace/container
    method: POST
    data_selector: template_workspace_container
    params: {}
- name: template_workspace_metadata
  endpoint:
    path: /template_workspace/metadata
    method: GET
    data_selector: template_workspace_metadata
    params: {}
- name: template_workspace_roles
  endpoint:
    path: /template_workspace/roles
    method: GET
    data_selector: template_workspace_roles
    params: {}
- name: Get template workspace role permission
  endpoint:
    path: /get/template/workspace/role/permission
    method: GET
- name: Get audit events for an institution
  endpoint:
    path: /get/audit/events/institution
    method: GET
- name: Get dataset events
  endpoint:
    path: /get/dataset/events
    method: GET
- name: Get draft datasets for an institution as csv
  endpoint:
    path: /get/draft/datasets/institution/csv
    method: GET
- name: Get public datasets for an institution as csv
  endpoint:
    path: /get/public/datasets/institution/csv
    method: GET
- name: Get a public dataset for an institution
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Get public datasets for an institution
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Get an article linked to a public dataset
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Delete an article link to a public dataset
  endpoint:
    path: /get/institutions
    method: DELETE
    data_selector: records
    params: {}
- name: List linked articles for a public dataset
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Link a public dataset to an article
  endpoint:
    path: /get/institutions
    method: POST
    data_selector: records
    params: {}
- name: Get article from CrossRef
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Get a property for a public dataset
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Get the dataset storage in bytes
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Delete featured section
  endpoint:
    path: /get/institutions
    method: DELETE
    data_selector: records
    params: {}
- name: Get featured sections
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Create featured section
  endpoint:
    path: /get/institutions
    method: POST
    data_selector: records
    params: {}
- name: Delete featured section content
  endpoint:
    path: /get/institutions
    method: DELETE
    data_selector: records
    params: {}
- name: Get featured section contents
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: Add featured section content
  endpoint:
    path: /get/institutions
    method: POST
    data_selector: records
    params: {}
- name: Update section properties
  endpoint:
    path: /get/institutions
    method: PATCH
    data_selector: records
    params: {}
- name: Get approved datasets
  endpoint:
    path: /datasets/approved
    method: GET
    data_selector: datasets
    params:
      $start: '0'
      $limit: '100'
      $page: '1'
- name: Get datasets in moderation and previously moderated
  endpoint:
    path: /datasets/moderation
    method: GET
    data_selector: datasets
    params:
      $start: '0'
      $limit: '100'
      $page: '1'
- name: get_institutions
  endpoint:
    path: /get/institutions
    method: GET
    data_selector: records
    params: {}
- name: firm_level_data
  endpoint:
    path: /m7gvj97dcg-1.zip
    method: GET
    data_selector: files
    params: {}
notes:
- Digital Commons Data APIs will no longer accept traffic via api.mendeley.com after
  1st October 2024.
- Uses OAuth2
- Uses OAuth2 for authorization
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You can add a zip file. However, its contents cannot be previewed.
- You can add nested folders, branching up to 14 levels deep, from the default root
  folder.
- Datasets must be scientific in nature and consist of research data.
- Draft datasets can be deleted in the web interface or API and your published datasets
  can be deleted by contacting us.
- Ensure long-term data storage
- Mendeley Data supports versioning, making longitudinal studies easier
- Published data is held permanently on Digital Commons Data; if an institutional
  Digital Commons Data repository ceases to operate, the institution’s data will continue
  to be made available by Digital Commons Data.
- Digital Commons Data has received ISO/IEC 27001:2013 certification in respect of
  secure information management practices.
- Uses OpenID Connect (OIDC) which extends OAuth 2.0 for authentication.
- Mendeley Data is a free and secure cloud-based communal repository.
- Uses OAuth2 — requires setup of connected app in api
- Datasets must NOT have already been published, and therefore may not already possess
  a DOI.
- Zipped files preview is not supported.
- You can add nested folders, branching up to 14 levels deep.
- Any updates made to the original source file will NOT synch with a copy that you
  dragged into the dataset.
- Datasets can be licenced under a range of open licenses.
- Published data is held permanently on Digital Commons Data.
- Digital Commons Data APIs will no longer accept traffic via api.mendeley.com after
  1st October 2024
- Authorization via Mendeley OAuth will no longer be supported after this date
- Merge firm records with city-level institutional and infrastructural data from official
  statistical sources.
- Drop duplicate firms and outliers with survival > 60 years.
- Uses OAuth2 with refresh token — requires setup of connected app in Mendeley
- This privacy policy applies to our websites, apps and other services.
- 'We collect information about you in three ways: directly from your input, from
  third-party sources, and through automated technologies.'
- OAuth2 authorization is required for all endpoints.
- Files deposited to Digital Commons Data are stored with Amazon S3, part of Amazon
  Web Services (AWS).
- Automated database backups happen every day whilst online, with a retention period
  currently set to 7 days.
- Uses OAuth2 for authorization.
- 'Published: 17 October 2025'
- 'Primary Source: National Enterprise Credit Information Publicity System of China'
- The Services are provided by Mendeley Limited.
- We may also use your personal information to enhance and improve our products, events
  and services and develop new ones.
- Data is stored with Amazon S3, part of Amazon Web Services (AWS).
- Uses OAuth2 with multiple grant types supported including authorization code and
  refresh token.
errors:
- '400: Hint missing'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - Access token
  - Refresh token
  - Identity token
  - Oauth2
  - OAuth2
  - OauthToken
client:
  base_url: https://api.data.mendeley.com/institutions
  auth:
    type: oauth2
source_metadata: null
