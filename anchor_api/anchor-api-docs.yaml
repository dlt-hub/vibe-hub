resources:
- name: customers
  endpoint:
    path: /reference/post_api-v1-customers
    method: POST
- name: customer_identification
  endpoint:
    path: /reference/kyc-validation_1
    method: POST
- name: documents
  endpoint:
    path: /reference/download-document
    method: GET
- name: next_of_kin
  endpoint:
    path: /reference/create-next-of-kin
    method: POST
- name: payment
  endpoint:
    path: /reference/fetch-virtual-nuban-payment-details
    method: GET
- name: deposit_accounts
  endpoint:
    path: /reference/post_api-v1-accounts
    method: POST
- name: bulk_transfers
  endpoint:
    path: /reference/bulk-transfer
    method: POST
- name: transactions
  endpoint:
    path: /reference/fetch-transaction
    method: GET
- name: savings
  endpoint:
    path: /reference/list-savings
    method: GET
- name: reports
  endpoint:
    path: /reference/list-reports
    method: GET
- name: webhooks
  endpoint:
    path: /reference/create-a-webhook
    method: POST
- name: events
  endpoint:
    path: /reference/list-events
    method: GET
- name: event
  endpoint:
    path: /event/{id}
    method: GET
    data_selector: data
    params:
      include: customer,account
- name: customers
  endpoint:
    path: /reference/post_api-v1-customers
    method: POST
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /reference/fetch-virtual-nuban-payment-details
    method: GET
    data_selector: payments
    params: {}
- name: transfers
  endpoint:
    path: /reference/post_api-v1-transfers
    method: POST
    data_selector: records
    params: {}
- name: Customers
  endpoint:
    path: /reference/post_api-v1-customers
    method: POST
- name: Payment
  endpoint:
    path: /reference/fetch-virtual-nuban-payment-details
    method: GET
- name: Deposit Accounts
  endpoint:
    path: /reference/post_api-v1-accounts
    method: POST
- name: Transfers
  endpoint:
    path: /reference/post_api-v1-transfers
    method: POST
- name: Bills Payment
  endpoint:
    path: /reference/post_api-v1-bills
    method: POST
- name: Webhooks
  endpoint:
    path: /reference/create-a-webhook
    method: POST
- name: Transfers
  endpoint:
    path: /reference/post_api-v1-transfers
    method: POST
    data_selector: null
    params: {}
- name: VirtualNubans
  endpoint:
    path: /reference/fetch-virtual-nuban-payment-details
    method: GET
    data_selector: null
    params: {}
- name: BulkTransfer
  endpoint:
    path: /reference/bulk-transfer
    method: POST
    data_selector: null
    params: {}
- name: customer
  endpoint:
    path: /reference/post_api-v1-customers
    method: POST
    data_selector: metadata
- name: document
  endpoint:
    path: /reference/download-document
    method: GET
    data_selector: metadata
- name: webhook
  endpoint:
    path: /reference/create-a-webhook
    method: POST
- name: event
  endpoint:
    path: /reference/list-events
    method: GET
- name: customer
  endpoint:
    path: /api/v1/customers/
    method: POST
    data_selector: data
- name: deposit_account
  endpoint:
    path: /api/v1/accounts
    method: POST
    data_selector: data
- name: verify_account
  endpoint:
    path: /api/v1/payments/verify-account/:bankCode/:accountNumber
    method: GET
    data_selector: data
- name: counterparty
  endpoint:
    path: /api/v1/counterparties
    method: POST
    data_selector: data
- name: list_banks
  endpoint:
    path: /api/v1/banks
    method: GET
    data_selector: data
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: data
    params: {}
- name: transfer_status
  endpoint:
    path: /api/v1/transfers/status
    method: POST
    data_selector: data
    params: {}
- name: sub_account
  endpoint:
    path: /api/v1/sub-accounts
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params:
      accountType: FBO
- name: create_customer
  endpoint:
    path: /api/v1/customers
    method: POST
- name: fetch_customer
  endpoint:
    path: /fetch-customer
    method: GET
- name: list_all_customers
  endpoint:
    path: /list-all-customer
    method: GET
- name: delete_customer
  endpoint:
    path: /delete-customer
    method: DELETE
- name: update_customer
  endpoint:
    path: /put_api-v1-customers-update-customerid
    method: PUT
- name: search_customers
  endpoint:
    path: /search-customers
    method: GET
- name: update_customer
  endpoint:
    path: /api/v1/customers/update/{customerId}
    method: PUT
- name: customer
  endpoint:
    path: /api/v1/customers/{customerId}
    method: GET
    data_selector: response
- name: update_customer
  endpoint:
    path: /api/v1/customers/update/{customerId}
    method: PUT
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
- name: customer
  endpoint:
    path: /api/v1/customers/{customerId}
    method: GET
- name: customers
  endpoint:
    path: /customers/{customerId}
    method: DELETE
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
    params: {}
- name: search_customers
  endpoint:
    path: /api/v1/customers/search
    method: GET
- name: customer
  endpoint:
    path: /{customerId}
    method: DELETE
- name: officers_requirement
  endpoint:
    path: /api/v1/customers/{customerId}/officers-requirement
    method: GET
    data_selector: response
    params: {}
- name: search_customers
  endpoint:
    path: /api/v1/customers/search
    method: GET
- name: kyc_validation_business_customer
  endpoint:
    path: /api/v1/customers/{customerId}/verification/business
    method: POST
    data_selector: ''
- name: Kyc Validation for Individual Customer
  endpoint:
    path: /api/v1/customers/{customerId}/verification/individual
    method: POST
- name: officers_requirement
  endpoint:
    path: /api/v1/customers/{customerId}/officers-requirement
    method: GET
    data_selector: response
- name: kyc_validation_business
  endpoint:
    path: /api/v1/customers/{customerId}/verification/business
    method: POST
- name: Download Document
  endpoint:
    path: /{customerId}/{documentId}
    method: GET
- name: fetch_document
  endpoint:
    path: /api/v1/documents/{customerId}/{documentId}
    method: GET
- name: download_document
  endpoint:
    path: /download-document/{customerId}/{documentId}
    method: GET
- name: fetch_document
  endpoint:
    path: /fetch-document
    method: GET
- name: upload_document
  endpoint:
    path: /upload-document
    method: POST
- name: fetch_all_documents
  endpoint:
    path: /fetch-all-documents
    method: GET
- name: fetch_all_documents
  endpoint:
    path: /documents/{customerId}
    method: GET
    data_selector: data
    params: {}
- name: fetch_document
  endpoint:
    path: /api/v1/documents/{customerId}/{documentId}
    method: GET
- name: next_of_kin
  endpoint:
    path: /individuals/{customerId}/next-of-kin
    method: POST
- name: upload_document
  endpoint:
    path: /api/v1/documents/upload-document/{customerId}/{documentId}
    method: POST
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: PATCH
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: GET
    data_selector: response
- name: fetch_all_documents
  endpoint:
    path: /fetch-all-documents
    method: GET
    data_selector: data
    params:
      include: ''
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin
    method: GET
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin
    method: POST
- name: delete_next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: DELETE
- name: payment
  endpoint:
    path: /api/v1/payments/{paymentId}
    method: GET
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: PATCH
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
- name: next_of_kin
  endpoint:
    path: /individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: GET
    data_selector: response
- name: verify_incoming_payment
  endpoint:
    path: /api/v1/payments/requery/{customerReference}
    method: GET
    data_selector: response
- name: next_of_kin
  endpoint:
    path: /api/v1/individuals/{customerId}/next-of-kin
    method: GET
    data_selector: records
- name: create_deposit_account
  endpoint:
    path: /api/v1/accounts
    method: POST
- name: next_of_kin
  endpoint:
    path: /individuals/{customerId}/next-of-kin/{nextOfKinId}
    method: DELETE
- name: update_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: PATCH
- name: payments
  endpoint:
    path: /payments/{paymentId}
    method: GET
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
- name: balance
  endpoint:
    path: /api/v1/accounts/balance/{accountId}
    method: GET
    data_selector: data
    params: {}
- name: deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: GET
    data_selector: response
- name: Verify Incoming Payment
  endpoint:
    path: /api/v1/payments/requery/{customerReference}
    method: GET
    data_selector: response
    params: {}
- name: deposit_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
- name: deposit_account
  endpoint:
    path: /api/v1/accounts
    method: POST
- name: freeze_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}/freeze
    method: POST
    data_selector: account.frozen
    params: {}
- name: update_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: PATCH
- name: unfreeze_deposit_account
  endpoint:
    path: /api/v1/accounts/unfreeze
    method: POST
- name: balance
  endpoint:
    path: /api/v1/accounts/balance/{accountId}
    method: GET
    data_selector: data
    params: {}
- name: root_accounts
  endpoint:
    path: /api/v1/accounts/root-accounts
    method: GET
- name: deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: GET
- name: custom_fee
  endpoint:
    path: /api/v1/fee/custom-fee
    method: POST
- name: deposit_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: reverse_fee
  endpoint:
    path: /fee/reverse/{feeId}
    method: POST
- name: freeze_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}/freeze
    method: POST
- name: unfreeze_deposit_account
  endpoint:
    path: /api/v1/accounts/unfreeze
    method: POST
- name: fees
  endpoint:
    path: /fee/charged-by-organization
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: list_root_accounts
  endpoint:
    path: /api/v1/accounts/root-accounts
    method: GET
    data_selector: data
    params: {}
- name: fee
  endpoint:
    path: /api/v1/fee/charged-by-organization/{feeId}
    method: GET
    data_selector: response
- name: statements
  endpoint:
    path: /api/v1/statements
    method: POST
- name: custom_fee
  endpoint:
    path: /api/v1/fee/custom-fee
    method: POST
- name: statement
  endpoint:
    path: /api/v1/statements/{statementId}
    method: GET
    data_selector: records
- name: reverse_fee
  endpoint:
    path: /api/v1/fee/reverse/{feeId}
    method: POST
- name: statements
  endpoint:
    path: /api/v1/statements
    method: GET
- name: download_statement
  endpoint:
    path: /api/v1/statements/download/{statementId}
    method: GET
- name: fees
  endpoint:
    path: /fee/charged-by-organization
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
- name: fee
  endpoint:
    path: /api/v1/fee/charged-by-organization/{feeId}
    method: GET
    data_selector: response
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
- name: statements
  endpoint:
    path: /api/v1/statements
    method: POST
- name: statement
  endpoint:
    path: /api/v1/statements/{statementId}
    method: GET
- name: transfer
  endpoint:
    path: /api/v1/transfers/{transferId}
    method: GET
- name: statements
  endpoint:
    path: /api/v1/statements
    method: GET
    data_selector: records
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: GET
- name: download_statement
  endpoint:
    path: /api/v1/statements/download/{statementId}
    method: GET
- name: counterparty
  endpoint:
    path: /api/v1/counterparties
    method: POST
- name: counterparty
  endpoint:
    path: /api/v1/counterparties/{counterPartyId}
    method: PATCH
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
- name: counterparty
  endpoint:
    path: /counterparties/{counterPartyId}
    method: GET
    data_selector: response
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
- name: transfer
  endpoint:
    path: /{transferId}
    method: GET
- name: counterparties
  endpoint:
    path: /fetchcounterparties
    method: GET
    data_selector: data
    params:
      page: 0
      size: 20
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: GET
- name: counterparty
  endpoint:
    path: /api/v1/counterparties/{counterPartyId}
    method: DELETE
    data_selector: response
- name: counterparty
  endpoint:
    path: /api/v1/counterparties
    method: POST
- name: verify_account_number
  endpoint:
    path: /api/v1/payments/verify-account/{bankIdOrBankCode}/{accountNumber}
    method: GET
    data_selector: response
- name: counterparty
  endpoint:
    path: /api/v1/counterparties/{counterPartyId}
    method: PATCH
- name: banks
  endpoint:
    path: /api/v1/banks
    method: GET
    data_selector: records
- name: billers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
- name: counterparty
  endpoint:
    path: /counterparties/{counterPartyId}
    method: GET
    data_selector: response
- name: biller_products
  endpoint:
    path: /bills/billers/{billerId}/products
    method: GET
- name: counterparties
  endpoint:
    path: /fetchcounterparties
    method: GET
    data_selector: data
    params: {}
- name: customer_validation
  endpoint:
    path: /bills/customer-validation/{productSlug}/{customerId}
    method: GET
    data_selector: response
- name: bills_payment
  endpoint:
    path: /api/v1/bills
    method: POST
- name: verify_account_number
  endpoint:
    path: /api/v1/payments/verify-account/{bankIdOrBankCode}/{accountNumber}
    method: GET
    data_selector: response
- name: bill_payment
  endpoint:
    path: /{billPaymentId}
    method: GET
    data_selector: response
    params: {}
- name: banks
  endpoint:
    path: /api/v1/banks
    method: GET
- name: list_bills_payment
  endpoint:
    path: /api/v1/bills
    method: GET
- name: billers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk
    method: POST
    data_selector: null
    params: {}
- name: biller_products
  endpoint:
    path: /bills/billers/{billerId}/products
    method: GET
    data_selector: products
    params: {}
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk/{bulkTransferId}
    method: GET
- name: verify_customer_details
  endpoint:
    path: /api/v1/bills/customer-validation/{productSlug}/{customerId}
    method: GET
    data_selector: ''
- name: counterparties
  endpoint:
    path: /api/v1/counterparties/bulk
    method: POST
- name: bills_payment
  endpoint:
    path: /api/v1/bills
    method: POST
- name: verify_account
  endpoint:
    path: /api/v1/payments/verify-account/bulk
    method: POST
- name: sub_account
  endpoint:
    path: /api/v1/sub-accounts
    method: POST
    data_selector: null
    params: {}
- name: bill_payment
  endpoint:
    path: /bills/{billPaymentId}
    method: GET
    data_selector: details
    params: {}
- name: list_bills_payment
  endpoint:
    path: /api/v1/bills
    method: GET
- name: sub_account_balance
  endpoint:
    path: /api/v1/sub-accounts/balance/{subAccountId}
    method: GET
    data_selector: response
- name: sub_account
  endpoint:
    path: /sub-accounts/{subAccountId}
    method: GET
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk
    method: POST
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk/{bulkTransferId}
    method: GET
    data_selector: ''
- name: counterparties_bulk
  endpoint:
    path: /api/v1/counterparties/bulk
    method: POST
- name: sub_account
  endpoint:
    path: /api/v1/sub-accounts/{subAccountId}
    method: PATCH
    data_selector: data
    params: {}
- name: sub_account
  endpoint:
    path: /list-subaccount
    method: GET
    params:
      page: 0
- name: bulk_verify_account_numbers
  endpoint:
    path: /api/v1/payments/verify-account/bulk
    method: POST
- name: transactions
  endpoint:
    path: /api/v1/transactions/{transactionId}
    method: GET
- name: sub_account
  endpoint:
    path: /api/v1/sub-accounts
    method: POST
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
- name: sub_account_balance
  endpoint:
    path: /api/v1/sub-accounts/balance/{subAccountId}
    method: GET
    data_selector: balances
    params: {}
- name: sub_account_transactions
  endpoint:
    path: /api/v1/sub-accounts/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: sub_account
  endpoint:
    path: /api/v1/sub-accounts/{subAccountId}
    method: GET
    data_selector: ''
    params: {}
- name: savings
  endpoint:
    path: /api/v1/savings
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: sub_account
  endpoint:
    path: /sub-accounts/{subAccountId}
    method: PATCH
    data_selector: data
    params: {}
- name: savings
  endpoint:
    path: /api/v1/savings
    method: POST
- name: list_savings
  endpoint:
    path: /api/v1/savings
    method: GET
- name: create_withdrawal
  endpoint:
    path: /api/v1/withdrawal
    method: POST
- name: fetch_a_savings
  endpoint:
    path: /api/v1/savings
    method: GET
- name: rollover_a_savings
  endpoint:
    path: /api/v1/savings
    method: POST
- name: SubAccount
  endpoint:
    path: /sub-accounts
    method: GET
    data_selector: data
    params:
      filter: {}
      page: 0
      size: 20
- name: transaction
  endpoint:
    path: /api/v1/transactions/{transactionId}
    method: GET
- name: withdrawal
  endpoint:
    path: /savings/withdrawal
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: withdrawal
  endpoint:
    path: /api/v1/savings/withdrawal
    method: POST
- name: sub_account_transactions
  endpoint:
    path: /sub-accounts/transactions
    method: GET
    data_selector: transactions
- name: savings
  endpoint:
    path: /savings
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: savings
  endpoint:
    path: /api/v1/savings/{savingsId}
    method: GET
    data_selector: data
- name: savings_withdrawal
  endpoint:
    path: /api/v1/savings/{savingsId}/withdrawal
    method: GET
    data_selector: data
- name: savings
  endpoint:
    path: /api/v1/savings
    method: POST
    data_selector: data
- name: withdrawal
  endpoint:
    path: /api/v1/savings/withdrawal/{withdrawalId}
    method: GET
    data_selector: data
    params: {}
- name: withdrawal
  endpoint:
    path: /savings/withdrawal
    method: GET
    data_selector: data
    params:
      filter: object
      page: int32
      size: int32
      sort: array of strings
      include: string
- name: Withdrawal
  endpoint:
    path: /reference/withdrawal
    method: GET
- name: Fetch a Withdrawal
  endpoint:
    path: /reference/fetch-a-withdrawal
    method: GET
- name: List Withdrawal
  endpoint:
    path: /reference/list-withdrawal
    method: GET
- name: Create a Withdrawal
  endpoint:
    path: /reference/create-a-withdrawal
    method: POST
- name: deposit
  endpoint:
    path: /savings/deposit
    method: GET
    data_selector: data
    params:
      page: 0
      size: 20
- name: withdrawal
  endpoint:
    path: /api/v1/savings/withdrawal
    method: POST
    data_selector: data
- name: deposit
  endpoint:
    path: /api/v1/savings/deposit
    method: POST
- name: savings
  endpoint:
    path: /api/v1/savings/{savingsId}
    method: GET
- name: savings_withdrawal
  endpoint:
    path: /api/v1/savings/{savingsId}/withdrawal
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /{depositId}
    method: GET
    data_selector: data
    params: {}
- name: withdrawal
  endpoint:
    path: /{withdrawalId}
    method: GET
    data_selector: data
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
- name: withdrawal
  endpoint:
    path: /reference/withdrawal
    method: GET
- name: create_report
  endpoint:
    path: /api/v1/reports
    method: POST
- name: deposit
  endpoint:
    path: /savings/deposit
    method: GET
    data_selector: data
    params: {}
- name: report
  endpoint:
    path: /reports/{reportId}
    method: GET
- name: download_report
  endpoint:
    path: /download/{reportId}
    method: GET
    data_selector: data
- name: deposit
  endpoint:
    path: /savings/deposit/{depositId}
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params:
      page: '0'
      size: '20'
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: GET
    data_selector: data
- name: create_report
  endpoint:
    path: /reports
    method: POST
    data_selector: data
- name: webhook
  endpoint:
    path: /api/v1/webhooks/verify/{webhookId}
    method: POST
    data_selector: data
    params: {}
- name: report
  endpoint:
    path: /{reportId}
    method: GET
- name: webhooks
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: data
    params:
      page: '0'
      size: '20'
- name: download_report
  endpoint:
    path: /{reportId}
    method: GET
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/v1/webhooks
    method: POST
    data_selector: data
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: PATCH
    data_selector: data
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      page: 0
      size: 20
- name: webhook
  endpoint:
    path: /api/v1/webhooks/verify/{webhookId}
    method: POST
    data_selector: data
- name: fetch_event
  endpoint:
    path: /api/v1/events/{eventId}
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: data
- name: event_types
  endpoint:
    path: /api/v1/events/event-types
    method: GET
    data_selector: events
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: DELETE
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: PATCH
- name: IndividualCustomer
  endpoint:
    path: /api/v1/individual-customers
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      page: 0
      size: 20
- name: customers
  endpoint:
    path: /api/v1/customers
    method: POST
    data_selector: data
- name: fetch_event
  endpoint:
    path: /api/v1/events/{eventId}
    method: GET
- name: customer_verification
  endpoint:
    path: /api/v1/customers/customers/{customerId}/verification/individual
    method: POST
- name: event_types
  endpoint:
    path: /api/v1/events/event-types
    method: GET
    data_selector: records
- name: business_customer
  endpoint:
    path: /business_customers
    method: GET
    data_selector: data
- name: business_customer
  endpoint:
    path: /api/v1/customers
    method: POST
    data_selector: data
- name: countries
  endpoint:
    path: /api/v1/countries
    method: GET
    data_selector: countries
    params: {}
- name: countries_by_code
  endpoint:
    path: /api/v1/countries
    method: GET
    data_selector: countries
    params:
      countryCode: NG
- name: states_in_country
  endpoint:
    path: /api/v1/countries/NG/states
    method: GET
    data_selector: states
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: POST
    data_selector: data
- name: trigger_kyb
  endpoint:
    path: /api/v1/customers/{customerId}/verification/business
    method: POST
    data_selector: data
    params: {}
- name: fetch_documents
  endpoint:
    path: /api/v1/documents/{customerId}
    method: GET
    data_selector: data
    params: {}
- name: upload_document
  endpoint:
    path: /api/v1/documents/upload-document/{customerId}/{documentId}
    method: POST
    data_selector: data
    params: {}
- name: business_officer
  endpoint:
    path: /api/v1/businesses/:businessId/officers
    method: POST
    data_selector: data
- name: update_business_officer
  endpoint:
    path: /api/v1/businesses/:businessid/officers/:officerid
    method: PATCH
    data_selector: data
- name: delete_business_officer
  endpoint:
    path: /api/v1/businesses/:businessId/officers/:officerId
    method: DELETE
- name: business_customer
  endpoint:
    path: /api/v1/customers
    method: POST
    data_selector: data
    params: {}
- name: create_deposit_account
  endpoint:
    path: /api/v1/accounts
    method: POST
    data_selector: data
    params: {}
- name: countries
  endpoint:
    path: /api/v1/countries
    method: GET
    data_selector: records
- name: countries_by_code
  endpoint:
    path: /api/v1/countries
    method: GET
    data_selector: records
    params:
      countryCode: NG
- name: states_in_country
  endpoint:
    path: /api/v1/countries/NG/states
    method: GET
    data_selector: records
- name: account_numbers
  endpoint:
    path: /api/v1/account-numbers
    method: GET
    data_selector: data
- name: deposit_account
  endpoint:
    path: /api/v1/accounts/accountId
    method: GET
    data_selector: data
    params:
      include: AccountNumber
- name: inbound_transfer
  endpoint:
    path: /api/v1/inbound-transfers/{inboundTransferId}
    method: GET
    data_selector: data
- name: deposit_account_balance
  endpoint:
    path: /api/v1/accounts/balance/{accountId}
    method: GET
    data_selector: data
- name: trigger_kyb
  endpoint:
    path: /api/v1/customers/{customerId}/verification/business
    method: POST
    data_selector: data
    params: {}
- name: fetch_documents
  endpoint:
    path: /api/v1/documents/{customerId}
    method: GET
    data_selector: data
    params: {}
- name: upload_document
  endpoint:
    path: /api/v1/documents/upload-document/{customerId}/{documentId}
    method: POST
    data_selector: data
    params: {}
- name: freeze_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}/freeze
    method: POST
- name: unfreeze_deposit_account
  endpoint:
    path: /api/v1/accounts/unfreeze
    method: POST
- name: update_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: PATCH
- name: business_officer
  endpoint:
    path: /api/v1/businesses/:businessId/officers
    method: POST
    data_selector: data
    params: {}
- name: deposit_account
  endpoint:
    path: /api/deposit/accounts
    method: POST
    data_selector: data
    params: {}
- name: reserved_account
  endpoint:
    path: /pay/reserved-account
    method: POST
    data_selector: data
    params: {}
- name: payin
  endpoint:
    path: /payin.received
    method: POST
    data_selector: attributes
    params: {}
- name: create_deposit_account
  endpoint:
    path: /api/v1/accounts
    method: POST
    data_selector: data
    params: {}
- name: account_number
  endpoint:
    path: /api/v1/account-numbers
    method: GET
    data_selector: data
    params: {}
- name: deposit_account
  endpoint:
    path: /api/v1/accounts/accountId
    method: GET
    data_selector: data
    params:
      include: AccountNumber
- name: inbound_transfer
  endpoint:
    path: /api/v1/inbound-transfers/{inboundTransferId}
    method: GET
    data_selector: data
    params: {}
- name: counterparty
  endpoint:
    path: /api/v1/counterparties
    method: POST
    data_selector: data
    params: {}
- name: list_banks
  endpoint:
    path: /api/v1/banks
    method: GET
    data_selector: data
    params: {}
- name: verify_account
  endpoint:
    path: /api/v1/payments/verify-account/{bankIdOrBankCode}/{accountNumber}
    method: GET
    data_selector: data
    params: {}
- name: initiate_transfer
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: data
    params: {}
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
    data_selector: data
    params: {}
- name: deposit_account_balance
  endpoint:
    path: /api/v1/accounts/balance/{accountId}
    method: GET
    data_selector: data
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: data
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
    data_selector: data
- name: freeze_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}/freeze
    method: POST
- name: unfreeze_deposit_account
  endpoint:
    path: /api/v1/accounts/unfreeze
    method: POST
- name: update_deposit_account
  endpoint:
    path: /api/v1/accounts/{accountId}
    method: PATCH
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk
    method: POST
    data_selector: data
    params: {}
- name: fetch_bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk/{bulkTransferId}
    method: GET
    data_selector: data
    params: {}
- name: reserved_account
  endpoint:
    path: /pay/reserved-account
    method: POST
    data_selector: data
    params: {}
- name: payin
  endpoint:
    path: /payin.received
    method: GET
    data_selector: attributes
    params: {}
- name: data_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: data
- name: provider_details
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: initiate_payment
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
- name: counterparty
  endpoint:
    path: /api/v1/counterparties
    method: POST
    data_selector: data
    params: {}
- name: verify_account
  endpoint:
    path: /api/v1/payments/verify-account/{bankIdOrBankCode}/{accountNumber}
    method: GET
    data_selector: data
    params: {}
- name: list_banks
  endpoint:
    path: /api/v1/banks
    method: GET
    data_selector: data
    params: {}
- name: initiate_transfer
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: data
    params: {}
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
    data_selector: data
    params: {}
- name: airtime_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: airtime
- name: biller_products
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: initiate_airtime_purchase
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
- name: transfers
  endpoint:
    path: /api/v1/transfers
    method: POST
    data_selector: data
    params: {}
- name: verify_transfer
  endpoint:
    path: /api/v1/transfers/verify/{transferId}
    method: GET
- name: bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk
    method: POST
    data_selector: data
    params: {}
- name: fetch_bulk_transfer
  endpoint:
    path: /api/v1/transfers/bulk/{bulkTransferId}
    method: GET
    data_selector: data
    params: {}
- name: electricity_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: electricity
- name: disco_products
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: customer_validation
  endpoint:
    path: /api/v1/bills/customer-validation/:billprovider_slug/:meterAccountNumber
    method: GET
    data_selector: data
- name: bill_payment
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
- name: bills.initiated
  endpoint:
    path: /webhook/bills.initiated
    method: POST
    data_selector: data
- name: bills.successful
  endpoint:
    path: /webhook/bills.successful
    method: POST
    data_selector: data
- name: bills.failed
  endpoint:
    path: /webhook/bills.failed
    method: POST
    data_selector: data
- name: data_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: data
- name: provider_details
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
    params: {}
- name: initiate_bill_payment
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
    params: {}
- name: cable_tv_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: television
- name: provider_products
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: customer_validation
  endpoint:
    path: /api/v1/bills/customer-validation/:billprovider_slug/:smartCardNumber
    method: GET
    data_selector: data
- name: bills
  endpoint:
    path: /api/v1/bills
    method: GET
    data_selector: data
    params: {}
- name: bills_initiated
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
    params: {}
- name: bills_successful
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
    params: {}
- name: airtime_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: airtime
- name: airtime_provider_details
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: initiate_airtime_purchase
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
- name: webhook_event
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: data
- name: webhook
  endpoint:
    path: /api/v1/webhooks
    method: POST
    data_selector: data.attributes
    params: {}
- name: electricity_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: electricity
- name: biller_products
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: customer_validation
  endpoint:
    path: /api/v1/bills/customer-validation/:billprovider_slug/:meterAccountNumber
    method: GET
    data_selector: data
- name: make_payment
  endpoint:
    path: /api/v1/bills
    method: POST
    data_selector: data
- name: bills.initiated
  endpoint:
    path: /webhook/bills.initiated
    method: POST
    data_selector: data
- name: bills.successful
  endpoint:
    path: /webhook/bills.successful
    method: POST
    data_selector: data
- name: bills.failed
  endpoint:
    path: /webhook/bills.failed
    method: POST
    data_selector: data
- name: cable_tv_providers
  endpoint:
    path: /api/v1/bills/billers
    method: GET
    data_selector: data
    params:
      category: television
- name: provider_products
  endpoint:
    path: /api/v1/bills/billers/{billerId}/products
    method: GET
    data_selector: data
- name: customer_validation
  endpoint:
    path: /api/v1/bills/customer-validation/:billprovider_slug/:smartCardNumber
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: data
    params: {}
- name: fetch_webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: GET
    data_selector: data
    params: {}
- name: delete_webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: DELETE
    data_selector: data
    params: {}
- name: resend_webhook
  endpoint:
    path: /api/v1/webhooks/verify/{webhookId}
    method: POST
    data_selector: data
    params: {}
- name: bills
  endpoint:
    path: /api/v1/bills
    method: GET
    data_selector: data
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks/events
    method: POST
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/webhooks
    method: POST
    data_selector: data.attributes
    params: {}
- name: webhook_list
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: data
- name: fetch_webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: GET
    data_selector: data
- name: delete_webhook
  endpoint:
    path: /api/v1/webhooks/{webhookId}
    method: DELETE
    data_selector: data
- name: resend_webhook_event
  endpoint:
    path: /api/v1/webhooks/verify/{webhookId}
    method: POST
    data_selector: data
- name: customer.created
  endpoint:
    path: /events/customer.created
    method: GET
    data_selector: records
- name: customer.updated
  endpoint:
    path: /events/customer.updated
    method: GET
    data_selector: records
- name: virtualNuban.created
  endpoint:
    path: /events/virtualNuban.created
    method: GET
    data_selector: records
- name: virtualNuban.closed
  endpoint:
    path: /events/virtualNuban.closed
    method: GET
    data_selector: records
- name: account.opened
  endpoint:
    path: /events/account.opened
    method: GET
    data_selector: records
- name: account.closed
  endpoint:
    path: /events/account.closed
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: data
- name: payment_details
  endpoint:
    path: /api/v1/payments/{paymentId}
    method: GET
    data_selector: data
- name: customer.created
  endpoint:
    path: /events/customer.created
    method: GET
    data_selector: event
    params: {}
- name: customer.updated
  endpoint:
    path: /events/customer.updated
    method: GET
    data_selector: event
    params: {}
- name: virtualNuban.created
  endpoint:
    path: /events/virtualNuban.created
    method: GET
    data_selector: event
    params: {}
- name: virtualNuban.closed
  endpoint:
    path: /events/virtualNuban.closed
    method: GET
    data_selector: event
    params: {}
- name: virtualNuban.creation.failed
  endpoint:
    path: /events/virtualNuban.creation.failed
    method: GET
    data_selector: event
    params: {}
- name: account.opened
  endpoint:
    path: /events/account.opened
    method: GET
    data_selector: event
    params: {}
- name: account.closed
  endpoint:
    path: /events/account.closed
    method: GET
    data_selector: event
    params: {}
- name: account.frozen
  endpoint:
    path: /events/account.frozen
    method: GET
    data_selector: event
    params: {}
- name: account.unfrozen
  endpoint:
    path: /events/account.unfrozen
    method: GET
    data_selector: event
    params: {}
- name: account.creation.failed
  endpoint:
    path: /events/account.creation.failed
    method: GET
    data_selector: event
    params: {}
- name: book.transfer.initiated
  endpoint:
    path: /events/book.transfer.initiated
    method: GET
    data_selector: event
    params: {}
- name: book.transfer.failed
  endpoint:
    path: /events/book.transfer.failed
    method: GET
    data_selector: event
    params: {}
- name: book.transfer.successful
  endpoint:
    path: /events/book.transfer.successful
    method: GET
    data_selector: event
    params: {}
- name: nip.transfer.initiated
  endpoint:
    path: /events/nip.transfer.initiated
    method: GET
    data_selector: event
    params: {}
- name: nip.transfer.failed
  endpoint:
    path: /events/nip.transfer.failed
    method: GET
    data_selector: event
    params: {}
- name: nip.transfer.successful
  endpoint:
    path: /events/nip.transfer.successful
    method: GET
    data_selector: event
    params: {}
- name: nip.incomingTransfer.received
  endpoint:
    path: /events/nip.incomingTransfer.received
    method: GET
    data_selector: event
    params: {}
- name: document.approved
  endpoint:
    path: /events/document.approved
    method: GET
    data_selector: event
    params: {}
- name: document.rejected
  endpoint:
    path: /events/document.rejected
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.approved
  endpoint:
    path: /events/customer.identification.approved
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.manualReview
  endpoint:
    path: /events/customer.identification.manualReview
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.error
  endpoint:
    path: /events/customer.identification.error
    method: GET
    data_selector: event
    params: {}
- name: payment.received
  endpoint:
    path: /events/payment.received
    method: GET
    data_selector: event
    params: {}
- name: payment.settled
  endpoint:
    path: /events/payment.settled
    method: GET
    data_selector: event
    params: {}
- name: bulkTransfer.completed
  endpoint:
    path: /events/bulkTransfer.completed
    method: GET
    data_selector: event
    params: {}
- name: bulkTransfer.partiallyCompleted
  endpoint:
    path: /events/bulkTransfer.partiallyCompleted
    method: GET
    data_selector: event
    params: {}
- name: bulkTransfer.failed
  endpoint:
    path: /events/bulkTransfer.failed
    method: GET
    data_selector: event
    params: {}
- name: bulkTransfer.started
  endpoint:
    path: /events/bulkTransfer.started
    method: GET
    data_selector: event
    params: {}
- name: nip.transfer.reversed
  endpoint:
    path: /events/nip.transfer.reversed
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.rejected
  endpoint:
    path: /events/customer.identification.rejected
    method: GET
    data_selector: event
    params: {}
- name: balance_summary.reporting.initiated
  endpoint:
    path: /events/balance_summary.reporting.initiated
    method: GET
    data_selector: event
    params: {}
- name: balance_summary.reporting.scheduled
  endpoint:
    path: /events/balance_summary.reporting.scheduled
    method: GET
    data_selector: event
    params: {}
- name: balance_summary.reporting.completed
  endpoint:
    path: /events/balance_summary.reporting.completed
    method: GET
    data_selector: event
    params: {}
- name: balance_summary.reporting.failed
  endpoint:
    path: /events/balance_summary.reporting.failed
    method: GET
    data_selector: event
    params: {}
- name: transaction_history.reporting.initiated
  endpoint:
    path: /events/transaction_history.reporting.initiated
    method: GET
    data_selector: event
    params: {}
- name: transaction_history.reporting.scheduled
  endpoint:
    path: /events/transaction_history.reporting.scheduled
    method: GET
    data_selector: event
    params: {}
- name: transaction_history.reporting.completed
  endpoint:
    path: /events/transaction_history.reporting.completed
    method: GET
    data_selector: event
    params: {}
- name: transaction_history.reporting.failed
  endpoint:
    path: /events/transaction_history.reporting.failed
    method: GET
    data_selector: event
    params: {}
- name: statement.initiated
  endpoint:
    path: /events/statement.initiated
    method: GET
    data_selector: event
    params: {}
- name: statement.scheduled
  endpoint:
    path: /events/statement.scheduled
    method: GET
    data_selector: event
    params: {}
- name: statement.completed
  endpoint:
    path: /events/statement.completed
    method: GET
    data_selector: event
    params: {}
- name: statement.failed
  endpoint:
    path: /events/statement.failed
    method: GET
    data_selector: event
    params: {}
- name: sub_account.created
  endpoint:
    path: /events/sub_account.created
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.reenter_information
  endpoint:
    path: /events/customer.identification.reenter_information
    method: GET
    data_selector: event
    params: {}
- name: customer.identification.awaitingDocument
  endpoint:
    path: /events/customer.identification.awaitingDocument
    method: GET
    data_selector: event
    params: {}
- name: bills.failed
  endpoint:
    path: /events/bills.failed
    method: GET
    data_selector: event
    params: {}
- name: bills.initiated
  endpoint:
    path: /events/bills.initiated
    method: GET
    data_selector: event
    params: {}
- name: bills.successful
  endpoint:
    path: /events/bills.successful
    method: GET
    data_selector: event
    params: {}
- name: ach.initiated
  endpoint:
    path: /events/ach.initiated
    method: GET
    data_selector: event
    params: {}
- name: ach.pending_submission
  endpoint:
    path: /events/ach.pending_submission
    method: GET
    data_selector: event
    params: {}
- name: ach.manual_review
  endpoint:
    path: /events/ach.manual_review
    method: GET
    data_selector: event
    params: {}
- name: ach.submitted
  endpoint:
    path: /events/ach.submitted
    method: GET
    data_selector: event
    params: {}
- name: ach.settled
  endpoint:
    path: /events/ach.settled
    method: GET
    data_selector: event
    params: {}
- name: ach.completed
  endpoint:
    path: /events/ach.completed
    method: GET
    data_selector: event
    params: {}
- name: ach.cancelled
  endpoint:
    path: /events/ach.cancelled
    method: GET
    data_selector: event
    params: {}
- name: ach.failed
  endpoint:
    path: /events/ach.failed
    method: GET
    data_selector: event
    params: {}
- name: ach.returned
  endpoint:
    path: /events/ach.returned
    method: GET
    data_selector: event
    params: {}
- name: ach.pending_cancellation
  endpoint:
    path: /events/ach.pending_cancellation
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.initiated
  endpoint:
    path: /events/domestic.wire.initiated
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.rejected
  endpoint:
    path: /events/domestic.wire.rejected
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.submitted
  endpoint:
    path: /events/domestic.wire.submitted
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.completed
  endpoint:
    path: /events/domestic.wire.completed
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.failed
  endpoint:
    path: /events/domestic.wire.failed
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.manual_review
  endpoint:
    path: /events/domestic.wire.manual_review
    method: GET
    data_selector: event
    params: {}
- name: domestic.wire.pending_submission
  endpoint:
    path: /events/domestic.wire.pending_submission
    method: GET
    data_selector: event
    params: {}
- name: international.wire.completed
  endpoint:
    path: /events/international.wire.completed
    method: GET
    data_selector: event
    params: {}
- name: international.wire.failed
  endpoint:
    path: /events/international.wire.failed
    method: GET
    data_selector: event
    params: {}
- name: international.wire.initiated
  endpoint:
    path: /events/international.wire.initiated
    method: GET
    data_selector: event
    params: {}
- name: international.wire.manual-review
  endpoint:
    path: /events/international.wire.manual-review
    method: GET
    data_selector: event
    params: {}
- name: international.wire.rejected
  endpoint:
    path: /events/international.wire.rejected
    method: GET
    data_selector: event
    params: {}
- name: international.wire.submitted
  endpoint:
    path: /events/international.wire.submitted
    method: GET
    data_selector: event
    params: {}
- name: international.wire.pending_submission
  endpoint:
    path: /events/international.wire.pending_submission
    method: GET
    data_selector: event
    params: {}
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: data
    params: {}
- name: payment_detail
  endpoint:
    path: /api/v1/payments/{paymentId}
    method: GET
    data_selector: data
    params: {}
notes:
- 'Avoid Hardcoding API Keys: Never embed API keys directly in your application''s
  source code.'
- 'Change API Keys Periodically: Change your API keys at regular intervals.'
- 'Regularly Delete Unneeded Keys: API keys should be periodically reviewed.'
- The API supports one-to-one, one-to-many, and many-to-many relationships.
- The GET operations are equipped with an include query parameter that facilitates
  the retrieval of multiple related resources in the response.
- All endpoints that list resource provide support for pagination.
- Idempotency keys are guaranteed effective for 24 hours from the time they're used
  successfully.
- Idempotency keys are not shared between different API operations.
- Metadata allows easier searching through both the API and web interfaces.
- A sandbox key is infix with _test_ and a live key is infix with _prod_.
- Every account is created with an accountNumber.
- Amounts are always denominated in kobo.
- Test transfers always return success, because there is no processing involved.
- Subledger is currently available only on Live Environment.
- Operation to upload customer documents
- Fetch details of a bill payment by id.
- Customers represent individuals or businesses that you may create financial products
  for.
- Minimum requirement to create a customer include Full Name, address, email, phone
  number.
- Additional KYC information such as BVN, date of birth and gender will be required
  to create a deposit account.
- Sample request payload includes address, business details, contact information,
  and officers.
- The minimum requirement to create a customer includes Full Name, address, email,
  phone number.
- For creating a deposit account, additional KYC information such as BVN, date of
  birth, and gender will be required.
- The name and phone number on the bvn needs to match the name and phone number provided
  at customer creation.
- KYC validation is automatic. Under normal circumstances, you should receive the
  validation result via webhook event immediately, unless there are errors.
- 'The identificationType for a business officer is an enum and takes values: DRIVERS_LICENSE,
  VOTERS_CARD, PASSPORT, NATIONAL_ID, NIN_SLIP.'
- To create a deposit account for a customer, you need to have completed KYC/KYB on
  that customer.
- Requires setup of API key
- Only savings account product can be created for an individual customer.
- Only CURRENT account product can be created for business customers.
- Account Numbers allow you to fund your bank account directly.
- Anchor lets you create as many account numbers as you need.
- The documents to be provided depend on the type and year of registration of the
  business customer.
- 'The field ''identificationType'' for a business officer is an enum and takes any
  of the following: DRIVERS_LICENSE, VOTERS_CARD, PASSPORT, NATIONAL_ID, NIN_SLIP.'
- You need to have completed KYC/KYB on that customer to create a deposit account.
- Supports SAVINGS and CURRENT account types.
- By default, you can generate up to 1000 reserved accounts for your customers. This
  limit can be increased upon review of your business and use-case.
- Only CURRENT account product can be created for a business customer.
- Account Numbers allow you to fund your bank account directly
- You can generate unique Account Numbers for different transactions
- You can send up to hundred (100) single transfers in one single bulk transfer request.
- If you exceed the allowed number of requests, you will receive a 429 Too Many Requests
  response.
- By default, you can generate up to 1000 reserved accounts for your customers.
- The price of the data bundle is specified in the country's lowest currency unit.
- Use the correct biller ID and product slug when initiating an airtime purchase.
- Book transfer is Option 1 on the documentation
- You can send up to hundred (100) single transfers in one single bulk transfer request
- When a bulk transfer is performed, we send bulkTransfer.started and bulkTransfer.completed
  events
- Price for electricity is a range from the minimum amount 100 (which translates to
  N1) to the maximum amount 10000000 (which translates to N100,000.00).
- You can use the support included functionality when listening to this bill payment
  event to retrieve other information such as the payment detail or customer detail
  that is related to this event.
- The amount for the data bundle should be specified in the currency's lowest denomination.
- You will receive bills.initiated events once the bill payment is initiated.
- If the bill payment is successful, you will receive bills.successful event.
- If this payment is not successful, you will receive bills.failed event.
- The price of the airtime is specified in the country's lowest currency unit.
- Webhook endpoints must be configured with https URLs that accept POST requests with
  JSON payloads.
- Events are accessible for up to 30 days.
- Anchor uses HMAC-SHA1 to encrypt the body of the request, we send it as a signature
  header x-anchor-signature.
- To verify a webhook signature, use an event generated for your organization from
  the Events Page in the Anchor Dashboard.
- All webhook endpoints must be configured with https URLs that accept POST requests
  with JSON payloads.
- The electricity payment amount is specified in the country's lowest currency unit.
- If the signature does not match, the request has been tampered with.
- We have a delivery backoff policy of 26 times.
- Query parameters can be used to filter and customize API responses.
errors:
- '401 Unauthorized: Recheck API key'
- title: Not found
  status: '404'
  detail: Deposit Account was not found
- '202: Request accepted but processing continues.'
- '401: Unauthorized access, check API key.'
- '404: Resource not found.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 409 Conflict
- 412 Precondition Failed
- 429 Too Many Requests
- 500 Internal Server Error
- 503 Service Unavailable
- '400 Bad Request: Check the request body for errors'
- '401 Unauthorized: Recheck authentication credentials'
- '403 Forbidden: Ensure permissions are set correctly'
- '404 Not Found: Verify the customer ID'
- '409 Conflict: Resolve any conflicting requests'
- '412 Precondition Failed: Ensure conditions are met'
- '429 Too Many Requests: Throttle requests'
- '500 Internal Server Error: Try again later'
- '503 Service Unavailable: Check service status'
- '400 Bad Request: Error details'
- '401 Unauthorized: Error details'
- '403 Forbidden: Error details'
- '404 Not Found: Error details'
- '409 Conflict: Error details'
- '412 Precondition Failed: Error details'
- '429 Too Many Requests: Error details'
- '500 Internal Server Error: Error details'
- '503 Service Unavailable: Error details'
- '400 Bad Request: Invalid input data'
- '401 Unauthorized: Authentication required'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource not found'
- '409 Conflict: Request conflicts with current state'
- '412 Precondition Failed: Precondition checks failed'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Unexpected server error'
- '503 Service Unavailable: Service is temporarily unavailable'
- '400 Bad Request: Invalid input'
- '401 Unauthorized: Authentication failed'
- '409 Conflict: Resource conflict'
- '412 Precondition Failed: Precondition check failed'
- '500 Internal Server Error: Server error'
- '503 Service Unavailable: Service unavailable'
- '400 Bad Request: Ensure required fields are provided'
- '401 Unauthorized: Check authentication credentials'
- '403 Forbidden: Verify permissions for the endpoint'
- '404 Not Found: Ensure the endpoint path is correct'
- '429 Too Many Requests: Reduce request frequency'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check authentication'
- '403 Forbidden: Check permissions'
- '404 Not Found: Resource does not exist'
- '409 Conflict: Resource conflict occurred'
- '412 Precondition Failed: Precondition for request failed'
- '500 Internal Server Error: Server error occurred'
- '404 Not Found: Verify the withdrawalId'
- '409 Conflict: Check for conflicts in the request'
- '412 Precondition Failed: Ensure preconditions are met'
- '500 Internal Server Error: Server encountered an error'
- '400 Bad Request: Invalid request parameters'
- '409 Conflict: Request conflict'
- '412 Precondition Failed: Precondition not met'
- '503 Service Unavailable: Service is unavailable'
- '400 Bad Request: Check the request body for required fields'
- '401 Unauthorized: Ensure proper authentication'
- '403 Forbidden: Confirm permissions'
- '404 Not Found: Verify endpoint URL'
- '409 Conflict: Check for resource conflicts'
- '412 Precondition Failed: Review preconditions for requests'
- '500 Internal Server Error: Server issue'
- '400 Bad Request: Check the request body for required fields.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '403 Forbidden: Verify user permissions.'
- '404 Not Found: Check the endpoint URL.'
- '409 Conflict: Resolve any conflicts in the request.'
- '412 Precondition Failed: Ensure all preconditions are met.'
- '429 Too Many Requests: Rate limit exceeded.'
- '500 Internal Server Error: Server encountered an error.'
- '503 Service Unavailable: Server is temporarily unavailable.'
- '400 Bad Request: Error details provided in response'
- '401 Unauthorized: Error details provided in response'
- '403 Forbidden: Error details provided in response'
- '404 Not Found: Error details provided in response'
- '409 Conflict: Error details provided in response'
- '412 Precondition Failed: Error details provided in response'
- '429 Too Many Requests: Error details provided in response'
- '500 Internal Server Error: Error details provided in response'
- '503 Service Unavailable: Error details provided in response'
- '400 Bad Request: Check request body and parameters'
- '404 Not Found: Verify webhookId'
- '409 Conflict: Check for conflicts'
- '412 Precondition Failed: Check conditions'
- '503 Service Unavailable: Service temporarily unavailable'
- '400 Bad Request: Invalid request'
- '500 Internal Server Error: An error occurred on the server'
- '401 Unauthorized: Ensure valid authentication'
- '404 Not Found: Verify webhook ID'
- '412 Precondition Failed: Check preconditions'
- 'customer.identification.error: Retry the KYC validation at a later time'
- 'customer.identification.rejected: Update the customer information and re-trigger
  the KYC endpoint'
- 'customer.identification.error: Retry the KYC validation at a later time.'
- 'customer.identification.rejected: Update the customer information and re-trigger
  the KYC endpoint.'
- 'Precondition Failed: Customer has not completed the required kyc level.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key or permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API Key or token expiration'
- '429 Too Many Requests: Exceeded the allowed number of requests.'
- '400 Bad Request: Check if required fields are included in the request.'
- '404 Not Found: Ensure the biller ID is valid.'
- '429 Too Many Requests: Exceeding the allowed number of requests'
- '401 Unauthorized: Recheck API key or token'
- '401 Unauthorized: Recheck API Key'
- 'Invalid Provider: Check provider slug or ID'
- 'Invalid Meter Number: Ensure the meter number is correct'
- 'Payment Failed: Verify account and payment details'
- 'Error reaching client''s webhook endpoint: 504'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.sandbox.getanchor.co
source_metadata: null
