resources:
- name: create_backup
  endpoint:
    path: /best-practices/backups/create-backup
    method: POST
    data_selector: backup
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/download-backup
    method: GET
    data_selector: download
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Magento API
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: autoscaling
  endpoint:
    path: /services/data/vXX.X/sobjects/Autoscaling
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /services/data/vXX.X/sobjects/Backup
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest/
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hypernode_deploy
  endpoint:
    path: /hypernode-deploy
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: Hypernode settings
  endpoint:
    path: /hypernode/settings
    method: GET
- name: Hypernode Importer
  endpoint:
    path: /hypernode/importer
    method: POST
- name: Hypernode Managed Vhosts
  endpoint:
    path: /hypernode/vhosts
    method: GET
- name: Base URLs
  endpoint:
    path: /hypernode/base-urls
    method: PUT
- name: DNS configuration
  endpoint:
    path: /hypernode/dns
    method: PATCH
- name: Nginx configuration
  endpoint:
    path: /hypernode/nginx
    method: POST
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
    data_selector: data
    params: {}
- name: database_credentials
  endpoint:
    path: /database/credentials
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: objects
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: managed_vhosts
  endpoint:
    path: /hypernode/systemctl/settings/managed_vhosts_enabled
    method: POST
- name: mysql_upgrade
  endpoint:
    path: /hypernode/systemctl/settings/mysql_version
    method: POST
- name: php_version
  endpoint:
    path: /hypernode/systemctl/settings/php_version
    method: POST
- name: elasticsearch_version
  endpoint:
    path: /hypernode/systemctl/settings/elasticsearch_version
    method: POST
- name: nodejs_version
  endpoint:
    path: /hypernode/systemctl/settings/nodejs_version
    method: POST
- name: supervisor_enabled
  endpoint:
    path: /hypernode/systemctl/settings/supervisor_enabled
    method: POST
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: Hypernode Configuration
  endpoint:
    path: /hypernode/deploy/configuration
    method: GET
    data_selector: records
- name: CI/CD Pipelines
  endpoint:
    path: /hypernode/deploy/pipelines
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: akeneo_queue_daemon
  endpoint:
    path: /data/web/akeneo/pim-community-standard/bin/console/akeneo:batch:job-queue-consumer-daemon
    method: GET
    data_selector: daemon
- name: akeneo_queue_daemon
  endpoint:
    path: /data/web/akeneo/pim-community-standard/bin/console/akeneo:batch:job-queue-consumer-daemon
    method: GET
    data_selector: daemon_status
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /api/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup/download
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: akeneo_queue_daemon
  endpoint:
    path: /data/web/akeneo/bin/console/messenger:consume
    method: POST
    data_selector: output
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: support
  endpoint:
    path: /support
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: disk_space
  endpoint:
    path: /hypernode/disk_space
    method: GET
    data_selector: data
    params: {}
- name: migrate_shop
  endpoint:
    path: /hypernode/migrate_shop
    method: POST
    data_selector: data
    params: {}
- name: Enable Magento 1 API
  endpoint:
    path: /rest/V1
    method: GET
- name: Enable Maintenance Mode
  endpoint:
    path: /maintenance.flag
    method: POST
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: staging_environment
  endpoint:
    path: /how-to-set-up-a-staging-environment-for-magento-1.html
    method: GET
    data_selector: staging_steps
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: base_urls
  endpoint:
    path: /magento2/base_urls
    method: GET
    data_selector: base_urls
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
- name: support
  endpoint:
    path: /support
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: robots
  endpoint:
    path: /robots.txt
    method: GET
    data_selector: robots_content
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: clean_urls
  endpoint:
    path: /data/web/nginx/public.rewrites
    method: POST
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Hypernode Settings
  endpoint:
    path: /hypernode/settings
    method: GET
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: order
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: magento_api
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: core_url_rewrite
  endpoint:
    path: /rest/V1/core_url_rewrite
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Magento Installation
  endpoint:
    path: /how-to-install-magento-1-on-hypernode.html
    method: GET
    data_selector: installation_guide
    params: {}
- name: Magento API
  endpoint:
    path: /how-to-enable-the-magento-1-api.html
    method: GET
    data_selector: api_enable
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cache_management
  endpoint:
    path: /flush_cache
    method: POST
    data_selector: result
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: preinstall_magento1
  endpoint:
    path: /hypernode-systemctl/preinstall
    method: POST
    data_selector: job
    params:
      application: magento1
      sample_data: true
- name: install_magerun
  endpoint:
    path: /magerun/install
    method: POST
    data_selector: installation
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: preinstall_magento1
  endpoint:
    path: /hypernode-systemctl/preinstall
    method: POST
    data_selector: job
    params:
      application: magento1
      sample_data: true
- name: install_magento1
  endpoint:
    path: /magerun/install
    method: POST
    data_selector: installation
    params: {}
- name: Hypernode Deploy configuration
  endpoint:
    path: /hypernode-deploy/getting-started
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: ftp_configuration
  endpoint:
    path: /hypernode-platform/ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
- name: sftp_configuration
  endpoint:
    path: /hypernode-platform/ftp/how-to-configure-ftp-sftp-on-hypernode.html#sftp-ssh-file-transfer-protocol
    method: GET
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: backup_creation
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backupDetails
    params: {}
- name: backup_download
  endpoint:
    path: /backups/download
    method: GET
    data_selector: backupFile
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp
  endpoint:
    path: /services/data/vXX.X/sobjects/FTP
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: return_path
  endpoint:
    path: /system/configuration/mail_sending_settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: staging_copy_files
  endpoint:
    path: /data/web/staging
    method: POST
    data_selector: files
    params: {}
- name: staging_database
  endpoint:
    path: /data/web/staging
    method: POST
    data_selector: database
    params: {}
- name: staging_config
  endpoint:
    path: /data/web/staging
    method: POST
    data_selector: config
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: base_urls
  endpoint:
    path: /how-to-change-your-magento-2-base-urls
    method: GET
- name: redis_configuration
  endpoint:
    path: /how-to-configure-redis-for-magento-2
    method: GET
- name: remote_storage
  endpoint:
    path: /how-to-configure-remote-storage-for-magento-2-x
    method: GET
- name: varnish_configuration
  endpoint:
    path: /how-to-configure-varnish-for-magento-2-x
    method: GET
- name: robots_txt
  endpoint:
    path: /how-to-create-a-robots-txt-for-magento-2-x
    method: GET
- name: sitemap_xml
  endpoint:
    path: /how-to-create-a-sitemap-xml-for-magento-2-x
    method: GET
- name: api_enablement
  endpoint:
    path: /how-to-enable-the-magento-2-api
    method: GET
- name: web_setup_wizard
  endpoint:
    path: /how-to-enable-the-magento-2-web-setup-wizard
    method: GET
- name: maintenance_mode
  endpoint:
    path: /how-to-enable-the-maintenance-mode-in-magento-2
    method: GET
- name: caches_flush
  endpoint:
    path: /how-to-flush-the-magento-2-x-caches
    method: GET
- name: installation
  endpoint:
    path: /how-to-install-magento-2-on-hypernode
    method: GET
- name: staging_setup
  endpoint:
    path: /data/web/staging
    method: GET
    data_selector: staging_info
- name: Products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: Customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /V1/categories
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: catalog_product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Redis Cache Configuration
  endpoint:
    path: /setup/config/set
    method: POST
    data_selector: ''
    params:
      cache-backend: redis
      cache-backend-redis-server: redismaster
      cache-backend-redis-db: 1
- name: Redis Full Page Caching Configuration
  endpoint:
    path: /setup/config/set
    method: POST
    data_selector: ''
    params:
      page-cache: redis
      page-cache-redis-server: redismaster
      page-cache-redis-db: 2
- name: Session Storage Configuration
  endpoint:
    path: /setup/config/set
    method: POST
    data_selector: ''
    params:
      session-save: redis
      session-save-redis-host: redismaster
      session-save-redis-db: 3
- name: Second Redis Instance Configuration
  endpoint:
    path: /setup/config/set
    method: POST
    data_selector: ''
    params:
      session-save-redis-port: 6378
      session-save-redis-db: 0
- name: redis_cache
  endpoint:
    path: /data/web/magento2
    method: POST
    data_selector: setup:config:set
    params:
      cache-backend: redis
      cache-backend-redis-server: redismaster
      cache-backend-redis-db: 1
- name: redis_full_page_caching
  endpoint:
    path: /data/web/magento2
    method: POST
    data_selector: setup:config:set
    params:
      page-cache: redis
      page-cache-redis-server: redismaster
      page-cache-redis-db: 2
- name: redis_session_store
  endpoint:
    path: /data/web/magento2
    method: POST
    data_selector: setup:config:set
    params:
      session-save: redis
      session-save-redis-host: redismaster
      session-save-redis-db: 3
- name: redis_second_instance_sessions
  endpoint:
    path: /data/web/magento2
    method: POST
    data_selector: setup:config:set
    params:
      session-save-redis-port: 6378
      session-save-redis-db: 0
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: remote_storage
  endpoint:
    path: /setup:config:set
    method: POST
    data_selector: config
    params:
      remote-storage-driver: aws-s3
      remote-storage-bucket: main
      remote-storage-region: EU
      remote-storage-key: abcd1234
      remote-storage-secret: 1234abcd
      remote-storage-endpoint: https://my-s3-compatible.endpoint.com
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: GET
    data_selector: ''
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
    data_selector: ''
    params: {}
- name: media_storage
  endpoint:
    path: /services/data/vXX.X/media_storage
    method: POST
    data_selector: storage
    params:
      media_storage: 0
- name: hypernode_object_storage
  endpoint:
    path: /hypernode-object-storage
    method: GET
    data_selector: objects
    params: {}
- name: varnish_configuration
  endpoint:
    path: /hypernode-systemctl/settings/varnish_version
    method: POST
    data_selector: settings
    params:
      varnish_version: 7.x
- name: enable_varnish
  endpoint:
    path: /hypernode-systemctl/settings/varnish_enabled
    method: POST
    data_selector: settings
    params:
      varnish_enabled: true
- name: configure_vhost
  endpoint:
    path: /hypernode-manage-vhosts/EXAMPLE.COM
    method: POST
    data_selector: vhosts
    params:
      varnish: true
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: base_urls
  endpoint:
    path: /rest/V1/store/config
    method: GET
    data_selector: storeConfig
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: robots_txt
  endpoint:
    path: /robots.txt
    method: GET
    data_selector: content
- name: Varnish Configuration
  endpoint:
    path: /settings/varnish_version
    method: POST
    data_selector: settings
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: How to Create a Backup and Download it to Your Local Machine
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: sitemap
  endpoint:
    path: /sitemaps/sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: robots_txt
  endpoint:
    path: /robots.txt
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: base_urls
  endpoint:
    path: /V1/store/storeConfigs
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params:
      incremental: updatedAt
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: sitemap
  endpoint:
    path: /sitemaps/
    method: POST
    data_selector: sitemaps
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
    data_selector: response
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups into a Single .zip File
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download the Backup to Your Local Machine
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: order
  endpoint:
    path: /api/v1/order
    method: GET
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
- name: api
  endpoint:
    path: /api/rest/
    method: GET
- name: maintenance_mode
  endpoint:
    path: /data/web/magento2/var/.maintenance.flag
    method: POST
- name: developer_access
  endpoint:
    path: /data/web/magento2/var/.maintenance.ip
    method: POST
- name: custom_error_message
  endpoint:
    path: /data/web/magento2/pub/errors
    method: GET
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemaps
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance_issues
  endpoint:
    path: /api/performance/issues
    method: GET
    data_selector: issues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: preinstall_magento_2
  endpoint:
    path: /hypernode-systemctl/preinstall/magento_2
    method: POST
    data_selector: job_progress
- name: setup_install
  endpoint:
    path: /bin/magento/setup/install
    method: POST
    data_selector: installation_status
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: base_urls
  endpoint:
    path: /how-to-change-your-magento-2-base-urls.html
    method: GET
- name: redis_configuration
  endpoint:
    path: /how-to-configure-redis-for-magento-2.html
    method: GET
- name: remote_storage
  endpoint:
    path: /how-to-configure-remote-storage-for-magento-2-x.html
    method: GET
- name: varnish_configuration
  endpoint:
    path: /how-to-configure-varnish-for-magento-2-x.html
    method: GET
- name: robots_txt
  endpoint:
    path: /how-to-create-a-robots.txt-for-magento-2-x.html
    method: GET
- name: sitemap_xml
  endpoint:
    path: /how-to-create-a-sitemap.xml-for-magento-2-x.html
    method: GET
- name: api_enablement
  endpoint:
    path: /how-to-enable-the-magento-2-api.html
    method: GET
- name: web_setup_wizard
  endpoint:
    path: /how-to-enable-the-magento-2-web-setup-wizard.html
    method: GET
- name: maintenance_mode
  endpoint:
    path: /how-to-enable-the-maintenance-mode-in-magento-2.html
    method: GET
- name: cache_flushing
  endpoint:
    path: /how-to-flush-the-magento-2.x-caches.html
    method: GET
- name: installation
  endpoint:
    path: /how-to-install-magento-2-on-hypernode.html
    method: GET
- name: queue_configuration
  endpoint:
    path: /app/etc/env.php
    method: POST
    data_selector: queue
    params:
      consumers_wait_for_messages: 0
      only_spawn_when_message_available: 1
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: queue_configuration
  endpoint:
    path: /app/etc/env.php
    method: POST
    data_selector: queue
    params:
      consumers_wait_for_messages: 0
      only_spawn_when_message_available: 1
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: base_urls
  endpoint:
    path: /how-to-change-your-magento-2-base-urls
    method: GET
    data_selector: base_urls
    params: {}
- name: redis_configuration
  endpoint:
    path: /how-to-configure-redis-for-magento-2
    method: GET
    data_selector: redis_configuration
    params: {}
- name: remote_storage
  endpoint:
    path: /how-to-configure-remote-storage-for-magento-2-x
    method: GET
    data_selector: remote_storage
    params: {}
- name: varnish_configuration
  endpoint:
    path: /how-to-configure-varnish-for-magento-2-x
    method: GET
    data_selector: varnish_configuration
    params: {}
- name: robots_txt
  endpoint:
    path: /how-to-create-a-robots.txt-for-magento-2-x
    method: GET
    data_selector: robots_txt
    params: {}
- name: sitemap_xml
  endpoint:
    path: /how-to-create-a-sitemap.xml-for-magento-2-x
    method: GET
    data_selector: sitemap_xml
    params: {}
- name: magento_api
  endpoint:
    path: /how-to-enable-the-magento-2-api
    method: GET
    data_selector: magento_api
    params: {}
- name: maintenance_mode
  endpoint:
    path: /how-to-enable-the-maintenance-mode-in-magento-2
    method: GET
    data_selector: maintenance_mode
    params: {}
- name: product
  endpoint:
    path: /api/v1/product
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_data
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_data
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dns_validation
  endpoint:
    path: /dns/validation
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: base_urls
  endpoint:
    path: /rest/V1/store/storeConfigs
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: performance_issues
  endpoint:
    path: /best-practices/performance/how-to-fix-performance-issues-caused-by-bots-and-crawlers.html
    method: GET
- name: security_patches
  endpoint:
    path: /best-practices/security/how-to-apply-magento-patches.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Magento 1 API
  endpoint:
    path: /rest/V1
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Enable the Magento 1 API
  endpoint:
    path: /services/data/v1.0/api/enable
    method: POST
    data_selector: response
- name: Enable Maintenance Mode
  endpoint:
    path: /services/data/v1.0/maintenance/enable
    method: POST
    data_selector: response
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /rest/V1/campaigns
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: buy_hypernode
  endpoint:
    path: /hypernode/buy
    method: POST
    data_selector: response
    params: {}
- name: flush_redis_cache
  endpoint:
    path: /redis/flush
    method: POST
    data_selector: response
    params: {}
- name: flush_varnish_cache
  endpoint:
    path: /varnish/flush
    method: POST
    data_selector: response
    params: {}
- name: billing
  endpoint:
    path: /services/data/vXX.X/sobjects/Billing
    method: GET
    data_selector: records
    params: {}
- name: HTTP Cache Warmer
  endpoint:
    path: /data/web/public/bin/console sw:warm:http:cache
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: varnish_configuration
  endpoint:
    path: /data/web/shopware5.vcl
    method: LOAD
    data_selector: configuration
    params: {}
- name: sitemaps
  endpoint:
    path: /rest/V1/sitemaps
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create-backup
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/download-backup
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance
  endpoint:
    path: /best-practices/performance
    method: GET
- name: security
  endpoint:
    path: /best-practices/security
    method: GET
- name: pwa
  endpoint:
    path: /best-practices/pwa
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /V1/categories
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: disk_space_issues
  endpoint:
    path: /hypernode/disk_space_issues
    method: GET
    data_selector: issues
    params: {}
- name: migration_tools
  endpoint:
    path: /hypernode/migration_tools
    method: GET
    data_selector: tools
    params: {}
- name: redis_memory_usage
  endpoint:
    path: /hypernode/redis_memory_usage
    method: GET
    data_selector: memory_usage
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Enable the Magento 1 API
  endpoint:
    path: /api/v1.0/
    method: GET
- name: Enable Maintenance Mode for Magento 1
  endpoint:
    path: /maintenance-mode/
    method: POST
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
    params: {}
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
    params: {}
- name: Shop
  endpoint:
    path: /api/shop
    method: GET
    data_selector: data
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: disk_space
  endpoint:
    path: /disk-space
    method: GET
    data_selector: diskUsage
    params: {}
- name: mysql
  endpoint:
    path: /mysql
    method: GET
    data_selector: mysqlStatus
    params: {}
- name: How to Enable the Magento 1 API
  endpoint:
    path: /api
    method: GET
- name: How to Enable the Maintenance Mode in Magento 1
  endpoint:
    path: /maintenance
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
- name: base_urls
  endpoint:
    path: /magento2/baseUrls
    method: GET
- name: api_enable
  endpoint:
    path: /magento2/apiEnable
    method: POST
- name: maintenance_mode
  endpoint:
    path: /magento2/maintenanceMode
    method: POST
- name: billing_info
  endpoint:
    path: /billing/info
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp
  endpoint:
    path: /hypernode-platform/ftp.html
    method: GET
- name: mysql
  endpoint:
    path: /hypernode-platform/mysql.html
    method: GET
- name: nginx
  endpoint:
    path: /hypernode-platform/nginx.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hypernode_object_storage
  endpoint:
    path: /hypernode-object-storage
    method: GET
    data_selector: objects
    params:
      incremental: updated_at
- name: aws_s3
  endpoint:
    path: /aws/s3
    method: GET
    data_selector: buckets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Hypernode Deploy configuration
  endpoint:
    path: /hypernode-deploy/getting-started
    method: GET
- name: Hypernode settings on Deployment
  endpoint:
    path: /hypernode-deploy/getting-started/configure-hypernode-settings-on-deployment
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hypernode_object_storage
  endpoint:
    path: /hypernode-object-storage/objects/sync
    method: POST
    data_selector: sync_status
- name: aws_s3
  endpoint:
    path: /aws/s3/sync
    method: POST
    data_selector: sync_status
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: backup_creation
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: backup_download
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: nginx_configuration
  endpoint:
    path: /data/web/nginx/server.media.conf
    method: POST
    data_selector: configuration
    params: {}
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: woocommerce_installation
  endpoint:
    path: /install-woocommerce
    method: POST
    data_selector: installation_status
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Configure Your Akeneo Crons
  endpoint:
    path: /akeneo/how-to-install-akeneo-7-on-hypernode.html#option-2-configure-your-akeneo-crons
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 3
  endpoint:
    path: /akeneo/how-to-use-a-basic-staging-environment-with-akeneo-3.html
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 4 and 5
  endpoint:
    path: /akeneo/how-to-use-a-basic-staging-environment-with-akeneo-4-and-5.html
    method: GET
- name: How to Change the Base URL in Magento 1.x
  endpoint:
    path: /magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: How to Clean the Magento 1.x Logs
  endpoint:
    path: /magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: How to Configure Redis for Magento 1
  endpoint:
    path: /magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: How to Configure Varnish for Magento 1.x
  endpoint:
    path: /magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: How to Create a robots.txt for your Magento 1 Shop
  endpoint:
    path: /magento-1/how-to-create-a-robots-txt-for-your-magento-1-shop.html
    method: GET
- name: How to Create a Sitemap.xml for Magento 1.x
  endpoint:
    path: /magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: How to Enable Clean URLs for Magento
  endpoint:
    path: /magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: How to Enable MySQL Query Logging for Magento 1.x
  endpoint:
    path: /magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: How to Enable the Magento 1 API
  endpoint:
    path: /magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: How to Enable the Maintenance Mode in Magento 1
  endpoint:
    path: /magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: 'How to Fix SOAP error: Parsing WSDL: Couldn’t load from “”: failed to load
    external entity'
  endpoint:
    path: /magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html
    method: GET
- name: How to Flush the Magento 1.x Caches
  endpoint:
    path: /magento-1/how-to-flush-the-magento-1-x-caches.html
    method: GET
- name: How to Install Magento 1 on Hypernode
  endpoint:
    path: /magento-1/how-to-install-magento-1-on-hypernode.html
    method: GET
- name: How to Remove Your Magento 1.x Installation
  endpoint:
    path: /magento-1/how-to-remove-your-magento-1-x-installation.html
    method: GET
- name: How to Reset Your Magento 1.x Admin Password
  endpoint:
    path: /magento-1/how-to-reset-your-magento-1-x-admin-password.html
    method: GET
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_info
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: woocommerce_installation
  endpoint:
    path: /install
    method: POST
    data_selector: installation_steps
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: Magento API
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Purge Method
  endpoint:
    path: /hypernode-platform/nginx/how-to-control-purge-method
    method: GET
- name: Reusable Config
  endpoint:
    path: /hypernode-platform/nginx/how-to-create-a-reusable-config-to-include-in-custom-snippets
    method: GET
- name: Deny Access
  endpoint:
    path: /hypernode-platform/nginx/how-to-deny-access-to-locations-and-directories
    method: GET
- name: Top Visitors
  endpoint:
    path: /hypernode-platform/nginx/how-to-find-the-the-top-10-visitors-by-parsing-the-nginx-access-logs
    method: GET
- name: Password Protection
  endpoint:
    path: /hypernode-platform/nginx/how-to-protect-your-magento-store-with-a-password-in-nginx
    method: GET
- name: Redirect WWW
  endpoint:
    path: /hypernode-platform/nginx/how-to-redirect-from-or-to-www
    method: GET
- name: Rate Limiting
  endpoint:
    path: /hypernode-platform/nginx/how-to-resolve-rate-limited-requests-429-too-many-requests
    method: GET
- name: Restrict Admin Access
  endpoint:
    path: /hypernode-platform/nginx/how-to-restrict-access-to-your-admin-area
    method: GET
- name: Trailing Slash Rewrite
  endpoint:
    path: /hypernode-platform/nginx/how-to-rewrite-a-trailing-slash-for-seo-purposes
    method: GET
- name: Server Name Setup
  endpoint:
    path: /hypernode-platform/nginx/how-to-set-the-server-name-in-nginx
    method: GET
- name: Gzip Compression
  endpoint:
    path: /hypernode-platform/nginx/how-to-speed-up-your-magento-shop-by-tuning-gzip-compression
    method: GET
- name: Unblock Requests
  endpoint:
    path: /hypernode-platform/nginx/how-to-unblock-requests-to-sql-and-archive-files-on-your-hypernode
    method: GET
- name: Using Nginx
  endpoint:
    path: /hypernode-platform/nginx/how-to-use-nginx
    method: GET
- name: Managed Vhosts
  endpoint:
    path: /hypernode-platform/nginx/hypernode-managed-vhosts
    method: GET
- name: Object Storage
  endpoint:
    path: /hypernode-platform/object-storage
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: production_stage
  endpoint:
    path: /deploy.php
    method: POST
    data_selector: configuration
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: laravel_installation
  endpoint:
    path: /install
    method: POST
    data_selector: installation_status
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: deploy
  endpoint:
    path: /.github/workflows/deploy.yaml
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: build
  endpoint:
    path: /hypernode/deploy/build
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: production
  endpoint:
    path: /deploy.php
    method: POST
    data_selector: configuration
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api
    method: GET
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Hypernode Systemctl Configuration
  endpoint:
    path: /hypernode/systemctl
    method: POST
    data_selector: settings
    params:
      supervisor_enabled: 'True'
      rabbitmq_enabled: 'True'
      elasticsearch_enabled: 'False'
      opensearch_enabled: 'True'
      varnish_enabled: 'True'
      nodejs_version: '22'
- name: Cron Configuration
  endpoint:
    path: /hypernode/cron
    method: POST
    data_selector: cron_jobs
    params:
      cron_file: etc/cron
- name: Nginx vhost Configuration
  endpoint:
    path: /hypernode/nginx
    method: POST
    data_selector: nginx_configs
    params:
      nginx_folder: etc/nginx
- name: Supervisor Configuration
  endpoint:
    path: /hypernode/supervisor
    method: POST
    data_selector: supervisor_configs
    params:
      supervisor_folder: etc/supervisor
- name: Varnish Configuration
  endpoint:
    path: /hypernode/varnish
    method: POST
    data_selector: varnish_config
    params:
      configFile: etc/varnish.vcl
      version: 7.x
- name: deploy
  endpoint:
    path: /deploy
    method: POST
    data_selector: result
- name: deploy_to_staging
  endpoint:
    path: hypernode-deploy deploy staging -vvv
    method: POST
- name: deploy_to_production
  endpoint:
    path: hypernode-deploy deploy production -vvv
    method: POST
- name: cleanup_resources
  endpoint:
    path: hypernode-deploy cleanup
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database_credentials
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#almost-done-look-up-your-database-credentials
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: hypernode_systemctl_configuration
  endpoint:
    path: /hypernode/systemctl
    method: POST
    data_selector: settings
    params:
      supervisor_enabled: 'True'
      rabbitmq_enabled: 'True'
      elasticsearch_enabled: 'False'
      opensearch_enabled: 'True'
      varnish_enabled: 'True'
      nodejs_version: '22'
- name: cron_configuration
  endpoint:
    path: /hypernode/cron
    method: POST
    data_selector: cron_jobs
    params:
      file_path: ./etc/cron
- name: nginx_vhost_configuration
  endpoint:
    path: /hypernode/nginx
    method: POST
    data_selector: nginx_configs
    params:
      file_path: ./etc/nginx
- name: supervisor_configuration
  endpoint:
    path: /hypernode/supervisor
    method: POST
    data_selector: supervisor_configs
    params:
      file_path: ./etc/supervisor
- name: varnish_configuration
  endpoint:
    path: /hypernode/varnish
    method: POST
    data_selector: varnish_configs
    params:
      file_path: etc/varnish.vcl
      version: 7.x
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: production
  endpoint:
    path: magento2.komkommer.store
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: backup
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: download
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: my-next-app
  endpoint:
    path: /_next/
    method: GET
    data_selector: apps
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: base_url_change
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: log_cleaning
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: redis_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: varnish_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: sitemap_creation
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: clean_urls
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: mysql_query_logging
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: api_enablement
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: maintenance_mode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance_issues
  endpoint:
    path: /best-practices/performance
    method: GET
- name: security
  endpoint:
    path: /best-practices/security
    method: GET
- name: production
  endpoint:
    path: .github/workflows/deploy_production.yml
    method: POST
    data_selector: ''
    params: {}
- name: acceptance
  endpoint:
    path: .github/workflows/deploy_acceptance.yml
    method: POST
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: database_credentials
  endpoint:
    path: /database/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: cron_configuration
  endpoint:
    path: /cron/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: secure_document_root
  endpoint:
    path: /secure/document/root
    method: GET
    data_selector: document_root
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: production
  endpoint:
    path: /deployments/environments/production
    method: POST
    data_selector: environment
    params:
      SSH_PRIVATE_KEY: base64-encoded-private-key
      Environment scope: production
      Protect variable: 'false'
      Mask variable: 'true'
- name: acceptance
  endpoint:
    path: /deployments/environments/acceptance
    method: POST
    data_selector: environment
    params:
      SSH_PRIVATE_KEY: base64-encoded-private-key
      Environment scope: acceptance
      Protect variable: 'false'
      Mask variable: 'true'
- name: production
  endpoint:
    path: .github/workflows/deploy_production.yml
    method: POST
    data_selector: jobs.deploy
    params:
      branch: master
- name: acceptance
  endpoint:
    path: .github/workflows/deploy_acceptance.yml
    method: POST
    data_selector: jobs.deploy
    params:
      branch: acceptance
- name: customer
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
- name: order
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: dns_records
  endpoint:
    path: /api/v1/dns_records
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email_settings
    method: GET
    data_selector: records
    params: {}
- name: production
  endpoint:
    path: /deployments/environments/production
    method: POST
    data_selector: deployment
    params: {}
- name: acceptance
  endpoint:
    path: /deployments/environments/acceptance
    method: POST
    data_selector: deployment
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
- name: create_new_database
  endpoint:
    path: ../ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#create-a-new-database
    method: GET
- name: installing_magento_1_using_magerun
  endpoint:
    path: ../ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#installing-magento-1-using-magerun
    method: GET
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /create-database
    method: POST
    data_selector: result
    params: {}
- name: cache_backend
  endpoint:
    path: /configure-cache
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Flush the Magento Cache via the Backend
  endpoint:
    path: /flush-backend-cache
    method: GET
    data_selector: response
    params: {}
- name: Flush the Magento Cache via the Commandline
  endpoint:
    path: /flush-commandline-cache
    method: GET
    data_selector: response
    params: {}
- name: cdn
  endpoint:
    path: /v1/cdn
    method: GET
    data_selector: data
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: performance_issues
  endpoint:
    path: /performance
    method: GET
    data_selector: records
    params: {}
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: records
    params: {}
- name: backup_creation
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
    params: {}
- name: backup_download
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enable_rabbitmq
  endpoint:
    path: /hypernode-systemctl/settings/rabbitmq_enabled
    method: POST
    data_selector: rabbitmq_enabled
    params:
      value: 'True'
- name: restart_rabbitmq
  endpoint:
    path: /hypernode-servicectl/restart/rabbitmq-server
    method: POST
    data_selector: null
    params: {}
- name: rabbitmq_admin_interface
  endpoint:
    path: /rabbitmq/admin
    method: GET
    data_selector: null
    params: {}
- name: create_rabbitmq_user
  endpoint:
    path: /rabbitmq/admin/add_user
    method: POST
    data_selector: null
    params: {}
- name: configure_rabbitmq_magento
  endpoint:
    path: /magento/setup/config/set
    method: POST
    data_selector: null
    params:
      amqp-host: rabbitmq
      amqp-port: '5672'
      amqp-user: guest
      amqp-password: guest
      amqp-virtualhost: /
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest/
    method: GET
    data_selector: response
    params: {}
- name: hypernode_deploy
  endpoint:
    path: /deploy
    method: POST
    data_selector: data
    params: {}
- name: Create File Backup
  endpoint:
    path: /backups/create-file
    method: POST
    data_selector: result
    params: {}
- name: Create Database Backup
  endpoint:
    path: /backups/create-database
    method: POST
    data_selector: result
    params: {}
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: result
    params: {}
- name: database_dump
  endpoint:
    path: /export/database
    method: POST
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rabbitmq
  endpoint:
    path: /settings/rabbitmq_enabled
    method: POST
    data_selector: rabbitmq_enabled
    params:
      value: 'True'
- name: restart_rabbitmq
  endpoint:
    path: /servicectl/restart/rabbitmq-server
    method: POST
    data_selector: rabbitmq_server
    params: {}
- name: rabbitmq_admin
  endpoint:
    path: /admin
    method: GET
    data_selector: admin_interface
    params: {}
- name: SOAP API
  endpoint:
    path: /soap
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Magento API
  endpoint:
    path: /api/v1
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: file
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
    data_selector: backup
    params: {}
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: download
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Create File Backup
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download via FTP
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_info
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_info
    params: {}
- name: Flush Magento Cache
  endpoint:
    path: /flush-cache
    method: POST
    data_selector: result
- name: Flush WSDL Cache
  endpoint:
    path: /flush-wsdl-cache
    method: POST
    data_selector: result
- name: Enable Maintenance Mode
  endpoint:
    path: /enable-maintenance
    method: POST
    data_selector: result
- name: Create File Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-database-backup
    method: GET
- name: Download via FTP
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ssh
    method: GET
- name: base_url
  endpoint:
    path: /how-to/change-the-base-url-in-magento-1-x
    method: GET
- name: logs
  endpoint:
    path: /how-to/clean-the-magento-1-x-logs
    method: GET
- name: redis
  endpoint:
    path: /how-to/configure-redis-for-magento-1
    method: GET
- name: varnish
  endpoint:
    path: /how-to/configure-varnish-for-magento-1-x
    method: GET
- name: sitemap
  endpoint:
    path: /how-to/create-a-sitemap-xml-for-magento-1-x
    method: GET
- name: clean_urls
  endpoint:
    path: /how-to/enable-clean-urls-for-magento
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance_metrics
  endpoint:
    path: /api/v1/performance/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
    data_selector: backup_details
    params: {}
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: download_info
    params: {}
- name: IP Addresses
  endpoint:
    path: /hypernode/waf/allowlist
    method: POST
    data_selector: ip_addresses
    params:
      ip_addresses:
      - 154.16.73.227
      - 132.226.222.205
      - 144.24.249.196
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /services/data/vXX.X/sobjects/DNSRecord
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailSettings
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: whitelist
  endpoint:
    path: /whitelist
    method: POST
    data_selector: entries
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: IP Addresses
  endpoint:
    path: /whitelist
    method: POST
    data_selector: ip_addresses
    params:
      ip_address:
      - 154.16.73.227
      - 132.226.222.205
      - 144.24.249.196
      description: ForusP
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: allowlist
  endpoint:
    path: /whitelist
    method: POST
    data_selector: entries
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_info
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_info
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/v1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: robots
  endpoint:
    path: /robots.txt
    method: GET
    data_selector: robots
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
- name: performance_issues
  endpoint:
    path: /performance/issues
    method: GET
    data_selector: records
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
    params: {}
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ElasticSearch
  endpoint:
    path: /elasticsearch
    method: GET
    data_selector: results
    params: {}
- name: Sphinx
  endpoint:
    path: /sphinx
    method: GET
    data_selector: results
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: performance_issues
  endpoint:
    path: /how-to-fix-performance-issues-caused-by-bots-and-crawlers.html
    method: GET
- name: optimize_performance
  endpoint:
    path: /how-to-optimize-the-performance-of-your-magento-shop.html
    method: GET
- name: security_measures
  endpoint:
    path: /security/how-hypernode-protects-your-magento-shop.html
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: blackfire_settings
  endpoint:
    path: /settings/blackfire
    method: GET
    data_selector: settings
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: blackfire_settings
  endpoint:
    path: /hypernode-systemctl/settings/blackfire_enabled
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: Create File Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download the Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ssh
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Flush the Magento Cache
  endpoint:
    path: /flush/cache
    method: POST
    data_selector: cache
    params: {}
- name: Flush the WSDL Cache
  endpoint:
    path: /flush/wsdl
    method: POST
    data_selector: wsdl
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create a Backup
  endpoint:
    path: ../backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Purge Method
  endpoint:
    path: /hypernode-platform/nginx/how-to-control-purge-method
    method: GET
- name: Creating a Reusable Config
  endpoint:
    path: /hypernode-platform/nginx/how-to-create-a-reusable-config-to-include-in-custom-snippets
    method: GET
- name: Deny Access to Locations
  endpoint:
    path: /hypernode-platform/nginx/how-to-deny-access-to-locations-and-directories
    method: GET
- name: Top 10 Visitors
  endpoint:
    path: /hypernode-platform/nginx/how-to-find-the-the-top-10-visitors-by-parsing-the-nginx-access-logs
    method: GET
- name: Protect Magento Store
  endpoint:
    path: /hypernode-platform/nginx/how-to-protect-your-magento-store-with-a-password-in-nginx
    method: GET
- name: Redirect From WWW
  endpoint:
    path: /hypernode-platform/nginx/how-to-redirect-from-or-to-www
    method: GET
- name: Resolve Rate Limited Requests
  endpoint:
    path: /hypernode-platform/nginx/how-to-resolve-rate-limited-requests-429-too-many-requests
    method: GET
- name: Restrict Access to Admin Area
  endpoint:
    path: /hypernode-platform/nginx/how-to-restrict-access-to-your-admin-area
    method: GET
- name: Rewrite Trailing Slash
  endpoint:
    path: /hypernode-platform/nginx/how-to-rewrite-a-trailing-slash-for-seo-purposes
    method: GET
- name: Set Server Name in Nginx
  endpoint:
    path: /hypernode-platform/nginx/how-to-set-the-server-name-in-nginx
    method: GET
- name: Speed up Magento Shop
  endpoint:
    path: /hypernode-platform/nginx/how-to-speed-up-your-magento-shop-by-tuning-gzip-compression
    method: GET
- name: Unblock Requests to SQL
  endpoint:
    path: /hypernode-platform/nginx/how-to-unblock-requests-to-sql-and-archive-files-on-your-hypernode
    method: GET
- name: Use Nginx
  endpoint:
    path: /hypernode-platform/nginx/how-to-use-nginx
    method: GET
- name: Hypernode Managed Vhosts
  endpoint:
    path: /hypernode-platform/nginx/hypernode-managed-vhosts
    method: GET
- name: Object Storage
  endpoint:
    path: /hypernode-platform/object-storage
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create File Backup
  endpoint:
    path: /backups/create-file
    method: POST
    data_selector: backup_status
- name: Create Database Backup
  endpoint:
    path: /backups/create-database
    method: POST
    data_selector: backup_status
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: Configure Your Akeneo Crons
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-install-akeneo-7-on-hypernode.html#option-2-configure-your-akeneo-crons
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 3
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-3.html
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 4 and 5
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-4-and-5.html
    method: GET
- name: How to Change the Base URL in Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: How to Clean the Magento 1.x Logs
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: How to Configure Redis for Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: How to Configure Varnish for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: How to Create a robots.txt for your Magento 1 Shop
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-robots-txt-for-your-magento-1-shop.html
    method: GET
- name: How to Create a Sitemap.xml for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: How to Enable Clean URLs for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: How to Enable MySQL Query Logging for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: How to Enable the Magento 1 API
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: How to Enable the Maintenance Mode in Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: 'How to Fix SOAP error: Parsing WSDL: Couldn’t load from “”: failed to load
    external entity'
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html
    method: GET
- name: Test If Your SOAP API Is Available for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html#test-if-your-soap-api-is-available-for-magento
    method: GET
- name: Troubleshooting for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html#troubleshooting
    method: GET
- name: How to Flush the Magento 1.x Caches
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-magento-1-x-caches.html
    method: GET
- name: How to Flush the WSDL Cache
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-wsdl-cache.html
    method: GET
- name: How to Install Magento 1 on Hypernode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
- name: api
  endpoint:
    path: /services/data/vXX.X/sobjects
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
- name: Create File Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download Backup via FTP
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download Backup via SSH
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: result
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: result
- name: MDVA-49935 patch for Magento
  endpoint:
    path: /releases/MDVA-49935
    method: GET
    data_selector: patch_details
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_record
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_record
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: patch_mdva_49935
  endpoint:
    path: /patches/MDVA-49935
    method: GET
    data_selector: patches
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: category
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: result
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: result
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: downloader
  endpoint:
    path: /downloader
    method: GET
- name: rss_catalog_notifystock
  endpoint:
    path: /rss/catalog/notifystock
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: downloader
  endpoint:
    path: /downloader
    method: GET
- name: rss_catalog_notifystock
  endpoint:
    path: /rss/catalog/notifystock
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
- name: robots
  endpoint:
    path: /robots.txt
    method: GET
    data_selector: robots
- name: create_database
  endpoint:
    path: /create/database
    method: POST
- name: install_magerun
  endpoint:
    path: /install/magerun
    method: POST
- name: configure_redis
  endpoint:
    path: /configure/redis
    method: POST
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_info
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_info
- name: performance_issues
  endpoint:
    path: /performance/how-to-find-your-performance-bottleneck-with-new-relic.html
    method: GET
- name: api_configuration
  endpoint:
    path: /performance/how-to-optimize-your-magento-shop.html#configure-your-api
    method: GET
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: downloader
  endpoint:
    path: /downloader
    method: GET
- name: rss_catalog_notifystock
  endpoint:
    path: /rss/catalog/notifystock/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backupDetails
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: downloadLink
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: objects
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: admin
  endpoint:
    path: /admin
    method: GET
- name: downloader
  endpoint:
    path: /downloader
    method: GET
- name: rss_notifystock
  endpoint:
    path: /rss/catalog/notifystock
    method: GET
- name: database_credentials
  endpoint:
    path: /path/to/database/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_record
    params: {}
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
    params: {}
- name: ftp_users
  endpoint:
    path: /hypernode-platform/ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
    data_selector: records
- name: sftp
  endpoint:
    path: /hypernode-platform/ftp/how-to-configure-ftp-sftp-on-hypernode.html#sftp-ssh-file-transfer-protocol
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
- name: Product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: Customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /look-up-your-database-credentials
    method: GET
- name: cron_configuration
  endpoint:
    path: /configure-your-magento-2-cron
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Flush the Magento Cache
  endpoint:
    path: /flush/magento/cache
    method: POST
    data_selector: result
    params: {}
- name: Flush the WSDL Cache
  endpoint:
    path: /flush/wsdl/cache
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
    params: {}
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: response
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: restart_services
  endpoint:
    path: /etc/my_init.d/60_restart_services.sh
    method: BASH
    data_selector: none
    params: {}
- name: product
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
- name: database
  endpoint:
    path: /create/database
    method: POST
    data_selector: response
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Create File Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#create-database-backup
    method: GET
- name: Zip Both Backups into a Single .zip File
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download via FTP
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /backups/how-to-create-a-backup-and-download-it-to-your-local-machine#download-via-ssh
    method: GET
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
- name: performance_data
  endpoint:
    path: /api/v1/performance
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Magento
  endpoint:
    path: /services/data/vXX.X/sobjects/Magento
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: base_url_change
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: log_cleaning
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: redis_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: varnish_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: sitemap_creation
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: clean_urls
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: mysql_logging
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: api_enablement
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: maintenance_mode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: hypernode
  endpoint:
    path: /hypernode/api
    method: GET
    data_selector: data
- name: log_analyses
  endpoint:
    path: /hypernode:log-analyses
    method: GET
    data_selector: log_analyses
- name: maps_generate
  endpoint:
    path: /hypernode:maps-generate
    method: GET
    data_selector: maps_generate
- name: varnish_config
  endpoint:
    path: /hypernode:varnish:config-save
    method: GET
    data_selector: varnish_config
- name: varnish_flush
  endpoint:
    path: /hypernode:varnish:flush
    method: GET
    data_selector: varnish_flush
- name: performance
  endpoint:
    path: /hypernode:performance
    method: GET
    data_selector: performance
- name: admin_passwords_crack
  endpoint:
    path: /hypernode:crack:admin-passwords
    method: GET
    data_selector: admin_passwords_crack
- name: api_keys_crack
  endpoint:
    path: /hypernode:crack:api-keys
    method: GET
    data_selector: api_keys_crack
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: database_creation
  endpoint:
    path: /create/database
    method: POST
    data_selector: response
    params: {}
- name: redis_configuration
  endpoint:
    path: /configure/redis
    method: POST
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download
- name: performance_issues
  endpoint:
    path: /performance/issues
    method: GET
    data_selector: records
- name: security_patches
  endpoint:
    path: /security/patches
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: log_analyses
  endpoint:
    path: /hypernode/log-analyses
    method: GET
- name: nginx_boilerplate
  endpoint:
    path: /hypernode/maps-generate
    method: GET
- name: varnish_config
  endpoint:
    path: /hypernode/varnish/config-save
    method: GET
- name: varnish_flush
  endpoint:
    path: /hypernode/varnish/flush
    method: GET
- name: performance_report
  endpoint:
    path: /hypernode/performance
    method: GET
- name: admin_passwords_check
  endpoint:
    path: /hypernode/crack/admin-passwords
    method: GET
- name: api_keys_check
  endpoint:
    path: /hypernode/crack/api-keys
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: whitelist_ip
  endpoint:
    path: /ftp/whitelist
    method: POST
    data_selector: whitelisted_ips
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: CPU Load Threshold
  endpoint:
    path: /path/to/cpu/load/threshold
    method: GET
    data_selector: threshold
    params:
      default: 70%
- name: Minimum Duration in Minutes
  endpoint:
    path: /path/to/minimum/duration
    method: GET
    data_selector: duration
    params:
      default: '15'
- name: Enable the Magento 1 API
  endpoint:
    path: /api/v1
    method: GET
- name: Enable Maintenance Mode for Magento 1
  endpoint:
    path: /maintenance_mode
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: cron_jobs
  endpoint:
    path: /cronjobs
    method: GET
- name: disk_space
  endpoint:
    path: /diskspace
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /database/credentials
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Backup Creation
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Backup Download
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: autoscaling
  endpoint:
    path: /hypernode-systemctl/autoscaling
    method: POST
    data_selector: status
    params: {}
- name: manage_thresholds
  endpoint:
    path: /hypernode-systemctl/settings
    method: POST
    data_selector: settings
    params:
      autoscale_trigger_load_percentage: 70
      autoscale_trigger_load_avg_minutes: 15
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enable_vertical_autoscaling
  endpoint:
    path: /hypernode-systemctl/autoscaling
    method: POST
    data_selector: enable
    params: {}
- name: manage_autoscaling_thresholds
  endpoint:
    path: /hypernode-systemctl/settings
    method: POST
    data_selector: thresholds
    params:
      autoscale_trigger_load_percentage: 70
      autoscale_trigger_load_avg_minutes: 15
- name: create_backup
  endpoint:
    path: ../best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: ../best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: whitelist
  endpoint:
    path: /ftp/whitelist
    method: GET
- name: sftp
  endpoint:
    path: /ftp/sftp
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: shop
  endpoint:
    path: /services/data/vXX.X/sobjects/Shop
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: snapshot_backup
  endpoint:
    path: /data/backup/current
    method: GET
    data_selector: backups
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: whitelist_ip
  endpoint:
    path: /ftp/whitelist
    method: POST
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: disk_space
  endpoint:
    path: /api/v1/disk_space
    method: GET
    data_selector: data
- name: snapshot
  endpoint:
    path: /data/backup/current
    method: GET
    data_selector: backups
    params: {}
- name: backup_snapshots
  endpoint:
    path: /hypernode/backups/snapshots
    method: GET
    data_selector: snapshots
- name: offsite_backups
  endpoint:
    path: /hypernode/backups/offsite
    method: GET
    data_selector: offsite_backups
- name: product
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: block_allow_ip_addresses
  endpoint:
    path: /nginx/how-to-block-allow-ip-addresses-in-nginx.html
    method: GET
- name: basic_authentication
  endpoint:
    path: /nginx/basic-authentication-on-hypernode-development-plans.html
    method: GET
- name: ftp_configuration
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
- name: mysql_configuration
  endpoint:
    path: /mysql/how-to-use-mysql-on-hypernode.html
    method: GET
- name: shop
  endpoint:
    path: /services/data/vXX.X/sobjects/Shop
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: base_url_change
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: log_cleaning
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: redis_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: varnish_configuration
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: robots_txt_creation
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-robots-txt-for-your-magento-1-shop.html
    method: GET
- name: sitemap_creation
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: clean_urls
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: mysql_query_logging
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: api_enablement
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: maintenance_mode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
    data_selector: backup
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: download
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DNS Manager
  endpoint:
    path: /dns-manager
    method: GET
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
    params: {}
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create_backup
    method: GET
    data_selector: backup_details
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/download_backup
    method: GET
    data_selector: download_details
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_new_database
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#create-a-new-database
    method: GET
- name: installing_magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#installing-magento-1-using-magerun
    method: GET
- name: configure_redis
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#configure-redis-as-cache-backend
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DNS Management
  endpoint:
    path: /dns/manage
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: Enable Magento 1 API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: Enable Maintenance Mode
  endpoint:
    path: /maintenance
    method: POST
    data_selector: status
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: api
  endpoint:
    path: /api/v1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: mysql
  endpoint:
    path: /mysql
    method: GET
    data_selector: records
    params: {}
- name: SPF Record
  endpoint:
    path: /spf/record
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_details
    params: {}
- name: Download Backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_link
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Configure Your Akeneo Crons
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-install-akeneo-7-on-hypernode.html#option-2-configure-your-akeneo-crons
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 3
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-3.html
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 4 and 5
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-4-and-5.html
    method: GET
- name: How to Change the Base URL in Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: How to Clean the Magento 1.x Logs
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: How to Configure Redis for Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: How to Configure Varnish for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: How to Create a robots.txt for your Magento 1 Shop
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-robots-txt-for-your-magento-1-shop.html
    method: GET
- name: How to Create a Sitemap.xml for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: How to Enable Clean URLs for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: How to Enable MySQL Query Logging for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: How to Enable the Magento 1 API
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: How to Enable the Maintenance Mode in Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: 'How to Fix SOAP error: Parsing WSDL: Couldn’t load from “”: failed to load
    external entity'
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html
    method: GET
- name: Test If Your SOAP API Is Available for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html#test-if-your-soap-api-is-available-for-magento
    method: GET
- name: Troubleshooting
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html#troubleshooting
    method: GET
- name: How to Flush the Magento 1.x Caches
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-magento-1-x-caches.html
    method: GET
- name: How to Flush the WSDL Cache
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-wsdl-cache.html
    method: GET
- name: How to Install Magento 1 on Hypernode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
    params: {}
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#create-a-new-database
    method: GET
- name: redis_cache
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html#configure-redis-as-cache-backend
    method: GET
- name: staging_environment
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-set-up-a-staging-environment-for-magento-1.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: base_urls
  endpoint:
    path: /V1/configurable-products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SFTP
  endpoint:
    path: /sftp
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mail_queue
  endpoint:
    path: /mailq
    method: GET
    data_selector: emails
    params: {}
- name: clear_mail_queue
  endpoint:
    path: /hypernode-postsuper
    method: POST
    data_selector: result
    params:
      action: delete
- name: User Credentials
  endpoint:
    path: /admin/user/credentials
    method: GET
    data_selector: credentials
- name: Product Data
  endpoint:
    path: /catalog/products
    method: GET
    data_selector: products
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: catalog_products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hypernode:performance
  endpoint:
    path: /hypernode/performance
    method: GET
    data_selector: records
- name: hypernode:patches:list
  endpoint:
    path: /hypernode/patches/list
    method: GET
    data_selector: records
- name: hypernode:modules:list-updates
  endpoint:
    path: /hypernode/modules/list-updates
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CampaignMember
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: dmarc_records
  endpoint:
    path: /dmarc/records
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: sftp_users
  endpoint:
    path: /sftp/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: POST
    data_selector: backup_records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
    data_selector: download_records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dmarc_record
  endpoint:
    path: /dmarc/record
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: DNS Records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: shop
  endpoint:
    path: /api/v1/shop
    method: GET
    data_selector: data
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
    params: {}
- name: whitelist_ips
  endpoint:
    path: /ftp/whitelist
    method: GET
    data_selector: whitelist
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: ftp_user_management
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: ftp_whitelist
  endpoint:
    path: /ftp/whitelist
    method: GET
    data_selector: whitelist
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: dmarc_record
  endpoint:
    path: /_dmarc.yourdomain.com
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
    params: {}
- name: ftp_connections
  endpoint:
    path: /ftp/connections
    method: GET
    data_selector: connections
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: database
  endpoint:
    path: /create/database
    method: POST
    data_selector: result
- name: cache_backend
  endpoint:
    path: /configure/redis
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /api/rest/categories
    method: GET
    data_selector: items
- name: mysql
  endpoint:
    path: /mysql
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode
    method: GET
- name: mysql_configuration
  endpoint:
    path: /mysql/how-to-use-mysql
    method: GET
- name: nginx_configuration
  endpoint:
    path: /nginx/how-to-configure-nginx-for-a-multistore
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /data/web
    method: GET
    data_selector: .my.cnf
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Magento API
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Enable the Magento 1 API
  endpoint:
    path: /api/rest
    method: GET
- name: Enable Maintenance Mode for Magento 1
  endpoint:
    path: /maintenance
    method: POST
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
    data_selector: records
    params: {}
- name: ftp_users_management
  endpoint:
    path: /ftp/manage_users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database_management
  endpoint:
    path: /manage/databases
    method: POST
    data_selector: databases
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Rate Limiting
  endpoint:
    path: /nginx/how-to-resolve-rate-limited-requests-429-too-many-requests.html
    method: GET
    data_selector: content
    params: {}
- name: Managing Vhosts
  endpoint:
    path: /nginx/hypernode-managed-vhosts.html
    method: GET
    data_selector: content
    params: {}
- name: Object Storage
  endpoint:
    path: /object-storage.html
    method: GET
    data_selector: content
    params: {}
- name: PHP
  endpoint:
    path: /php.html
    method: GET
    data_selector: content
    params: {}
- name: SSH
  endpoint:
    path: /ssh.html
    method: GET
    data_selector: content
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: mysql_user_management
  endpoint:
    path: /mysql/user_management
    method: GET
- name: mysql_database_management
  endpoint:
    path: /mysql/database_management
    method: GET
- name: database
  endpoint:
    path: /mysql/database
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: null
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Enable Magento 1 API
  endpoint:
    path: /api/v1/
    method: GET
    data_selector: api_response
    params: {}
- name: Enable Maintenance Mode
  endpoint:
    path: /maintenance/mode
    method: POST
    data_selector: maintenance_response
    params: {}
- name: campaign_member
  endpoint:
    method: GET
- name: contact
  endpoint:
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: manage_ftp_users
  endpoint:
    path: /ftp/manage_users
    method: GET
    data_selector: users
- name: whitelist_ip
  endpoint:
    path: /ftp/whitelist_ip
    method: POST
    data_selector: response
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: SFTP
  endpoint:
    path: /ftp/sftp
    method: GET
- name: FTP Configuration
  endpoint:
    path: /ftp/configuration
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_user_management
  endpoint:
    path: /ftp/user-management
    method: GET
    data_selector: users
    params: {}
- name: ftp_connection
  endpoint:
    path: /ftp/connection
    method: POST
    data_selector: connection_result
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: ftp_users
  endpoint:
    path: /manage/ftp/users
    method: GET
    data_selector: users
- name: whitelist_ips
  endpoint:
    path: /manage/ftp/whitelist
    method: GET
    data_selector: whitelisted_ips
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
    data_selector: backup_info
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
    data_selector: download_info
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: configure_ftp
  endpoint:
    path: /ftp/configure
    method: GET
- name: managing_ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: whitelist
  endpoint:
    path: /include.whitelist
    method: GET
    data_selector: records
- name: basic_auth
  endpoint:
    path: /include.basic_auth
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: How to Configure FTP/SFTP on Hypernode
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode
    method: GET
- name: Managing FTP Users in Control Panel
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode#managing-ftp-users-in-control-panel
    method: GET
- name: Adding Your IP Address to the Whitelist
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode#adding-your-ip-address-to-the-whitelist
    method: GET
- name: SFTP (SSH File Transfer Protocol)
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode#sftp-ssh-file-transfer-protocol
    method: GET
- name: Troubleshooting
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode#troubleshooting
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: access_logs
  endpoint:
    path: access.log
    method: GET
    data_selector: logs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cron_jobs
  endpoint:
    path: /cronjobs
    method: GET
    data_selector: jobs
    params: {}
- name: mailhog
  endpoint:
    path: /mailhog
    method: GET
    data_selector: messages
    params: {}
- name: Managing FTP Users
  endpoint:
    path: /ftp/manage-users
    method: GET
    data_selector: users
- name: Adding Your IP Address to the Whitelist
  endpoint:
    path: /ftp/whitelist-ip
    method: POST
    data_selector: result
- name: Connecting to FTP
  endpoint:
    path: /ftp/connect
    method: GET
    data_selector: connection_info
- name: Troubleshooting
  endpoint:
    path: /ftp/troubleshooting
    method: GET
    data_selector: issues
- name: order
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: customer
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: whitelist
  endpoint:
    path: /etc/nginx/app/include.whitelist
    method: GET
- name: basic_auth
  endpoint:
    path: /data/web/nginx/include.basic_auth
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: disk_space
  endpoint:
    path: /api/v1/disk_space
    method: GET
    data_selector: diskUsage
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Connecting to FTP
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#connecting-to-ftp
    method: GET
- name: SFTP
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#sftp-ssh-file-transfer-protocol
    method: GET
- name: Troubleshooting
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#troubleshooting
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: top_visitors_today
  endpoint:
    path: /var/log/nginx/access.log
    method: GET
    data_selector: top_10_visitors
    params: {}
- name: top_visitors_yesterday
  endpoint:
    path: /var/log/nginx/access.log.1.gz
    method: GET
    data_selector: top_40_visitors
    params: {}
- name: top_visitors_all_logs
  endpoint:
    path: /var/log/nginx/access.log*
    method: GET
    data_selector: top_100_visitors
    params: {}
- name: post_requests_ips
  endpoint:
    path: /var/log/nginx/access.log
    method: GET
    data_selector: post_requests_ips
    params: {}
- name: disk_space
  endpoint:
    path: /api/v1/disk_space
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Enable the Magento 1 API
  endpoint:
    path: /api/v1
    method: GET
- name: Enable Maintenance Mode for Magento 1
  endpoint:
    path: /maintenance/enable
    method: POST
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: database_credentials
  endpoint:
    path: /your/database/credentials
    method: GET
    data_selector: credentials
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
    data_selector: settings
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: shop
  endpoint:
    path: /services/data/v1.0/shop
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: gzip_settings
  endpoint:
    path: /etc/nginx/nginx.conf
    method: GET
    data_selector: settings
    params: {}
- name: customer
  endpoint:
    path: /services/data/vXX.X/sobjects/Customer
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#almost-done-look-up-your-database-credentials
- name: secure_document_root
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#enable-secure-document-root
- name: static_assets
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#build-static-assets
- name: sample_data
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#want-to-install-sample-data-too
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: vhost_management
  endpoint:
    path: /hypernode/manage/vhosts
    method: POST
    data_selector: vhosts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: configure_redis
  endpoint:
    path: /how-to-configure-redis-for-magento-1
    method: GET
    data_selector: records
- name: configure_varnish
  endpoint:
    path: /how-to-configure-varnish-for-magento-1-x
    method: GET
    data_selector: records
- name: create_sitemap
  endpoint:
    path: /how-to-create-a-sitemap-xml-for-magento-1-x
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: How to Configure FTP/SFTP on Hypernode
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
- name: Managing FTP Users in Control Panel
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#managing-ftp-users-in-control-panel
    method: GET
- name: Connecting to FTP
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#connecting-to-ftp
    method: GET
- name: API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: How to Configure FTP/SFTP on Hypernode
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
- name: SFTP (SSH File Transfer Protocol)
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#sftp-ssh-file-transfer-protocol
    method: GET
- name: Connecting to FTP
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html#connecting-to-ftp
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: POST
    data_selector: backupDetails
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
    data_selector: downloadDetails
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vhosts
  endpoint:
    path: /hypernode-manage-vhosts
    method: GET
    data_selector: vhosts
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: performance_optimization
  endpoint:
    path: /best-practices/performance/how-to-optimize-the-performance-of-your-magento-shop
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: disk_space
  endpoint:
    path: /tools/how-to-free-up-disk-space
    method: GET
    data_selector: records
- name: migration
  endpoint:
    path: /tools/how-to-migrate-your-shop-to-hypernode
    method: GET
    data_selector: records
- name: redis_error
  endpoint:
    path: /tools/how-to-solve-redis-error-oom-command-not-allowed-when-used-memory-maxmemory
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /rest/V1
    method: GET
    data_selector: data
- name: database_credentials
  endpoint:
    path: /database/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
    params: {}
- name: workspace_create
  endpoint:
    path: /hypernode-object-storage/create
    method: POST
    data_selector: workspace
    params:
      name: my-storage
      plan: OS200GB
- name: workspace_info
  endpoint:
    path: /hypernode-object-storage/info
    method: GET
    data_selector: workspace
    params: {}
- name: workspace_update
  endpoint:
    path: /hypernode-object-storage/update
    method: POST
    data_selector: workspace
    params:
      enable_versioning: true
- name: workspace_cancel
  endpoint:
    path: /hypernode-object-storage/cancel
    method: POST
    data_selector: workspace
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: flush_cache
  endpoint:
    path: /flush_cache
    method: POST
- name: enable_maintenance_mode
  endpoint:
    path: /enable_maintenance_mode
    method: POST
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: download_via_ftp
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: download_via_ssh
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync_objects
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: progress
- name: copy_objects
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: sync_status
- name: copy
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: copy_status
- name: delete_file
  endpoint:
    path: /objects/rm
    method: DELETE
    data_selector: response
    params: {}
- name: copy_file
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: response
    params: {}
- name: list_directory
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync
  endpoint:
    path: /sync
    method: POST
- name: cp
  endpoint:
    path: /cp
    method: POST
- name: ls
  endpoint:
    path: /ls
    method: GET
- name: list_objects
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: json
- name: move_objects
  endpoint:
    path: /objects/mv
    method: POST
- name: delete_file
  endpoint:
    path: /objects/rm
    method: DELETE
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: results
- name: copy
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: results
- name: list
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: results
- name: move
  endpoint:
    path: /objects/mv
    method: POST
    data_selector: results
- name: move_objects
  endpoint:
    path: /objects/mv
    method: POST
    data_selector: files_moved
- name: delete_objects
  endpoint:
    path: /objects/rm
    method: DELETE
    data_selector: objects_deleted
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
- name: cp
  endpoint:
    path: /objects/cp
    method: POST
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: result
- name: copy
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: result
- name: list
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: result
- name: move
  endpoint:
    path: /objects/mv
    method: POST
    data_selector: result
- name: delete
  endpoint:
    path: /objects/rm
    method: DELETE
    data_selector: result
- name: database_credentials
  endpoint:
    path: /your/database/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: Rate Limiting Methods
  endpoint:
    path: /nginx/how-to-resolve-rate-limited-requests-429-too-many-requests.html#rate-limiting-methods
    method: GET
- name: How to Redirect From or to WWW
  endpoint:
    path: /nginx/how-to-redirect-from-or-to-www.html
    method: GET
- name: How to Restrict Access to Your Admin Area
  endpoint:
    path: /nginx/how-to-restrict-access-to-your-admin-area.html
    method: GET
- name: How to Speed up Your Magento Shop by Tuning Gzip Compression
  endpoint:
    path: /nginx/how-to-speed-up-your-magento-shop-by-tuning-gzip-compression.html
    method: GET
- name: How to Set the Server Name in Nginx
  endpoint:
    path: /nginx/how-to-set-the-server-name-in-nginx.html
    method: GET
- name: how_to_create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: sync
    params: {}
- name: cp
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: copy
    params: {}
- name: ls
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /api/rest/categories
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
    data_selector: results
- name: cp
  endpoint:
    path: /objects/cp
    method: POST
    data_selector: results
- name: ls
  endpoint:
    path: /objects/ls
    method: GET
    data_selector: results
- name: mv
  endpoint:
    path: /objects/mv
    method: POST
    data_selector: results
- name: move_files
  endpoint:
    path: /objects/mv
    method: POST
- name: delete_objects
  endpoint:
    path: /objects/rm
    method: POST
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: whitelist
  endpoint:
    path: /ftp/whitelist
    method: GET
    data_selector: whitelist
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sync
  endpoint:
    path: /objects/sync
    method: POST
- name: copy
  endpoint:
    path: /objects/cp
    method: POST
- name: list
  endpoint:
    path: /objects/ls
    method: GET
- name: move
  endpoint:
    path: /objects/mv
    method: POST
- name: delete
  endpoint:
    path: /objects/rm
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: flush_opcache
  endpoint:
    path: /private/flush_opcache.php
    method: GET
    data_selector: Opcache Flushed
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /api/rest/v1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: whitelist_ip
  endpoint:
    path: /ftp/whitelist
    method: POST
- name: performance_optimization
  endpoint:
    path: /best-practices/performance/how-to-optimize-the-performance-of-your-magento-shop
    method: GET
    data_selector: performance
    params: {}
- name: security
  endpoint:
    path: /best-practices/security/how-hypernode-protects-your-magento-shop
    method: GET
    data_selector: security
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: FTP Users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: Whitelist IPs
  endpoint:
    path: /ftp/whitelist
    method: GET
    data_selector: whitelisted_ips
- name: database_credentials
  endpoint:
    path: /your/database/credentials
    method: GET
    data_selector: credentials
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: flush_opcache
  endpoint:
    path: /private/flush_opcache.php
    method: GET
- name: api
  endpoint:
    path: /
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: Enable the Magento 1 API
  endpoint:
    path: /api/v1
    method: GET
- name: Flush the Magento 1.x Caches
  endpoint:
    path: /cache/flush
    method: POST
- name: PHP_Versions
  endpoint:
    path: /supported-php-versions
    method: GET
    data_selector: versions
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: performance_issues
  endpoint:
    path: /best-practices/performance
    method: GET
- name: security
  endpoint:
    path: /best-practices/security
    method: GET
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
    params: {}
- name: whitelist
  endpoint:
    path: /whitelist
    method: GET
    data_selector: addresses
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: ftp_connections
  endpoint:
    path: /ftp/connections
    method: GET
    data_selector: connections
- name: rate_limiting_methods
  endpoint:
    path: /nginx/how-to-resolve-rate-limited-requests-429-too-many-requests.html#rate-limiting-methods
    method: GET
    data_selector: methods
    params: {}
- name: rate_limiting_per_ip
  endpoint:
    path: /nginx/how-to-resolve-rate-limited-requests-429-too-many-requests.html#rate-limiting-per-ip-address
    method: GET
    data_selector: ip_addresses
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: logs
  endpoint:
    path: /services/data/vXX.X/logs
    method: GET
    data_selector: records
- name: whitelist_ip
  endpoint:
    path: /hypernode-systemctl/whitelist
    method: POST
    data_selector: whitelist
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: whitelist_ips
  endpoint:
    path: /whitelist/ips
    method: POST
    data_selector: whitelist
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api/rest/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rate_limiting
  endpoint:
    path: /nginx/how-to-resolve-rate-limited-requests-429-too-many-requests.html
    method: GET
- name: admin_access_restriction
  endpoint:
    path: /nginx/how-to-restrict-access-to-your-admin-area.html
    method: GET
- name: troubleshooting_502_errors
  endpoint:
    path: /php/how-to-resolve-502-gateway-errors.html
    method: GET
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
- name: whitelist_ip
  endpoint:
    path: /hypernode-systemctl/whitelist
    method: GET
    data_selector: whitelist
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
    data_selector: records
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
    data_selector: records
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: productList
    params: {}
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orderList
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params: {}
- name: table
  endpoint:
    path: /services/data/vXX.X/sobjects/Table
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: billing_info
  endpoint:
    path: /billing/info
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
    params: {}
- name: ftp_whitelist
  endpoint:
    path: /ftp/whitelist
    method: GET
    data_selector: whitelist
    params: {}
- name: fpc_configuration
  endpoint:
    path: /app/etc/fpc.xml
    method: POST
    data_selector: fpc
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Magento API
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
    data_selector: configurations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API
  endpoint:
    path: /api
    method: GET
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: performance_report
  endpoint:
    path: /hypernode:performance
    method: GET
- name: required_patches
  endpoint:
    path: /hypernode:patches:list
    method: GET
- name: module_updates
  endpoint:
    path: /hypernode:modules:list-updates
    method: GET
- name: log_analyses
  endpoint:
    path: /hypernode:log-analyses
    method: GET
- name: magerun_maps
  endpoint:
    path: /hypernode:maps-generate
    method: GET
- name: varnish_config_save
  endpoint:
    path: /hypernode:varnish:config-save
    method: POST
- name: varnish_flush
  endpoint:
    path: /hypernode:varnish:flush
    method: POST
- name: crack_admin_passwords
  endpoint:
    path: /hypernode:crack:admin-passwords
    method: POST
- name: crack_api_keys
  endpoint:
    path: /hypernode:crack:api-keys
    method: POST
- name: deploy
  endpoint:
    path: /hypernode/deploy
    method: POST
    data_selector: deployment
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
- name: log_rotation
  endpoint:
    path: /data/web/hypernode_logrotate.conf
    method: GET
    data_selector: logrotate_config
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: fpc_configuration
  endpoint:
    path: /data/web/public/app/etc/fpc.xml
    method: GET
    data_selector: fpc
    params: {}
- name: Enable Magento 1 API
  endpoint:
    path: /api/v1
    method: GET
- name: Enable Maintenance Mode
  endpoint:
    path: /maintenance
    method: POST
- name: database
  endpoint:
    path: /create/database
    method: POST
    data_selector: result
- name: cache
  endpoint:
    path: /configure/cache
    method: POST
    data_selector: result
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: shop_importer
  endpoint:
    path: /shop/importer
    method: POST
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
    params: {}
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance
  endpoint:
    path: /hypernode/performance
    method: GET
- name: patches
  endpoint:
    path: /hypernode/patches/list
    method: GET
- name: modules_updates
  endpoint:
    path: /hypernode/modules/list-updates
    method: GET
- name: log_analyses
  endpoint:
    path: /hypernode/log-analyses
    method: GET
- name: maps_generate
  endpoint:
    path: /hypernode/maps-generate
    method: GET
- name: varnish_config_save
  endpoint:
    path: /hypernode/varnish/config-save
    method: POST
- name: varnish_flush
  endpoint:
    path: /hypernode/varnish/flush
    method: POST
- name: crack_admin_passwords
  endpoint:
    path: /hypernode/crack/admin-passwords
    method: POST
- name: crack_api_keys
  endpoint:
    path: /hypernode/crack/api-keys
    method: POST
- name: deploy
  endpoint:
    path: /github/workflows/deploy.yml
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Magento API
  endpoint:
    path: /api/v1/
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /your-database-credentials
    method: GET
- name: Adding Your IP Address to the Whitelist
  endpoint:
    path: /ftp/whitelist
    method: POST
- name: Managing FTP Users
  endpoint:
    path: /ftp/users
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: elasticsearch_version
  endpoint:
    path: /settings/elasticsearch_version
    method: GET
    data_selector: elasticsearch_version
- name: elasticsearch_enabled
  endpoint:
    path: /settings/elasticsearch_enabled
    method: GET
    data_selector: elasticsearch_enabled
- name: Configure FTP/SFTP on Hypernode
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp-on-hypernode.html
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /create-database
    method: POST
- name: cache_backend
  endpoint:
    path: /configure-redis-cache
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: development_plan
  endpoint:
    path: /development/plans
    method: GET
- name: Adding FTP Users
  endpoint:
    path: /ftp/add-users
    method: POST
- name: Deleting FTP Users
  endpoint:
    path: /ftp/delete-users
    method: DELETE
- name: Listing all FTP Users
  endpoint:
    path: /ftp/list-users
    method: GET
- name: Adding Your IP Address to the Whitelist
  endpoint:
    path: /ftp/whitelist-ip
    method: POST
- name: Connecting to FTP
  endpoint:
    path: /ftp/connect
    method: GET
- name: Shop Importer
  endpoint:
    path: /service.byte.nl
    method: GET
    data_selector: importer_tool
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: configuration
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
- name: backup_creation
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: backup_methods
    params: {}
- name: backup_download
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: download_methods
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: configuration
- name: composer1
  endpoint:
    path: /usr/local/bin/composer1
    method: GET
- name: composer2
  endpoint:
    path: /usr/local/bin/composer2
    method: GET
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
    params: {}
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: POST
    data_selector: backup
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
    data_selector: download
    params: {}
- name: Configure Your Akeneo Crons
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-install-akeneo-7-on-hypernode.html#option-2-configure-your-akeneo-crons
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 3
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-3.html
    method: GET
- name: How To Use A Basic Staging Environment with Akeneo 4 and 5
  endpoint:
    path: /ecommerce-applications/akeneo/how-to-use-a-basic-staging-environment-with-akeneo-4-and-5.html
    method: GET
- name: How to Change the Base URL in Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-change-the-base-url-in-magento-1-x.html
    method: GET
- name: How to Clean the Magento 1.x Logs
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-clean-the-magento-1-x-logs.html
    method: GET
- name: How to Configure Redis for Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-redis-for-magento-1.html
    method: GET
- name: How to Configure Varnish for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-configure-varnish-for-magento-1-x.html
    method: GET
- name: How to Create a robots.txt for your Magento 1 Shop
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-robots-txt-for-your-magento-1-shop.html
    method: GET
- name: How to Create a Sitemap.xml for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-create-a-sitemap-xml-for-magento-1-x.html
    method: GET
- name: How to Enable Clean URLs for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-clean-urls-for-magento.html
    method: GET
- name: How to Enable MySQL Query Logging for Magento 1.x
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-mysql-query-logging-for-magento-1-x.html
    method: GET
- name: How to Enable the Magento 1 API
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-magento-1-api.html
    method: GET
- name: How to Enable the Maintenance Mode in Magento 1
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-enable-the-maintenance-mode-in-magento-1.html
    method: GET
- name: 'How to Fix SOAP error: Parsing WSDL: Couldn’t load from “”: failed to load
    external entity'
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html
    method: GET
- name: Test If Your SOAP API Is Available for Magento
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-fix-soap-error-parsing-wsdl-couldnt-load-from-failed-to-load-external-entity.html#test-if-your-soap-api-is-available-for-magento
    method: GET
- name: How to Flush the Magento 1.x Caches
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-magento-1-x-caches.html
    method: GET
- name: How to Flush the WSDL Cache
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-flush-the-wsdl-cache.html
    method: GET
- name: How to Install Magento 1 on Hypernode
  endpoint:
    path: /ecommerce-applications/magento-1/how-to-install-magento-1-on-hypernode.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: ftp_configuration
  endpoint:
    path: /ftp/configure
    method: GET
- name: catalog_product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: FTP Configuration
  endpoint:
    path: /ftp/configuration
    method: GET
- name: Managing FTP Users
  endpoint:
    path: /ftp/users
    method: GET
- name: Whitelist Management
  endpoint:
    path: /ftp/whitelist
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
    params: {}
- name: database_credentials
  endpoint:
    path: /your-database-credentials-endpoint
    method: GET
    data_selector: credentials
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: performance_optimization
  endpoint:
    path: /best-practices/performance/how-to-optimize-the-performance-of-your-magento-shop.html
    method: GET
- name: security
  endpoint:
    path: /best-practices/security/how-hypernode-protects-your-magento-shop.html
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
    params: {}
- name: whitelist
  endpoint:
    path: /whitelist
    method: GET
    data_selector: whitelist
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: null
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: null
    params: {}
- name: performance_optimization
  endpoint:
    path: /best-practices/performance/how-to-optimize-the-performance-of-your-magento-shop.html
    method: GET
    data_selector: records
- name: security
  endpoint:
    path: /best-practices/security/how-to-apply-magento-patches.html
    method: GET
    data_selector: records
- name: api
  endpoint:
    path: /api
    method: GET
- name: brancher
  endpoint:
    path: /v2/app/<appname>/brancher/
    method: POST
    data_selector: brancher
    params: {}
- name: brancher_instance
  endpoint:
    path: /v2/app/<appname>-eph123456
    method: GET
    data_selector: brancher_instance
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: brancher
  endpoint:
    path: /v2/app/<appname>/brancher/
    method: POST
    data_selector: Brancher node
    params: {}
- name: brancher_instance
  endpoint:
    path: /v2/app/<appname>-eph123456
    method: GET
    data_selector: Brancher details
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: IP changes
  endpoint:
    path: /about-hypernode/support/how-to-handle-os-and-room-change-upgrade.html#what-needs-to-be-adjusted-after-the-xgrade-when-can-it-be-performed-ip-changes
    method: GET
- name: Support Availability
  endpoint:
    path: /about-hypernode/support/scope-of-support.html#support-availability
    method: GET
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: hypernode-systemctl
  endpoint:
    path: /hypernode/systemctl
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-ftp
  endpoint:
    path: /hypernode/ftp
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-parse-nginx-log
  endpoint:
    path: /hypernode/parse-nginx-log
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-cron-flockerizr
  endpoint:
    path: /hypernode/cron-flockerizr
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-fpm-slow-modules
  endpoint:
    path: /hypernode/fpm-slow-modules
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-image-optimizer
  endpoint:
    path: /hypernode/image-optimizer
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-fpm-status
  endpoint:
    path: /hypernode/fpm-status
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-servicectl
  endpoint:
    path: /hypernode/servicectl
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-importer
  endpoint:
    path: /hypernode/importer
    method: GET
    data_selector: tools
    params: {}
- name: hypernode-postsuper
  endpoint:
    path: /hypernode/postsuper
    method: GET
    data_selector: tools
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: settings
- name: whitelist
  endpoint:
    path: /whitelist
    method: GET
    data_selector: whitelists
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: pm2_my_application
  endpoint:
    path: /data/web/my_application/main.py
    method: GET
    data_selector: Hello, Visitor!
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: database_credentials
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#almost-done-look-up-your-database-credentials
    method: GET
    data_selector: records
- name: cron_configuration
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#configure-your-magento-2-cron
    method: GET
    data_selector: records
- name: troubleshooting
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#troubleshooting
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: whitelist_ip
  endpoint:
    path: /ftp/whitelist
    method: POST
    data_selector: result
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: brancher
  endpoint:
    path: /v2/app/<appname>/brancher/
    method: POST
    data_selector: name
- name: brancher_details
  endpoint:
    path: /v2/app/<appname>-eph123456
    method: GET
    data_selector: details
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: brancher
  endpoint:
    path: /v2/app/<appname>/brancher/
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: how_to_configure_ftp_sftp
  endpoint:
    path: /ftp/how-to-configure-ftp-sftp
    method: GET
- name: troubleshooting
  endpoint:
    path: /ftp/troubleshooting
    method: GET
- name: hypernode-systemctl
  endpoint:
    path: /hypernode/systemctl
    method: POST
    data_selector: commands
- name: hypernode-ftp
  endpoint:
    path: /hypernode/ftp
    method: POST
    data_selector: credentials
- name: hypernode-parse-nginx-log
  endpoint:
    path: /hypernode/parse-nginx-log
    method: POST
    data_selector: parsed_logs
- name: hypernode-cron-flockerizr
  endpoint:
    path: /hypernode/cron-flockerizr
    method: POST
    data_selector: cron_entries
- name: hypernode-fpm-slow-modules
  endpoint:
    path: /hypernode/fpm-slow-modules
    method: GET
    data_selector: slow_modules
- name: hypernode-image-optimizer
  endpoint:
    path: /hypernode/image-optimizer
    method: POST
    data_selector: optimized_images
- name: hypernode-fpm-status
  endpoint:
    path: /hypernode/fpm-status
    method: GET
    data_selector: fpm_status
- name: hypernode-servicectl
  endpoint:
    path: /hypernode/servicectl
    method: POST
    data_selector: service_control
- name: hypernode-importer
  endpoint:
    path: /hypernode/importer
    method: POST
    data_selector: import_status
- name: hypernode-postsuper
  endpoint:
    path: /hypernode/postsuper
    method: POST
    data_selector: mailqueue_status
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
- name: my_application
  endpoint:
    path: /data/web/my_application/main.py
    method: GET
    data_selector: Hello, Visitor!
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemap
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: Adding FTP Users
  endpoint:
    path: /ftp/adding-users
    method: GET
- name: Deleting FTP Users
  endpoint:
    path: /ftp/deleting-users
    method: GET
- name: Listing all FTP Users
  endpoint:
    path: /ftp/listing-users
    method: GET
- name: Adding Your IP Address to the Whitelist
  endpoint:
    path: /ftp/whitelist-ip
    method: POST
- name: Connecting to FTP
  endpoint:
    path: /ftp/connect
    method: GET
- name: create_new_database
  endpoint:
    path: /create-new-database
    method: GET
- name: installing_magento
  endpoint:
    path: /installing-magento
    method: GET
- name: performance_report
  endpoint:
    path: /hypernode:performance
    method: GET
- name: required_patches
  endpoint:
    path: /hypernode:patches:list
    method: GET
- name: module_updates
  endpoint:
    path: /hypernode:modules:list-updates
    method: GET
- name: log_analyses
  endpoint:
    path: /hypernode:log-analyses
    method: GET
- name: nginx_maps
  endpoint:
    path: /hypernode:maps-generate
    method: GET
- name: varnish_config_save
  endpoint:
    path: /hypernode:varnish:config-save
    method: GET
- name: varnish_flush
  endpoint:
    path: /hypernode:varnish:flush
    method: GET
- name: admin_passwords
  endpoint:
    path: /hypernode:crack:admin-passwords
    method: GET
- name: api_keys
  endpoint:
    path: /hypernode:crack:api-keys
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: performance_metrics
  endpoint:
    path: /api/v1/performance_metrics
    method: GET
    data_selector: data
    params: {}
- name: varnish
  endpoint:
    path: /varnish
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: whitelist
  endpoint:
    path: /whitelist
    method: GET
    data_selector: ip_addresses
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api/v1
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /database
    method: POST
    data_selector: records
    params: {}
- name: cache_backend
  endpoint:
    path: /cache_backend
    method: PUT
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Laravel
  endpoint:
    path: /framework/laravel.html
    method: GET
- name: Hypernode Deploy
  endpoint:
    path: /hypernode-deploy/getting-started.html
    method: GET
- name: api
  endpoint:
    path: /api/rest
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: hypernode
  endpoint:
    path: /api/v1/hypernodes
    method: GET
    data_selector: data
    params: {}
- name: disk_space
  endpoint:
    path: /tools/how-to-free-up-disk-space.html
    method: GET
- name: migration
  endpoint:
    path: /tools/how-to-migrate-your-shop-to-hypernode.html
    method: GET
- name: redis_error
  endpoint:
    path: /tools/how-to-solve-redis-error-oom-command-not-allowed-when-used-memory-maxmemory.html
    method: GET
- name: elasticsearch
  endpoint:
    path: /tools/how-to-use-elasticsearch-on-hypernode.html
    method: GET
- name: development_plans
  endpoint:
    path: /tools/how-to-use-hypernode-development-plans.html
    method: GET
- name: magento_corediff
  endpoint:
    path: /tools/how-to-use-magento-corediff-on-hypernode.html
    method: GET
- name: mailhog
  endpoint:
    path: /tools/how-to-use-mailhog-on-hypernode.html
    method: GET
- name: nodejs
  endpoint:
    path: /tools/how-to-use-node-js-and-npm-on-hypernode.html
    method: GET
- name: cronjobs
  endpoint:
    path: /tools/how-to-use-periodic-tasks-cronjobs-on-hypernode.html
    method: GET
- name: supervisor
  endpoint:
    path: /tools/how-to-use-supervisor.html
    method: GET
- name: systemctl_cli
  endpoint:
    path: /tools/how-to-use-the-hypernode-systemctl-cli-tool.html
    method: GET
- name: hypernode_brancher
  endpoint:
    path: /tools/hypernode-brancher.html
    method: GET
- name: cli_tools
  endpoint:
    path: /tools/hypernode-cli-tools-and-magerun-plugins.html
    method: GET
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: ftp_users
  endpoint:
    path: /ftp/users
    method: GET
    data_selector: users
- name: How to Create a Backup and Download it to Your Local Machine
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html
    method: GET
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups into a Single .zip File
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download the Backup to Your Local Machine
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: ftp_configuration
  endpoint:
    path: /ftp/configuration
    method: GET
    data_selector: records
- name: sftp_configuration
  endpoint:
    path: /sftp/configuration
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: disk_usage
  endpoint:
    path: /api/v1/disk_usage
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vhosts
  endpoint:
    path: /vhosts
    method: GET
    data_selector: data
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /backups/download
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: hypernode_settings
  endpoint:
    path: /api/v1/hypernode/settings
    method: GET
    data_selector: data
    params: {}
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /hypernode/settings
    method: GET
    data_selector: settings
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: orders
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: hypernode
  endpoint:
    path: /api/v1/hypernodes
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: hypernodes
  endpoint:
    path: /hypernodes
    method: GET
    data_selector: hypernodes
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create-backup
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/download-backup
    method: GET
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: orders
- name: domain
  endpoint:
    path: /services/data/vXX.X/sobjects/Domain
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: records
- name: hypernode
  endpoint:
    path: /api/v1/hypernodes
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: floating_ip
  endpoint:
    path: /settings/floating_ip
    method: GET
- name: open_vpn
  endpoint:
    path: /settings/open_vpn
    method: GET
- name: redis_persistent_instance
  endpoint:
    path: /settings/redis_persistent_instance
    method: GET
- name: mysql_tmp_on_data
  endpoint:
    path: /settings/mysql_tmp_on_data
    method: GET
- name: blackfire_enabled
  endpoint:
    path: /settings/blackfire_enabled
    method: GET
- name: blackfire_server_token
  endpoint:
    path: /settings/blackfire_server_token
    method: GET
- name: blackfire_server_id
  endpoint:
    path: /settings/blackfire_server_id
    method: GET
- name: monitoring_enabled
  endpoint:
    path: /settings/monitoring_enabled
    method: GET
- name: ioncube_enabled
  endpoint:
    path: /settings/ioncube_enabled
    method: GET
- name: varnish_esi_ignore_https
  endpoint:
    path: /settings/varnish_esi_ignore_https
    method: GET
- name: firewall_block_ftp
  endpoint:
    path: /settings/firewall_block_ftp
    method: GET
- name: new_relic_enabled
  endpoint:
    path: /settings/new_relic_enabled
    method: GET
- name: modern_ssh_config_enabled
  endpoint:
    path: /settings/modern_ssh_config_enabled
    method: GET
- name: modern_ssl_config_enabled
  endpoint:
    path: /settings/modern_ssl_config_enabled
    method: GET
- name: override_sendmail_return_path
  endpoint:
    path: /settings/override_sendmail_return_path
    method: GET
- name: Enable the Magento 1 API
  endpoint:
    path: /api/v1
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: performance_issues
  endpoint:
    path: /api/performance/issues
    method: GET
    data_selector: issues
- name: transfer_ownership_hypernode
  endpoint:
    path: /transfer/ownership/hypernode
    method: POST
    data_selector: transfer_details
    params: {}
- name: transfer_account
  endpoint:
    path: /transfer/account
    method: POST
    data_selector: account_details
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: domains
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /look-up-your-database-credentials
    method: GET
- name: cron_configuration
  endpoint:
    path: /configure-your-magento-2-cron
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: User Roles
  endpoint:
    path: /user_roles
    method: GET
    data_selector: roles
    params: {}
- name: Permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
    params: {}
- name: logs
  endpoint:
    path: /v1/logs
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transfer_ownership_hypernode
  endpoint:
    path: /transfer/ownership/hypernode
    method: POST
    data_selector: transferDetails
    params: {}
- name: transfer_account
  endpoint:
    path: /transfer/account
    method: POST
    data_selector: accountTransferDetails
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: ''
    params: {}
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: ''
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: database_credentials
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#almost-done-look-up-your-database-credentials
    method: GET
- name: cron_configuration
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-configure-your-magento-2-cron
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: database_setup
  endpoint:
    path: /install/database
    method: POST
    data_selector: result
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: base_url_change
  endpoint:
    path: /how-to-change-the-base-url-in-magento-1-x
    method: GET
- name: log_cleaning
  endpoint:
    path: /how-to-clean-the-magento-1-x-logs
    method: GET
- name: redis_configuration
  endpoint:
    path: /how-to-configure-redis-for-magento-1
    method: GET
- name: varnish_configuration
  endpoint:
    path: /how-to-configure-varnish-for-magento-1-x
    method: GET
- name: sitemap_creation
  endpoint:
    path: /how-to-create-a-sitemap-xml-for-magento-1-x
    method: GET
- name: clean_urls
  endpoint:
    path: /how-to-enable-clean-urls-for-magento
    method: GET
- name: mysql_query_logging
  endpoint:
    path: /how-to-enable-mysql-query-logging-for-magento-1-x
    method: GET
- name: api_enablement
  endpoint:
    path: /how-to-enable-the-magento-1-api
    method: GET
- name: maintenance_mode
  endpoint:
    path: /how-to-enable-the-maintenance-mode-in-magento-1
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
- name: Enable Maintenance Mode
  endpoint:
    path: /api/v1/maintenance
    method: POST
    data_selector: result
    params: {}
- name: Flush Cache
  endpoint:
    path: /api/v1/cache/flush
    method: POST
    data_selector: result
    params: {}
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download the Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: Managing FTP Users
  endpoint:
    path: /how-to-configure-ftp-sftp-on-hypernode
    method: GET
- name: Connecting to FTP
  endpoint:
    path: /how-to-configure-ftp-sftp-on-hypernode#connecting-to-ftp
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: soap_api
  endpoint:
    path: /api/v1_1/
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: hypernode
  endpoint:
    path: /api/v1/hypernodes
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: backup_creation_details
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: backup_download_details
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: object_storage
  endpoint:
    path: /object-storage
    method: GET
    data_selector: records
- name: presence_plan
  endpoint:
    path: /presence/plans
    method: GET
    data_selector: plans
- name: forward_options
  endpoint:
    path: /presence/forward-options
    method: GET
    data_selector: forwardOptions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
    params: {}
- name: performance_checks
  endpoint:
    path: /scan/checklist
    method: GET
    data_selector: performance_checks
- name: security_checks
  endpoint:
    path: /scan/checklist
    method: GET
    data_selector: security_checks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: performance_issues
  endpoint:
    path: /best-practices/performance
    method: GET
    data_selector: records
- name: security
  endpoint:
    path: /best-practices/security
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /api/rest/v1/products
    method: GET
    data_selector: items
- name: category
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    data_selector: items
- name: domain_registration
  endpoint:
    path: /domains/register
    method: POST
    data_selector: domain
    params: {}
- name: domain_transfer
  endpoint:
    path: /domains/transfer
    method: POST
    data_selector: domain
    params: {}
- name: dns_only_service
  endpoint:
    path: /domains/dns-only
    method: POST
    data_selector: domain
    params: {}
- name: API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: categories
  endpoint:
    path: /rest/V1/categories
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: api
  endpoint:
    path: /api
    method: GET
- name: billing
  endpoint:
    path: /services/data/vXX.X/sobjects/Billing
    method: GET
    data_selector: records
    params: {}
- name: Enable the Magento 1 API
  endpoint:
    path: /rest/V1/
    method: GET
    data_selector: api_response
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: database_credentials
  endpoint:
    path: /ecommerce-applications/magento-2/how-to-install-magento-2-on-hypernode.html#almost-done-look-up-your-database-credentials
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: performance_checks
  endpoint:
    path: /performance/checks
    method: GET
    data_selector: checks
    params: {}
- name: security_checks
  endpoint:
    path: /security/checks
    method: GET
    data_selector: checks
    params: {}
- name: Flush Magento Cache
  endpoint:
    path: /flush/cache
    method: POST
    data_selector: cache
    params: {}
- name: Flush WSDL Cache
  endpoint:
    path: /flush/wsdl
    method: POST
    data_selector: wsdl
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: Create File Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-file-backup
    method: GET
- name: Create Database Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-database-backup
    method: GET
- name: Zip Both Backups
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#zip-both-backups-into-a-single-zip-file
    method: GET
- name: Download the Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: Download via FTP
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ftp
    method: GET
- name: Download via SSH
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-via-ssh
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: records
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: product
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: hypernode_deploy
  endpoint:
    path: /hypernode/deploy
    method: POST
    data_selector: records
    params: {}
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
    params: {}
- name: support
  endpoint:
    path: /support
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: api
  endpoint:
    path: /api
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
    data_selector: ''
    params: {}
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Magento API
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: product
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: customer
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: customers
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: api
  endpoint:
    path: /api/rest
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/create
    method: POST
- name: download_backup
  endpoint:
    path: /best-practices/backups/download
    method: GET
- name: Magento API
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: order
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /api/rest/v1/products
    method: GET
    data_selector: _embedded.items
    params:
      incremental: updated
- name: categories
  endpoint:
    path: /api/rest/v1/categories
    method: GET
    data_selector: _embedded.items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /api/rest/orders
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: product
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customer
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /api/rest/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /api/rest/customers
    method: GET
    data_selector: items
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
- name: api
  endpoint:
    path: /rest/V1/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Create Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: Download Backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#create-the-backup
    method: GET
- name: download_backup
  endpoint:
    path: /best-practices/backups/how-to-create-a-backup-and-download-it-to-your-local-machine.html#download-the-backup-to-your-local-machine
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params: {}
- name: orders
  endpoint:
    path: /rest/V1/orders
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
    params: {}
- name: products
  endpoint:
    path: /rest/V1/products
    method: GET
    data_selector: items
- name: customers
  endpoint:
    path: /rest/V1/customers
    method: GET
    data_selector: items
notes:
- Backup creation may take time depending on the size of data.
- Ensure you have sufficient permissions to create backups.
- Ensure proper OAuth credentials are set up in Magento admin.
- API usage may be limited based on plan.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Hypernode
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- How to Block Bad Bots via the Control Panel
- How to Check Why My Site Is Slow
- How to Debug ‘out of Memory’ (OOM) Events
- Magento 2 API by default discloses information that can be considered private.
- Several API methods that might leak confidential data are protected by default.
- The Magento team released security update Magento 2.0.3 on March 30th 2017. This
  release contains a security fix that restricts access to anonymous web APIs.
- Uses OAuth2 with refresh token — requires setup of connected app in Magento
- Some endpoints may return paginated responses
- How to Migrate Your Shop to Hypernode
- How to Solve Redis Error 'OOM command not allowed when used memory > 'maxmemory'
- Uses OAuth2 with refresh token — requires setup of connected app in hypernode
- Requires setup of connected app in Hypernode
- Requires setup of connected app in Magento
- Requires configuration for API access in Magento settings.
- Requires setup of connected app in api
- Ensure the integration token has the necessary permissions.
- Ensure proper OAuth setup in Magento for API access.
- Some API endpoints may have rate limits.
- I have a dedicated machine instead of a cloud environment. What does this mean?
- Requires setup of connected app in Hypernode API
- Ensure that API access is properly configured in the Magento admin.
- No specific authentication required for accessing Hypernode API.
- All plans have a 30 days contract term which gives you full flexibility to only
  pay for what you use.
- You have 14 days to test your shops’ performance on Hypernode.
- Enable the Maintenance Mode in Magento 1 by Setting the maintenance.flag
- Protect Your Magmi Installation With HTTP Basic Authentication
- Protect Your Magmi Installation With an IP Whitelist
- How to Fix Invalid Form Key Error
- How to Identify and Stop Long Running Processes
- How to Optimise Your Magento Disk Performance
- How to Resolve a 413 Request Entity Too Large Error
- How to solve the “Front Controller Reached 100 Router Match Iterations” Error
- How to Spot Slow Extensions Using the PHP Slow Logs
- Your plan will be available in the Service Panel within 10 minutes after completing
  your order.
- Some endpoints may require additional permissions
- Some endpoints may return nulls in deeply nested fields
- Ensure to set up OAuth for API access
- Ensure proper configurations are in place for object storage access.
- Check if Magento 2.x Is Running in Production Mode
- Unable to Find a Cause?
- After an update to MySQL 5.7 or 8.0, it’s not possible to switch back to MySQL 5.6.
- Make sure ElasticSearch is enabled.
- Ensure to follow the setup instructions for Hypernode.
- Configure Magento to Create Sitemaps
- Enable sitemap.xml in Magento
- Akeneo 3 preferably requires a Hypernode Pelican L, Falcon M, Eagle M hosting plan
  or larger.
- 'Important: After an update to MySQL 5.7 or 8.0, it’s not possible to switch back
  to MySQL 5.6.'
- Ensure all API credentials are correctly configured in Magento admin.
- Some endpoints may require specific permissions.
- Requires OAuth2 setup in the Magento admin panel
- Check permissions for accessing data
- Use Composer 2 in a Separate Path
- What needs to be adjusted after the Xgrade? When can it be performed? (IP changes)
- Ensure to configure API access in Magento settings
- API may have rate limits that need to be adhered to
- Akeneo 4 requires MySQL 8.0, PHP 7.3, and Elasticsearch 7.x
- After updating to MySQL 5.7 or 8.0, reverting to MySQL 5.6 is not possible.
- Ensure the API credentials have the necessary permissions to access the data.
- API requires OAuth2 authentication for access
- Some endpoints may have rate limits
- Debugging PHP Issues may be required for integration.
- Akeneo 5 requires MySQL 8.0, PHP 7.4, and Elasticsearch 7.x
- Installation may take up to 15 minutes
- Ensure to follow the setup instructions carefully.
- Requires MySQL 8.0, PHP 7.4, and Elasticsearch 7.x.
- Installation may take up to 15 minutes.
- Further Recommendations
- Akeneo 6 preferably requires a Hypernode Pelican L, Falcon M, Eagle M hosting plan
  or larger.
- You can either choose to install it on a seperate Hypernode instance or on the same
  Hypernode as your Magento or Shopware installation.
- It’s important to follow these steps in order since you cannot upgrade straight
  from MySQL 5.6 to MySQL 8.0.
- Requires OAuth2 setup for API access.
- Backup process may vary depending on the type of backup selected.
- Akeneo 7.x requires MySQL 8.0.30, which is only available on Debian Bookworm.
- Akeneo 7 preferably requires a Hypernode Pelican L, Falcon M, Eagle M hosting plan
  or larger.
- 'Important note: Akeneo 7.x requires MySQL 8.0.30, which is only available on Debian
  Bookworm.'
- Requires setup of connected app in API
- Some endpoints may have additional permissions required
- The staging environment shares resources with the production environment.
- Don't forget configs like the temp upload directory, please update accordingly.
- Requires configuration of settings in Hypernode
- Ensure the API is enabled in the Magento settings.
- Ensure correct OAuth scopes are set for the application.
- Some API responses may have pagination
- Ensure to monitor disk space regularly to avoid running into inode limits.
- Use the shop importer tool for migration.
- Your staging environment for Akeneo shares resources (disk, CPU, memory) with your
  production environment.
- Uses OAuth2 with refresh token for authentication.
- Uses OAuth2 with refresh token.
- PURGE method is disabled by default
- Make sure to always start your Base URL with `http://` or `https://` and end it
  with a slash `/`.
- Make sure to always start your Base URL with `http://` or `https://` and end it
  with a slash '/'
- Requires setup of OAuth 2.0 in Magento admin.
- Basic Auth can be configured for multiple locations
- Some responses may contain null values for optional fields.
- The most important setting is Save log for .. days. We recommend you to pick a number
  between 1 and 30 days.
- When you used the hypernode-importer and you were already using Redis you don’t
  have to follow this tutorial.
- If you’re using a Magento version later than 1.8.x, you can use the built-in Redis
  module as described above.
- Configure your Magento 2 Cron for optimal performance.
- Ensure to follow Magento's API guidelines for best practices.
- Use development node or a local staging environment like Hypernode Docker instead
  of production nodes while under development.
- Sometimes it’s needed to add your ip to the debug_acl in the vcl to enable debug
  headers for your IP address.
- Don’t implement Varnish on production nodes while still under development but use
  development node or a local staging environment like the Hypernode Docker instead.
- A basic staging environment doesn’t work well with Varnish.
- Uses OAuth2 for authentication
- API may have limitations on usage
- Using a robots.txt is essential for instructing bots and crawlers how and at which
  rate your shop should be indexed.
- It’s recommended to give each robots.txt for each storefront some unique identifier
  (for example the storefront name in a comment in the file), so it’s clear which
  robots.txt is served on which storefront.
- It’s recommended to give each robots.txt for each storefront some unique identifier.
- Make sure your crontab is working properly
- If you use only one sitemap for all storefronts, just use / as path.
- Some additional configuration will be required when using a different sitemap per
  storefront.
- Some endpoints may require additional permissions.
- Rate limiting is applied to API requests.
- Ensure that the Magento API is properly configured for access.
- Some endpoints may have rate limits that should be monitored
- If you use only one sitemap for all storefronts, just use / as path
- When you want to use a different sitemap per storefront some additional configuration
  will be required
- To circumvent this, you can use the Nginx alias feature to create an alias to a
  file outside the public webroot
- We’ve seen one or two special cases where creating a sitemap was extremely slow
- Ensure that your Magento instance is configured to allow API access.
- API access requires a valid OAuth token.
- Some endpoints may have rate limits that need to be managed.
- To enable the use of clean URL’s, log in on your Magento admin backend and navigate
  to System -> Web -> Search Engines Optimization for Magento 1 or Stores -> Configuration
  -> Web for Magento 2.
- Enable Use Web Server Rewrites (Select “Yes”), and click Save Config to activate
  your changes.
- What needs to be adjusted after the Xgrade?
- When can it be performed?
- Turning query logging on is very resource intensive and causes the show to slow
  down considerably! Don’t forget to change $_debug to false when you are done debugging
  your issue.
- Ensure you have the correct OAuth scopes set up in your Magento configuration
- Ensure you have the necessary permissions for the requested data.
- The Magento API is supposed to work out-of-the box on Hypernodes, but due to clean-url-rewrites
  sometimes the API does not work and returns a 404 error.
- To resolve this issue, some additional configuration is required.
- Requires setup of OAuth2 for API access
- Ensure proper scopes are granted for the application
- To resolve 404 errors, additional Nginx configuration is required.
- Maintenance mode is a shortcut to serve a temporary error notification to all customers
  that are visiting your shop informing them to come back at a later time, as it is
  currently not possible to place an order.
- Periodically shop owners and maintainers want to perform upgrades, install extensions
  or do the necessary maintenance on a shop.
- To do this in a secure manner, without customers being able to placing orders that
  get lost during the operation, maintenance mode is available on your Magento shop.
- Uses OAuth2 with refresh token — requires setup of connected app in Shopware
- Configure CI/CD with secrets preparation
- Ensure correct Hypernode settings on Deployment
- Requires setup of API credentials in Magento backend.
- PURGE method is disabled by default.
- Maintenance mode is a shortcut to serve a temporary error notification to all customers
  that are visiting your shop informing them to come back at a later time.
- To put your Magento installation in maintenance mode, you can create a maintenance.flag
  file inside the web root (/data/web/public/maintenance.flag).
- If your site is set to maintenance mode ON, an error message will be shown to all
  visitors of your site.
- To allow a developer access to a Magento installation in maintenance mode, specific
  IP addresses need to be whitelisted.
- It is not recommended to change files in the default directory as this can cause
  errors when later security patches need to change the core error files.
- This documentation provides details on how to flush caches in Magento 1.x.
- Ensure you have the correct permissions set on your API user.
- Requires setup of connected app in Magento 2
- Flush Your Caches
- Restart PHP-FPM
- Restart Services (MySQL, Nginx, php7.1-fpm, Varnish, Redis) as an `app` User
- Troubleshooting Slow MySQL Queries
- Requires OAuth setup for API access.
- Magento constructs the WSDL URL based on your Magento instance base URL.
- If your Magento store is not accessible from the server itself, the SOAP server
  will not be able to load WSDL during initialization.
- On Hypernode it is safe to use Flush Magento Cache or Flush Cache Storage since
  the var/cache folder is not shared with other applications.
- Ensure API credentials are set up in the Magento backend.
- Ensure to configure your connected app correctly for OAuth2.
- On Hypernode it is safe to use either of the buttons since the var/cache folder
  that is used by Magento is not shared with any other applications.
- The WSDL cache is used for API soap calls to Magento.
- In some very rare cases this cache can get corrupted, causing errors on all API
  calls to Magento.
- 'This does not solve the following error: SOAP error: Parsing WSDL: Couldn’t load
  from '''': failed to load external entity.'
- Ensure proper authentication setup for the Magento API.
- Ensure to have the correct OAuth setup in Magento admin.
- This can be resolved in some cases by removing the WSDL cache file so this file
  is refetched with the next api call.
- Some objects like products may return nulls in deeply nested fields
- Magento 1 has been End of Life since June 30 2020.
- Do not implement OpenMage on production nodes without testing first.
- Requires setup of connected app in Magento.
- Some objects may return nulls in nested fields.
- Requires OAuth setup in Magento admin panel
- Ensure proper permissions are set for API users
- Requires OAuth2 setup for API access
- Ensure /data/web/public folder is empty before installation.
- This is irreversible so make sure you know what you are doing!
- PURGE Method may be disabled by default
- Rate limiting may apply, especially for bots and crawlers
- Requires setup of OAuth credentials in Magento.
- Some endpoints may have rate limits.
- Purge method is disabled by default for security reasons.
- Use caution when enabling the PURGE method.
- Requires OAuth2 authentication for API access.
- Some API responses may vary based on configurations
- Magento should operate on the same timezone as the server.
- Select GMT Standard Time if UTC is not supported.
- Europe/Amsterdam is not available in all Magento versions. The timezone Europe/Berlin
  is equivalent.
- Ensure that API credentials are set up correctly in Magento.
- Requires setup of a connected app in Magento.
- Troubleshooting performance issues may involve checking logs and optimizing configurations.
- To avoid outgoing email being detected as spam, you should change the email return-path
  for your outgoing email to a valid email address (e.g. sales@example.tld) which
  can be managed with your own SPF settings.
- If the recipient is using SAV (Sender Address Verification), and the e-mail address
  is not reachable, or the SPF record does not match the email source, a spamfilter
  could see this as a spam message.
- Ensure API is enabled in Magento settings
- Use correct OAuth credentials for authentication
- Change Set Return-Path to 'specified'.
- In the Return-Path Email field, set a valid email address.
- Your staging environment shares resources with your production site.
- It is recommended to use separate databases for your staging environment.
- Magento 1 API has various endpoints for different resources.
- We don’t recommend creating hardlinks from your production media folder to your
  staging media folder.
- Ensure that the API is enabled in the Magento settings.
- Ensure OAuth permissions are set correctly in Magento.
- Requires setup of OAuth consumer in Magento admin.
- API may rate limit requests.
- Some API responses may contain pagination details
- Rate limits are imposed on API requests
- HTTPS Only
- When you have an SSL certificate and use the secure base URL you should change the
  unsecure base URLs to HTTPS as well. This could result in conflicts when you leave
  this on HTTP.
- Make sure the base urls always end with a trailing slash (`/`)
- Replace the URL for `SHOPHOST` with the url of you shop.
- Ensure to enable the API in the Magento configuration
- Check user roles for API access
- API requires OAuth2 authentication.
- Rate limits may apply.
- Enable Maintenance Mode for Magento 1 by Setting the maintenance.flag
- Ensure Redis keys are set to volatile to prevent memory issues.
- Ensure you have the necessary permissions for API access
- Some endpoints may require additional setup
- Ensure that the deprecated database media storage backend is disabled.
- Requires Magento API setup with a valid consumer key and secret.
- Make sure that the deprecated database media storage backend is disabled.
- Test Varnish on a development node before implementing on production.
- Some objects like orders may return nulls in deeply nested fields
- Requires proper OAuth setup in Magento.
- Ensure to configure your API settings correctly.
- Magento 2 currently does not support multiple robots.txt files for each storefront.
- Varnish is a complex technique that needs some experience to set it up.
- Don’t implement varnish on production nodes without testing Varnish first.
- API rate limits may apply depending on the plan
- Magento 2, by default, splits up the sitemap file into chunks of 10 MB.
- Refer to Hypernode documentation for setup details
- Requires setup of API credentials in Magento admin
- Ensure sufficient scope is granted to the API user
- Some resources may have pagination limits
- Magento splits up the sitemap file into chunks of 10 MB by default.
- Change the maximum file size of your sitemap.xml to include all pages in one sitemap.
- Ensure that the API user has the necessary permissions.
- Enable the Magento 1 API to access data.
- Ensure to have appropriate API permissions for data access
- Updating Magento with the ‘Web Setup Wizard’ is currently the only known way of
  upgrading Magento 2. Unfortunately we’ve been hearing a lot of sounds from developers
  and shop owners saying the Web Setup Wizard doesn’t work properly, giving a lot
  of error messages. Magento is looking into it.
- We’ve seen several cases where your Magento 2 installation is deleted while using
  the Web Setup Wizard. This happens during the update process. Magento deletes the
  old files, but fails to put the new ones in place, resulting in a broken shop.
- Currently when visiting the Magento 2 Web Setup Wizard, a 404 error is thrown.
- After updating your Magento we recommend you to remove the symlink because it is
  a vulnerability to have it publicly accessible.
- The Magento API is supposed to work out-of-the box on Hypernodes.
- Due to clean-url-rewrites sometimes the API does not work and returns a 404 error.
- Requires setup of appropriate configurations in Nginx.
- To allow your developers access to the Magento 2 site while in maintenance mode,
  add the IP addresses to the var/.maintenance.ip file.
- Ensure API is enabled in Magento settings.
- Ensure proper API credentials are set up before making requests.
- In some very rare occasions an up- or downgrade results in some of your categories
  and/or product not showing on the frontend of your webshop.
- Make a backup of your current database before proceeding with changes.
- Requires setup of OAuth credentials in Magento admin
- On Hypernode it is safe to use either the Flush Magento Cache or Flush Cache Storage
  at the top of the page.
- Ensure to configure API settings for optimal performance.
- First make a backup of your current database by running the command `mysqldump [databasename]
  > /data/web/databasename_backup_YYYYMMDD.sql`.
- Check what database is being used by your Magento installation. You can find this
  in the `env.php` of your Magento installation.
- Once you have dropped all these tables all that is left to do is to run a reindex
  using the command `bin/magento indexer:reindex` from within your Magento2 root directory
  (on Hypernode this is usually `/data/web/magento2)`.
- No specific authentication required for accessing the API.
- Magento 2 requires PHP version 8.1 or higher
- Ensure the /data/web/public folder is empty before installation
- Ensure to configure API access in Magento admin.
- API rate limits may apply.
- Requires setup of API credentials in Magento Admin
- On Hypernode it is safe to use either Flush Magento Cache or Flush Cache Storage
  since the var/cache folder that is used by Magento is not shared with any other
  applications.
- Flush your Magento cache after changing your env.php.
- Refer to the Hypernode API documentation for specific endpoint details.
- Ensure OAuth configuration is set up correctly in Magento admin.
- Ensure you have the correct permissions for API access.
- Magento 2 requires preferably a Falcon M hosting plan or bigger.
- Some vendor libraries are not compatible with older PHP version anymore, causing
  errors during the installation.
- Use OAuth2 with refresh token
- If your Magento 2 Cron is stuck or long-running this could be because of a default
  setting in Magento 2 causing the consumers to never end.
- The combination of these settings can be beneficial for Magento shops that run on
  smaller Hypernodes with less resources where the consumers can run infrequently.
- Some endpoints may return paginated results
- Ensure OAuth credentials are correctly set up in Magento.
- Certain endpoints may have rate limits that need to be respected
- Uses OAuth2 with refresh token — requires setup of connected app in shopware
- Some configurations may lead to unexpected behaviors
- Ensure the API version matches your Shopware instance.
- 'Make sure the Store View is set to: Default Config'
- Select the website for which you wish to change the time zone under Store View
- Ensure that your API credentials are correct
- Some objects like customers may return nulls in deeply nested fields
- To display all dates and times on your websites and stores as you like them, set
  the timezone for all websites to your preferred timezone.
- MySQL variables can be set globally by editing initStatements in env.php
- Ensure proper permissions are set for API access
- Rate limits may apply depending on usage
- You can set MySQL variables for Magento in ~/magento2/app/etc/env.php by editing
  the initStatements.
- Some objects may return nulls in deeply nested fields.
- To avoid outgoing email being detected as spam, change the email return-path for
  your outgoing email to a valid email address.
- Ensure to follow the Hypernode setup steps for proper configuration.
- Ensure proper API permissions are set in Shopware.
- Some endpoints may have restrictions based on user roles
- Consider rate limits when designing your integration
- Changing the base URL’s before changing your MySQL database to your staging database
  will have impact on your production site.
- When Varnish is active on the live environment and you are using the same Base-URL
  for the staging environment you can’t use Varnish on the staging environment.
- It is strongly recommended to use separate databases for your staging environment,
  so using the staging environment will not interfere with the production data.
- If your media directory is stored in /data/web/staging, make sure first not to overwrite
  this folder with a symlink.
- Documentation for Magento 2 updates
- Ensure you have the correct OAuth setup to access the API.
- API usage may be limited based on user role permissions
- Ensure proper API authentication and setup before making requests.
- Ensure yourself you are not using special characters like `%` and `@` in your cron
  command
- Uses OAuth2 with refresh token
- Always make sure you have a recent and clean backup.
- You can test an update on a staging environment.
- You can’t update from Magento 1 to Magento 2. If you wish to use Magento 2, you’ll
  need a fresh install and start from the beginning.
- Not updating your Magento can result in a bad performance and make your shop an
  easy target for hackers.
- Some objects may have complex relationships that require additional queries.
- Rate limits apply to API requests
- Requires setup of connected app in Hypernode for authentication
- Ensure to follow best practices for optimizing performance.
- Regularly apply security patches to protect your Magento shop.
- No specific quirks or limitations mentioned.
- Uses API key for authentication
- Magento API requires OAuth2 authentication.
- Ensure proper scopes are set for API access.
- Ensure proper OAuth scopes are set for data access
- Requires OAuth2 setup in Magento Admin
- API rate limits may apply
- Some fields may return nulls in nested structures
- Documentation contains various steps for using Hypernode.
- Requires setup of OAuth credentials in Magento admin panel
- Uses OAuth2 — requires setup of connected app in Hypernode
- API requires authentication to access data
- Backup creation methods include file and database backups.
- Backups can be downloaded via FTP or SSH.
- Ensure that the API is enabled in the Magento 2 backend.
- Use valid OAuth credentials for authentication.
- API access must be granted to the user account.
- Configure a cronjob to run cache warmer daily at 06:00.
- Check user permissions for API access.
- Some endpoints may require specific permissions to access.
- Requires setup of OAuth credentials in Magento admin.
- Requires OAuth2 authentication with a connected application.
- Requires OAuth2 setup in Magento admin panel
- When your shop is ready for production, you can select the Production mode which
  enables the HTTP cache to get optimal front end performance.
- We recommend to configure a cronjob that runs the cache warmer daily at 06:00 to
  make sure the performance is always optimal.
- If you are using a cluster setup, you need to add some additional configuration
  to your vcl.
- You can find your private ip range using the hypernode-cluster-info command on one
  of your cluster nodes.
- Some responses may vary based on user permissions
- Rate limits apply to API requests.
- OAuth2 with refresh token is required for accessing the API
- Ensure correct permissions are set for API access.
- While the X-Cache and X-Cache-Hits headers are very useful, it is a good practice
  to disable these headers after you don’t need them anymore.
- Requires OAuth2 authentication with a connected app.
- Ensure proper OAuth scopes are set in Magento admin.
- Check for API rate limits to avoid throttling.
- Requires setup of OAuth consumer in Magento
- Some API endpoints might have rate limits
- Check for rate limits when making multiple requests.
- Shopware 5 requires a Hypernode Professional S hosting plan or larger.
- Before you proceed with the installation you need to create a database for Shopware.
- OAuth2 is used for authentication — ensure to set up the correct permissions.
- Offering Secure Access to Magmi
- The latest version of Shopware 5 need at least PHP version 7.2 to be able to run.
- You only have to use one of the two options to install Shopware 5.
- Magento API requires OAuth2 authentication for all requests.
- The password is insecure_docker_ssh_password.
- Ensure to handle the rate limits imposed by the API.
- Disk space management is crucial for Hypernode performance.
- Ensure to monitor Redis memory usage regularly.
- To add a subshop or language click on Add entry, make sure you edit the following
  details for your desired shop and click the Save button.
- Requires OAuth setup in the Magento admin panel
- Ensure to use the correct version of the API for the Magento instance.
- Some endpoints may have additional requirements for pagination
- Ensure API user has permissions to access the required endpoints.
- The backend provides a page from which you’re able to setup and manage your multishop.
- Your staging environment shares resources (disk, CPU, mem) with your production
  site.
- It is strongly recommended to use separate databases for your staging environment.
- Check user permissions for API access
- Ensure that the API is properly secured to prevent unauthorized access.
- Ensure that you monitor your disk space regularly
- 'Make sure to change the DB_DATABASE value to your staging database: DB_DATABASE="staging"'
- Now all traffic for domains that are mapped as staging_domain will be redirected
  to the same URL but on port 8888.
- Some responses may include nested fields that could be null
- Ensure yourself you are not using special characters like `%` and `@` in your Cron
  command
- Shopware overwrites the Authorization header
- Whitelisting your IP is necessary to skip basic auth on Hypernode
- Requires authentication to access the API.
- Shopware overwrites the Authorization header.
- Whitelisting your IP is necessary to skip basic auth on the Hypernode.
- Enable Maintenance Mode for Magento 1
- Requires Magento 2 setup for API access.
- 'Flush the Shopware cache via the backend or via the CLI by running: bin/console
  cache:clear'
- Ensure that the Magento API is enabled.
- Check for API rate limits.
- Requires proper setup of OAuth credentials in Magento.
- Requires setup of connected app in Hypernode Deploy
- Ensure correct OAuth scopes are set for API access
- Set up connected app in Hypernode
- The bucket name will always be `main` for Hypernode Object Storage.
- Ensure that your S3 bucket has ACLs enabled.
- This article explains how you can configure Varnish for your Hypernode.
- We’d recommend to first test varnish on a staging environment or a development plan
  before implementing varnish on a live node.
- API requires authentication with OAuth2.
- Ensure to set up OAuth credentials for access
- Shopware API requires OAuth2 authentication.
- Ensure proper permissions are set for API access.
- Ensure that OAuth credentials have the necessary permissions
- API may return incomplete data if the request exceeds limits
- Shopware 6 cannot be installed on the old Grow plans.
- You only have to use one of the two options to install Shopware 6.
- It is recommended to first test varnish on a staging environment or a development
  plan before implementing it on a live node.
- Requires enabling the Magento 1 API
- Requires OAuth2 setup in Magento Admin.
- API rate limits apply.
- Some features may be limited based on the plan selected.
- Make sure to fill in the right details at Configure database
- Shopware 6 needs at least PHP version 7.4 to be able to run.
- Shopware 6 needs MySQL 5.7 to be able to run.
- Ensure OAuth scopes are set correctly for API access.
- Some API endpoints may require specific permissions.
- Rate limiting may apply to API calls
- Magento APIs require OAuth2 authentication.
- Rate limiting may apply to API calls.
- Make sure to change the DATABASE_URL value to your staging database.
- Check which ID is relevant for your URL with the select * from sales_channel_domain;
  query.
- Magento 2 API requires OAuth 2.0 for authentication.
- Ensure proper scopes are assigned to the API user.
- Some API responses may vary based on user permissions
- Requires setup of OAuth for API access
- Some objects may return paginated results
- Ensure VHOST type is set to WordPress
- NGINX configuration will automatically reload upon saving
- Some objects may have specific API rate limits.
- Be aware of rate limiting when making API calls
- OAuth2 authentication requires setup in Magento Admin.
- API rate limits may apply and should be monitored.
- Ensure the API is enabled in the Magento admin panel.
- Rate limits may apply to the API usage.
- To install WooCommerce, use the preinstall command or install it manually.
- Make sure to create a database and set up directories before installation.
- Ensure that your API user has the correct permissions to access the resources.
- Ensure to set your VHOST type to WordPress.
- Use the Reset Password Functionality
- Some resources may have rate limits
- Access to wp-cron.php is blocked by default on Hypernode for security reasons.
- Make sure to replace /data/web/public/wp-cron.php with the actual path to your WordPress
  installation if it’s different from the default path.
- Ensure that the OAuth credentials are correctly set up in the Magento admin.
- Backup creation can take time depending on the size of the data.
- Uses PHP 8.1 and MySQL 8.0
- No specific notes found.
- Ensure correct Hypernode settings are configured.
- Testing should be conducted after setup.
- Prepare the secrets
- Install the Hypernode Deploy configuration package
- Laravel only has a few system requirements. One of which, is that PHP needs to be
  at least 8.2.
- Ensure API user has appropriate permissions.
- Rate limiting may apply.
- Enable the Magento 1 API.
- Requires setup of OAuth consumer in Magento admin
- Ensure proper setup of OAuth credentials for API access.
- Create File Backup
- Create Database Backup
- Zip Both Backups into a Single .zip File
- Download via FTP
- Download via SSH
- Check if the Caches Are Enabled
- Run `htop` to See What Is Causing the High Load
- Check Modules and Extensions
- It is not a required package for Hypernode Deploy to work, so feel free to skip
  this part.
- SSH access is required for deployment operations.
- Ensure to handle rate limits as per Magento API guidelines.
- Ensure API credentials are set up correctly in Magento.
- Rate limits apply to API calls.
- The private SSH key must be stored as a base64 encoded string in the SSH_PRIVATE_KEY
  secret.
- Composer auth.json file is optional and stored in the DEPLOY_COMPOSER_AUTH secret.
- Hypernode API token is optional and stored in the HYPERNODE_API_TOKEN secret.
- API requires authentication.
- Ensure the correct permissions are set for API users.
- Ensure to set the correct permissions for the API user
- Prepare the secrets for authentication
- General Troubleshooting
- Webserver
- PHP
- MySQL
- FTP Usage
- Email
- Cron Tasks
- Magento Errors
- Generic Solutions
- SSH key must be set as SSH_PRIVATE_KEY in GitHub Secrets
- DEPLOY_COMPOSER_AUTH is optional for accessing private Composer repositories
- HYPERNODE_API_TOKEN is optional for using Hypernode API features
- Requires setup of OAuth2 authentication in Magento.
- The private SSH key as base64 encoded string. (`SSH_PRIVATE_KEY`)
- The composer auth.json file as base64 encoded string, optional. (`DEPLOY_COMPOSER_AUTH`)
- The Hypernode API token, optional. (`HYPERNODE_API_TOKEN`)
- Ensure proper permissions are granted to the API user.
- Prepare the secrets for Hypernode API authentication before deploying.
- Fill in the User, Hostname and Password in the Following Command and You Are Ready
  to Install Magento 2
- When this error is thrown, please assure the `app/etc/config.php` has the keys `scopes`
  and `themes`.
- Hypernode Deploy deploys to a new folder for every deployment, this way you compare
  changes, and roll back small releases.
- Configure the Hypernode settings optimal for the least load of non-used applications
  and servers.
- Install PM2 if not present on the server.
- Sets up a vhost for application.
- Sets up the nginx configuration to proxy to the NextJS server.
- Some objects like Customer may return nulls in deeply nested fields
- Some API calls may return nulls in deeply nested fields
- No specific authentication is required for backups.
- The default website isn’t defined. Set the website and try again.
- If you add shared files, be aware that your new files will be empty on your first
  release.
- If you add shared folders, be aware that your new folders will be empty on your
  first release.
- Ensure that the API is enabled in Magento settings.
- Rate limits may apply based on user sessions.
- Use HTTPS so You Can Take Advantage of HTTP2 (<10 mins)
- 'Optional: set maximum response time to 60 seconds'
- Sets up the nginx configuration to proxy to the NextJS server
- Requires setup of Hypernode application and API access
- Ensure API access is enabled in Magento settings
- Rate limits apply to API calls
- 'Optional: Change Your Base URL'
- Access to certain resources may require additional permissions
- Rate limits are enforced on API calls
- Ensure the API is enabled in the Magento settings
- If you used Bitbucket Pipeline SSH Keys as described above, you do not need to add
  an `SSH_PRIVATE_KEY` environment variable.
- Some API endpoints may have rate limits
- Consider performance optimizations for large datasets.
- Ensure to follow the setup instructions for Hypernode API authentication.
- Ensure to follow best practices for performance and security.
- Ensure proper database credentials are configured before installation.
- Cron jobs must be set up for Magento to function correctly.
- Use of SSH Access for deployment
- Requires configuration of Hypernode Deploy
- Uses SSH keys for authentication to the server.
- Ensure the SSH_PRIVATE_KEY secret is set in the GitHub environment.
- Rate limits may apply based on your plan
- Requires setup of OAuth2 credentials in Magento admin
- Ensure to configure your DNS properly to use the Hypernode API
- OAuth2 requires you to set up a connected app in Hypernode
- Hypernode Deploy will need a pair of SSH keys for authentication to the server.
- Create a new environment called 'production' if it doesn’t exist yet.
- If you have an acceptance (or staging) environment, repeat the same steps for the
  production environment.
- Ensure that Magento API user has the required permissions.
- This procedure is not supported by Hypernode.
- You need to have SSH access to your Hypernode to create the backup.
- Performance troubleshooting resources available.
- Magento 1 does not require authentication for basic setup operations.
- Some configurations may return nulls in deeply nested fields
- Some requests may face performance issues
- Costs for arranging a complete copy of your website (and/or database) is € 75 EUR.
- Requires OAuth2 authentication
- Ensure proper setup of API credentials
- This API provides access to performance and security-related resources.
- API requires OAuth2 with refresh token.
- Ensure the connected app is properly configured.
- Cloudflare is not 100% waterproof. Using Cloudflare might still leave you vulnerable
  to a certain extent.
- Don’t use Railgun on Hypernodes.
- Some endpoints may have rate limits that need to be considered
- Cloudflare is not 100% waterproof. Unfortunately, using Cloudflare might still leave
  you vulnerable to a certain extend.
- No authentication required for accessing the API
- RabbitMQ can be enabled / disabled via the hypernode-api or hypernode-systemctl
  commandline tool.
- Hypernode provisions a non-default user called hypernode-admin but you are free
  to create new users.
- Some features may require specific permissions to access.
- Making a dump through HeidiSQL may generate an inconsistent backup, as data may
  change while your backup is created.
- Uses Basic Authentication for Hypernode API
- Ensure API access is enabled in Magento settings.
- Some API endpoints may require specific roles to access.
- RabbitMQ is available on all Hypernode plans.
- RabbitMQ only binds on localhost.
- Hypernode provisions a non-default user called hypernode-admin.
- Ensure API access is enabled in Magento admin
- Use the latest API version for compatibility
- Uses OAuth2 authentication.
- Some endpoints may return incomplete data
- Ensure that the API is enabled in Magento settings
- Mail headers describe the route of an email.
- If you have an issue with sending or receiving email, you can use the mail header
  to see where the email went and discover what might be going wrong.
- In Byte webmail client, it is not possible to export all the emails at once, so
  you have to save each email individually.
- Thunderbird does not have an Export function itself, so you must use a plug-in for
  this.
- Ensure you have the correct access rights to retrieve mail headers
- Rate limiting may be applied to requests.
- Ensure proper authentication is configured to access the API.
- Check if the inclue:spf.appname.hypernode.io hostname is included in your SPF record
  (in the DNS zone-file).
- If you send your emails using a PHP script, the default return-path will be noreply@hypernode.io.
  This email address will be seen as possible spam address, so you have to change
  this into something else.
- Browse to MXToolbox and fill in the IP address of your Hypernode to check if the
  IP address is listed on a blacklist.
- OAuth2 with refresh token is required.
- Some deployment configurations may have specific requirements
- Some endpoints may have rate limiting
- Make sure to configure your Hypernode settings properly.
- Create Backup and Download it to Your Local Machine
- Some objects like customer may return nulls in deeply nested fields
- If the IP address of your Hypernode is not included in this record, please send
  an email to support@hypernode.com, so we will fix the record for you.
- If you send your emails using a PHP script, the default return-path will be noreply@hypernode.io.
- More information about setting your return-path for Magento 1 and Magento 2.
- If emails sent from the Hypernode are still marked as spam, please send an analysis
  request by email to support@hypernode.com including a full-header of a marked message.
- Ensure to configure the firewall to allow access.
- Setup of OAuth authentication is required.
- Ensure API is enabled in the Magento configuration.
- To ensure that ForusP can perform their scan on your Hypernode without any issues,
  the IP addresses associated with ForusP must be added to the Hypernode Web Application
  Firewall (WAF).
- The IP addresses you add will become active within a few minutes, allowing ForusP
  to access your Hypernode environment without being blocked by the firewall.
- Rate limits may apply
- The hypernode-systemctl whitelist command allows you to manage allowlist entries
  for different services on your Hypernode.
- By default, SSH is open to the entire internet.
- If your current IP is not on the allowlist, you will lose access and may see a 'Timed
  Out' or 'Connection refused' error when trying to connect via SSH.
- If you add an SSH allowlist entry, make sure to include your own IP address to avoid
  being locked out.
- Use descriptive names when adding entries to help identify their purpose in the
  future.
- Ensure to configure the appropriate permissions for OAuth tokens.
- Check for API versioning in requests.
- Backup creation may take time depending on the size of the database.
- By default, SSH is open to the entire internet. Anyone can attempt to connect to
  your server via SSH unless you add entries to the SSH allowlist.
- If you add an SSH allowlist entry, make sure to include your own IP address! Otherwise,
  you may lock yourself out of your server.
- Ensure that the API client is configured properly in Akeneo.
- Private SSH key required for CI/CD
- Composer authentication is necessary for deploying applications
- Some API endpoints may return additional metadata
- Ensure proper API scopes are set for OAuth.
- New Relic is a third party tool
- You get a Free (Forever) plan or a Standard plan with add-ons
- It takes a most 10 minutes for our system to actually create the account.
- Use code with an extraordinary amount of recursion might add some overhead to your
  site's performance.
- Use of OAuth2 requires setup of connected app in Hypernode
- Ensure to configure API access for Magento.
- excessive bot traffic is the number one reason for bad Magento performance
- Layered navigation pages do not require crawling
- You are advised to resolve this, both for performance and SEO reasons
- Requires proper OAuth setup for API access.
- Ensure that the Magento API is enabled in the admin settings.
- New Relic is a third party tool and therefore, we cannot offer any in-depth support
  on how New Relic works.
- Before you can activate New Relic at Hypernode you need to create an account at
  New Relic.
- Please take into account that it takes a most 10 minutes for our system to actually
  create the account.
- If you run into the fatal error, check your New Relic traces to find the recursive
  loop.
- ElasticSearch can only be enabled on every plan except the formerly known Grow plan.
- When using the Mirasvit extension, Magento periodically restarts the Sphinx engine.
- Requires setup of connected app in Akeneo
- Layered navigation pages do not require crawling, and in fact, their indexation
  could produce a penalty for your search engine ranking, as it produces a lot of
  duplicate content
- Legitimate bots will honor instructions from your robots.txt
- Make sure all URLs in the layered navigation have 'nofollow' in its links
- Ensure API functionality works out-of-the-box on Hypernode.
- ElasticSearch can be used out of the box on Hypernode without requiring any external
  service or configuration.
- Sphinx requires the Mirasvit Sphinx Search Ultimate extension.
- Check for proper user permissions for API access.
- Rate limits may apply based on the server configuration.
- Ensure API permissions are correctly set for the client.
- Serve your shop only over HTTPS to take advantage of HTTP2.
- Requires setup of OAuth integration in Magento
- Ensure to follow best practices for performance optimization.
- Regularly update Magento to avoid vulnerabilities.
- To keep the disk usage reduced and your shop fast, we recommend you to add a cronjob
  to optimize new images every night.
- This article explains how to reduce load by discarding expensive 404s.
- Most Magento servers are configured so that requests for non-existing files are
  routed through the Magento index.php.
- It is smart to redirect pages to your frontpage (or a deep link product page).
- The webserver Nginx can do this a whole lot faster than PHP!
- Rate limits may apply to API calls
- This API requires a valid Hypernode instance.
- Ensure that your OAuth credentials are correctly set.
- Check for API rate limits
- It is smart to redirect pages to your frontpage (or a deep link product page), since
  this is most likely a human clicking on an old link.
- You should make sure there are indeed no .php files under this folder, otherwise
  the webserver will happily serve them as plaintext (along with your precious code).
- Requires an active API user with appropriate permissions
- Data may be limited by user roles and permissions
- Sampling controls the percentage of requests that will be stored in Tideways, which
  helps manage cost.
- You can assign an environment label (for example when this node is a staging server).
- API access requires proper setup of OAuth tokens.
- Some endpoints may have additional parameters
- Requires enabling the API in Magento settings
- Requires Magento 2.x version for full API support
- Ensure API credentials have the necessary permissions
- Non-www and www configurations may require adjustments after upgrades.
- No authentication required for basic API access
- Backup creation and downloading processes are available.
- Check If the User Agent of the SOAP Client Is Rate Limited
- Use the appropriate Magento version for compatibility.
- Ensure proper configuration to avoid performance issues
- Purge method is disabled by default.
- Ensure to follow the guidelines for backup creation and download.
- Hypernode goes even further than the security of your hosting environment.
- Unwanted bots are automatically blocked and you are protected against brute force
  attacks.
- Always install all patches from Magento on your webshop.
- Magento doesn’t check whether you’ve applied the patch or not, so that notification
  will always be visible, patched or not.
- No specific notes provided.
- Requires OAuth setup in Magento admin.
- Non-www and www configurations may require adjustments.
- Dedicated machines may have different configurations compared to cloud environments.
- Ensure API is enabled in Magento
- Check for the correct API key configuration
- We recommend checking your site with Magereport.com for other vulnerabilities.
- If Miscellaneous scripts and Miscellaneous HTML are empty, you’re most likely safe.
- Hypernode is specifically developed for Magento
- Fixing this breach is not an easy task. If you don’t have a lot of knowledge of
  Magento’s security, we recommend you hire an Magento developer or specialist experienced
  in Magento security.
- We suspect this leak has been made possible due to unpatched Magento shops. So if
  you haven’t completely patched your Magento shop yet, make sure you do.
- Ensure proper API permissions are set in Magento.
- Rate limits may apply based on the API usage.
- Adobe released a patch for this critical vulnerability, called APSB22-12.
- Successful exploitation could lead to remote code execution.
- Please check your Magento application version.
- Ensure proper setup of OAuth2 credentials for API access
- Some API responses may contain null values in certain fields
- Ensure to set the appropriate OAuth scopes for access.
- Adobe released a patch for a critical vulnerability, called APSB22-12.
- Requires API setup in Magento admin
- Check for proper permissions for API user
- Refer to the documentation for specific configuration details.
- We highly advise all customers to install the patch as soon as possible to prevent
  this.
- If you can’t fix this yourself please contact one of our partners so they can help
  you installing the patch.
- Some API responses may contain large payloads.
- Adobe released a patch for critical vulnerability APSB22-12.
- Uses OAuth2 with refresh token — requires setup of integration in Magento
- Ensure proper scopes are granted for accessing resources
- Requires setup of OAuth in Magento.
- Rate limits may apply depending on the API usage.
- This workaround will have NEGATIVE side effects.
- Only use this code if you are unable to install the patch.
- Requires API access to be enabled in Magento settings.
- Some endpoints may require additional permissions for access
- Requires OAuth credentials setup in Magento
- Some API endpoints may return limited data depending on permissions
- Adobe releases yet another emergency patch for Magento 2 to fix another unauthenticated
  remote code execution vulnerability.
- We highly advise all customers to install the patch as soon as possible, to prevent
  this.
- This workaround will have NEGATIVE side effects. It may block legitimate traffic
  and requests, and could block API calls or administrative requests.
- Patch contains binary characters; do not open with a regular editor.
- Ensure proper setup for deployment environments.
- Backup creation may take a significant amount of time depending on the size.
- The patch contains binary characters. So you should probably not open it with a
  regular editor, as that will mangle the data.
- If you just copied v1.9.3 over an older version, the old SWF files still exist and
  pose a vulnerability.
- If you have deleted uploader.swf by hand, we cannot detect the patch unless we hack
  your shop.
- Requires OAuth authentication setup.
- Ensure to set correct scopes for API access.
- Ensure the API is enabled in Magento settings.
- Magento 1 uses the /downloader as a way to install programs via the Magento Connect
  Manager.
- The RSS endpoint is reachable under various locations, it is generally not possible
  to filter RSS when using Apache.
- Ensure to configure settings in your Hypernode control panel
- Ensure the base URL is correctly set for the Magento instance.
- Magento API access must be enabled.
- OAuth2 authentication is used.
- Magento comes standard with sections for administrative purposes, like /admin and
  /downloader.
- On our platform, we see about one million brute-force probes per week.
- The above snippet doesn’t work for Magento 1 shops due to the counter measures we
  have taken for SUPEE 6285.
- Only ban after multiple retries.
- Use this for "soft" bad behaviour.
- Uses Hypernode for object storage.
- Recommended to implement IP access control for /downloader and /rss endpoints.
- Use this for 'soft' bad behaviour, as the source will only be banned after multiple
  retries.
- Ensure proper configuration for Nginx to manage object storage.
- Regularly check your shop with Magereport.com to ensure security is up-to-date.
- An intruder most likely has left one or more backdoors.
- A misconfigured webserver can leak Magento cache files containing database passwords.
- Default protection is included in the Magento installation, but this is not always
  activated, especially with modern webservers such as Nginx.
- Hypernode customers who run their Magento shop on the Hypernode platform are already
  protected against this and many other security risks.
- Backup creation may take time depending on the size of the data.
- Requires specific API permissions to access data.
- Hashing is useful for storing passwords.
- Salt is the adding of information to a password before making it into a hash.
- API requires authentication via OAuth.
- Some configurations may require specific environment settings
- SSH Access is required for some operations
- Your Hypernode comes with a built-in Web Application Firewall (WAF).
- All traffic to your Hypernode will seem to originate from a single location; the
  Cloud Firewall.
- Your hypernode comes preconfigured to work with several well known Cloud Firewall
  providers, such as Cloudflare, and Incapsula.
- Configure DNS records to point to Cloud Firewall
- Use Hypernode's name as an origin server, i.e., 'example.hypernode.io'
- You need two bits of information from your Cloud Firewall Provider; Their reverse-proxy
  IP address or ranges, and the HTTP header used to relay the original IP address.
- Some API endpoints may return nulls in certain fields
- Use the Reset Password Functionality for admin password reset.
- Requires setup of OAuth credentials in Magento
- API rate limits are enforced
- Ensure API credentials are correctly configured in dlt secrets
- In order to configure your nginx to recognize the actual origin of traffic flowing
  through the firewall, you need two bits of information from your Cloud Firewall
  Provider; Their reverse-proxy IP address or ranges, and the HTTP header used to
  relay the original IP address.
- Most Cloud Firewalls use the 'X-Forwarded-For' header to inform webservers of the
  origin IP address.
- To read the origin IP address using the X-Real-IP header, configure nginx with 'real_ip_header
  X-Real-IP;'.
- For traffic routing, configure DNS records to point directly at the Cloud Firewall
  with an origin server like 'example.hypernode.io'.
- It is recommended to configure traffic between the Cloud Firewall and your Hypernode
  to always be encrypted with an SSL certificate.
- Some operations may require specific permissions.
- OAuth2 setup required for authentication
- Uses OAuth2 with refresh token — requires setup of connected app in magento
- Some resources may have rate limits.
- Ensure OAuth credentials are set up correctly in Magento admin.
- OAuth2 is required for API access
- Ensure the API is set up correctly in your Magento instance.
- Test all storefronts (use the storefront view in MageReport Premium (only for Magento
  1.x versions)).
- Test front pages, categories and product pages.
- Test the catalog search functionality and additional indexers like Elasticsearch
  or Sphinx.
- Verify whether the search pages are fully functional and if you don’t get 404 errors
  when visiting the products in the results.
- Test restricted areas and password protected directories (downloads, etc).
- Test if you can add new products through the Magento admin.
- Test the admin functionality by flushing your cache, reindex your indexers and navigate
  through the Magento admin.
- Test if your webshop can send mail that can be received without ending up in the
  spamfolder.
- Test if your cronjobs work.
- Test if all caching mechanisms using Memcached are replaced with Redis.
- Test if your timezone is set correctly.
- Test if additional software (such as WordPress) works as well.
- Verify that connections with external systems (CRM, inventory, analytics, etc) still
  work and keep working when the IP address of the node changes.
- Have you made a backup of the content and database?
- Test if you shop contains hardcoded paths to the old location.
- View the Nginx error logging in /var/log/nginx/error.log to see if there are critical
  PHP errors that should be fixed.
- View the Magento logging in /data/web/public/var/log. Especially the system.log
  and the exceptions.log.
- When an error raises during a request, in many cases a report file is created in
  /data/web/public/var/report. Check the reports for errors.
- Add some products to your cart and test whether you are able to go to checkout.
- Test for images, css, js and mixed content warnings.
- 'Test if all static content is loaded: View the console in your browser to check
  if there are javascript errors or 404 errors on stylesheets and js files.'
- Test if the Magento API is accessible when used.
- Test if the sitemap is accessible for Magento 1 or Magento 2.
- Test if you can easily download the robots.txt file.
- Test product and price import and export routines.
- Test product push mechanisms for search engines.
- The importer will overwrite any local modifications made to local.xml or fpc.xml
  configuration files.
- When browsing your preview shop, double check that you don’t end up on your production
  shop by following a hardcoded link.
- A bigger checklist is available on the Github account of one of our well appreciated
  technical partners Peter Jaap (Elgentos).
- Modifying your hosts file enables you to test your site without the need of a DNS
  record.
- Use maintenance.flag for Magento 1 and .maintenance.flag for Magento 2.
- Old site can remain in maintenance mode while reconfiguring database to Hypernode.
- SOAP API may have different endpoint structure
- The password is ‘insecure_docker_ssh_password’.
- Modifying your local hosts file makes your local machine use the IP addresses specified
  in the file rather than using DNS lookups.
- When you are done testing, remove the entries quickly as it is hard to debug afterwards
  why your DNS is not behaving as expected on different computers.
- PURGE Method is disabled by default.
- 'The SSH daemon will be up in a couple of seconds, you can login with: ssh -A app@172.17.0.3'
- Varnish should be working fine now! You can see the results when you enter ‘varnishhist’
  in the CLI and click around in your webshop at http://127.0.0.1:8080/
- Zero Downtime Deployment on Hypernode
- Ensure that the API is enabled in your Magento settings.
- Some objects may return nulls in certain fields
- The password is '*insecure_docker_ssh_password*'.
- Uses Docker to manage hypernode services
- You can view the logs with docker logs
- Use OAuth2 with refresh token.
- Ensure to configure the Hypernode properly to access the API.
- Ensure correct permissions are set for the API tokens
- Additional Questions
- More Information
- Composer is a really heavy process which requires a lot of memory.
- If you still haven’t enough memory available to complete your composer command after
  following these steps there is just one single solution. The current Hypernode just
  doesn’t fit your requirements and you’ll need to upgrade to a larger plan with more
  resources.
- Ensure that the Magento API is enabled in the settings.
- Troubleshooting performance issues may involve checking server logs and optimizing
  configurations.
- 'Installing WordPress on your Hypernode has some serious security implications:
  Although Magento is quite secure, many vulnerability issues are discovered in WordPress
  extensions. We recommend running your WordPress blog on a different server than
  your webshop as a security leak in WordPress causes attackers to have full access
  to your webshop!'
- Due to high demand we decided to document how to install WordPress on Hypernode.
  This is at your own risk!
- If you face an error like 'Out of memory', run the command with 'COMPOSER_MEMORY_LIMIT=-1'.
- Restarting MySQL can release cached memory.
- Temporary disable the Magento crons to free up memory.
- 'Installing WordPress on your Hypernode has some serious security implications:
  Although Magento is quite secure, many vulnerability issues are discovered in WordPress
  extensions.'
- Ensure proper OAuth setup in Magento admin
- Rate limiting may apply on certain API endpoints
- Magento 1 uses OAuth for authentication.
- Ensure API access permissions are set correctly.
- OAuth2 authentication is required.
- Rate limiting may affect API calls.
- Ensure to manage FTP users carefully to avoid unauthorized access.
- Adding your IP to the whitelist is required for FTP access.
- How to Create a Backup and Download it to Your Local Machine
- Staging ports (8888, 8443) will not be available when horizontal autoscaling is
  enabled.
- Horizontal autoscaling is available on all the Falcon cloud plans (OpenStack).
- Ensure to set up the Hypernode API authentication properly.
- Ensure that API credentials are set up correctly in the Magento admin.
- Monitor disk space usage regularly to prevent issues.
- Cron jobs should be configured properly to avoid timeout.
- Ensure that API access is configured in the Magento admin panel.
- Rate limiting may apply to requests
- Certain requests may return a 429 Too Many Requests error
- API requires OAuth authentication to access resources.
- Rate limits may apply for API calls
- Active mode or passive mode can be configured for FTP.
- SFTP is available for both default and restricted users.
- Using Basic Authentication
- Some API responses may be paginated
- After enabling Autoscaling feature, expect a 5min grace period before Autoscaling
  takes effect.
- Consider configuring bot rate limiting
- Ensure to set the correct base URL for the Magento instance.
- Rate limiting enforced, check API documentation for details
- Fixed license costs 25 euros per month.
- Variable pricing based on autoscaling usage.
- Ensure to set up OAuth credentials in Magento admin.
- Ensure that OAuth scopes are properly configured in the Magento admin.
- Some fields may return null if not set.
- Use the hypernode-systemctl Tool for managing FTP.
- Rate limiting may affect API calls
- Some endpoints may have rate limits that can affect performance
- The fixed license costs 25 euros per month and is added to your normal Hypernode
  subscription when you enable Horizontal autoscaling.
- Snapshots are only available for the Hypernode Falcon and Eagle products.
- Backup snapshot is automagically detached 24 hours after you attached it.
- Creating a database dump does require CPU.
- Ensure to handle rate limiting properly.
- No authentication required for FTP access.
- Rate limiting may apply to API requests depending on usage patterns.
- Specific configurations for bots and crawlers may affect access.
- Enable the Magento 1 API to access data
- Your Hypernode is backed up daily to an external server.
- When we prepare a database backup, you’ll find a database dump compressed with gzip.
- Use the best practices for creating and downloading backups.
- Ensure to configure the OAuth setup in Magento admin.
- Rate limiting for bots and crawlers is detailed in the documentation.
- Ensure you have adequate disk space to prevent service interruptions.
- The backup snapshot is automagically detached 24 hours after you attached it.
- Restoring a snapshot/backup is never completely without risk, Hypernode is not liable
  for data loss or other discrepancies.
- Ensure API is enabled for Magento 1
- Known Rate Limited Plugins and Service Provider
- Rate Limiting per IP Address
- Rate limiting may apply based on user agents or IP addresses.
- It’s often much faster to restore your Hypernode from a snapshot.
- Some hands-on experience is required! If you have never used the command line, please
  contact one of our partners to get some assistance.
- Some API calls may have rate limits
- Ensure to have valid OAuth credentials for accessing the API
- Make sure to have enough storage space for backups
- Requires OAuth2 setup in Magento backend
- Ensure correct permissions are set for API access
- It takes 24 hours for a DNS change to be implemented everywhere.
- Hypernode cannot provide uptime guarantees for external DNS.
- SOAP API requires WSDL file access
- How to Restrict Access to Your Admin Area
- How to Rewrite a Trailing Slash for SEO Purposes
- Options 1 and 2 will prevent DNS downtime.
- 'Option 2 has a significant disadvantage: you cannot use SSL with your naked domain.'
- Ensure the OAuth setup is correctly configured in Magento for API access.
- Requires setup of connected app in hypernode
- Requires setup of OAuth integration in Magento backend.
- Let’s Encrypt does not work when using wwwizers, consider using a paid SSL certificate
  or direct IP.
- HMV is enabled by default on all newly booted Hypernodes created after 01-05-2020.
- Ensure proper OAuth setup for authentication
- Ensure to find your MySQL credentials before connecting.
- When a domain name is registered externally, Hypernode has no influence on the functioning
  of the DNS.
- You will need a Presence plan to be able to manage your DNS from the Service Panel.
- Hypernode recommends using a short TTL for the A records.
- SPF is a complex technique and we recommend new users to get a specialised third
  party to implement your SPF records.
- Ensure to handle pagination properly when fetching large datasets.
- 'Option 2 has a significant disadvantage: you cannot use SSL with your naked domain.
  People who visit https://example.com/, will get a certificate warning from the browser.'
- Option 3 is the best in case of an external DNS, and you want to make use of https://example.com/,
  but you will encounter DNS downtime if the IP address of your Hypernode changes.
- API access requires setup of OAuth credentials
- Ensure to handle pagination properly
- Ensure to follow best practices when creating backups.
- 'Option 2 has a significant disadvantage: you cannot use SSL with your naked domain.
  People who visit <https://example.com/>, will get a certificate warning from the
  browser.'
- Option 3 is the best in case of an external DNS, and you want to make use of <https://example.com/>,
  but you will encounter DNS downtime if the IP address of your Hypernode changes.
- Let’s Encrypt does not work when you use the wwwizers, the Let’s Encrypt validation
  cannot be completed and will return an error.
- You need to configure your DNS correctly and add a new vhost for the domain.
- Ensure proper setup for API access and permissions.
- Requires setup of Magento 1 connected app for API access.
- Performance issues may arise from various factors including server load and configuration.
- Magento 1 API requires proper authentication setup.
- Ensure you follow best practices for performance optimization.
- Rejecting 429 Too Many Requests
- Rate Limiting for Bots and Crawlers
- How to Configure the Bot Rate Limiter
- Spam filters are turned on by default for new mailboxes.
- Marking spam is set to High by default.
- Blocking spam is set to Low by default.
- Ensure your IP is whitelisted for SFTP access
- Ensure to manage rate limits to avoid 429 errors.
- Requires setup of DNS for outgoing email to avoid delivery issues
- Ensure all required fields are filled in for the user credentials API.
- Ensure the API credentials have the necessary permissions.
- Requires setup of OAuth credentials in Magento Admin.
- Uses FTP and SFTP for file transfer.
- Please add the following DNS records to your nameservers, to authenticate your domain.
- The first record is the mail auth record required by the TransIP mailplatform, used
  at Hypernode.
- The second and third records are needed for automatic DKIM signing and DMARC.
- The fourth record is the SPF record. Please make sure you include spf.***example***.hypernode.io
  in your DNS’s SPF record.
- Flush the Magento Cache via the Backend
- Flush the Magento Cache via the Commandline
- Ensure to configure your OAuth credentials in the settings.
- Ensure your IP is whitelisted to connect
- SFTP requires SSH access
- Troubleshooting tips available for performance issues.
- When you create a new mailbox, the spam filters are turned on by default. Both Blokkeer
  Spam and Markeer Spam are set to High.
- If you use your own mail server, we will not label your messages with SPAM. We will
  only add an X-Spam-Level header.
- When you add your domain to Office365 they will provide you with a verification
  string that you need to add to the DNS for your domain.
- You don’t need to add a new SPF record if you already have one.
- Ensure to configure DNS settings correctly for DMARC functionality.
- Ensure OAuth integration is properly configured.
- Magento 1 API requires OAuth authentication.
- Backup creation and download procedures available.
- Ensure you have the right permissions set for API access
- Common software systems providing email services queue messages as part of their
  operations.
- Hypernodes are configured to process a capped amount of emails enforced by the email
  policies.
- No specific authentication required for the API.
- DMARC is active as soon as you save the record.
- If you already have an SPF record in place please check out our documentation on
  SPF, or contact our support for assistance on how to merge the SPF content into
  your existing values.
- Please make sure you include spf.example.hypernode.io in your DNS’s SPF record.
- In this instance the audit gives a green light for example.com. From this domain
  you will be able to send email through your Hypernode and application.
- OAuth2 requires setup of a connected app in Magento
- Some API calls may result in throttling if limits are exceeded.
- Fully Block Magmi Without Redirect to Our Support Documentation
- Managing FTP users requires administrative privileges.
- IP whitelisting is necessary for secure FTP access.
- Sending too much mail in a short amount of time could cause jams and mail delayed
  deliverance when sending to large email providers like Gmail and Microsoft.
- To guarantee a fast and healthy email flow for all Hypernodes, we enforce a strict
  emails per minute policy and block mail that is tagged as spam or contain malafide
  attachments.
- Having an unsubscribe link in your emails will lower the spam count on the receiving
  mailservers, making it more likely to be accepted.
- You don’t need to add a new SPF record if you already have one (for example for
  your Hypernode) you can just edit the current one and add the Outlook value to the
  current record.
- Ensure that OAuth scopes are properly configured for data access.
- Abusers are only too happy to use this to advertise products that you as a person
  or company do not want to be associated with.
- If the website is turned off, we will send the spam messages that are still waiting
  in the queue back to the sender’s address.
- FTP and SFTP configurations can differ significantly.
- Ensure that the proper ports are open for FTP/SFTP connections.
- Ensure the API is correctly configured to allow access.
- This option will not be allowed for the Thuiswinkel Waarborg keurmerk.
- Requires an active Magento installation
- Make sure to set the correct permissions for API access
- Ensure OAuth2 is properly configured in Magento.
- Products may have different visibility settings that affect API responses.
- Ensure to whitelist your IP address for FTP access
- Active and passive modes are supported for FTP
- Some responses may contain nested data structures
- No authentication required for API access
- We strongly recommend using SSH or SFTP for file transfers. FTP is an inherently
  unsafe protocol.
- Abusers may exploit email sending options on websites, leading to spam runs.
- Websites can be disabled if a maximum number of spam messages is exceeded.
- Ensure proper configuration to avoid common issues
- Requires enabling the API in Magento 1 settings
- To enable larger thread_stack, run hypernode-systemctl settings mysql_enable_large_thread_stack
  True.
- Ensure the Magento API is enabled in the settings.
- Rate limits may apply to API calls.
- We strongly recommend using SSH or SFTP for file transfers.
- FTP is an inherently unsafe protocol.
- Ensure proper setup of OAuth credentials before accessing the API.
- Requires OAuth authentication
- Some fields may be null for certain objects.
- The only safe way to free up the disk space taken by ibdata1 is a procedure only
  Hypernode support can perform, as this procedure requires root privileges.
- This procedure can only be performed on MySQL 5.6 and 5.7 at the moment.
- Ensure the API user has the correct permissions
- Documentation covers various configurations for FTP, MySQL, and Nginx.
- Rate limits applied to API calls
- Ensure to handle API rate limits properly.
- Check for specific permissions needed for different API endpoints.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- For larger Shopware installations, changing the MySQL thread_stack from the default
  192K to 512K might be a good solution.
- By default, PHPMyAdmin is disabled.
- Making a database dump through phpMyAdmin is not very reliable for large databases.
- Ensure yourself you are not using special characters like '%' and '@' in your cron
  command
- Uses MySQL on Hypernode
- Ensure to configure the base URL correctly.
- If you have a large database, making a database dump through phpMyAdmin is not very
  reliable.
- The phpMyAdmin button in the control panel redirects to `https://` and gives a 404
  in Nginx
- I’m receiving an error while dumping the database
- My phpMyAdmin does not show any images
- Static content doesn’t (fully) display
- The app user is the local superuser.
- There is no predefined database, so you should create your own.
- Rate limiting per IP address applies to all requests.
- Brute force protection is enabled for SSH access.
- Requires setting up a connected application in Magento
- Some endpoints may have limitations in response fields
- Ensure correct OAuth setup for Magento integration
- By default PHPMyAdmin is disabled.
- It takes a few minutes for the changes to be applied.
- Making a database dump through phpMyAdmin is not very reliable.
- Ensure to handle pagination correctly.
- Development plans cannot be used to go live with a shop.
- Users are stored in a ‘htpasswd’ file located at /data/web/nginx/htpasswd-development.
- This documentation provides guidance on adding custom HTTP headers.
- Ensure to configure your API properly to avoid common issues
- Rate limiting per IP address may apply.
- If you want to fully disable phpMyAdmin, create the following snippet as `/data/web/nginx/server.phpmyadmin`.
- Most of the time this happens when a database is large, and you exceed the `max_execution_time`
  or `memory_limit` in php.
- It is only possible in Nginx to add locations once. Only the first location in the
  configuration file takes presence. This is because the Nginx config works on a per-request
  base.
- Don’t use a colon (`:`) when adding headers. This will result in inconsistent results
  in different browsers.
- Ensure API user has necessary permissions for data access
- Nginx performs better than Apache for the same amount of visitors, allowing to serve
  your webshop to more visitors than Apache could.
- Nginx does not use .htaccess files like Apache. Configuration previously done in
  .htaccess files now has to be done in a different format.
- Ensure to configure appropriate user permissions for FTP/SFTP access.
- This API does not require authentication.
- These development plans cannot be used to go live with a shop.
- Users are stored in a ‘htpasswd’ file, located at /data/web/nginx/htpasswd-development.
- It is not possible to include host/domainnames here.
- Rate limits apply; check API documentation for details
- Blocking IP addresses, User Agents or Referrer Sites may cause unforeseen issues,
  since it’s easy to block more than expected.
- Ensure the API is enabled in the settings.
- Ensure to configure FTP or SFTP according to your requirements.
- Requires OAuth setup in Magento admin
- Country detection is 99,8% accurate (according to MaxMind, the supplier of the geo
  database).
- It is generally better to serve a static page, than to enforce a hard block. Static
  pages consume almost no resources and can be used to explain alternative ways to
  contact your organisation.
- Nginx performs better than Apache for the same amount of visitors.
- Nginx does not use .htaccess files like Apache.
- Ensure OAuth settings are correctly configured in Magento admin.
- Refer to documentation for specific endpoint configurations.
- Block these IP's from using your site. They should have proper CIDR notation.
- Make sure all storefront configuration is present.
- Hypernode Managed Vhosts must be enabled.
- Documentation can be found at https://api.docs.hypernode.io/
- Some objects like Product may return nulls in deeply nested fields
- Ensure your IP address is whitelisted for FTP access.
- If you want to use Let’s Encrypt and have the Hypernode Managed Vhosts (HMV) system
  enabled, you need to configure LE during the creation of the vhost. Using the old
  method with dehydrated won’t work!
- Please note that if you have Hypernode Managed Vhosts enabled, you can skip this.
- Blocking IP addresses, User Agents or Referrer Sites may cause unforseen issues,
  since it’s easy to block more then expected.
- Enable the Magento 1 API for access to data
- Ensure to set up API access in Magento admin panel.
- Some endpoints may require specific permissions set in Magento.
- Rate limiting per IP address applies.
- PURGE method is disabled by default due to security and performance considerations.
- Allow PURGE requests only from trusted IP addresses to avoid security risks.
- Rate limiting may apply to API requests.
- Requires setup of FTP/SFTP configurations in Hypernode.
- To enable PURGE, modify the blocking configuration to allow only trusted IP addresses.
- Ensure your VCL configuration properly handles purge requests and uses the real
  client IP
- Requires API key and setup in Magento Admin
- Requires API key to access the endpoints.
- Ensure the API user has the correct permissions to access the endpoints.
- PURGE method is disabled by default for security and performance considerations.
- To enable PURGE, it is recommended to allow requests only from trusted IP addresses.
- This approach removes all protection and should only be used in development environments.
- If you want to use Let’s Encrypt and have the Hypernode Managed Vhosts (HMV) system
  enabled, you need to configure LE during the creation of the vhost.
- Please note that if you have Hypernode Managed Vhosts enabled, you can skip the
  Nginx configuration for redirecting HTTP traffic.
- 'Error: The default website isn’t defined. Set the website and try again.'
- Backups can be created as file or database types.
- It is possible to enable the PURGE method, but it should only be opened to trusted
  clients.
- Non-www
- www
- Ensure that the API is enabled in Magento 1 configuration.
- Requires setup of connected app in Magento for OAuth2.
- Requires configuration for API access.
- Requires setup of OAuth in Magento admin panel
- Ensure proper API rate limits are followed to avoid throttling.
- SSH access is required for certain operations.
- Performance issues may arise from various factors including server configuration
  and resource limitations.
- The safest approach to enable PURGE requests is to allow them only from trusted
  IP addresses.
- Use appropriate OAuth scopes for access
- Deny all PURGE requests by default, allow from specific IPs
- No specific authentication required for PURGE method.
- Check user permissions to access specific endpoints.
- Ensure API authentication is properly configured.
- Requires setup of FTP/SFTP on Hypernode
- To enable PURGE, it is advised to allow requests only from trusted IP addresses
  or require authentication.
- Ensure your cron jobs are set up correctly to avoid issues
- Mailhog is available for testing email sending
- Ensure you have the correct credentials for FTP access.
- Check firewall settings if you cannot connect.
- Error patterns not provided in the documentation.
- Make sure to include a PHP handler to the end of a location-block, or PHP scripts
  inside it will not be executed!
- Make sure you only include files from /etc/nginx/app and NOT from /data/web/nginx.
- Ensure OAuth credentials are set up in the Magento admin.
- Rate limits may apply based on your plan.
- Ensure to monitor disk space regularly to avoid running out of inodes.
- When hypernode-managed-vhosts enabled, create a vhost for the Apex and for the www.
- For the non-www vhost, create the vhost as type wwwizer.
- Ensure to handle rate limiting as per Magento guidelines.
- Per IP rate limiting only applies to requests handled by PHP and not to the static
  content.
- Only use the setting to disable per-IP connection limit for debugging purposes.
- Ensure to configure your Hypernode settings correctly before making API calls.
- Ensure proper setup of OAuth for access
- Rate limits may apply based on usage
- Ensure to secure your Magento installation against vulnerabilities.
- Regularly update your Magento installation to the latest version.
- Ensure proper API versioning when making requests.
- It is very important to restrict access to your Application’s admin panel.
- One of the best ways to restrict access is by limiting the IP address that can even
  access the admin section.
- Ensure proper OAuth2 setup before proceeding with API calls
- Ensure the API is enabled in Magento settings
- Consider using OAuth for secure authentication
- Enable Maintenance Mode in Magento 1 by setting the maintenance.flag
- Uses OAuth2 with refresh token — requires setup of integrated application in Magento
- Ensure to fill in the User, Hostname, and Password before proceeding with the installation.
- Ensure your IP is whitelisted for FTP access
- No authentication required for basic FTP/SFTP access.
- Search engines don’t like duplicate content. To rewrite trailing slashes some additional
  Nginx configuration is required.
- If you rewrite all URLs, some issues may occur with the Magento backend admin and
  some other endpoints.
- When hypernode-managed-vhosts enabled, create a vhost for both Apex and www.
- To redirect when using Varnish, use the public prefix to prevent cached redirect
  loops.
- How to Resolve Rate Limited Requests (429 Too Many Requests)
- Some Magento module licenses are tied to a specific server name (accessible in the
  environment variable SERVER_NAME).
- Only use the setting to disable per-IP connection limit for debugging purposes!
  Using this setting on production Hypernodes is highly discouraged, as your shop
  can be easily taken offline by a single IP using slow and/or flood attacks.
- Ensure API user permissions are set correctly.
- Ensure your IP is whitelisted for access.
- Ensure that you have set up your Hypernode instance correctly.
- Check your OAuth settings to avoid authentication issues.
- Nginx uses compression when the response length is larger than 1000 bytes.
- The 'gzip_min_length' directive is not overridable.
- API requires authentication for all endpoints
- Ensure you have the correct OAuth scopes set for API access.
- How to Enable the Magento 1 API
- Uses SFTP for secure file transfer
- Nginx does not use .htaccess files like Apache, the configuration previously done
  in .htaccess files now has to be done in a different format.
- After changing your Nginx configuration, always check for config errors in /data/web/nginx/nginx_error_output
- Ensure to configure the OAuth settings in your Magento setup.
- Ensure database credentials are correct before installation.
- Some Magento module licenses are tied to a specific server name.
- Ensure proper OAuth setup for accessing the API.
- Managed Vhosts system is enabled by default on new booted Hypernodes.
- Use 'hypernode-manage-vhosts --help' for more information on configurations.
- On Hypernodes, GZIP Compression is already configured to compress responses larger
  than 1000 bytes.
- For 90% of the Hypernode users the current GZIP settings will suffice.
- Ensure OAuth credentials are set up correctly for API access.
- Rate limiting methods are discussed in detail.
- Specific configurations for managing Vhosts are provided.
- Some responses may contain nulls in deeply nested fields
- You can use one object storage across multiple Hypernodes. But you can only use
  one object storage space per Hypernode.
- Nginx does not use .htaccess files as Apache does.
- After changing your Nginx configuration, always check for config errors in /data/web/nginx/nginx_error_output.
- Ensure that OAuth credentials are correctly set up in Magento admin.
- Check for rate limiting based on API usage.
- Check IP address restrictions for accessing the API.
- Cancellation takes effect at the end of the current billing period
- Data remains accessible for 7 days after cancellation
- The Hypernode Managed Vhosts (HMV) system is currently enabled by default on all
  new booted Hypernodes.
- Using Varnish works slightly differently with HMV enabled.
- Use the hypernode-systemctl command-line Tool for managing configurations.
- Ensure proper IP allowlisting for secure access.
- When Dynamic Upscaling is enabled, your plan will automatically upgrade when you
  reach 99% of your current storage limit. This may result in higher costs, so monitor
  your usage regularly.
- Check your OAuth credentials if facing authentication issues.
- Uses basic authentication for user access
- Certain endpoints may require additional permissions
- You can use one object storage across multiple Hypernodes.
- But you can only use one object storage space per Hypernode.
- API requires authentication
- Ensure to fill in the User, Hostname and Password when installing Magento 2
- Ensure proper permissions are set for the API client
- Ensure to set up correct permissions for OAuth tokens
- Some API endpoints may return null values in certain fields
- Some API calls may return limited data based on user permissions
- Ensure your IP is whitelisted for API access
- Use secure connections (SFTP/HTTPS) when transmitting sensitive data
- Create File Backup and Download it to Your Local Machine
- Enable the Magento 1 API
- The sync process runs in the background.
- Monitor progress using the `show` command.
- Requires OAuth2 setup with client credentials
- Some responses may include additional pagination metadata
- Setup of connected app is required
- Some features may require specific configurations
- Requires setup of OAuth integration in Magento admin.
- Some endpoints may have limitations on the number of records returned.
- Ensure proper API endpoint usage as per the documentation.
- Enable Secure Document Root
- Build Static Assets
- Configure Your Magento 2 Cron
- The `mv` command moves or renames files and objects.
- The `rm` command deletes a single file.
- Object versioning increases the storage space used by your objects. Each version
  of an object is stored separately, so if you have a lot of changes to your objects,
  you may need a bigger storage plan at some point.
- The restore command restores objects in place. This means that the current version
  of the object will be replaced with the version you are restoring.
- Requires setup of API credentials in Magento
- Ensure OAuth is properly configured in Magento settings
- API versioning may affect available endpoints
- Rate Limiting Methods
- What needs to be adjusted after the Xgrade? When can it be performed?
- Make sure to set up OAuth credentials for API access
- Enable the Magento 1 API in the configuration.
- Manage FTP users through CLI or Control Panel.
- Rate limiting may apply — check server configuration for limits on requests per
  IP.
- The restore command restores objects in place. This means that the current version
  of the object will be replaced with the version you are restoring. If you want to
  keep the current version of the object (or directory), you should make a copy of
  it before running the restore command.
- 'PHP Settings in .user.ini files are cached by PHP-FPM. When changing settings has
  no effect, try restarting the PHP-FPM workers: pkill -u app php-fpm'
- The memory_limit settings are hardcoded and thus cannot be overridden.
- Ensure to configure API permissions in Magento for data access
- Uses OAuth2 with refresh token — requires setup of connected app in Akeneo
- Manage FTP users and whitelist IP addresses through the control panel or CLI.
- Rate limiting methods may apply, resulting in 429 Too Many Requests errors.
- Requires configuration of API access in Magento admin panel.
- Ensure that the necessary permissions are granted to the API user.
- Requires setup of connected app in Magento backend.
- A 502 Bad Gateway error indicates there has been an internal error within PHP, which
  resulted in the site not being rendered and therefore you will see this error in
  your browser.
- The main cause is that PHP has ran out of memory.
- Hypernodes can generally cope with high memory usage, but in extreme cases the Hypernode
  will perform an automatic recovery restart of the PHP service.
- In very rare cases, PHP might crash for other reasons than memory depletion (a so
  called 'SEGFAULT').
- Ensure proper OAuth2 setup for accessing the API.
- Rate limits may apply for API requests.
- This feature is only supported on Debian Bookworm and the feature is disabled by
  default.
- You can list, enable and disable the alternative PHP versions on your Hypernode
  using the hypernode-systemctl command.
- You can specify an alternative PHP handler for the desired vhost using Hypernode
  managed vhosts.
- Ensure to create backups regularly to prevent data loss.
- Ensure your IP address is whitelisted for FTP/SFTP access
- Use secure passwords for MySQL access
- Rate limiting methods may apply.
- 502 Gateway Errors can occur due to misconfigured server settings.
- Debugging traffic will be routed to the PHP-FPM instance which has been configured
  with Xdebug enabled.
- Ensure OAuth2 credentials are set up correctly before accessing the API.
- Some configurations may have specific requirements
- A 502 Bad Gateway error indicates there has been an internal error within PHP.
- Ensure to whitelist your IP address to access FTP/SFTP.
- Ensure proper authentication setup to access the Magento API.
- What Limits Apply To Active PHP Requests Per IP
- This feature is only supported on Debian Bookworm and is disabled by default.
- You can list, enable and disable the alternative PHP versions using the hypernode-systemctl
  command.
- Ensure to manage FTP users in Control Panel
- Troubleshoot connection issues through CLI
- Refer to Hypernode documentation for specific API usage and details.
- Use HTTPS so You Can Take Advantage of HTTP2
- While remote debugging works with Varnish enabled, you might want to bypass Varnish
  when debugging.
- Uses REST API for data access
- Exclude IP Addresses from the per IP Rate Limiting
- Disable per IP Rate Limiting
- Exclude Specific URLs from the per IP Rate Limiting Mechanism
- How to Serve a Custom Static Error Page to Rate Limited IP Addresses
- You can easily switch the PHP version of your Hypernode.
- Each change may take up to 10 minutes to be applied to your Hypernode.
- FTP/SFTP configuration requires setting up user permissions.
- Rate limiting may apply to bots and crawlers.
- fail2ban is enabled on the hypernode, which detects brute force attempts
- Uses Basic Authentication — requires setup of user credentials in Hypernode
- Ensure that OAuth scopes are correctly set up in the Magento admin.
- 'The following SSH public key types in the Control Panel are supported: RSA keys
  >= 2048 bits, ECDSA and Ed25519 keys.'
- DSA and RSA keys < 2048 bits are not permitted because they are not secure.
- Uses CLI commands for managing FTP users and whitelisting IPs.
- Requires configuration to enable the Magento 1 API.
- Includes methods for creating and downloading backups.
- API access may require specific user roles and permissions.
- We enabled fail2ban on the hypernode, which is a tool that detects bruteforces by
  tailing the remote access logs.
- It is possible that you ban your own IP through fail2ban because of extensive testing.
- Ensure the API user has appropriate permissions.
- Clients that cannot connect over HTTPS to a website running on Hypernode, are recommended
  to upgrade to newer, more secure versions of their browser or operating system.
- Adding security headers is recommended in your SSL setup.
- Fixed content warnings appear when static content (Javascript, CSS, images etc)
  are loaded over both HTTP and HTTPS.
- In the SSH keys page in the Control Panel you will see an overview of all Hypernodes
  you have access to with associated SSH keys (both yours and other members’).
- All SSH keys added by you are automatically added to Hypernodes you have access
  to. If you want to turn it off, uncheck global option.
- Make sure you add an entry for each domain record you need ssl for.
- Be careful not to exceed the ratelimits at Let’s Encrypt!
- Ensure to enable the Magento API for access
- Rate limits may apply to API requests
- Ensure yourself you are not using special characters like `%` and `@` in your Cron
  command.
- Requires a connected app with the appropriate scopes set in Magento.
- Rate limiting methods may apply to requests
- Custom static error pages can be served to rate limited IP addresses
- Check if Your Keys Have an Expire Set
- Requires an active Magento 1 installation with API enabled.
- For security reasons, each request is validated by our supplier.
- If you are requesting a Wildcard certificate, add an asterisk (*) to the left of
  the common name.
- Ensure to configure the OAuth settings in Magento admin.
- Rate limiting methods are discussed for handling 429 Too Many Requests.
- Specific configurations can be applied for different storefronts.
- Uses Hypernode's API.
- Requires OAuth setup in Magento admin panel.
- API responses may include pagination information.
- If you wish to switch between Intermediate and Modern settings, you can do so using
  the hypernode-systemctl settings modern_ssl_config_enabled command, using the --value
  True or --value False arguments.
- Magento 1 API is available but requires enabling in the admin panel.
- 'Free: Anyone who owns a domain name can use Let’s Encrypt to obtain a trusted certificate
  at zero cost.'
- 'Automatic: Software running on a web server can interact with Let’s Encrypt to
  painlessly obtain a certificate, securely configure it for use, and automatically
  take care of renewal.'
- Documentation provides information on SSL certificate usage.
- Setup required for OAuth2 client configuration.
- Product and order data may have complex structures.
- Rate limiting may cause 429 Too Many Requests errors.
- This cronjob configuration is deployed by default on new Hypernodes. If you don’t
  want this configuration, feel free to comment or delete the configuration from your
  crontab.
- Difference between FTP and SFTP
- Troubleshooting
- Rate limiting methods may apply to requests.
- Specific configurations can affect performance.
- SSH access is available for deployment.
- Ensure your deployment SSH key pair is configured in Github.
- We strongly recommend shop owners to use SSL certificates.
- Each request for an SSL certificate is validated by our supplier, which may delay
  issuance.
- Enable FPC caching in your Magento backend.
- Flush your cache after making these adjustments.
- Ensure to follow the specific rate limiting guidelines
- Let’s Encrypt is a free service and it’s possible that it isn’t working correct
  100%.
- We do offer single, EV or Wildcard SSL certificates as well.
- The API requires OAuth2 authentication.
- Ensure the correct base URL is set for the Magento instance.
- Ensure OAuth scopes are set correctly.
- Some API responses may include null values.
- Rate limiting methods are discussed in the documentation.
- Rate limiting for bots and crawlers is mentioned.
- Troubleshooting documentation available for performance issues.
- Some features may require additional setup in the control panel.
- Uses SSH keys for deployment
- Magento 1 API is enabled by default.
- Ensure correct permissions for API access.
- We recommend all Hypernode users to use Redis for caching.
- Flushing all Redis databases will flush the sessions database too, forcing all your
  visitors to log in again.
- Rate limiting methods may be applied based on configurations.
- Specific configurations may limit access to certain resources.
- The tool rotates log files daily, only when they exceed 50MB, and keeps four files
  in rotation.
- Ensure to manage disk space regularly to avoid performance issues.
- Ensure to manage request frequency to avoid 429 errors
- Some API calls might return paginated data that requires handling
- 'To display the percentile usage of files that can be created: `df -i /data`'
- 'To display the percentage of used space in gigabytes: `df -h /data`'
- 'To display the disk usage report sorted in descending order: `ncdu /data`'
- In most situations, there was an explosion of session-files. Check in /data/web/public/var/session
  whether this is the case.
- 'If you have identified a folder with lots (millions) of files, this is a handy
  command to delete all session files older than 2 days: `cd /data/web/public/var/session;
  find . -type f -mtime +2 -ls -delete`'
- 'The following command (using SSH) will show you the top 10 largest directories:
  `du -h /data/web /data/mysql | sort -h | tail -10`'
- 'You can remove logs and reports with the following commands: `find ~/public/var/reports
  -type f -delete; find ~/public/var/log -type f -delete`'
- When running specific extremely long queries (several hours), MySQL disk usage may
  grow but is freed. This is known behaviour of MySQL and can only be resolved manually.
- 'You can check your disk usage with: `df -h /data; df -i /data`'
- 'In case you have deleted some supersized log files or other ambiguous and huge
  files, but this doesn’t result in more available disk space, then some process is
  still using these files. You can check this with: `lsof +L1` and kill the process
  using: `kill <PID>`.'
- This module works in combination with Redis.
- Enable FPC caching in Magento backend.
- 'Optional: Configure Lesti::FPC'
- Rate limiting methods may apply
- Common error code for rate limiting is 429 Too Many Requests
- To receive SSH access from new-appname.hypernode.io to old-appname.hypernode.io
  make a SSH keypair on new-appname.hypernode.io and place this public key in the
  authorized_keys on old-appname.hypernode.io
- Please check the right path to the Magento 2 folder
- Let’s Encrypt is a free service and it’s possible that it isn’t working correct
  100%
- The import isn’t 100% foolproof so there could be situations in which it doesn’t
  work and you’d have to use the importer-tool via the Shell.
- Requires enabling the Magento API in settings
- Test If Your SOAP API Is Available for Magento
- Rate limiting can affect the number of requests sent to the API.
- Monitor for 429 Too Many Requests errors and adjust request frequency accordingly.
- Uses SSH key for deployment
- The quick fix will be to flush the Redis cache so there is plenty of Redis memory
  available again.
- To prevent this you can try using compression on the Redis data, but most of the
  time this will only temporary ban out the problem.
- If you store both the Magento caches (FPC and cache) and the sessions in Redis,
  moving the sessions from memory to files or the database could be a solution, but
  this can cause an increase in load times.
- Another fix could be disabling Redis cache for your staging environment on the Hypernode,
  leaving the staging memory for the production website.
- Rate limiting methods can apply to bots and crawlers.
- Request limits may require adjustments in configuration.
- If you want to flush all Redis caches at once, you can easily flush all Redis databases
  using the flushall command.
- If the sessions are stored in Redis too, don’t flush out all databases, but selectively
  use the ones that are used for caching.
- Composer 2 is the default Composer version on the Hypernode platform from January
  2022.
- API is enabled by default for Magento 1.x.
- Ensure to fill in the User, Hostname and Password correctly for installation.
- Ensure that API credentials are correctly set up in the Magento Admin panel.
- Ensure to configure OAuth settings in Magento admin panel
- When you change versions all Elasticsearch data will be deleted.
- Elasticsearch will use a lot of resources. We allocate up to 10% of the system memory
  as the JVM heap, with a maximum of 10GB or RAM.
- If you notice adverse effects, you can disable the service again or consider upgrading.
- Make sure to configure the base URL correctly.
- When cleaning up your Hypernode to save disk space, always check the /data partition,
  not the root (/) partition.
- Rate limiting may apply, particularly for bots and crawlers.
- Monitor for 429 Too Many Requests errors.
- Ensure OAuth is set up correctly in Magento.
- Development nodes are shielded using basic authentication.
- Ensure API permissions are properly configured
- Ensure to manage your FTP users carefully to avoid unauthorized access.
- Use SFTP for secure file transfer.
- Another fix could be disabling Redis cache for your staging environment on the Hypernode
  (if enabled), leaving the staging memory for the production website.
- 'However, to solve this issue there is only one real fix: Upgrade to a bigger node
  that has more memory.'
- Any mail sent out while MailHog is activated will be consumed by MailHog.
- After MailHog is deactivated only the emails sent after deactivation will reach
  the customers.
- Backups can be created and downloaded via various methods.
- Known rate limited plugins and service providers may affect performance.
- How to Resolve Rate Limited Requests (429 Too Many Requests) documentation should
  be referred to for handling rate limiting.
- Installing and using unsupported Node.js versions is no longer supported on the
  Hypernode Platform. We strongly advise against using unsupported versions, as we
  cannot provide any assistance or guarantee compatibility.
- Magento 1 supports both REST and SOAP APIs.
- Ensure API credentials are generated for the integration user.
- Ensure to whitelist your IP address for FTP access.
- Ensure to configure the OAuth credentials for the Magento API.
- Elasticsearch will use a lot of resources. We allocate up to 10% of the system memory
  as the JVM heap, with a maximum of 10GB of RAM.
- On Hypernode there is no Elasticsearch cluster but there is just a single instance.
- Ensure the Magento API is enabled in the admin panel
- Rate limits may apply depending on the API usage
- Rate limiting methods may vary depending on the configuration
- Rate limiting for bots and crawlers may require additional configurations
- Cronjobs are periodic tasks that run in the background of your Hypernode.
- Run the Magento cron every 5 minutes, skip if previous run is still busy.
- For new users, cron can be difficult to work with, as it’s hard finding out wat
  is causing cron not to run or to end before finishing the job. This section gives
  you some tips and tricks to debug cron issues.
- Ensure to fill in the User, Hostname and Password in the command.
- Ensure proper OAuth setup and permissions for API access
- Some endpoints may require additional parameters for filtering
- Some data may be paginated or require specific permissions
- Ensure your IP address is whitelisted to access FTP.
- SFTP is recommended for secure file transfers.
- Corediff requires a Magento installation folder to scan.
- To scan all code, include the --ignore-paths argument.
- Magento 2 uses another mechanism for scheduling tasks.
- The update/cron.php file has been removed in Magento 2.4.0.
- To avoid cronjobs running for hours, blocking all other crontasks to be executed
  by Magento, you can make use of the `timeout` utility.
- This tool can be given a 'max execution time' and will stop the running task when
  this time period has exceeded.
- For new users, cron can be difficult to work with, as it’s hard finding out what
  is causing cron not to run or to end before finishing the job.
- Our system will automatically add `flock` to your cron commands. This will prevent
  many problems, for example when multiple concurrent imports cause a database deadlock.
- Rate limiting may apply based on server configuration
- 'Idem-potency: When you write your own cron script, make sure the script is idempotent.
  When a script should only be run after a certain time or when a new import file
  is present, always make sure to exit the script when the conditions are not met.
  This avoids things breaking down when people run cron scripts manually to debug
  cron issues.'
- 'Time is always based on UTC (= GMT). This might differ from your local time: Dutch
  time is UTC+1 in winter and UTC+2 in summer.'
- Do not run the Magento crons using `wget` or `curl`, as this is slow, might give
  partial results, and occupies webslots for real visitors). See above how to invoke
  the non-HTTP Magento cron.
- Do not run the same cron simultaneously on multiple hosts, as results are unpredictable.
  When migrating, do not forget to disable the old crons.
- Be carefull when using day of month and day of week together. Using `Dom` and `Dow`
  without wildcards makes this an `OR` condition and not an `AND`, running the job
  more often then you’d expect.
- Cron does not deal with seconds so you can’t have cron job’s going off in any time
  period dealing with seconds. Like a cronjob going off every 30 seconds.
- Monitor your cronjobs! You can do this by checking the exitcode and or the mail
  that is sent, or using a third party monitor. A free third party cron monitoring
  tool is healthchecks.io.
- Ensure that API access is enabled in the Magento admin panel.
- Uses OAuth2 with refresh token — requires setup of a connected app in Magento.
- Supervisor enables you to use programs that need to run all the time on your Hypernode.
- These (usually long running) programs should not fail if there is an error.
- Prepare the secrets required for Hypernode API authentication
- API calls may be limited based on the backend configuration.
- Ensure that the correct permissions are set for API users.
- Rate limiting can affect API calls.
- Specific configurations may be necessary for different use cases.
- The hypernode-systemctl tool allows you to set certain values for your Hypernode
  via the command line interface.
- Some objects like orders may have complex structures
- This is recommended for every installation!
- API requires setup of OAuth2 credentials in Magento admin
- Requests may be rate limited with a 429 Too Many Requests error.
- Using Hypernode may require setup of specific configurations depending on the environment.
- Hypernode Brancher is currently only available for Hypernodes on the Falcon plans.
- Rate limiting methods can be determined and configured.
- Some requests may be rate limited leading to 429 Too Many Requests.
- Setup requires configuration of secrets for API access.
- Magento 2 uses another mechanism for scheduling tasks. That’s why the Magento 2
  cron needs to run every minute instead of every 5 minutes.
- The update/cron.php file has been removed in Magento 2.4.0, if this file exists
  on your installation, it can be safely removed.
- To avoid cronjobs running for hours, blocking all other crontasks to be executed
  by Magento, you can make use of the timeout utility.
- Our system will automatically add flock to your cron commands. This will prevent
  many problems, for example when multiple concurrent imports cause a database deadlock.
- Rate Limiting Methods apply, monitor for 429 Too Many Requests
- Some configurations may require additional setup
- Make sure to authenticate your requests using OAuth or API keys.
- Check for rate limits to avoid throttling.
- The `update/cron.php` file has been removed in Magento 2.4.0.
- To avoid cronjobs running for hours, blocking all other crontasks, use the `timeout`
  utility.
- Be careful when using day of month and day of week together. Using `Dom` and `Dow`
  without wildcards makes this an `OR` condition and not an `AND`, running the job
  more often than you’d expect.
- Cron does not deal with seconds so you can’t have cron job’s going off in any time
  period dealing with seconds.
- Monitor your cronjobs! You can do this by checking the exitcode and or the mail
  that is sent, or using a third party monitor.
- Be aware of 429 Too Many Requests errors and possible configurations.
- Uses OAuth2 — requires setup for API access
- Hypernode Brancher is currently only available for Hypernodes on the Falcon plans
- Ensure to configure the correct IP whitelist for FTP access.
- Uses OAuth2 with refresh token — requires setup of a connected app in Magento
- For a more detailed log of how the program is running the log files can be found
  in /data/var/log/supervisor/.
- Rate limiting methods may affect API calls.
- Specific configurations can impact performance.
- Use OAuth2 for authentication
- The hypernode-systemctl tool saves valuable time and makes developing and maintaining
  a Magento shop even more easier.
- In this example, we try to run a Python application, so we specify the interpreter.
- Most likely, you’re running a Node.js application. In that case you don’t need to
  specify the --interpreter option.
- Some endpoints may have limitations on returned data.
- Rate limiting methods are in place to manage traffic.
- Specific configurations can impact API performance.
- Ensure OAuth scopes are correctly configured in Magento
- Rate limiting methods are applied per IP address.
- Rate limited requests may return a 429 status code.
- Strongly recommend enforcing HTTPS-only on Magmi because of the possibility of entering
  database passwords or transferring other sensitive information.
- Some API endpoints may have usage limits
- How to solve the 'Front Controller Reached 100 Router Match Iterations' Error
- Uses OAuth2 for authentication.
- Ensure you have the correct OAuth scopes set.
- Ensure to set the correct permissions for the API user.
- Backup creation may require specific permissions.
- Enable Clean URLs for Magento
- Ensure to configure your IP address in the whitelist for access.
- How to Resolve Rate Limited Requests (429 Too Many Requests) includes methods for
  determining rate limiting methods and configuration.
- Rate limiting may apply per IP address and specific URLs can be excluded from this
  mechanism.
- We strongly recommend enforcing HTTPS-only on Magmi because of the possibility of
  entering database passwords or transferring other sensitive information.
- Ensure proper OAuth configuration in Magento admin.
- Rate Limiting Methods are documented for handling too many requests.
- Known Rate Limited Plugins and Service Provider information is available.
- Shows you the top requests from the latest /var/log/nginx/access.log
- Shows you a live view of the requests that are currently landing in NGINX
- Shows you a real-time overview of what the PHP-FPM workers are processing
- The client configuration can be found in /data/openvpn/client-configs.
- The standard configuration will be called something like openvpnclient.<appname>.<domain>.ovpn.
- Managing FTP users can be done via the control panel or CLI.
- Ensure that the API credentials have the required permissions.
- Magento 1 requires specific configurations for caching and database management.
- The automation will generate a default user configuration which you can use to connect
  to the Hypernode.
- Keep the OpenVPN private key secure.
- The `192.168.255.0/24` subnet will be used for VPN communication.
- Use `192.168.255.1` as the IP address to talk to the Hypernode.
- Uses Hypernode control panel for management
- Uses OAuth2 with refresh token — requires setup of connected app in Hypernode API
- Ensure API tokens are refreshed periodically
- Check for rate limits on API requests
- Blocking Unwanted Bots and Crawlers (10 mins)
- Ensure your IP is added to the whitelist for access.
- API limits may apply based on the plan
- Ensure that the API user has the required permissions.
- No authentication required for accessing FTP endpoints.
- This file contains the OpenVPN private key for your Hypernode, so keep it secure.
- Ensure API access is enabled for the user.
- Rate limits may apply based on the Magento settings.
- Uses OAuth2 with authorization code — requires setup of a connected app in Magento
- Some fields may return null for certain products
- All SSH keys added by you are automatically added to Hypernodes you have access
  to.
- If you want to turn it off, uncheck global option.
- Ensure proper configuration of user permissions for FTP access.
- Consider security implications when using FTP vs. SFTP.
- Authentication is required to access the API.
- Ensure that the OAuth credentials are correctly set.
- API calls may be limited based on plan.
- Ensure to monitor API usage to avoid throttling.
- OpenVPN requires installation of the latest OpenVPN client.
- The client configuration file contains the OpenVPN private key for your Hypernode.
- The 192.168.255.0/24 subnet will be used for VPN communication.
- Uses OAuth2 with refresh token — requires setup of connected app in Hypernode.
- Some API features may require specific permissions.
- This feature is accessible only for the Owners of the domains.
- If you don’t see the pencil icon next to “Legal Owner (WHOIS)” title, you don’t
  have permissions to edit the details.
- If you have DNS-only domain you won’t see WHOIS details. Changing WHOIS for the
  domain is applicable only for TLD domains.
- Some settings may return nulls in deeply nested fields
- Purge method is disabled by default
- Some endpoints may have rate limiting.
- Ensure proper API authentication methods are set.
- Be aware of rate limits on API calls.
- Some responses may contain null values in certain fields
- Only Owners and Admins can invite members to Teams.
- The Owner is the only one who can cancel a plan, the Admin however can also up-
  or downgrade a plan.
- Ensure proper authentication is set up for API access
- Everyone who has SSH access can change the plan from the CLI, even if they are not
  the Owner or Admin.
- Magento 1 API requires authentication
- Ensure to set up OAuth credentials correctly
- Be cautious of rate limits on API calls
- Requires authentication to access data
- Ensure proper API permissions are set for the integration
- Some APIs may return paginated results
- Ensure API credentials are correctly configured
- Rate limits may apply based on API usage
- Some endpoints may require additional parameters for filtering.
- Rate limits may apply to certain requests.
- No relevant information on API ingestion or configuration found in the documentation.
- Rate limits apply to API usage.
- Some operations may require additional permissions.
- Enable the Magento 1 API for access
- Ensure the API user has the appropriate permissions
- Serve a Custom Error Message When in Maintenance Mode
- No authentication required for API access.
- Ensure to monitor the performance regularly.
- New owner must have a valid payment method to accept the transfer.
- Admin access can be retained after the transfer.
- Requires proper setup of OAuth for API access
- All API interactions are subject to rate limits.
- Please note that this article only applies to Control Panel customers that log in
  via my.hypernode.com.
- when enabled, everyone who has SSH access can change the plan from the CLI, even
  if they are not the Owner or Admin.
- Ensure the Magento API is enabled in the admin panel.
- Two factor authentication, also known as two-step verification, is a more secure
  way of logging in than logging in with just a password.
- You’ll need access to your mobile device when signing in to the Control Panel.
- You’ll enter a verification code each time you sign in.
- You can also select the Remember this device for 30 days option to receive a verification
  code prompt only once every 30 days.
- You’ll need a verification app to receive the verification code.
- Some endpoints may have rate limits and require careful handling of requests
- Magento 1 requires proper configuration for REST API access.
- Some endpoints may have rate limits that impact data retrieval
- Ensure proper OAuth setup for API access
- If you are using Cloudflare or another CDN type product, we cannot check all your
  DNS records.
- Ensure OAuth scopes are set correctly for access
- Some endpoints may have rate limits applied
- Ensure to fill in the User, Hostname, and Password correctly.
- SOAP API requires WSDL for service definitions.
- Initially, the Owner is the only user that can assign roles to other team members.
- API requires OAuth2 authentication
- Some endpoints may have specific permissions
- Follow the setup instructions for deploying applications using Hypernode.
- Ensure that OAuth scopes are correctly set for the application.
- PURGE is disabled by default.
- Ensure that the OAuth scopes are correctly set up in Magento.
- Create various types of backups including file and database backups
- Some operations may have specific limitations
- Ensure to set up the OAuth credentials in the Magento admin panel.
- Documentation includes various procedures and steps for configuring Hypernode settings.
- Ensure to configure your API correctly to avoid performance issues.
- Monitor for bots and crawlers that may affect your shop's performance.
- We highly recommend you to save these codes somewhere safe.
- No authentication required for accessing the API.
- No authentication is required to access the DNS Check API.
- No specific notes provided in documentation.
- Use correct OAuth scopes for API access.
- Ensure proper API permissions are set up for the connected app.
- Ensure OAuth credentials are set up correctly in Magento.
- Setup required for API access including OAuth credentials
- Most domain names need an authorization code or token to initiate the transfer.
- If you don’t cancel the subscription, you will keep receiving invoices and will
  not receive an AUTH/transfer code.
- Hypernode will fully cooperate with any transfer that has correctly been passed
  in writing.
- Hypernode allows the transfer by changing the status of the domain to ACTIVE.
- 'In case of .nl/.com/.net/.org/.biz/.info/.de/.nu domain names: Hypernode will send
  the AUTH code to the registered e-mail address on transfer.'
- In case of .be domains we will not send the auth code automatically after you cancelled
  your subscription.
- In case of co.uk domains you’ll need the registrar-tag for the new provider to push
  the domain to.
- When inviting a new member to the team, you are required to assign them a role.
- Magento 1 API requires specific configurations for REST access
- Ensure proper API user permissions are set up
- Ensure proper configuration to avoid downtime.
- Backup data before flushing the cache.
- Some actions may have specific permissions required
- The owner of the Hypernode is also the owner of the domain plan, which means they
  pay for the domain.
- Some resources may have rate limiting
- Domains will be billed once a year.
- Check user roles and permissions for API access
- Some features may have specific limitations based on the plan
- Ensure that the API is enabled in the backend settings.
- Uses basic authentication.
- Ensure to configure proper permissions for accessing object storage.
- A Presence plan does not come with hosting space.
- You cannot create email boxes with a Presence plan, because you do not have email
  storage.
- Ensure to check the API documentation for specific endpoint details.
- Refer to specific sections for detailed instructions on backup creation and downloading.
- Performance issues may arise due to slow MySQL queries.
- Check if caches are enabled to optimize performance.
- Hypernode customers get additional data such as Performance checks and charts.
- Backup creation processes are documented but may require additional setup.
- Ensure proper configuration to optimize the performance of your Magento shop
- Follow security best practices to protect your Magento store
- Performance optimization tips and general troubleshooting strategies are available
  in the documentation.
- Ensure correct OAuth setup for API access.
- System and logfile times are in UTC (GMT) timezone! Dutch time is UTC+1 in winter
  and UTC+2 in summer.
- Log files are rotated daily. Previous log files are compressed using gzip.
- No authentication is required for this API.
- Some modules/extensions will connect to external services. These services might
  not be reachable causing all processes on the Hypernode to hang/or slow down (e.g.
  Kiyoh reviews). It may be worth checking the php-slow.log to spot such issues.
- A slower performance is not always caused by a high load on the Hypernode.
- If a domain is linked to a Hypernode, it’s no longer possible to manually change
  the apex records that point to your Hypernode.
- The owner of the Hypernode is also the owner of the domain plan, which means they
  pay for the domain and can cancel the plan.
- It is advisable to set the MX records if using external mail solutions.
- Enable the API for Magento 1 through the backend settings.
- Requires Magento 2.3 or higher for full API support.
- Ensure proper OAuth setup in Magento admin.
- Some objects may have rate limits on API calls
- SSH Access is required for certain operations.
- This configurable setting can be set using the hypernode-api or the hypernode-systemctl
  command-line tool from the Hypernode.
- The default is to be more restrictive, as, on average, that seems to be the most
  effective setting.
- Magento requires a secret form token to prevent XSRF attacks.
- If you are locked out of your admin panel, you could disable admin form key as a
  temporary measure.
- Rate limits may apply based on Magento configuration.
- Ensure proper OAuth credentials are set up in the Magento admin.
- API rate limits are enforced; avoid exceeding the limits to prevent throttling.
- It is strongly recommended to not run load tests on a production node.
- Usual suspects of high I/O usage are multiple reindex runs, large log files, import
  or export batch jobs, and large database tables without index.
- Ensure OAuth setup is completed in Magento.
- When your shop is giving a `413 Request Entity Too Large` error, the data send to
  the server in a POST request is larger than the max allowed body size in Nginx.
- The default in our Nginx configuration is set to `client_max_body_size 120m;` but
  you can easily override this value yourself in case of bigger sizes of POST data.
- Keep in mind that changing this setting to a higher value can increase memory usage
  on the server. Don’t change this value on Hypernodes with high memory usage as it
  can easily make your shop run out of resources when under attack or in case of high
  load.
- Uses OAuth2 with authorization code flow.
- Ensure appropriate permissions are set for the API client.
- Ensure proper API authentication is configured
- Some API responses may include pagination
- System and logfile times are in *UTC (GMT) timezone*! Dutch time is UTC+1 in winter
  and UTC+2 in summer.
- This issue is as far as we know a Magento 1 only issue, although a very small group
  of developers working on Magento 2 have notified us of having the same issue appear
  in Magento 2.
- Uses Hypernode for hosting and management
- Ensure to set the correct OAuth scopes for API access.
- Requires setup of API integrations in Magento admin
- Slow log records stack traces for PHP requests exceeding configured threshold
- Enabled on Hypernode by default
- Ensure API user has appropriate permissions
- Some endpoints may require additional parameters
- Enable API in Magento 1 settings.
- Some modules/extensions will connect to external services which might not be reachable
  causing all processes on the Hypernode to hang/or slow down.
- Ensure that the API is enabled in the Magento 1 settings.
- Ensure proper authentication setup before accessing the API.
- Ensure you have the correct OAuth scopes set in Magento.
- Marking processes as unkillable does not magically add more memory.
- If you persistently have problems with memory, the real solution would still be
  to upgrade to a bigger plan.
- Uses OAuth2
- Ensure correct API endpoint usage
- API requires specific configuration for access.
- ElasticSearch 5.2 will no longer be available. You can use `hypernode-systemctl
  settings elasticsearch_version --value 6.x` to upgrade to `6.6.1`.
- The root disk size will now be `20 GB` on all nodes.
- TLS 1.3 has been added. Note that TLS 1.1 and TLS 1.0 are deprecated and will be
  disabled at a later point in time.
- Curl has been updated to support and prefer HTTP/2.
- The OpenSSL seclevel has been updated to from ‘1’ to ‘2’. This may reduce interoperability
  with older systems that are using pre-2013 industry standards.
- If you are locked out of your admin panel, disabling admin form key should only
  be used as a temporary measure.
- Some objects like Order may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of OAuth application in Magento
- Ensure your Magento instance is configured to allow API access.
- Use the correct API version for compatibility.
- Requires proper OAuth2 setup in Akeneo
- Data may vary based on user permissions
- Ensure you have the correct permissions set for API access.
- It is strongly recommended to not run load tests on a production node, as load tests
  generally impose non-realistic load and likely incur depletion of your burst pool.
- Usual suspects of high I/O usage are multiple reindex runs, large log files that
  are being read at every request, import or export batch jobs, and large database
  tables (>50K rows) without index.
- To solve the 413 Request Entity Too Large error, create a Nginx include file as
  /data/web/nginx/server.bodysize and set the client_max_body_size to 300M.
- The default in Nginx configuration is set to client_max_body_size 120m.
- Make sure to create backups regularly to avoid data loss.
- Ensure that OAuth scopes are correctly set up for API access
- Data may contain null values for optional fields
- Ensure API is enabled in Magento 1 settings.
- Refer to the Magento documentation for specific API endpoints and usage.
- Make sure to have the correct API credentials set up.
- Watch out for API rate limits.
- The slow log feature records stack traces when PHP takes longer than the configured
  threshold.
- To enable the slow log, add 'slowlog = /var/log/php-fpm/php-slow.log' and 'request_slowlog_timeout
  = 10s' to the PHP-FPM pool.conf.
- Magento 1 API requires enabling the API in settings.
- Backup files can be created and downloaded.
- Database backups can be created.
- Setup of OAuth credentials is required for API access.
- Requires proper API setup in Magento admin
- Ensure you have the right permissions for API access
- Varnish caching may affect API response times
- ElasticSearch 5.2 will no longer be available. You can use hypernode-systemctl settings
  elasticsearch_version --value 6.x to upgrade to 6.6.1
- The root disk size will now be 20 GB on all nodes.
- API may require specific roles for access
- Requires setup of OAuth authentication
- Rate limits apply depending on the subscription tier
errors:
- '401 Unauthorized: Check if OAuth tokens are valid or expired.'
- '500 Internal Server Error: Check Magento logs for details.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check API key or token validity.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Consider implementing rate limiting.'
- '401 Unauthorized: Check your OAuth credentials.'
- '403 Forbidden: Ensure proper permissions are set for the API user.'
- '403 Forbidden: Check API permissions.'
- '500 Internal Server Error: Contact support.'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: A server issue occurred'
- '429 Too Many Requests: Reduce request frequency or check rate limits.'
- 'No alive nodes found in your cluster: Make sure ElasticSearch is enabled.'
- 'Property “user_default_locale” expects a valid locale code. The locale does not
  exist, “en_US” given: Akeneo wasn’t installed properly, probably because elasticsearch
  wasn’t enabled in the first place.'
- 'request.CRITICAL: Uncaught PHP Exception “index_not_found_exception”,”reason”:”no
  such index”: There may be mismatches in the Elastic index.'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: Verify sufficient permissions'
- '404 Not Found: Confirm endpoint paths'
- '404 Not Found: Check if the endpoint is correct'
- '401 Unauthorized: Verify API credentials'
- '500 Internal Server Error: Check server logs for more details'
- '404 Not Found: Check the endpoint path and parameters.'
- '500 Internal Server Error: Retry the request or check the server status.'
- '401 Unauthorized: Invalid credentials'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource not found'
- Cannot upgrade from MySQL 5.6 to MySQL 8.0 directly.
- Ensure sufficient resources when installing on the same Hypernode.
- '401 Unauthorized: Check the API token or credentials.'
- '404 Not Found: Verify the endpoint or resource path.'
- '401 Unauthorized: Check the OAuth credentials'
- '500 Internal Server Error: Check the server logs for details'
- '404 Not Found: Check the endpoint path.'
- '500 Internal Server Error: Review the server logs for details.'
- '401 Unauthorized: Ensure client credentials are correct.'
- '404 Not Found: Check the endpoint URL and parameters.'
- '403 Forbidden: Check permissions for the API key'
- '404 Not Found: Ensure correct endpoint URL'
- '500 Internal Server Error: Check server logs for details'
- 'DISK_SPACE_LIMIT_EXCEEDED: Check your disk usage and free up space.'
- 'MIGRATION_FAILED: Verify the migration process and logs for errors.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '403 Forbidden: Check permissions for the requested resource.'
- '401 Unauthorized: Check the provided OAuth credentials.'
- '403 Forbidden: Ensure the user has adequate permissions.'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Check your API permissions.'
- '401 Unauthorized: Verify client credentials.'
- '403 Forbidden: Access denied to the requested resource'
- '401 Unauthorized: Check OAuth credentials.'
- '500 Internal Server Error: Retry the request.'
- '403 Forbidden: Insufficient permissions for the requested resource'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify the resource path'
- '500 Internal Server Error: Review server logs for more details'
- '401 Unauthorized: Check your credentials'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: The requested resource does not exist.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your OAuth credentials'
- '404 Not Found: Ensure the resource path is correct'
- '429 Too Many Requests: Implement rate limiting strategy'
- '401 Unauthorized: Verify your API credentials.'
- '403 Forbidden: Check permissions for the API user.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Endpoint may not exist.'
- '500 Internal Server Error: Try your request again later.'
- '401 Unauthorized: Check your OAuth token and permissions'
- '404 Not Found: Verify the endpoint is correct'
- '500 Internal Server Error: Contact support for assistance'
- '401 Unauthorized: Check your credentials and permissions.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check your authentication credentials.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- 'REQUEST_LIMIT_EXCEEDED: Find the corresponding rate limit zone in logs and adjust
  user agent mapping or IP whitelist.'
- '401 Unauthorized: Check API credentials'
- '404 Not Found: Verify endpoint paths'
- Resource path not callable
- Invalid API path
- Is not a valid method
- '404 Not Found: Verify endpoint is correct.'
- '500 Internal Server Error: Check server logs for details.'
- '401 Unauthorized: Check client credentials and token validity.'
- '404 Not Found: Verify endpoint paths and resource availability.'
- 'SOAP error: Parsing WSDL: Couldn’t load from '''': failed to load external entity.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check if OAuth token is valid'
- '403 Forbidden: Verify user permissions'
- '404 Not Found: Check endpoint URL and resource availability'
- '400 Bad Request: Check the request format'
- '401 Unauthorized: Verify credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '429 Too Many Requests: Slow down request rate'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '429 Too Many Requests: Rate limit exceeded. Slow down your requests.'
- '429 Too Many Requests: Reduce request frequency or implement rate limiting.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '403 Forbidden: Ensure user has sufficient permissions.'
- '404 Not Found: Verify endpoint path.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Check server logs for more information'
- '404 Not Found: Check the endpoint path for correctness.'
- '500 Internal Server Error: Server encountered an unexpected condition.'
- '401 Unauthorized: Verify API token.'
- '401 Unauthorized: Verify OAuth credentials'
- '404 Not Found: Endpoint may not exist'
- 'Max memory limit reached: Configure keys to be volatile.'
- '500 Internal Server Error: Contact support if this persists'
- '401 Unauthorized: Check API credentials and permissions.'
- '500 Internal Server Error: Check server logs for more details.'
- '502: upstream sent too big header while reading response header from upstream'
- '503: backend fetch error'
- '404 Not Found: Verify the endpoint'
- '500 Internal Server Error: Check server logs'
- '401 Unauthorized: Check credentials or token expiry.'
- '403 Forbidden: Check your API key permissions.'
- '404 Not Found: Verify the endpoint is correct.'
- '401 Unauthorized: Check API credentials or OAuth token'
- '500 Internal Server Error: Contact support'
- '403 Forbidden: Verify permissions for the API user.'
- '404 Not Found: Ensure endpoint is correct.'
- 'INVALID_CREDENTIALS: Check your client_id and client_secret'
- 'RESOURCE_NOT_FOUND: Verify the endpoint path'
- '404 Not Found: API does not work due to clean-url-rewrites'
- '401 Unauthorized: Check if the API key is valid.'
- '401 Unauthorized: Verify API credentials.'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Ensure the endpoint exists'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- 'PHP Parse error: Upgrade from php5 to php7 as not all vendor libraries are php5
  compatible'
- 'out-of-memory: Upgrade to a bigger hypernode with more memory available'
- '401 Unauthorized: Verify authentication credentials.'
- '401 Unauthorized: Recheck API key or permissions'
- '404 Not Found: Check the endpoint path'
- '500 Internal Server Error: Retry after some time'
- '403 Forbidden: Ensure you have the required permissions.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 'PHP Parse error: syntax error, unexpected ''.'' in /data/web/magento2/vendor/magento/framework/ObjectManager/Factory/AbstractFactory.php
  on line 93'
- 'out-of-memory errors: If you are running on a Start plan: Upgrade to a bigger hypernode
  with more memory available.'
- '403 Forbidden: Check account permissions'
- '401 Unauthorized: Check if the OAuth token is valid.'
- '500 Internal Server Error: Contact support for server issues.'
- '403 Forbidden: Check your API credentials and permissions'
- '404 Not Found: Verify the endpoint path and request parameters'
- '403 Forbidden: Check permissions or user roles'
- '403 Forbidden: You do not have permission to access this resource'
- '404 Not Found: The requested resource could not be found'
- '403 Forbidden: Check your API permissions'
- '400 Bad Request: Check the request syntax.'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Try again later'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Verify endpoint URL'
- '403 Forbidden: Check API credentials or permissions'
- '500 Internal Server Error: Retry after some time or check server logs'
- '401 Unauthorized: Verify token validity'
- '500 Internal Server Error: Server issue'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Verify the API endpoint.'
- '403 Forbidden: Access denied'
- '404 Not Found: Resource does not exist'
- '403 Forbidden: Ensure you have the right permissions'
- '500 Internal Server Error: Consult server logs for details.'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Check API key or token.'
- '404 Not Found: Verify endpoint URL.'
- '404 Not Found: Verify the resource path and parameters'
- '401 Unauthorized: Verify token and permissions'
- '404 Not Found: Check endpoint URL'
- '401 Unauthorized: Recheck API credentials'
- '404 Not Found: Check the requested resource path'
- '403 Forbidden: Check user permissions or API access'
- '404 Not Found: Verify endpoint path and resource availability.'
- '401 Unauthorized: Recheck OAuth token.'
- '404 Not Found: Endpoint may be incorrect'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'RESOURCE_NOT_FOUND: The requested resource does not exist.'
- 'RATE_LIMIT_EXCEEDED: Too many requests in a given time period.'
- '401 Unauthorized: Check your access token or client credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '403 Forbidden: Check if the API key has the necessary permissions.'
- '500 Internal Server Error: Server issue, try again later'
- '401 Unauthorized: Check the OAuth token validity'
- '404 Not Found: Check the endpoint path and resource availability'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '401 Unauthorized: Check the API credentials and permissions.'
- '403 Forbidden: Ensure the API user has access to the resource.'
- '401 Unauthorized: Ensure proper authentication'
- '401 Unauthorized: Check your API credentials and permissions.'
- 'DISK_SPACE_EXCEEDED: Clear up space on your disk'
- 'MYSQL_CONNECTION_ERROR: Check your MySQL configuration'
- '500 Internal Server Error: Server encountered an error'
- '403 Forbidden: Ensure your account has the necessary permissions.'
- '500 Internal Server Error: Contact support for server issues'
- '404 Not Found: Ensure the endpoint path is correct'
- '403 Forbidden: Access denied to the requested resource.'
- '500 Internal Server Error: Check server logs for more information.'
- '401 Unauthorized: Check your OAuth credentials and permissions'
- '404 Not Found: Endpoint may be incorrect or resource not available'
- '401 Unauthorized: Check API key or token'
- '500 Internal Server Error: Check server logs.'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint and parameters'
- '500 Internal Server Error: This may be a server-side issue.'
- '429 Too Many Requests: Slow down your requests.'
- '404 Not Found: Ensure the endpoint exists and is correctly spelled'
- '401 Unauthorized: Check if the access token is valid.'
- '403 Forbidden: Ensure the user has permission to access this resource.'
- '429 Too Many Requests: Reduce request frequency'
- '500 Internal Server Error: Contact support if this persists.'
- '403 Forbidden: Ensure the API user has the required permissions.'
- '404 Not Found: Check the endpoint path for correctness'
- '404 Not Found: Check if the endpoint is correct.'
- '403 Forbidden: You don''t have permission to access this resource.'
- '401 Unauthorized: Check credentials and permissions'
- '401 Unauthorized: Check your credentials and permissions'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check OAuth credentials and permissions.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '403 Forbidden: Check if the API user has the correct permissions.'
- '500 Internal Server Error: Check the Magento server logs for details.'
- '401 Unauthorized: Check your API key and secret.'
- '403 Forbidden: Insufficient permissions for this action.'
- '401 Unauthorized: Check your API token or permissions'
- '403 Forbidden: Verify API permissions.'
- '403 Forbidden: Verify user permissions.'
- '404 Not Found: Endpoint does not exist.'
- '403 Forbidden: Check permissions for the API token'
- '403 Forbidden: Ensure proper authentication.'
- 'AUTHENTICATION_ERROR: Check your credentials'
- 'RESOURCE_NOT_FOUND: Verify the endpoint and resource ID'
- 'INVALID_REQUEST: Ensure your request format is correct'
- '401 Unauthorized: Verify client credentials'
- 'INVALID_AUTH: Check your API credentials'
- 'RESOURCE_NOT_FOUND: Ensure the resource exists'
- '401 Unauthorized: Check client credentials and OAuth scopes'
- 'REQUEST_LIMIT_EXCEEDED: Reduce the frequency of your API calls'
- '403 Forbidden: Check API user permissions'
- '500 Internal Server Error: Review server logs for details'
- '401 Unauthorized: Check your API key and permissions'
- '403 Forbidden: Check user permissions.'
- '500 Internal Server Error: Retry request or check server logs.'
- '520: Web server is returning an unknown error. This can be caused by your request
  headers being too big.'
- '520: Web server is returning an unknown error'
- '401 Unauthorized: Ensure valid OAuth credentials'
- '401 Unauthorized: Check if API keys are set correctly'
- '429 Too Many Requests: Rate limit exceeded, consider reducing request frequency.'
- If the IP address is listed, you could request a delisting by yourself.
- '500 Internal Server Error: Retry the request later.'
- '401 Unauthorized: Check API credentials.'
- '500 Internal Server Error: Consult Magento logs for details.'
- '429 Too Many Requests: Implement backoff strategy.'
- '403 Forbidden: Verify API key and permissions.'
- '404 Not Found: Check endpoint URL.'
- '413 Request Entity Too Large: Reduce the size of the request payload'
- '100 Router Match Iterations: Check routing configurations'
- 'Slow Extensions: Monitor performance using PHP Slow Logs'
- '404 Not Found: Check endpoint path'
- '401 Unauthorized: Check your credentials or token expiration.'
- '403 Forbidden: Ensure you have necessary permissions.'
- '401 Unauthorized: check your OAuth credentials.'
- '404 Not Found: ensure the endpoint URL is correct.'
- searchd daemon can crash due to OOM.
- Rate limiting may occur if Zend_Http_Client is not whitelisted.
- '401 Unauthorized: Invalid API key or token.'
- '401 Unauthorized: Check API key and permissions.'
- '401 Unauthorized: Verify client credentials and permissions.'
- '401 Unauthorized: Check client credentials'
- '401 Unauthorized: Check API token'
- '404 Not Found: Verify endpoint exists'
- '403 FORBIDDEN: Verify your access permissions.'
- '404 NOT FOUND: Ensure the endpoint is correct.'
- '401 Unauthorized: Check API user credentials and permissions'
- '401 Unauthorized: Check API credentials and permissions'
- '403 Forbidden: Ensure proper access rights'
- '404 Not Found: Verify the endpoint and resource.'
- '401 Unauthorized: Recheck authentication credentials.'
- '403 Forbidden: Check permissions or authentication tokens'
- '500 Internal Server Error: Try again later or check server logs'
- 'Hunk failed error: Check what version of Magento you’re running and download the
  correct patch.'
- 'Hunk failed: Downloaded the patch for the wrong version.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce API request frequency'
- 'QUERY_TIMEOUT: Optimize your queries for better performance'
- '401 Unauthorized: Verify your OAuth token and scopes'
- '403 Forbidden: Access denied for the requested resource'
- '404 Not Found: The requested endpoint does not exist'
- '500 Internal Server Error: Review server logs for issues'
- '401 Unauthorized: Check API key or authentication method'
- '401 Unauthorized: Check OAuth credentials and token expiration'
- '404 Not Found: Verify endpoint path and parameters'
- '401 Unauthorized: Check credentials and token expiration'
- '404 Not Found: Verify endpoint paths and parameters'
- '500 Internal Server Error: Check server logs for additional details'
- '403 Forbidden: Check API permissions and roles.'
- '404 Not Found: Verify endpoint paths.'
- '500 Internal Server Error: Review server logs for details.'
- 'QUERY_TIMEOUT: Break down queries or optimize filters'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: The requested resource does not exist'
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: An unexpected error occurred.'
- '401 Unauthorized: Check API keys and permissions.'
- '401 Unauthorized: Check API credentials and access rights.'
- '401 Unauthorized: Validate your OAuth token'
- '403 Forbidden: Check permissions or API key validity'
- '401 Unauthorized: Check if OAuth token is valid or expired.'
- '404 Not Found: Verify the endpoint and resource exist.'
- '404 Not Found: Ensure endpoint is correct'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Confirm endpoint path correctness'
- 'USER_NOT_FOUND: Check if the username is correct.'
- 'IP_NOT_WHITELISTED: Ensure your IP address is added to the whitelist.'
- 'DISK_SPACE_EXCEEDED: Free up space to continue operations.'
- 'CRONJOB_TIMEOUT: Adjust cron job settings or script performance.'
- '502 Bad Gateway: Server error'
- '404 Not Found: Verify endpoint and resource identifiers.'
- '401 Unauthorized: Check API key or OAuth credentials'
- '404 Not Found: Verify endpoint URL or resource existence'
- '401 Unauthorized: Check client credentials and token expiration.'
- '500 Internal Server Error: Try again later or contact support'
- '403 Forbidden: Check if the user has sufficient permissions.'
- '429 Too Many Requests: Reduce the frequency of requests'
- '404 Not Found: Ensure the endpoint exists.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- 'USER_NOT_FOUND: Check if the user exists.'
- 'INVALID_IP: Ensure the IP is valid and correctly formatted.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '404 Not Found: Check the endpoint and resource availability'
- '429 Too Many Requests: Reduce the frequency of requests or implement rate limiting.'
- '403 Forbidden: You do not have access to this resource.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- Contact Support for assistance with offsite backup restoration.
- Restoring a backup is never completely without risk, Hypernode is not liable for
  data loss or other discrepancies.
- '404 Not Found: Confirm the endpoint URL'
- '401 Unauthorized: Verify your authentication credentials.'
- '401 Unauthorized: Check client credentials and permissions.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
- '500 Internal Server Error: Server-side issue'
- '404 Not Found: Verify that the endpoint exists.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Recheck API credentials or token expiration.'
- 'INVALID_API_KEY: Ensure your API key is correct.'
- 'RESOURCE_NOT_FOUND: Check the endpoint path for accuracy.'
- False positives can occur when blocking spam.
- '429 Too Many Requests: Rate limit exceeded. Adjust request frequency.'
- 421 4.7.0 No valid 'x-transip-mail-auth' DNS record found
- '500 Internal Server Error: Review server logs for more details.'
- '530 Login incorrect: Check username and password'
- '425 Can''t open data connection: Check firewall settings'
- '550 Requested action not taken: Check file permissions'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify API key and permissions.'
- '401 Unauthorized: Check the access token.'
- '401 Unauthorized: Check credentials and OAuth scopes'
- '401 Unauthorized: Check if the access token is valid'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Endpoint may not exist or is misspelled'
- 'error: x-transip-mail-auth record missing, email will not send and will be held
  in queue.'
- '403 Forbidden: Verify API permissions'
- '403 Forbidden: Ensure the user has access to the requested resource.'
- Rate limited emails will be stored on the mailserver to be delivered at a later
  time.
- '401 Unauthorized: Check your client credentials and token expiration.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- '530 Login incorrect: Check username and password.'
- '550 Requested action not taken: Verify the file path or permissions.'
- '421 Service not available, closing control connection: Check server status.'
- '502 Gateway Errors: Check server configuration or resource limits'
- '403 Forbidden: Ensure your user has the right permissions.'
- 421 Service not available, closing control connection
- '530 Not logged in: Check your credentials'
- '550 Requested action not taken: File unavailable'
- '401 Unauthorized: Ensure API access is enabled'
- 'SQLSTATE[HY000]: General error: 1436 Thread stack overrun: 180608 bytes used of
  a 196608 byte stack, and 16000 bytes needed.'
- '403 Forbidden: Verify permissions for API access.'
- '429 Too Many Requests: Reduce the frequency of your requests.'
- '401 Unauthorized: Check client ID and secret'
- '400 Bad Request: Ensure request parameters are correct'
- '503 Service Unavailable: Check if the API is enabled'
- '403 Forbidden: Check API user permissions.'
- '401 Unauthorized: Verify OAuth credentials.'
- If you’re encountering this problem on a Hypernode, please contact support@hypernode.com
  so we can help you reclaim your disk space!
- '401 Unauthorized: Check API token validity'
- '429 Too Many Requests: Reduce request rate.'
- '502 Bad Gateway: Check upstream server.'
- '429 Too Many Requests: Rate limit exceeded, consider implementing backoff strategy.'
- '401 Unauthorized: Check your authorization credentials.'
- '401 Unauthorized: Check your credentials or permissions'
- '404 Not Found: Verify the endpoint path and parameters'
- Your Nginx configuration contains errors, please check /data/web/nginx/nginx_error_output
  to see them.
- '429 Too Many Requests: Reduce frequency of requests'
- '401 Unauthorized: Verify OAuth credentials and permissions'
- 'USER_NOT_FOUND: Check if the specified user exists.'
- 'IP_NOT_WHITELISTED: Ensure the IP is added to the whitelist.'
- Block attack job posted, see hypernode-log (or livelog) for job progress
- block_attack success
- '401 Unauthorized: Check OAuth credentials and token validity.'
- '403 Forbidden: Ensure the user has the necessary permissions.'
- '403 Forbidden: Check your IP whitelist settings.'
- '550 Permission Denied: Verify user permissions.'
- '401 Unauthorized: Check API authentication settings'
- '401 Unauthorized: Ensure your OAuth tokens are valid.'
- '401 Unauthorized: Invalid API key'
- '401 Unauthorized: Invalid API key.'
- '404 Not Found: Validate the endpoint path.'
- '403 Forbidden: Check user permissions for API access.'
- '404 Not Found: Verify endpoint and resource.'
- '401 Unauthorized: Check if the API credentials are correct.'
- '401 Unauthorized: Check credentials or permissions'
- '403 Forbidden: Ensure you have the correct permissions'
- '401 Unauthorized: Check your username and password.'
- 'Connection Timed Out: Verify your network connection.'
- '550 Permission Denied: Check your directory permissions.'
- '401 Unauthorized: Check if the token is valid or expired.'
- '429 Too Many Requests: Rate limit exceeded for user agents or IP.'
- '403 Forbidden: Check your access rights to the requested resource.'
- '404 Not Found: Verify the endpoint you are trying to access.'
- '403 Forbidden: Check your API key and permissions.'
- '403 Forbidden: Check user permissions for API access'
- '530 Login authentication failed: Check username and password'
- '425 Can''t open data connection: Check network settings'
- '429 Too Many Requests: The site is currently unavailable, but the server is there.
  This is a temporary state.'
- '401 Unauthorized: Check user credentials.'
- '429 Too Many Requests: Reduce request frequency.'
- '404 Not Found: Check the endpoint or resource ID'
- '401 Unauthorized: Check your OAuth token or client credentials.'
- '403 Forbidden: Ensure you have permission to access the requested resource.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- 'Error: Failed to manage vhosts - check the command syntax.'
- '502 Bad Gateway: Check server health and configurations'
- '403 Forbidden: Access is denied.'
- '429 Too Many Requests: Implement rate limiting or reduce request frequency.'
- '401 Unauthorized: Check if API access is enabled for the user.'
- 'INVALID_CREDENTIALS: Check your client ID and client secret'
- 'RESOURCE_NOT_FOUND: Verify the resource path'
- '401 Unauthorized: Check client credentials or token expiry'
- '403 Forbidden: Verify user permissions for the requested resource'
- '403 Forbidden: Check IP whitelisting or authentication'
- '500 Internal Server Error: Retry the request or contact support'
- '429 Too Many Requests: Implement rate limiting methods or adjust configuration'
- '500 Internal Server Error: Check server status'
- '401 Unauthorized: Check your credentials and scopes.'
- 'SOAP error: Parsing WSDL: Couldn’t load from “”: failed to load external entity'
- '429 Too Many Requests: Reduce request frequency or adjust rate limiting settings.'
- '401 Unauthorized: Check OAuth credentials and permissions'
- '403 Forbidden: Ensure the user has access to the requested resource'
- '429 Too Many Requests: Implement rate limiting methods to reduce requests frequency.'
- '404 Not Found: Verify endpoint path and resource ID.'
- '401 Unauthorized: Check your access token.'
- '502 Bad Gateway: Indicates an internal error within PHP.'
- '401 Unauthorized: Check your OAuth credentials and token.'
- If you dont use a specific alternative PHP version anymore you may want to disable
  the alternative PHP version.
- '502 Gateway Error: Check server settings and configuration.'
- '401 Unauthorized: Check OAuth credentials or token expiration.'
- '403 Forbidden: Verify permission scopes for the OAuth token.'
- '401 Unauthorized: Check your API keys and token expiration.'
- '502 Bad Gateway: Server is down or overloaded'
- '404 Not Found: Verify the API endpoint'
- '401 Unauthorized: Verify client credentials and token validity.'
- '429 Too Many Requests: Adjust your request frequency to comply with rate limits'
- '502 Gateway Error: Check server configuration and backend service availability'
- '401 Unauthorized: Ensure API credentials are correct.'
- '404 Not Found: Resource may not exist.'
- '404 Not Found: Check if the endpoint path is correct'
- 'Error creating new cert :: Too many certificates already issued for: […]'
- Certificate request has 123 names, maximum is 100.
- 'Dehyrdated: Challenge is invalid!'
- 'ERROR: Problem connecting to server (post for acme-v02.api.letsencrypt.org/acme/new-order;
  curl returned with 35)'
- My certificates are not in the Nginx config
- 'Error code: MOZILLA_PKIX_ERROR_REQUIRED_TLS_FEATURE_MISSING'
- '500 Internal Server Error: Server issues or misconfiguration'
- '401 Unauthorized: Verify credentials or token'
- '401 Unauthorized: Check API key and user permissions.'
- '429 Too Many Requests: Implement rate limiting to avoid exceeding request limits.'
- '502 Gateway Errors: Check server configurations or PHP settings.'
- '404 Not Found: Ensure the resource path is correct.'
- '500 Internal Server Error: Check the server logs for details.'
- 'Error creating new cert :: Too many certificates already issued for: [...]'
- '429 Too Many Requests: Check your rate limiting settings.'
- '502 Bad Gateway: Verify server health and upstream services.'
- 'Invalid configuration: Check the values in fpc.xml'
- '403 Forbidden: Insufficient permissions to access this resource'
- '429 Too Many Requests: Adjust request rate or throttle requests'
- '502 Gateway Errors: Check server and application configurations'
- 125 euro per Hypernode
- 'AUTHENTICATION_FAILED: Check client credentials'
- '429 Too Many Requests: Consider reducing request frequency.'
- '502 Gateway Errors: Check server configuration.'
- '429 Too Many Requests: Rate limit exceeded, please retry after some time.'
- '429 Too Many Requests: Review rate limiting methods to avoid this error.'
- '429 Too Many Requests: Consider rate limiting adjustments.'
- '502 Bad Gateway: Check server connectivity or configuration issues.'
- 'DISK_SPACE_LIMIT_EXCEEDED: Free up space or upgrade your plan'
- 'UNAUTHORIZED_ACCESS: Check your API keys and permissions'
- '429 Too Many Requests: Reduce request frequency or handle rate limiting'
- '502 Bad Gateway: Check server response or configuration issues'
- If you want us to do this, that’s possible and no problem at all. The cost will
  be 125 euro per Hypernode.
- '401 Unauthorized: Check API credentials or permissions'
- '429 Too Many Requests: Reduce frequency of requests to avoid rate limiting.'
- '502 Bad Gateway: Possible server issues.'
- Elasticsearch cannot be enabled for this app. Please upgrade to a plan that supports
  Elasticsearch if you want to make use of this feature.
- 'DATABASE_ERROR: Check the database connection settings.'
- 'CACHE_ERROR: Ensure Redis is installed and running.'
- 'Access denied: Enter valid credentials for development nodes.'
- '502 Bad Gateway: Check your server configuration'
- 'INVALID_CREDENTIALS: Check your client ID and secret'
- '404 Not Found: Endpoint may not exist or be deprecated'
- '403 Forbidden: Check your permissions for the requested resource.'
- 'INVALID_CREDENTIALS: Check your API credentials.'
- '403 FORBIDDEN: You do not have permission to access this resource.'
- '429 Too Many Requests: Implement rate limiting strategies'
- '502 Gateway Errors: Check for memory depletion or Varnish issues'
- '401 Unauthorized: Check credentials or token'
- '403 Forbidden: Check permissions for the user role'
- '403 Forbidden: Ensure you have access permissions.'
- 'cluster_block_exception: blocked by: [FORBIDDEN/12/index read-only / allow delete
  (api)];'
- '429 Too Many Requests: Implement rate limiting or reduce request frequency'
- '502 Bad Gateway: Check server status or configuration issues'
- '429 Too Many Requests: Adjust request rate'
- '429 Too Many Requests: Consider implementing backoff strategies'
- '502 Bad Gateway: Check upstream server configuration'
- '401 Unauthorized: Check OAuth credentials and scopes'
- '429 Too Many Requests: Reduce request frequency or implement retry logic'
- '502 Bad Gateway: Check server status or configurations'
- '401 Unauthorized: Invalid credentials or token expired'
- '429 Too Many Requests: Reduce request frequency or optimize requests.'
- '502 Bad Gateway: Server is down or overloaded.'
- '403 Forbidden: Verify API credentials and permissions'
- '401 Unauthorized: Check the validity of provided credentials.'
- '429 Too Many Requests: Implement backoff strategy or reduce request frequency'
- '403 Forbidden: Check your API key or permissions.'
- '429 Too Many Requests: Rate limiting applied, reduce request frequency.'
- '401 Unauthorized: Check your authentication credentials'
- '429 Too Many Requests: Throttle API calls'
- '502 Bad Gateway: Check backend service availability'
- '429 Too Many Requests: Implement rate limiting strategies to prevent exceeding
  limits'
- '429 Too Many Requests: Throttling limits exceeded.'
- '502 Bad Gateway: Check server health and configuration'
- '401 Unauthorized: Ensure authentication credentials are correct'
- '401 Unauthorized: Check your credentials and token expiration.'
- '429 Too Many Requests: Implement rate limiting strategies.'
- '502 Gateway Errors: Check for low-level PHP errors or memory depletion.'
- '429 Too Many Requests: Implement rate limiting or handle retries.'
- '403 Forbidden: Insufficient permissions for this resource.'
- 'DATABASE_CONNECTION_ERROR: Check database credentials and connection settings.'
- 'CACHE_WRITE_ERROR: Ensure cache directory is writable.'
- '401 Unauthorized: Verify credentials and token validity'
- '403 Forbidden: Check user permissions and roles.'
- '401 Unauthorized: Ensure that the auth tokens are valid.'
- 'USER_NOT_FOUND: Ensure the username exists.'
- 'ACCESS_DENIED: Check permissions for the user.'
- '403 Forbidden: Ensure the user has appropriate permissions.'
- '401 Unauthorized: Check OAuth credentials and token validity'
- '403 Forbidden: Ensure the API user has proper permissions'
- '404 Not Found: Verify the endpoint path or resource ID'
- '500 Internal Server Error: Inspect server logs for details'
- '500 Internal Server Error: Server issue, try again later.'
- 'INVALID_CREDENTIALS: Check client ID and secret'
- 'ACCESS_DENIED: Ensure your account has the necessary permissions'
- '403 Forbidden: Check permissions for the accessed resource.'
- '404 Not Found: Verify endpoint existence.'
- '503 Service Unavailable: The server is temporarily unable to handle the request'
- '404 Not Found: Check the requested resource URL'
- '403 Forbidden: Check API token permissions'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify the authentication details'
- '403 Forbidden: Ensure proper permissions are set for the API key.'
- '403 Forbidden: Check API keys and permissions.'
- '500 Internal Server Error: Server issue, retry later.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Validate your authentication credentials.'
- '404 Not Found: Verify endpoint and resource availability'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint.'
- '401 Unauthorized: Invalid credentials.'
- 'QUERY_TIMEOUT: Refine queries or adjust filters'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Ensure valid API credentials.'
- '404 Not Found: Verify endpoint URL and resource availability'
- '429 Too Many Requests: Implement exponential backoff for retries'
- '401 Unauthorized: Check API key and permissions'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency'
- '429 Too Many Requests: Throttle your requests to avoid rate limiting.'
- '401 Unauthorized: Check that the OAuth token is valid and not expired.'
- '403 Forbidden: Ensure you have the necessary permissions to access this resource.'
- No specific error codes or messages provided in documentation.
- '404 Not Found: Verify the endpoint path and resource existence.'
- '404 Not Found: The requested endpoint does not exist.'
- '404 Not Found: Verify the requested resource exists'
- '401 Unauthorized: Verify the API key and user permissions'
- '404 Not Found: Check the endpoint path and parameters'
- '401 Unauthorized: Check if the OAuth token is valid'
- '503 Service Unavailable: Check server status'
- '401 Unauthorized: Check API keys or permissions'
- '403 Forbidden: Check access permissions.'
- '404 Not Found: Verify the requested object exists.'
- '404 Not Found: The resource you requested does not exist'
- '401 Unauthorized: Check your client ID and secret.'
- '403 Forbidden: Ensure you have access to the requested resource.'
- Basic operational webserver errors (about blocked requests) are logged to /var/log/nginx/error.log.
- If you have modified your Nginx configuration and it contains an error, it will
  put the error message in /data/web/nginx/nginx_error_output.
- '401 Unauthorized: Recheck API credentials.'
- '403 Forbidden: Ensure you have the right permissions.'
- '401 Unauthorized: Check your OAuth credentials and tokens.'
- '403 Forbidden: Verify API access permissions.'
- '401 Unauthorized: Check if your OAuth credentials are correct.'
- '403 Forbidden: Ensure you have the necessary permissions for the API call.'
- '429 Too Many Requests: Rate limit exceeded; try again later.'
- '403 Forbidden: Check user permissions for the API'
- '401 Unauthorized: Check API credentials or permissions.'
- '403 Forbidden: Ensure that the API user has appropriate access rights.'
- '404 Not Found: Confirm the endpoint path.'
- '401 Unauthorized: Invalid OAuth token.'
- '401 Unauthorized: Check your access token'
- '502 Bad Gateway: Check whether PHP failed'
- '401 Unauthorized: Check your client credentials.'
- '404 Not Found: Check the endpoint path or resource ID'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '401 Unauthorized: Check user credentials and permissions.'
- '401 Unauthorized: Check credentials or token expiration'
- '401 Unauthorized: Check client credentials and permissions'
- '429 Too Many Requests: Rate limit exceeded, consider backoff strategy'
- '404 Not Found: The specified resource was not found.'
- '429 Too Many Requests: Implement retry logic and backoff strategy'
- '429 Too Many Requests: You have reached the rate limit.'
- '404 Not Found: Verify endpoint path is correct.'
- '500 Internal Server Error: Review server logs for issues.'
- '401 Unauthorized: Check your API token and permissions'
- '401 Unauthorized: Check if API access is enabled and credentials are correct'
- '404 Not Found: Verify endpoint URL and parameters'
- '429 Too Many Requests: You have hit the rate limit'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ApiUser
  - OAuth
  - Token
  - OAuthToken
  - AccessToken
  - AdminToken
  - Auth
  - API Token
  - Integration
  - Customer
  - OAuthConsumer
  - IntegrationToken
  - ApiRole
  - OAuth2
  - Access Token
  - Refresh Token
  - Consumer
  - Admin
  - OauthConsumer
  - ApiCredentials
  - ConsumerKey
  - ConsumerSecret
  - ClientCredentials
  - API Client
  - Application
  - APIUser
  - ApiClient
client:
  base_url: https://api.docs.hypernode.io/
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
