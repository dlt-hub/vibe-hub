resources:
- name: custom_rpc
  endpoint:
    path: /settings/developer/manage_networks
    method: POST
- name: wallet_switchStarknetChain
  endpoint:
    path: /wallet_switchStarknetChain
    method: POST
    data_selector: params
    params:
      chainId: SN_MAIN || SN_GOERLI
- name: wallet_switchStarknetChain
  endpoint:
    path: /wallet_switchStarknetChain
    method: POST
    data_selector: params
    params:
      chainId: SN_MAIN || SN_GOERLI
- name: WalletAccount
  endpoint:
    path: /ready-wallets/ready-wallet/walletaccount
    method: GET
- name: multisig
  endpoint:
    path: /ready-wallets/ready-multisig
    method: GET
- name: multisig_creation
  endpoint:
    path: /ready-wallets/ready-multisig/create-a-multisig
    method: POST
- name: multisig_joining
  endpoint:
    path: /ready-wallets/ready-multisig/join-a-multisig
    method: POST
- name: transaction_request
  endpoint:
    path: /ready-wallets/ready-multisig/create-transaction-request
    method: POST
- name: transaction_execution
  endpoint:
    path: /ready-wallets/ready-multisig/execute-transaction
    method: POST
- name: WalletConnect
  endpoint:
    path: /wc?uri={uri}
    method: GET
    data_selector: session
    params: {}
- name: wallet_connect
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: wallet_account
  endpoint:
    path: /ready-wallets/walletaccount
    method: GET
    data_selector: records
    params: {}
- name: multisig
  endpoint:
    path: /ready-wallets/ready-multisig
    method: GET
    data_selector: records
    params: {}
- name: session_keys
  endpoint:
    path: /aa-use-cases/session-keys
    method: GET
- name: paymasters
  endpoint:
    path: /aa-use-cases/paymasters
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: accountData
- name: get_guardian
  endpoint:
    path: /get_guardian
    method: GET
- name: execute
  endpoint:
    path: /execute
    method: POST
    data_selector: transactions
    params: {}
- name: AVNU Starknet Paymaster
  endpoint:
    path: /starknet-paymaster/introduction
    method: GET
- name: get_guardian
  endpoint:
    path: /get_guardian
    method: GET
    data_selector: guardian
    params: {}
- name: execute_method
  endpoint:
    path: /aa-use-cases/multicalls
    method: POST
    data_selector: transactions
    params: {}
- name: execute_from_outside
  endpoint:
    path: /execute_from_outside
    method: POST
    data_selector: execute
    params: {}
- name: supports_interface
  endpoint:
    path: /supports_interface
    method: GET
    data_selector: supports
    params:
      interface_id: '0x68cfd18b92d1907b8ba3cc324900277f5a3622099431ea85dd8089255e4181'
- name: execute_from_outside
  endpoint:
    path: /execute_from_outside
    method: POST
    data_selector: result
    params: {}
- name: supports_interface
  endpoint:
    path: /supports_interface
    method: GET
    data_selector: result
    params:
      interface_id: '0x68cfd18b92d1907b8ba3cc324900277f5a3622099431ea85dd8089255e4181'
- name: deployment_data
  endpoint:
    path: /wallet_deploymentData
    method: POST
    data_selector: deploymentData
- name: wallet_deploymentData
  endpoint:
    path: /wallet/deploymentData
    method: POST
    data_selector: ''
    params: {}
- name: WalletDetector
  endpoint:
    path: /wallet/detector
    method: GET
    data_selector: isArgentWallet
    params: {}
- name: Multicall
  endpoint:
    path: /multicall
    method: POST
    data_selector: result
    params: {}
- name: wallet_detector
  endpoint:
    path: /detect_wallet
    method: GET
    data_selector: isArgentWallet
    params: {}
- name: multicall
  endpoint:
    path: /multicall
    method: POST
    data_selector: result
    params: {}
notes:
- Pass `skipDeploy=true` in the `signMessage`
- Our contracts are already implemented in the new and more secure Cairo1 language.
- The smart contracts have been carefully audited by Consensys Diligence.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- An air-gap device is a device kept offline (often a computer or phone with wifi
  and bluetooth removed) and whose isolation ensures its integrity.
- Air-gap support is only available on multisigs with a Ledger signer.
- At the moment, you can’t replace your current signer (Ready or Ledger) with another
  signer yourself. This feature is coming soon.
- Web wallet is a self-custodial wallet in your browser.
- You create a wallet with an email address and password.
- Uses Wallet Connect to connect mobile application.
- The Invisible SDK is no longer maintained. There will not be new features or bug
  fixes.
- Uses Wallet Connect for mobile app integration
- Requires installation of specific Wallet Connect packages
- Whitelisting required for session keys on mainnet.
- To use session keys on mainnet, you will need to whitelist your contract with us.
- Ready will automatically sponsor the deployment of accounts.
- Gas abstraction is crucial to provide users a seamless interaction with your application.
- End-users should not have to care about paying gas or having gas tokens in their
  wallet.
- Users’ accounts must have enabled Ready as a co-signer.
- Session keys require that you whitelist specific contracts and calls with Ready
  on mainnet.
- It is strongly advised to only implement session keys in a project using starknetkit.
- On Sepolia testnet, there is no whitelist.
- Allows external contracts to execute transactions from outside an account contract.
- Demo dapp implementing session keys + execute from outside
- Set appropriate expiry times based on your use case
- Limit allowed methods to only necessary functions
- Set reasonable token spending limits
- Implement proper error handling for session operations
- Consider implementing session refresh mechanisms for long-running applications
- Session keys only support transactions and meta-transactions
- Dapp needs to manage nonces locally
- The AVNU paymaster requires an Outside Execution transaction, we will need to enable
  it in our products.
- session keys only support transactions and meta-transactions
- Be aware that most of Ready accounts will return more that one signature that should
  all be verified.
- Be aware that most of Ready accounts will return more than one signature that should
  all be verified.
- Enabling meta-transactions on Starknet
- To execute outside transactions, build an OutsideExecution struct.
- Outside execution allows external contracts to execute transactions from outside
  an account contract.
- To enable meta-transactions, a new entrypoint `execute_from_outside` is introduced.
- Ready allows dapps to deploy accounts on behalf of users, enhancing user experience
  by simplifying the onboarding process.
- If an account is already deployed, this will throw an exception (so it will need
  to be managed on client side)
- Optimize your dapp visibility with Argent users
- With 75% market share in the Starknet ecosystem, Ready's wallets are a great distribution
  channel for your products.
- Green Known Dapp checkmarks give confidence to our users that the dapp is known
  to us.
- In order to protect users, we run transactions simulations against some security
  checks.
- This transaction review means that some of the assets that are approved are not
  spent in the same transaction.
- On Starknet, multiple calls can be bundled in a single transaction which means that
  open approvals are often avoidable.
- Perkz is not yet self-served. If you wish to run a campaign, please reach out to
  us.
- Argent wallets support the ability to batch transactions into a single transaction.
- WalletConnect will work on mobile browsers and will deep link to the Argent wallet.
errors:
- 'Failed to open Ready: Ensure it is installed.'
- 'Failed to open Ready: Please make sure it is installed.'
- 'Approval failed: Check your token address and spender address.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Dai/invalid-address-0: Recheck the holder address in permit function.'
- 'Dai/invalid-permit: Ensure the signature verification method is EIP-1271 compliant.'
auth_info:
  mentioned_objects:
  - starknet.js
client:
  base_url: https://www.ready.co
  headers:
    Accept: application/json
source_metadata: null
