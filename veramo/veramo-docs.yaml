resources:
- name: did-manager
  endpoint:
    path: /did-manager
    method: POST
- name: key-manager
  endpoint:
    path: /key-manager
    method: GET
- name: credential-issuer
  endpoint:
    path: /credential-issuer
    method: POST
- name: did-manager
  endpoint:
    path: /docs/api/did-manager
    method: GET
- name: did-provider-ethr
  endpoint:
    path: /docs/api/did-provider-ethr
    method: GET
- name: did-provider-web
  endpoint:
    path: /docs/api/did-provider-web
    method: GET
- name: did-provider-key
  endpoint:
    path: /docs/api/did-provider-key
    method: GET
- name: key-manager
  endpoint:
    path: /docs/api/key-manager
    method: GET
- name: kms-local
  endpoint:
    path: /docs/api/kms-local
    method: GET
- name: did-resolver
  endpoint:
    path: /docs/api/did-resolver
    method: GET
- name: did-comm
  endpoint:
    path: /docs/api/did-comm
    method: GET
- name: did-jwt
  endpoint:
    path: /docs/api/did-jwt
    method: GET
- name: message-handler
  endpoint:
    path: /docs/api/message-handler
    method: GET
- name: url-handler
  endpoint:
    path: /docs/api/url-handler
    method: GET
- name: selective-disclosure
  endpoint:
    path: /docs/api/selective-disclosure
    method: GET
- name: credential-w3c
  endpoint:
    path: /docs/api/credential-w3c
    method: GET
- name: remote-server
  endpoint:
    path: /docs/api/remote-server
    method: GET
- name: data-store
  endpoint:
    path: /docs/api/data-store
    method: GET
- name: remote-client
  endpoint:
    path: /docs/api/remote-client
    method: GET
- name: identifiers
  endpoint:
    path: /didManagerFind
    method: GET
    data_selector: identifiers
- name: create_identifier
  endpoint:
    path: /didManagerCreate
    method: POST
    data_selector: identifier
- name: create_credential
  endpoint:
    path: /createVerifiableCredential
    method: POST
    data_selector: verifiableCredential
- name: verify_credential
  endpoint:
    path: /verifyCredential
    method: POST
    data_selector: result
- name: did-manager
  endpoint:
    path: '@veramo/did-manager'
    method: GET
- name: did-provider-ethr
  endpoint:
    path: '@veramo/did-provider-ethr'
    method: GET
- name: did-provider-web
  endpoint:
    path: '@veramo/did-provider-web'
    method: GET
- name: did-provider-key
  endpoint:
    path: '@veramo/did-provider-key'
    method: GET
- name: key-manager
  endpoint:
    path: '@veramo/key-manager'
    method: GET
- name: kms-local
  endpoint:
    path: '@veramo/kms-local'
    method: GET
- name: did-resolver
  endpoint:
    path: '@veramo/did-resolver'
    method: GET
- name: did-comm
  endpoint:
    path: '@veramo/did-comm'
    method: GET
- name: did-jwt
  endpoint:
    path: '@veramo/did-jwt'
    method: GET
- name: message-handler
  endpoint:
    path: '@veramo/message-handler'
    method: GET
- name: url-handler
  endpoint:
    path: '@veramo/url-handler'
    method: GET
- name: selective-disclosure
  endpoint:
    path: '@veramo/selective-disclosure'
    method: GET
- name: credential-w3c
  endpoint:
    path: '@veramo/credential-w3c'
    method: GET
- name: remote-server
  endpoint:
    path: '@veramo/remote-server'
    method: GET
- name: data-store
  endpoint:
    path: '@veramo/data-store'
    method: GET
- name: remote-client
  endpoint:
    path: '@veramo/remote-client'
    method: GET
- name: DIDResolver
  endpoint:
    path: /did/resolver
    method: POST
    data_selector: result
- name: identifier
  endpoint:
    path: /identifiers
    method: POST
    data_selector: identifiers
- name: identifiers
  endpoint:
    path: /identifiers
    method: GET
    data_selector: identifiers
    params: {}
- name: identifiers
  endpoint:
    path: /didManagerFind
    method: GET
    data_selector: identifiers
- name: create_identifier
  endpoint:
    path: /didManagerCreate
    method: POST
    data_selector: identifier
- name: create_credential
  endpoint:
    path: /createVerifiableCredential
    method: POST
    data_selector: verifiableCredential
- name: verify_credential
  endpoint:
    path: /verifyCredential
    method: POST
    data_selector: result
- name: agent
  endpoint:
    path: /veramo/setup
    method: POST
    data_selector: plugins
    params: {}
- name: identifier
  endpoint:
    path: /docs/basics/identifiers
    method: GET
    data_selector: identifiers
    params: {}
- name: Agent.emit
  endpoint:
    path: /agent/emit
    method: POST
    data_selector: event
    params: {}
- name: identifier
  endpoint:
    path: /identifiers
    method: POST
    data_selector: identifiers
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: configured agent
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: configured agent
- name: DIDComponent
  endpoint:
    path: /getDIDComponentById
    method: GET
    data_selector: DIDDocComponent
    params: {}
- name: IAgentOptions
  endpoint:
    path: /docs/api/core-types.iagentoptions
    method: GET
    data_selector: properties
    params: {}
- name: didManagerFind
  endpoint:
    path: /didManagerFind
    method: GET
    data_selector: identifiers
    params: {}
- name: did_manager_get_by_alias
  endpoint:
    path: /didManagerGetByAlias
    method: GET
    data_selector: identifier
    params:
      args: IDIDManagerGetByAliasArgs
- name: did_manager_get_providers
  endpoint:
    path: /didManagerGetProviders
    method: GET
    data_selector: providers
    params: {}
- name: didManagerRemoveKey
  endpoint:
    path: /didManagerRemoveKey
    method: POST
    data_selector: identifier provider specific response
- name: didManagerAddKey
  endpoint:
    path: /api/didManagerAddKey
    method: POST
- name: didManagerAddService
  endpoint:
    path: /api/didManagerAddService
    method: POST
- name: didManagerCreate
  endpoint:
    path: /api/didManagerCreate
    method: POST
- name: didManagerDelete
  endpoint:
    path: /api/didManagerDelete
    method: DELETE
- name: didManagerFind
  endpoint:
    path: /api/didManagerFind
    method: GET
- name: didManagerGet
  endpoint:
    path: /api/didManagerGet
    method: GET
- name: didManagerGetByAlias
  endpoint:
    path: /api/didManagerGetByAlias
    method: GET
- name: didManagerGetOrCreate
  endpoint:
    path: /api/didManagerGetOrCreate
    method: GET
- name: didManagerGetProviders
  endpoint:
    path: /api/didManagerGetProviders
    method: GET
- name: didManagerImport
  endpoint:
    path: /api/didManagerImport
    method: POST
- name: didManagerRemoveKey
  endpoint:
    path: /api/didManagerRemoveKey
    method: DELETE
- name: didManagerRemoveService
  endpoint:
    path: /api/didManagerRemoveService
    method: DELETE
- name: didManagerSetAlias
  endpoint:
    path: /api/didManagerSetAlias
    method: POST
- name: didManagerUpdate
  endpoint:
    path: /api/didManagerUpdate
    method: PUT
- name: didManagerFind
  endpoint:
    path: /didManagerFind
    method: POST
    data_selector: identifiers
    params: {}
- name: didManagerGetByAlias
  endpoint:
    path: /didManagerGetByAlias
    method: GET
    data_selector: identifier
    params: {}
- name: didManagerGetProviders
  endpoint:
    path: /didManagerGetProviders
    method: GET
    data_selector: Array<string>
- name: didManagerAddKey
  endpoint:
    path: /didManagerAddKey
    method: POST
    data_selector: arguments
- name: didManagerAddService
  endpoint:
    path: /didManagerAddService
    method: POST
    data_selector: arguments
- name: didManagerCreate
  endpoint:
    path: /didManagerCreate
    method: POST
    data_selector: arguments
- name: didManagerDelete
  endpoint:
    path: /didManagerDelete
    method: POST
    data_selector: arguments
- name: didManagerFind
  endpoint:
    path: /didManagerFind
    method: GET
    data_selector: arguments
- name: didManagerGet
  endpoint:
    path: /didManagerGet
    method: GET
    data_selector: arguments
- name: didManagerGetByAlias
  endpoint:
    path: /didManagerGetByAlias
    method: GET
    data_selector: arguments
- name: didManagerGetOrCreate
  endpoint:
    path: /didManagerGetOrCreate
    method: POST
    data_selector: arguments
- name: didManagerGetProviders
  endpoint:
    path: /didManagerGetProviders
    method: GET
    data_selector: arguments
- name: didManagerImport
  endpoint:
    path: /didManagerImport
    method: POST
    data_selector: arguments
- name: didManagerRemoveKey
  endpoint:
    path: /didManagerRemoveKey
    method: POST
    data_selector: arguments
- name: didManagerRemoveService
  endpoint:
    path: /didManagerRemoveService
    method: POST
    data_selector: arguments
- name: didManagerSetAlias
  endpoint:
    path: /didManagerSetAlias
    method: POST
    data_selector: arguments
- name: didManagerUpdate
  endpoint:
    path: /didManagerUpdate
    method: POST
    data_selector: arguments
- name: createVerifiableCredential
  endpoint:
    path: /api/credential/createVerifiableCredential
    method: POST
- name: createVerifiablePresentation
  endpoint:
    path: /api/credential/createVerifiablePresentation
    method: POST
- name: verifyCredential
  endpoint:
    path: /api/credential/verifyCredential
    method: POST
- name: verifyPresentation
  endpoint:
    path: /api/credential/verifyPresentation
    method: POST
- name: listUsableProofFormats
  endpoint:
    path: /api/credential/listUsableProofFormats
    method: GET
- name: matchKeyForJWT
  endpoint:
    path: /api/credential/matchKeyForJWT
    method: POST
- name: IIdentifier
  endpoint:
    path: /docs/api/core-types.iidentifier
    method: GET
    data_selector: properties
    params: {}
- name: keyManagerDelete
  endpoint:
    path: /keyManagerDelete
    method: POST
    data_selector: boolean
    params: {}
- name: key_manager
  endpoint:
    path: /key-manager
    method: GET
    data_selector: methods
- name: verifiable_credential
  endpoint:
    path: /dataStoreGetVerifiableCredential
    method: GET
- name: didManagerAddKey
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanageraddkey
    method: POST
- name: didManagerAddService
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanageraddservice
    method: POST
- name: didManagerCreate
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagercreate
    method: POST
- name: didManagerDelete
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerdelete
    method: DELETE
- name: didManagerFind
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerfind
    method: GET
- name: didManagerGet
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerget
    method: GET
- name: didManagerGetByAlias
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagergetbyalias
    method: GET
- name: didManagerGetOrCreate
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagergetorcreate
    method: POST
- name: didManagerGetProviders
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagergetproviders
    method: GET
- name: didManagerImport
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerimport
    method: POST
- name: didManagerRemoveKey
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerremovekey
    method: DELETE
- name: didManagerRemoveService
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerremoveservice
    method: DELETE
- name: didManagerSetAlias
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagersetalias
    method: POST
- name: didManagerUpdate
  endpoint:
    path: /docs/api/did-manager.didmanager.didmanagerupdate
    method: POST
- name: createVerifiableCredential
  endpoint:
    path: /docs/api/credential-w3c.credentialplugin.createverifiablecredential
    method: POST
- name: createVerifiablePresentation
  endpoint:
    path: /docs/api/credential-w3c.credentialplugin.createverifiablepresentation
    method: POST
- name: verifyCredential
  endpoint:
    path: /docs/api/credential-w3c.credentialplugin.verifycredential
    method: POST
- name: verifyPresentation
  endpoint:
    path: /docs/api/credential-w3c.credentialplugin.verifypresentation
    method: POST
- name: keyManagerCreate
  endpoint:
    path: /keyManagerCreate
    method: POST
    data_selector: ManagedKeyInfo
    params: {}
- name: key_management_systems
  endpoint:
    path: /keyManagerGetKeyManagementSystems
    method: GET
- name: IDataStore.dataStoreSaveVerifiablePresentation
  endpoint:
    path: /dataStoreSaveVerifiablePresentation
    method: POST
- name: dataStoreORMGetIdentifiers
  endpoint:
    path: /dataStoreORMGetIdentifiers
    method: GET
    data_selector: IIdentifiers
    params: {}
- name: dataStoreORMGetIdentifiersCount
  endpoint:
    path: /dataStoreORMGetIdentifiersCount
    method: GET
    data_selector: IIdentifiersCount
    params: {}
- name: dataStoreORMGetMessages
  endpoint:
    path: /dataStoreORMGetMessages
    method: GET
    data_selector: IMessage
    params: {}
- name: dataStoreORMGetMessagesCount
  endpoint:
    path: /dataStoreORMGetMessagesCount
    method: GET
    data_selector: IMessageCount
    params: {}
- name: dataStoreORMGetVerifiableCredentials
  endpoint:
    path: /dataStoreORMGetVerifiableCredentials
    method: GET
    data_selector: UniqueVerifiableCredential
    params: {}
- name: dataStoreORMGetVerifiableCredentialsByClaims
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsByClaims
    method: GET
    data_selector: UniqueVerifiableCredentialByClaims
    params: {}
- name: dataStoreORMGetVerifiableCredentialsByClaimsCount
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsByClaimsCount
    method: GET
    data_selector: UniqueVerifiableCredentialByClaimsCount
    params: {}
- name: dataStoreORMGetVerifiableCredentialsCount
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsCount
    method: GET
    data_selector: UniqueVerifiableCredentialCount
    params: {}
- name: dataStoreORMGetVerifiablePresentations
  endpoint:
    path: /dataStoreORMGetVerifiablePresentations
    method: GET
    data_selector: UniqueVerifiablePresentation
    params: {}
- name: dataStoreORMGetVerifiablePresentationsCount
  endpoint:
    path: /dataStoreORMGetVerifiablePresentationsCount
    method: GET
    data_selector: UniqueVerifiablePresentationCount
    params: {}
- name: dataStoreORMGetIdentifiers
  endpoint:
    path: /dataStoreORMGetIdentifiers
    method: GET
- name: dataStoreORMGetIdentifiersCount
  endpoint:
    path: /dataStoreORMGetIdentifiersCount
    method: GET
- name: dataStoreORMGetMessages
  endpoint:
    path: /dataStoreORMGetMessages
    method: GET
- name: dataStoreORMGetMessagesCount
  endpoint:
    path: /dataStoreORMGetMessagesCount
    method: GET
- name: dataStoreORMGetVerifiableCredentials
  endpoint:
    path: /dataStoreORMGetVerifiableCredentials
    method: GET
- name: dataStoreORMGetVerifiableCredentialsByClaims
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsByClaims
    method: GET
- name: dataStoreORMGetVerifiableCredentialsByClaimsCount
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsByClaimsCount
    method: GET
- name: dataStoreORMGetVerifiableCredentialsCount
  endpoint:
    path: /dataStoreORMGetVerifiableCredentialsCount
    method: GET
- name: dataStoreORMGetVerifiablePresentations
  endpoint:
    path: /dataStoreORMGetVerifiablePresentations
    method: GET
- name: dataStoreORMGetVerifiablePresentationsCount
  endpoint:
    path: /dataStoreORMGetVerifiablePresentationsCount
    method: GET
- name: ProofFormat
  endpoint:
    path: /docs/api/core-types.proofformat
    method: GET
    data_selector: records
- name: IEventListener
  endpoint:
    path: /api/core-types.ieventlistener
    method: GET
    data_selector: eventTypes
- name: createVerifiableCredential
  endpoint:
    path: /api/core-types/icredentialissuer/createverifiablecredential
    method: POST
    data_selector: payload
    params: {}
- name: createVerifiablePresentation
  endpoint:
    path: /api/core-types/icredentialissuer/createverifiablepresentation
    method: POST
    data_selector: payload
    params: {}
- name: listUsableProofFormats
  endpoint:
    path: /api/core-types/icredentialissuer/listusableproofformats
    method: GET
    data_selector: proofFormats
    params: {}
- name: ICreateVerifiableCredentialArgs
  endpoint:
    path: /api/core-types/icreateverifiablecredentialargs
    method: GET
    data_selector: properties
- name: ICredentialVerifier
  endpoint:
    path: /api/icredentialverifier
    method: GET
    data_selector: records
    params: {}
- name: ICredentialVerifier.verifyCredential
  endpoint:
    path: /icredentialverifier/verifycredential
    method: POST
    data_selector: verified
    params: {}
- name: IDataStoreDeleteVerifiableCredentialArgs
  endpoint:
    path: /api/core-types.idatastoredeleteverifiablecredentialargs
    method: GET
    data_selector: hash
    params: {}
- name: ICreateVerifiablePresentationArgs
  endpoint:
    path: /api/core-types/icreateverifiablepresentationargs.domain
    method: GET
    data_selector: domain
    params: {}
- name: IDataStoreDeleteVerifiableCredentialArgs
  endpoint:
    path: /IDataStoreDeleteVerifiableCredentialArgs
    method: GET
    data_selector: hash
- name: IDataStoreGetMessageArgs
  endpoint:
    path: /docs/api/core-types.idatastore.datastoregetmessage
    method: GET
- name: ICreateVerifiablePresentationArgs
  endpoint:
    path: /ICreateVerifiablePresentationArgs/proofFormat
    method: GET
    data_selector: proofFormat
    params: {}
- name: createVerifiableCredential
  endpoint:
    path: /api/core-types/icredentialissuer/createverifiablecredential
    method: POST
- name: createVerifiablePresentation
  endpoint:
    path: /api/core-types/icredentialissuer/createverifiablepresentation
    method: POST
- name: listUsableProofFormats
  endpoint:
    path: /api/core-types/icredentialissuer/listusableproofformats
    method: GET
- name: listUsableProofFormats
  endpoint:
    path: /ICredentialIssuer/listUsableProofFormats
    method: GET
    data_selector: proofFormats
    params: {}
- name: IKey
  endpoint:
    path: /docs/api/core-types.ikey
    method: GET
    data_selector: properties
    params: {}
- name: verifyCredential
  endpoint:
    path: /api/v1/verifyCredential
    method: POST
    data_selector: result
    params: {}
- name: verifyPresentation
  endpoint:
    path: /api/v1/verifyPresentation
    method: POST
    data_selector: result
    params: {}
- name: IDataStoreDeleteMessageArgs
  endpoint:
    path: /docs/api/core-types.idatastore.datastoredeletemessage
    method: GET
    data_selector: properties
    params: {}
- name: dataStoreGetVerifiableCredential
  endpoint:
    path: /dataStoreGetVerifiableCredential
    method: GET
    data_selector: hash
- name: IDataStoreGetVerifiablePresentationArgs
  endpoint:
    path: /docs/api/core-types.idatastore.datastoregetverifiablepresentation
    method: GET
    data_selector: hash
    params: {}
- name: IDIDManagerRemoveServiceArgs
  endpoint:
    path: /did
    method: GET
    data_selector: did
    params: {}
- name: IKey
  endpoint:
    path: /docs/api/core-types.ikey
    method: GET
    data_selector: properties
    params: {}
- name: IService
  endpoint:
    path: /docs/api/core-types.iservice
    method: GET
- name: IDIDManagerCreateArgs
  endpoint:
    path: /ididmanagercreateargs/alias
    method: GET
    data_selector: alias
- name: IMetaData
  endpoint:
    path: /api/core-types/imetadata
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerCreateArgs
  endpoint:
    path: /docs/api/core-types.ikeymanagercreateargs
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerDecryptJWEArgs
  endpoint:
    path: /docs/api/core-types.ikeymanager.keymanagerdecryptjwe
    method: GET
    data_selector: properties
    params: {}
- name: IDIDManagerRemoveKeyArgs
  endpoint:
    path: /docs/api/core-types.ididmanagerremovekeyargs
    method: GET
    data_selector: properties
    params: {}
- name: IDIDManagerSetAliasArgs
  endpoint:
    path: /docs/api/core-types.ididmanager.didmanagersetalias
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerSignArgs.algorithm
  endpoint:
    path: /docs/api/core-types.ikeymanagersignargs.algorithm
    method: GET
    data_selector: algorithm
- name: IKeyManagerSignArgs.keyRef
  endpoint:
    path: /ikeymanagersignargs/keyref
    method: GET
    data_selector: keyRef
- name: IHandleMessageArgs
  endpoint:
    path: /docs/api/core-types/ihandlemessageargs
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerCreateArgs
  endpoint:
    path: /docs/api/core-types.ikeymanagercreateargs
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerCreateArgs.kms
  endpoint:
    path: /docs/api/core-types.ikeymanagercreateargs.kms.md
    method: GET
    data_selector: kms
    params: {}
- name: IKeyManagerDeleteArgs.kid
  endpoint:
    path: /api/core-types/IKeyManagerDeleteArgs.kid
    method: GET
    data_selector: kid
- name: keyManagerGet
  endpoint:
    path: /api/core-types/ikeymanager.keymanagerget
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerGetArgs
  endpoint:
    path: /ikeymanager/getargs
    method: GET
    data_selector: kid
- name: IKeyManagerSharedSecretArgs
  endpoint:
    path: /docs/api/core-types.ikeymanager.keymanagersharedsecret
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerSignArgs
  endpoint:
    path: /docs/api/core-types.ikeymanagersignargs
    method: GET
    data_selector: properties
    params: {}
- name: verifiable_credentials
  endpoint:
    path: /dataStoreORM/dataStoreORMGetVerifiableCredentials
    method: GET
    data_selector: UniqueVerifiableCredential
    params: {}
- name: verifiable_credentials
  endpoint:
    path: /dataStoreORM/dataStoreORMGetVerifiableCredentialsByClaims
    method: GET
    data_selector: UniqueVerifiableCredential
    params: {}
- name: IKeyManagerSignEthTXArgs
  endpoint:
    path: /docs/api/core-types.ikeymanagersignethtxargs
    method: GET
    data_selector: properties
    params: {}
- name: IKeyManagerSignEthTXArgs
  endpoint:
    path: /docs/api/core-types/ikeymanagersignethtxargs.kid
    method: GET
    data_selector: kid
- name: IVerifyCredentialArgs
  endpoint:
    path: /docs/api/core-types.iverifycredentialargs
    method: GET
    data_selector: properties
    params: {}
- name: ResolveDidArgs
  endpoint:
    path: /resolvedidargs/didurl
    method: GET
    data_selector: didUrl
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- You will need to get a project ID from infura https://www.infura.io
- Uses expo-sqlite as a database driver
- Make sure class names are not mangled during the minification step for production
  builds
- Ensure all @veramo/* packages are at the same version
- Uses plugins for DID resolution
- Ensure class names are not mangled during the minification step of a release build
- Uses did:peer for identifiers
- Some objects like Contact may return nulls in deeply nested fields
- This API is provided as a beta preview for developers and may change based on feedback
  that we receive. Do not use this API in a production environment.
- This API may change without a BREAKING CHANGE notice.
- This API is provided as a beta preview for developers and may change based on feedback
  that we receive.
- Do not use this API in a production environment.
- Only jwt and lds is supported at the moment.
- Currently, only JWT is supported
- This API is now obsolete.
- Set fetchRemoteContexts to true ONLY if you want the @context URLs to be fetched.
- Defaults to false
- When dealing with JSON-LD you also MUST provide the proper contexts.
- Defaults to false.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'DID_NOT_FOUND: The requested DID does not exist'
- 'INVALID_DID: The provided DID is invalid'
- not_found:... in case the fragment is not displayed in the DID document
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://localhost:3002/agent
  headers:
    Accept: application/json
source_metadata: null
