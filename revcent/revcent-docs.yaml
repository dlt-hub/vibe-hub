resources:
- name: campaign_create
  endpoint:
    path: /
    method: POST
    data_selector: api_call_id
    params: {}
- name: campaign_edit
  endpoint:
    path: /
    method: POST
    data_selector: api_call_id
    params: {}
- name: campaign
  endpoint:
    path: /campaign/retrieve
    method: GET
    data_selector: results
- name: chargeback
  endpoint:
    path: /chargeback/create
    method: POST
    data_selector: result
- name: chargeback_edit
  endpoint:
    path: /chargeback/edit
    method: PUT
    data_selector: result
- name: chargeback
  endpoint:
    path: /chargeback/retrieve
    method: POST
    data_selector: results
    params: {}
- name: coupon
  endpoint:
    path: /coupon/validate
    method: POST
    data_selector: coupon
    params: {}
- name: customer
  endpoint:
    path: /customer
    method: GET
    data_selector: customers
    params: {}
- name: customer_create
  endpoint:
    path: /customer/create
    method: POST
    data_selector: result
    params: {}
- name: customer_edit
  endpoint:
    path: /customer/edit
    method: POST
    data_selector: result
    params: {}
- name: customer_enable
  endpoint:
    path: /customer/enable
    method: POST
    data_selector: result
    params: {}
- name: customer_disable
  endpoint:
    path: /customer/disable
    method: POST
    data_selector: result
    params: {}
- name: customer_add_card
  endpoint:
    path: /customer/add_card
    method: POST
    data_selector: result
    params: {}
- name: customer_add_to_group
  endpoint:
    path: /customer/add_to_group
    method: POST
    data_selector: result
    params: {}
- name: customer_remove_from_group
  endpoint:
    path: /customer/remove_from_group
    method: POST
    data_selector: result
    params: {}
- name: customer_retrieve
  endpoint:
    path: /customer/retrieve
    method: POST
    data_selector: results
    params: {}
- name: customer_search
  endpoint:
    path: /customer/search
    method: POST
    data_selector: results
    params: {}
- name: customer_card_add
  endpoint:
    path: /customer/add_card
    method: POST
    data_selector: results
    params: {}
- name: customer_card_enable
  endpoint:
    path: /customer_card/enable
    method: POST
    data_selector: api_call_id
    params: {}
- name: customer_card_disable
  endpoint:
    path: /customer_card/disable
    method: POST
    data_selector: api_call_id
    params: {}
- name: customer_card_delete
  endpoint:
    path: /customer_card/delete
    method: POST
    data_selector: api_call_id
    params: {}
- name: customer_card_set_default
  endpoint:
    path: /customer_card/set_default
    method: POST
    data_selector: api_call_id
    params: {}
- name: customer_card_retrieve
  endpoint:
    path: /customer_card/retrieve
    method: POST
    data_selector: results
    params: {}
- name: discount
  endpoint:
    path: /discount
    method: GET
    data_selector: results
- name: fraud_alert_add
  endpoint:
    path: /fraud_alert/add
    method: POST
    data_selector: result
- name: fraud_alert_remove
  endpoint:
    path: /fraud_alert/remove
    method: POST
    data_selector: result
- name: fraud_detection_create
  endpoint:
    path: /fraud_detection/create
    method: POST
    data_selector: result
- name: fraud_detection_edit
  endpoint:
    path: /fraud_detection/edit
    method: POST
    data_selector: result
- name: fraud_detection
  endpoint:
    path: /fraud_detection/retrieve
    method: POST
    data_selector: results
    params: {}
- name: fraud_detection_request
  endpoint:
    path: /fraud_detection_request
    method: POST
    data_selector: results
    params:
      incremental: updated_at
- name: site_gateway
  endpoint:
    path: /site_gateway
    method: GET
    data_selector: results
    params:
      limit: '100'
      page: '1'
- name: user_gateway
  endpoint:
    path: /user_gateway/create
    method: POST
    data_selector: request
    params: {}
- name: user_gateway
  endpoint:
    path: /user_gateway/edit
    method: POST
    data_selector: request
    params: {}
- name: retrieve_user_gateway
  endpoint:
    path: /user_gateway/retrieve
    method: POST
    data_selector: request
    params: {}
- name: gateway_group
  endpoint:
    path: /gateway/group
    method: POST
    data_selector: results
    params: {}
- name: payment_profile
  endpoint:
    path: /payment/profile
    method: POST
    data_selector: request
    params: {}
- name: payment_profile
  endpoint:
    path: /payment/profile/edit
    method: POST
    data_selector: request
    params: {}
- name: payment_profile
  endpoint:
    path: /payment/profile/retrieve
    method: POST
    data_selector: results
    params:
      type: payment_profile
      method: retrieve
      multiple: false
- name: invoice
  endpoint:
    path: /invoice/create
    method: POST
    data_selector: invoice_id
    params:
      type: invoice
      method: create
      invoice_type: sale_create
      invoice_profile: gYo0YVd24Qf7QvdBYM2O
      iso_currency: USD
      campaign: Adwords Campaign
- name: invoice
  endpoint:
    path: /api/invoice/retrieve
    method: GET
    data_selector: results
    params: {}
- name: license_key
  endpoint:
    path: /api/license_key/retrieve
    method: GET
    data_selector: results
    params: {}
- name: check_direct
  endpoint:
    path: /check_direct/retrieve
    method: POST
    data_selector: results
    params:
      id: GO51EXbbAPS6pP1Ov9kK
- name: transaction_create_refund
  endpoint:
    path: /transaction/create_refund
    method: POST
    data_selector: request
    params: {}
- name: transaction_retrieve
  endpoint:
    path: /transaction/retrieve
    method: POST
    data_selector: request
    params: {}
- name: paypal_dispute
  endpoint:
    path: /paypal/dispute
    method: GET
    data_selector: results
    params: {}
- name: transaction_search
  endpoint:
    path: /transaction/search
    method: POST
    data_selector: results
    params: {}
- name: offline_payment
  endpoint:
    path: /offline/payment
    method: GET
    data_selector: results
    params: {}
- name: paypal_transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: results
    params: {}
- name: pending_refund
  endpoint:
    path: /pending_refunds
    method: POST
    data_selector: results
    params: {}
- name: pending_refund
  endpoint:
    path: /api/pending_refund
    method: POST
    data_selector: results
    params: {}
- name: product
  endpoint:
    path: /api/product
    method: POST
    data_selector: result
    params: {}
- name: product_edit
  endpoint:
    path: /products/edit
    method: POST
    data_selector: request
    params: {}
- name: product_enable
  endpoint:
    path: /products/enable
    method: POST
    data_selector: request
    params: {}
- name: product_disable
  endpoint:
    path: /products/disable
    method: POST
    data_selector: request
    params: {}
- name: product_delete
  endpoint:
    path: /products/delete
    method: POST
    data_selector: request
    params: {}
- name: product
  endpoint:
    path: /retrieve
    method: POST
    data_selector: results
    params: {}
- name: product_sale
  endpoint:
    path: /refund
    method: POST
    data_selector: ''
    params: {}
- name: product_sale
  endpoint:
    path: /product_sale/retrieve
    method: GET
    data_selector: results
- name: sale
  endpoint:
    path: /sales/create
    method: POST
    data_selector: response
    params: {}
- name: trial_created
  endpoint:
    path: /trial_created
    method: GET
    data_selector: records
- name: tax_created
  endpoint:
    path: /tax_created
    method: GET
    data_selector: records
- name: subscription_created
  endpoint:
    path: /subscription_created
    method: GET
    data_selector: records
- name: shipping_created
  endpoint:
    path: /shipping_created
    method: GET
    data_selector: records
- name: product_sale_created
  endpoint:
    path: /product_sale_created
    method: GET
    data_selector: records
- name: Sale Create Credit Card
  endpoint:
    path: /sale/create/credit_card
    method: POST
    data_selector: request
- name: Sale Create PayPal
  endpoint:
    path: /sale/create/paypal
    method: POST
    data_selector: request
- name: Sale Create Check Direct
  endpoint:
    path: /sale/create/check_direct
    method: POST
    data_selector: request
- name: Sale Create Offline Payment
  endpoint:
    path: /sale/create/offline_payment
    method: POST
    data_selector: request
- name: pending_sale
  endpoint:
    path: /pending/sale
    method: POST
    data_selector: request
    params: {}
- name: pending_sale_update
  endpoint:
    path: /pending_sale/update
    method: POST
    data_selector: request
    params: {}
- name: pending_sale_process
  endpoint:
    path: /sale/create
    method: POST
    data_selector: request
    params: {}
- name: pending_sale_cancel
  endpoint:
    path: /sale/void
    method: POST
    data_selector: request
    params: {}
- name: sale_void
  endpoint:
    path: /void/sale
    method: POST
    data_selector: request
    params: {}
- name: sale_estimate
  endpoint:
    path: /sales/estimate
    method: POST
    data_selector: request
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: valid
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: shipping
  endpoint:
    path: /shipping
    method: GET
    data_selector: shipping
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: totals
  endpoint:
    path: /totals
    method: GET
    data_selector: totals
    params: {}
- name: sale
  endpoint:
    path: /sales/retrieve
    method: POST
    data_selector: results
    params: {}
- name: sale_search
  endpoint:
    path: /api/search/sale
    method: POST
    data_selector: results
    params: {}
- name: salvage_transaction_process
  endpoint:
    path: /api/salvage_transaction/process
    method: POST
    data_selector: customer
    params: {}
- name: salvage_transaction
  endpoint:
    path: /api/salvage_transaction
    method: POST
    data_selector: results
    params: {}
- name: settlement
  endpoint:
    path: /api/settlement
    method: POST
    data_selector: results
    params: {}
- name: shipping
  endpoint:
    path: /api/shipping
    method: PUT
    data_selector: results
    params: {}
- name: shipping_refund
  endpoint:
    path: /shipping/refund
    method: POST
    data_selector: request
    params: {}
- name: shipping_retrieve
  endpoint:
    path: /shipping/retrieve
    method: POST
    data_selector: request
    params: {}
- name: shipping_search
  endpoint:
    path: /api/search/shipping
    method: POST
    data_selector: results
    params:
      search_term: qZmZZGBdnMSkk2XZmnAE
- name: site_shop
  endpoint:
    path: /api/site_shop/retrieve
    method: POST
    data_selector: results
    params:
      id: ajr7dJkNkoS1gEp5jw1k
      multiple: false
- name: user_shop
  endpoint:
    path: /api/user_shop/create
    method: POST
    data_selector: name
    params: {}
- name: user_shop_edit
  endpoint:
    path: /user/shop/edit
    method: POST
    data_selector: request
    params: {}
- name: user_shop_validate
  endpoint:
    path: /user/shop/validate
    method: POST
    data_selector: request
    params: {}
- name: user_shop_fix
  endpoint:
    path: /user/shop/fix
    method: POST
    data_selector: request
    params: {}
- name: user_shop_retrieve
  endpoint:
    path: /user/shop/retrieve
    method: POST
    data_selector: request
    params: {}
- name: subscription_activate
  endpoint:
    path: /subscription/activate
    method: POST
    data_selector: request
    params: {}
- name: suspend_subscription
  endpoint:
    path: /suspend
    method: POST
    data_selector: request
    params: {}
- name: cancel_subscription
  endpoint:
    path: /cancel
    method: POST
    data_selector: request
    params: {}
- name: subscription_renew
  endpoint:
    path: /renew
    method: POST
    data_selector: request
    params: {}
- name: subscription_edit
  endpoint:
    path: /subscription/edit
    method: POST
    data_selector: request
    params: {}
- name: subscription_retrieve
  endpoint:
    path: /subscription/retrieve
    method: POST
    data_selector: request
    params: {}
- name: subscription_renewal_refund
  endpoint:
    path: /subscription/renewal/refund
    method: POST
    data_selector: request
    params: {}
- name: subscription_renewal_retrieve
  endpoint:
    path: /subscription/renewal/retrieve
    method: POST
    data_selector: request
    params: {}
- name: tax_refund
  endpoint:
    path: /tax/refund
    method: POST
    data_selector: request
    params: {}
- name: tax_retrieve
  endpoint:
    path: /tax/retrieve
    method: POST
    data_selector: request
    params: {}
- name: adwords_campaign
  endpoint:
    path: /adwords/campaign/retrieve
    method: POST
    data_selector: request
    params: {}
- name: adwords_ad_group
  endpoint:
    path: /adwords/adgroup/retrieve
    method: GET
    data_selector: results
    params: {}
- name: adwords_ad
  endpoint:
    path: /adwords/ad/retrieve
    method: GET
    data_selector: results
    params: {}
- name: adwords_keyword
  endpoint:
    path: /adwords/keyword/retrieve
    method: POST
    data_selector: results
    params: {}
- name: adwords_click
  endpoint:
    path: /adwords/click/retrieve
    method: POST
    data_selector: results
    params: {}
- name: adwords_ad
  endpoint:
    path: /adwords/ad
    method: GET
    data_selector: adwords_ad
    params: {}
- name: adwords_ad_group
  endpoint:
    path: /adwords/ad_group
    method: GET
    data_selector: adwords_ad_group
    params: {}
- name: adwords_campaign
  endpoint:
    path: /adwords/campaign
    method: GET
    data_selector: adwords_campaign
    params: {}
- name: adwords_click
  endpoint:
    path: /adwords/click
    method: GET
    data_selector: adwords_click
    params: {}
- name: adwords_customer
  endpoint:
    path: /adwords/customer
    method: GET
    data_selector: adwords_customer
    params: {}
- name: adwords_keyword
  endpoint:
    path: /adwords/keyword
    method: GET
    data_selector: adwords_keyword
    params: {}
- name: adwords_ad
  endpoint:
    path: /adwords/ad
    method: GET
    data_selector: adwords_ad
    params: {}
- name: adwords_ad_group
  endpoint:
    path: /adwords/ad_group
    method: GET
    data_selector: adwords_ad_group
    params: {}
- name: adwords_campaign
  endpoint:
    path: /adwords/campaign
    method: GET
    data_selector: adwords_campaign
    params: {}
- name: adwords_click
  endpoint:
    path: /adwords/click
    method: GET
    data_selector: adwords_click
    params: {}
- name: adwords_customer
  endpoint:
    path: /adwords/customer
    method: GET
    data_selector: adwords_customer
    params: {}
- name: adwords_keyword
  endpoint:
    path: /adwords/keyword
    method: GET
    data_selector: adwords_keyword
    params: {}
- name: hosted_page_visit
  endpoint:
    path: /api/hosted_page_visit
    method: GET
    data_selector: results
    params: {}
- name: hosted_page_submission
  endpoint:
    path: /api/hosted_page_submission
    method: GET
    data_selector: results
    params: {}
- name: tracking_visitor
  endpoint:
    path: /api/tracking_visitor
    method: GET
    data_selector: results
    params: {}
- name: trial_expire
  endpoint:
    path: /expire/trial
    method: POST
    data_selector: request
    params: {}
- name: trial_cancel
  endpoint:
    path: /cancel_trial
    method: POST
    data_selector: request
    params: {}
- name: trial_extend
  endpoint:
    path: /trial/extend
    method: POST
    data_selector: request
    params: {}
- name: trial
  endpoint:
    path: /shorten
    method: POST
    data_selector: request
- name: trial
  endpoint:
    path: /trials/retrieve
    method: POST
    data_selector: results
    params: {}
- name: query
  endpoint:
    path: /queries/retrieve
    method: POST
    data_selector: results
    params: {}
- name: sale
  endpoint:
    path: /sales
    method: query
- name: product_sale
  endpoint:
    path: /product_sales
    method: query
- name: shipping
  endpoint:
    path: /shipping
    method: query
- name: tax
  endpoint:
    path: /tax
    method: query
- name: transaction
  endpoint:
    path: /transactions
    method: query
- name: salvage_transaction
  endpoint:
    path: /salvage_transactions
    method: query
- name: customer
  endpoint:
    path: /customers
    method: query
- name: subscription
  endpoint:
    path: /subscriptions
    method: query
- name: subscription_renewal
  endpoint:
    path: /subscription_renewals
    method: query
- name: trial
  endpoint:
    path: /trials
    method: query
- name: chargeback
  endpoint:
    path: /chargeback
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: customer
  endpoint:
    path: /customer
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: customer_card
  endpoint:
    path: /customer_card
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: fraud_detection
  endpoint:
    path: /fraud_detection
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: pending_refund
  endpoint:
    path: /pending_refund
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: product
  endpoint:
    path: /product
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: product_sale
  endpoint:
    path: /product_sale
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: sale
  endpoint:
    path: /sale
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: salvage_transaction
  endpoint:
    path: /salvage_transaction
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: shipping
  endpoint:
    path: /shipping
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: records
    params:
      date_start: ''
      date_end: ''
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params:
      date_start: '2018-05-14'
      date_end: '2018-06-13'
      page: 1
      limit: 25
      campaign_filter:
      - O06jbPqPBgI8pXj5l1oz
      status_filter:
      - captured
      - settled
      metadata_filter:
      - name: adwords_campaign
        value: My Adwords Campaign
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment_response
    params: {}
- name: chargebacks
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: chargeback_response
    params: {}
- name: payments
  endpoint:
    path: /api/v1/payments
    method: POST
    data_selector: data
    params: {}
- name: chargebacks
  endpoint:
    path: /api/v1/chargebacks
    method: GET
    data_selector: data
    params: {}
- name: payment_gateways
  endpoint:
    path: /products/payments/credit-card/gateway
    method: GET
- name: payment_profiles
  endpoint:
    path: /products/payments/credit-card/payment-profile
    method: GET
- name: payment_gateways
  endpoint:
    path: /api/v1/payment_gateways
    method: GET
- name: chargeback_management
  endpoint:
    path: /api/v1/chargebacks
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: payment_data
- name: gateways
  endpoint:
    path: /gateways
    method: GET
    data_selector: gateway_data
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: transaction
    params: {}
- name: chargeback
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: chargeback_info
    params: {}
- name: payments
  endpoint:
    path: /products/payments
    method: GET
- name: manage
  endpoint:
    path: /products/manage
    method: GET
- name: track_report
  endpoint:
    path: /products/tracking
    method: GET
- name: tools
  endpoint:
    path: /products/tools
    method: GET
- name: chargeback
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: request
    params: {}
- name: document
  endpoint:
    path: /documents
    method: POST
    data_selector: request
    params: {}
- name: sales
  endpoint:
    path: /api/v2/sales
    method: POST
    data_selector: sales_data
- name: customers
  endpoint:
    path: /api/v2/customers
    method: GET
    data_selector: customer_data
- name: subscriptions
  endpoint:
    path: /api/v2/subscriptions
    method: GET
    data_selector: subscription_data
- name: DNS Tracking
  endpoint:
    path: /products/tracking/suite
    method: GET
- name: Metadata
  endpoint:
    path: /products/tracking/suite#section-utilize-metadata
    method: GET
- name: Conversions
  endpoint:
    path: /products/tracking/suite#section-conversions
    method: GET
- name: AdWords
  endpoint:
    path: /products/tracking/suite#section-adwords
    method: GET
- name: Tracking Visitor
  endpoint:
    path: /dns-tracking/visitor_check
    method: GET
    data_selector: visitor_data
    params: {}
- name: IP Lookup
  endpoint:
    path: /dns-tracking/ip_lookup
    method: GET
    data_selector: ip_data
    params: {}
- name: tracking_info
  endpoint:
    path: /tracking/info
    method: GET
    data_selector: visitor
    params: {}
- name: metadata
  endpoint:
    path: /tracking/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: customer_search
  endpoint:
    path: /search
    method: POST
    data_selector: request
    params: {}
- name: campaigns_report
  endpoint:
    path: /reports/campaigns
    method: GET
    data_selector: records
- name: payments_report
  endpoint:
    path: /reports/payments
    method: GET
    data_selector: records
- name: customers_report
  endpoint:
    path: /reports/customers
    method: GET
    data_selector: records
- name: subscriptions_report
  endpoint:
    path: /reports/subscriptions
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: sales
  endpoint:
    path: /v1/sales
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: records
- name: sales
  endpoint:
    path: /v2/sales
    method: POST
    data_selector: payment
    params: {}
- name: sales
  endpoint:
    path: /v2/sales
    method: POST
    data_selector: records
- name: customers
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: records
- name: metadata
  endpoint:
    path: /v2/metadata
    method: POST
    data_selector: records
- name: sales
  endpoint:
    path: /v1/sales
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: records
- name: ai_voice_agent_trigger
  endpoint:
    path: /v2/ai-voice-agents/trigger
    method: POST
    data_selector: null
    params: {}
- name: payments
  endpoint:
    path: /v2/payments
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: records
- name: sale
  endpoint:
    path: /v2/sales
    method: POST
    data_selector: result
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /services/data/vXX.X/payments
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /services/data/vXX.X/customers
    method: GET
    data_selector: records
    params: {}
- name: sales
  endpoint:
    path: /services/data/vXX.X/sales
    method: GET
    data_selector: records
    params: {}
- name: inbound_voice_agent
  endpoint:
    path: /ai-voice-agents/inbound
    method: POST
    data_selector: agent
    params: {}
- name: outbound_voice_agent
  endpoint:
    path: /ai-voice-agents/outbound
    method: POST
    data_selector: agent
    params: {}
- name: ai_assistants
  endpoint:
    path: /ai-assistants/trigger
    method: POST
    data_selector: source_type
    params: {}
- name: sales
  endpoint:
    path: /sales
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: AI Voice Agent
  endpoint:
    path: /ai-voice-agents/trigger
    method: POST
    data_selector: result
    params: {}
- name: AI Assistant
  endpoint:
    path: /ai-assistants/trigger
    method: POST
    data_selector: result
    params: {}
- name: AddCustomerToGroup
  endpoint:
    path: /functions/AddCustomerToGroup
    method: POST
    data_selector: response
    params:
      id: Mg2L5aLa2
      group_id: Pqv6JLpw
- name: GetRefunds
  endpoint:
    path: /functions/GetRefunds
    method: POST
    data_selector: response
    params:
      date_start: 1750392000
      date_end: 1750478399
- name: ai_chats
  endpoint:
    path: /ai_chats
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: 25
      page: 1
- name: ai_directives
  endpoint:
    path: /ai_directives
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: AI Memos
  endpoint:
    path: /ai_memos
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: 25
      page: 1
- name: Create AI Memo
  endpoint:
    path: /ai_memos
    method: POST
    data_selector: result
    params: {}
- name: Get AI Memo
  endpoint:
    path: /ai_memos/{ai_memo_id}
    method: GET
    data_selector: ''
    params: {}
- name: Delete AI Memo
  endpoint:
    path: /ai_memos/{ai_memo_id}/delete
    method: POST
    data_selector: result
    params: {}
- name: ai_threads
  endpoint:
    path: /ai_threads
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
- name: ai_voice_agents
  endpoint:
    path: /ai_voice_agents
    method: GET
    data_selector: results
    params:
      limit: int32
      page: int32
- name: ai_voice_calls
  endpoint:
    path: /ai_voice_calls
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      ai_voice_agent_filter: string
      status_filter: string
- name: single_ai_voice_call
  endpoint:
    path: /ai_voice_calls/{ai_voice_call_id}
    method: GET
    data_selector: ''
    params:
      ai_voice_call_id: string
- name: api_calls
  endpoint:
    path: /api_calls
    method: GET
    data_selector: results
    params:
      limit: '25'
      page: '1'
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: results
    params:
      limit: '25'
      page: '1'
- name: chargebacks
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      shop_filter: string
      gateway_filter: string
      currency_filter: string
      method_filter: string
      status_filter: string
      customer_id: string
- name: create_chargeback
  endpoint:
    path: /chargebacks
    method: POST
    data_selector: null
    params: {}
- name: get_chargeback
  endpoint:
    path: /chargebacks/{chargeback_id}
    method: GET
    data_selector: null
    params: {}
- name: edit_chargeback
  endpoint:
    path: /chargebacks/{chargeback_id}
    method: POST
    data_selector: null
    params: {}
- name: chargeback
  endpoint:
    path: /chargebacks/{chargeback_id}
    method: POST
    data_selector: result
    params: {}
- name: search_chargebacks
  endpoint:
    path: /chargebacks/search
    method: GET
    data_selector: results
    params:
      search_term: washington
- name: check_directs
  endpoint:
    path: /check_directs
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      currency_filter: string
      shop_filter: string
      customer_id: string
- name: validate_coupon
  endpoint:
    path: /coupons/validate
    method: GET
    data_selector: result
    params:
      coupon_code: string
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: results
    params:
      date_start: date_start
      date_end: date_end
      limit: limit
      page: page
      campaign_filter: campaign_filter
      customer_group_filter: customer_group_filter
      product_filter: product_filter
      status_filter: status_filter
      metadata_filter: metadata_filter
- name: create_customer
  endpoint:
    path: /customers
    method: POST
    data_selector: result
    params: {}
- name: get_customer
  endpoint:
    path: /customers/{customer_id}
    method: GET
    data_selector: results
    params:
      customer_id: customer_id
- name: customers
  endpoint:
    path: /customers/search
    method: GET
    data_selector: results
    params:
      search_term: George Washington
- name: edit_customer
  endpoint:
    path: /customers/{customer_id}
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: enable_customer
  endpoint:
    path: /customers/{customer_id}/enable
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: disable_customer
  endpoint:
    path: /customers/{customer_id}/disable
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: add_card
  endpoint:
    path: /customers/{customer_id}/add_card
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: add_to_group
  endpoint:
    path: /customers/{customer_id}/add_to_group
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: remove_from_group
  endpoint:
    path: /customers/{customer_id}/remove_from_group
    method: POST
    data_selector: result
    params:
      customer_id: 4r158EzJmmcVM69dNLkg
- name: customer_cards
  endpoint:
    path: /customer_cards
    method: GET
    data_selector: results
    params:
      date_start: unix-time required
      date_end: unix-time required
      limit: int32 required
      page: int32 required
      customer_id: string
- name: customer_card_details
  endpoint:
    path: /customer_cards/{customer_card_id}
    method: GET
    data_selector: ''
    params:
      customer_card_id: string required
- name: enable_customer_card
  endpoint:
    path: /customer_cards/{customer_card_id}/enable
    method: POST
    data_selector: ''
    params:
      customer_card_id: string required
- name: disable_customer_card
  endpoint:
    path: /customer_cards/{customer_card_id}/disable
    method: POST
    data_selector: ''
    params:
      customer_card_id: string required
- name: set_default_customer_card
  endpoint:
    path: /customer_cards/{customer_card_id}/set_default
    method: POST
    data_selector: ''
    params:
      customer_card_id: string required
- name: delete_customer_card
  endpoint:
    path: /customer_cards/{customer_card_id}/delete
    method: POST
    data_selector: ''
    params:
      customer_card_id: string required
- name: search_customer_cards
  endpoint:
    path: /customer_cards/search
    method: GET
    data_selector: results
    params:
      search_term: string required
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: results
    params:
      date_start: unix-time required
      date_end: unix-time required
      limit: int32 required
      page: int32 required
      campaign_filter: multi-value
      currency_filter: multi-value
      payment_type_filter: multi-value
      shop_filter: multi-value
      customer_id: string
- name: discount_detail
  endpoint:
    path: /discounts/{discount_id}
    method: GET
    data_selector: ''
    params:
      discount_id: string required
- name: document
  endpoint:
    path: /documents
    method: POST
    data_selector: result
    params: {}
- name: email_templates
  endpoint:
    path: /email_templates
    method: GET
    data_selector: results
    params: {}
- name: email_template
  endpoint:
    path: /email_templates/{email_template_id}
    method: GET
    data_selector: ''
    params: {}
- name: fraud_detections
  endpoint:
    path: /fraud_detections
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      method_filter: multi-value
      customer_id: string
- name: create_fraud_detection
  endpoint:
    path: /fraud_detections
    method: POST
    data_selector: result
    params:
      source_id: string
      void_sale: boolean
      flag_similar_sale: boolean
      arn: string
      event_date: date-time
      fraud_detection_date: date-time
      case_number: string
      third_party_integration_id: string
      third_party_fraud_detection_id: string
      third_party_order_id: string
      metadata: array
- name: get_fraud_detection
  endpoint:
    path: /fraud_detections/{fraud_detection_id}
    method: GET
    data_selector: result
    params:
      fraud_detection_id: string
- name: edit_fraud_detection
  endpoint:
    path: /fraud_detections/{fraud_detection_id}
    method: POST
    data_selector: result
    params:
      fraud_detection_id: string
      false_positive: boolean
      arn: string
      event_date: date-time
      fraud_detection_date: date-time
      case_number: string
      third_party_integration_id: string
      third_party_fraud_detection_id: string
      third_party_order_id: string
- name: fraud_detection_search
  endpoint:
    path: /fraud_detections/search
    method: GET
    params:
      search_term: George Washington
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: results
- name: function_details
  endpoint:
    path: /functions/{function_id}
    method: GET
    data_selector: results
- name: trigger_function
  endpoint:
    path: /functions/{function_id}/trigger
    method: POST
- name: site_gateways
  endpoint:
    path: /site_gateways
    method: GET
    data_selector: results
    params: {}
- name: user_gateways
  endpoint:
    path: /user_gateways
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: user_gateways
  endpoint:
    path: /user_gateways/{user_gateway_id}
    method: POST
    data_selector: result
    params: {}
- name: gateway_groups
  endpoint:
    path: /gateway_groups
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: create_gateway_group
  endpoint:
    path: /gateway_groups
    method: POST
    data_selector: result
    params: {}
- name: get_gateway_group
  endpoint:
    path: /gateway_groups/{gateway_group_id}
    method: GET
    data_selector: results
    params: {}
- name: edit_gateway_group
  endpoint:
    path: /gateway_groups/{gateway_group_id}
    method: POST
    data_selector: result
    params: {}
- name: add_user_gateway
  endpoint:
    path: /gateway_groups/{gateway_group_id}/add_user_gateway
    method: POST
    data_selector: result
    params: {}
- name: remove_user_gateway
  endpoint:
    path: /gateway_groups/{gateway_group_id}/remove_user_gateway
    method: POST
    data_selector: result
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: multi-value
      currency_filter: multi-value
      invoice_profile_filter: multi-value
      status_filter: multi-value
      customer_id: string
- name: create_invoice
  endpoint:
    path: /invoices
    method: POST
    data_selector: result
- name: get_invoice
  endpoint:
    path: /invoices/{invoice_id}
    method: GET
    data_selector: results
- name: key_values
  endpoint:
    path: /key_values
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: create_key_value
  endpoint:
    path: /key_values
    method: POST
    data_selector: result
    params: {}
- name: get_key_value
  endpoint:
    path: /key_values/{key}
    method: GET
    data_selector: result
    params: {}
- name: edit_key_value
  endpoint:
    path: /key_values/{key}
    method: POST
    data_selector: result
    params: {}
- name: delete_key_value
  endpoint:
    path: /key_values/{key}/delete
    method: POST
    data_selector: result
    params: {}
- name: license_keys
  endpoint:
    path: /license_keys
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: multi-value
      shop_filter: multi-value
      license_key_profile_filter: multi-value
      issued_filter: multi-value
      status_filter: multi-value
      customer_id: string
- name: get_license_key
  endpoint:
    path: /license_keys/{license_key_id}
    method: GET
    data_selector: ''
    params:
      license_key_id: string
- name: insert_metadata
  endpoint:
    path: /metadata
    method: POST
    data_selector: ''
    params:
      item_type: string
      item_id: string
      metadata: array
      cascade: boolean
- name: create_note
  endpoint:
    path: /notes
    method: POST
    data_selector: ''
    params:
      item_type: string
      item_id: string
      text: string
- name: offline_payments
  endpoint:
    path: /offline_payments
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      currency_filter: string
      shop_filter: string
      customer_id: string
- name: get_offline_payment
  endpoint:
    path: /offline_payments/{offline_payment_id}
    method: GET
    data_selector: ''
    params:
      offline_payment_id: string
- name: paypal_transactions
  endpoint:
    path: /paypal_transactions
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: multi-value
      currency_filter: multi-value
      shop_filter: multi-value
      paypal_account_filter: multi-value
      customer_id: string
- name: search_paypal_transactions
  endpoint:
    path: /paypal_transactions/search
    method: GET
    data_selector: results
    params:
      search_term: string
- name: get_paypal_transaction
  endpoint:
    path: /paypal_transactions/{paypal_transaction_id}
    method: GET
    data_selector: ''
    params:
      paypal_transaction_id: string
- name: payment_profiles
  endpoint:
    path: /payment_profiles
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: payment_profile
  endpoint:
    path: /payment_profiles/{payment_profile_id}
    method: GET
    data_selector: results
    params: {}
- name: pending_refund
  endpoint:
    path: /pending_refunds
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: '[multi-value]'
      currency_filter: '[multi-value]'
      gateway_filter: '[multi-value]'
      payment_type_filter: '[multi-value]'
      paypal_account_filter: '[multi-value]'
      metadata_filter: '[metadata]'
      customer_id: string
- name: pending_refund_details
  endpoint:
    path: /pending_refunds/{pending_refund_id}
    method: GET
    data_selector: results
- name: search_pending_refunds
  endpoint:
    path: /pending_refunds/search
    method: GET
    data_selector: results
    params:
      search_term: string
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
- name: create_product
  endpoint:
    path: /products
    method: POST
- name: get_product
  endpoint:
    path: /products/{product_id}
    method: GET
- name: edit_product
  endpoint:
    path: /products/{product_id}
    method: POST
- name: enable_product
  endpoint:
    path: /products/{product_id}/enable
    method: POST
- name: disable_product
  endpoint:
    path: /products/{product_id}/disable
    method: POST
- name: delete_product
  endpoint:
    path: /products/{product_id}/delete
    method: POST
- name: search_products
  endpoint:
    path: /products/search
    method: GET
    params:
      search_term: USB HDD
- name: product_sales
  endpoint:
    path: /product_sales
    method: GET
    data_selector: results
    params:
      date_start: ''
      date_end: ''
      limit: 25
      page: 1
      campaign_filter: ''
      currency_filter: ''
      shop_filter: ''
      payment_type_filter: ''
      product_filter: ''
      customer_id: ''
- name: product_sale
  endpoint:
    path: /product_sales/{product_sale_id}
    method: GET
    data_selector: ''
    params:
      product_sale_id: ''
- name: refund_product_sale
  endpoint:
    path: /product_sales/{product_sale_id}/refund
    method: POST
    data_selector: ''
    params:
      product_sale_id: ''
      amount: ''
      refunded_offsite: false
- name: sales
  endpoint:
    path: /sales
    method: GET
    data_selector: results
    params:
      date_start: required
      date_end: required
      limit: '25'
      page: '1'
- name: create_sale
  endpoint:
    path: /sales
    method: POST
- name: sales
  endpoint:
    path: /sales
    method: POST
    data_selector: api_call_id
    params: {}
- name: sales_details
  endpoint:
    path: /sales/{sale_id}
    method: GET
    data_selector: api_call_id
    params: {}
- name: sales
  endpoint:
    path: /sales/{sale_id}/void
    method: POST
    data_selector: result
    params: {}
- name: add_fraud_alert
  endpoint:
    path: /sales/{sale_id}/add_fraud_alert
    method: POST
    data_selector: result
    params: {}
- name: remove_fraud_alert
  endpoint:
    path: /sales/{sale_id}/remove_fraud_alert
    method: POST
    data_selector: result
    params: {}
- name: create_pending_sale
  endpoint:
    path: /sales/pending
    method: POST
    data_selector: api_call_id
    params: {}
- name: pending_sale
  endpoint:
    path: /sales/pending
    method: POST
    data_selector: result
- name: update_pending_sale
  endpoint:
    path: /sales/pending/{sale_id}
    method: POST
    data_selector: result
- name: process_pending_sale
  endpoint:
    path: /sales/pending/{sale_id}/process
    method: POST
    data_selector: result
- name: estimate_sale
  endpoint:
    path: /sales/estimate
    method: POST
    data_selector: response
    params: {}
- name: process_sale
  endpoint:
    path: /sales/pending/{sale_id}/process
    method: POST
    data_selector: response
    params: {}
- name: search_sales
  endpoint:
    path: /sales/search
    method: GET
    data_selector: results
    params:
      search_term: George Washington
- name: salvage_transactions
  endpoint:
    path: /salvage_transactions
    method: GET
    data_selector: results
    params:
      date_start: date_start
      date_end: date_end
      limit: limit
      page: page
      campaign_filter: campaign_filter
      currency_filter: currency_filter
      shop_filter: shop_filter
      method_filter: method_filter
      status_filter: status_filter
      customer_id: customer_id
- name: salvage_transaction_detail
  endpoint:
    path: /salvage_transactions/{salvage_transaction_id}
    method: GET
    data_selector: results
- name: process_salvage_transaction
  endpoint:
    path: /salvage_transactions/{salvage_transaction_id}/process
    method: POST
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: 25
      page: 1
- name: create_settlement
  endpoint:
    path: /settlements
    method: POST
    data_selector: result
    params:
      merchant_account_id: string
      amount: float
      gateway_settlement_id: string
      gateway_settlement_date: date-time
      iso_currency: string
- name: get_settlement
  endpoint:
    path: /settlements/{settlement_id}
    method: GET
    data_selector: results
    params:
      settlement_id: string
- name: get_shipments
  endpoint:
    path: /shipping
    method: GET
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      currency_filter: string
      shop_filter: string
      shipping_status_filter: string
      shipping_provider_filter: string
      fulfillment_account_filter: string
      customer_id: string
- name: get_a_shipment
  endpoint:
    path: /shipping/{shipping_id}
    method: GET
- name: edit_a_shipment
  endpoint:
    path: /shipping/{shipping_id}
    method: POST
- name: shipping
  endpoint:
    path: /shipping/{shipping_id}
    method: POST
    data_selector: results
    params: {}
- name: refund
  endpoint:
    path: /shipping/{shipping_id}/refund
    method: POST
    data_selector: results
    params: {}
- name: search_shipping
  endpoint:
    path: /shipping/search
    method: GET
    data_selector: results
    params:
      search_term: string
- name: site_shops
  endpoint:
    path: /site_shops
    method: GET
    data_selector: results
- name: user_shops
  endpoint:
    path: /user_shops
    method: GET
    data_selector: results
    params:
      limit: 25
      page: 1
- name: smtp_messages
  endpoint:
    path: /smtp_messages
    method: GET
    data_selector: results
    params:
      date_start: 1627876799
      date_end: 1628049599
      limit: 25
      page: 1
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: multi-value
      currency_filter: multi-value
      shop_filter: multi-value
      product_filter: multi-value
      subscription_profile_filter: multi-value
      status_filter: multi-value
      customer_id: string
- name: subscription_detail
  endpoint:
    path: /subscriptions/{subscription_id}
    method: GET
    data_selector: results
- name: edit_subscription
  endpoint:
    path: /subscriptions/{subscription_id}
    method: POST
- name: activate_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/activate
    method: POST
- name: activate_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/activate
    method: POST
    data_selector: result
    params: {}
- name: suspend_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/suspend
    method: POST
    data_selector: result
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/cancel
    method: POST
    data_selector: result
    params: {}
- name: renew_subscription
  endpoint:
    path: /subscriptions/{subscription_id}/renew
    method: POST
    data_selector: result
    params: {}
- name: search_subscriptions
  endpoint:
    path: /subscriptions/search
    method: GET
    data_selector: results
    params: {}
- name: subscription_renewals
  endpoint:
    path: /subscription_renewals
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
- name: subscription_renewal_details
  endpoint:
    path: /subscription_renewals/{subscription_renewal_id}
    method: GET
    data_selector: results
    params: {}
- name: refund_subscription_renewal
  endpoint:
    path: /subscription_renewals/{subscription_renewal_id}/refund
    method: POST
    data_selector: ''
    params:
      amount: float
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: multi-value
      currency_filter: multi-value
      shop_filter: multi-value
      customer_id: string
- name: get_tax
  endpoint:
    path: /tax/{tax_id}
    method: GET
    data_selector: results
- name: refund_tax
  endpoint:
    path: /tax/{tax_id}/refund
    method: POST
    data_selector: result
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      currency_filter: string
      shop_filter: string
      gateway_filter: string
      payment_profile_filter: string
      method_filter: string
      status_filter: string
      result_filter: string
      customer_id: string
- name: transaction_details
  endpoint:
    path: /transactions/{transaction_id}
    method: GET
    data_selector: results
- name: refund_transaction
  endpoint:
    path: /transactions/{transaction_id}/refund
    method: POST
    data_selector: results
- name: search_transactions
  endpoint:
    path: /transactions/search
    method: GET
    data_selector: results
    params:
      search_term: string
- name: trials
  endpoint:
    path: /trials
    method: GET
    data_selector: results
    params:
      date_start: unix-time
      date_end: unix-time
      limit: int32
      page: int32
      campaign_filter: string
      currency_filter: string
      shop_filter: string
      status_filter: string
      customer_id: string
- name: trial_details
  endpoint:
    path: /trials/{trial_id}
    method: GET
    data_selector: results
- name: expire_trial
  endpoint:
    path: /trials/{trial_id}/expire
    method: POST
- name: extend_trial
  endpoint:
    path: /trials/{trial_id}/extend
    method: POST
- name: shorten_trial
  endpoint:
    path: /trials/{trial_id}/shorten
    method: POST
- name: cancel_trial
  endpoint:
    path: /trials/{trial_id}/cancel
    method: POST
- name: search_trials
  endpoint:
    path: /trials/search
    method: GET
    data_selector: results
- name: trial
  endpoint:
    path: /user/trial-details
    method: GET
    data_selector: results
    params: {}
- name: products
  endpoint:
    path: /wp-json/wc/v3/products
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /wp-json/wc/v3/orders
    method: GET
    data_selector: orders
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: documents
- name: document
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: results
    params: {}
- name: document
  endpoint:
    path: /v1
    method: POST
    data_selector: body
    params: {}
- name: next-gen-payment-profile
  endpoint:
    path: /payments/credit-card/next-gen-payment-profile
    method: GET
    data_selector: records
    params: {}
- name: license_key
  endpoint:
    path: /user/license-keys
    method: GET
- name: license_key_profile
  endpoint:
    path: /user/license-key-profiles
    method: GET
- name: create_license_key_profile
  endpoint:
    path: /user/new-license-key-profile
    method: POST
- name: gateway
  endpoint:
    path: /payments/credit-card/gateway
    method: POST
- name: payment_profile
  endpoint:
    path: /payments/credit-card/create-your-first-payment-profile
    method: POST
- name: paypal_account
  endpoint:
    path: /payments/paypal/paypal-account
    method: POST
- name: import_products
  endpoint:
    path: /import-products
    method: GET
- name: product_bundle
  endpoint:
    path: /api/v1/product-bundle
    method: GET
    data_selector: records
    params: {}
- name: bundle_products
  endpoint:
    path: /unbundle-at-sale
    method: GET
    data_selector: bundle_products
- name: products_detailed
  endpoint:
    path: /unbundle-at-sale
    method: GET
    data_selector: products_detailed
- name: customer
  endpoint:
    path: /user/customers
    method: GET
    data_selector: customers
- name: create_customer
  endpoint:
    path: /user/new-customer
    method: POST
    data_selector: customer
- name: shipping
  endpoint:
    path: /revenue/shipping
    method: GET
    data_selector: records
- name: shipping_profiles
  endpoint:
    path: /revenue/shipping/profiles
    method: GET
    data_selector: records
- name: shipping_methods
  endpoint:
    path: /api/v1/shipping_methods
    method: POST
    data_selector: shipping_methods
    params: {}
- name: 3PL Central Default
  endpoint:
    path: /3pl_central_default
    method: GET
    data_selector: methods
    params: {}
- name: APC
  endpoint:
    path: /apc
    method: GET
    data_selector: methods
    params: {}
- name: Asendia
  endpoint:
    path: /asendia
    method: GET
    data_selector: methods
    params: {}
- name: Australia Post
  endpoint:
    path: /australia_post
    method: GET
    data_selector: methods
    params: {}
- name: Canada Post
  endpoint:
    path: /canada_post
    method: GET
    data_selector: methods
    params: {}
- name: DHL
  endpoint:
    path: /dhl
    method: GET
    data_selector: methods
    params: {}
- name: DHL eCommerce
  endpoint:
    path: /dhl_ecommerce
    method: GET
    data_selector: methods
    params: {}
- name: DHL Express
  endpoint:
    path: /dhl_express
    method: GET
    data_selector: methods
    params: {}
- name: DPD
  endpoint:
    path: /dpd
    method: GET
    data_selector: methods
    params: {}
- name: Endicia
  endpoint:
    path: /endicia
    method: GET
    data_selector: methods
    params: {}
- name: flat_rate_box
  endpoint:
    path: /shipping/methods/flat_rate_box
    method: GET
    data_selector: records
- name: endicia_priority_mail_flat_rate_envelope
  endpoint:
    path: /shipping/methods/endicia_priority_mail_flat_rate_envelope
    method: GET
    data_selector: records
- name: fedex_priority_overnight
  endpoint:
    path: /shipping/methods/fedex_priority_overnight
    method: GET
    data_selector: records
- name: purolator_express
  endpoint:
    path: /shipping/methods/purolator_express
    method: GET
    data_selector: records
- name: purolator_express_us9am
  endpoint:
    path: /shipping_methods/purolator_express_us9am
    method: GET
    data_selector: data
    params: {}
- name: rr_donnelley
  endpoint:
    path: /shipping_methods/rr_donnelley
    method: GET
    data_selector: data
    params: {}
- name: stampscom
  endpoint:
    path: /shipping_methods/stampscom
    method: GET
    data_selector: data
    params: {}
- name: ups
  endpoint:
    path: /shipping_methods/ups
    method: GET
    data_selector: data
    params: {}
- name: upsmi
  endpoint:
    path: /shipping_methods/upsmi
    method: GET
    data_selector: data
    params: {}
- name: usps
  endpoint:
    path: /shipping_methods/usps
    method: GET
    data_selector: data
    params: {}
- name: offline_payments
  endpoint:
    path: /payments/offline
    method: GET
- name: third_party_integration
  endpoint:
    path: /user/third-party-integrations
    method: POST
- name: coupon
  endpoint:
    path: /payments/coupon
    method: GET
- name: coupon_profile
  endpoint:
    path: /payments/coupon/profile
    method: GET
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: fraud_detection
  endpoint:
    path: /fraud_detection
    method: POST
    data_selector: sales
    params: {}
- name: third_party_fraud_event
  endpoint:
    path: /sentinel/events/third_party_fraud
    method: GET
    data_selector: event
    params: {}
- name: fraud_detection
  endpoint:
    path: /payments/fraud-detection
    method: GET
- name: revenue_metrics
  endpoint:
    path: /revenue
    method: GET
    data_selector: revenue_metrics
- name: adwords
  endpoint:
    path: /adwords
    method: GET
    data_selector: adwords_data
- name: visitor_tracking
  endpoint:
    path: /tracking
    method: GET
    data_selector: visitor_data
- name: analytic_aggregations
  endpoint:
    path: /analytic/aggregations
    method: GET
    data_selector: aggregations
- name: analytic_values
  endpoint:
    path: /analytic/values
    method: GET
    data_selector: values
- name: payment_profile_flow_table
  endpoint:
    path: /transaction/payment_profile_flow_table
    method: GET
    data_selector: records
- name: first_6_gateway_stats_table
  endpoint:
    path: /transaction/first_6_gateway_stats_table
    method: GET
    data_selector: records
- name: first_6_bin_profile_stats_table
  endpoint:
    path: /transaction/first_6_bin_profile_stats_table
    method: GET
    data_selector: records
- name: first_6_bin_profile_gateway_stats_table
  endpoint:
    path: /transaction/first_6_bin_profile_gateway_stats_table
    method: GET
    data_selector: records
- name: third_party_shop
  endpoint:
    path: /user/shops
    method: GET
- name: create_third_party_shop
  endpoint:
    path: /user/new-third-party-shop
    method: POST
- name: fulfillment_accounts
  endpoint:
    path: /user/fulfillment-accounts
    method: GET
    data_selector: fulfillment_accounts
- name: create_fulfillment_account
  endpoint:
    path: /user/new-fulfillment-account
    method: POST
    data_selector: fulfillment_account
- name: edit_fulfillment_account
  endpoint:
    path: /user/edit-fulfillment-account
    method: PUT
    data_selector: fulfillment_account
- name: RevCent User ID Dataset
  endpoint:
    path: /bigquery/dataset
    method: POST
    data_selector: dataset
    params: {}
- name: customer_group
  endpoint:
    path: /user/customer-groups
    method: GET
- name: create_customer_group
  endpoint:
    path: /user/new-customer-group
    method: POST
- name: edit_customer_group
  endpoint:
    path: /customer-group/edit
    method: PUT
- name: flow_runs
  endpoint:
    path: /user/flow-runs
    method: GET
    data_selector: results
    params: {}
- name: function
  endpoint:
    path: /user/functions
    method: GET
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: data
- name: key_value
  endpoint:
    path: /api/v2/key_values
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /revcent-account/events
    method: GET
    data_selector: records
- name: ai_memo
  endpoint:
    path: /ai_memos
    method: GET
    data_selector: item_details
- name: chargeback
  endpoint:
    path: /chargebacks
    method: GET
    data_selector: item_details
- name: check_direct
  endpoint:
    path: /check_directs
    method: GET
    data_selector: item_details
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: item_details
- name: discount
  endpoint:
    path: /discounts
    method: GET
    data_selector: item_details
- name: fraud_detection
  endpoint:
    path: /fraud_detection
    method: GET
    data_selector: item_details
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: item_details
    params: {}
- name: note
  endpoint:
    path: /note
    method: GET
    data_selector: item_details
    params: {}
- name: offline_payment
  endpoint:
    path: /offline_payment
    method: GET
    data_selector: item_details
    params: {}
- name: pending_refund
  endpoint:
    path: /pending_refund
    method: GET
    data_selector: item_details
    params: {}
- name: product
  endpoint:
    path: /services/data/vXX.X/sobjects/Product
    method: GET
    data_selector: records
    params: {}
- name: product_sale
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductSale
    method: GET
    data_selector: records
    params: {}
- name: sale
  endpoint:
    path: /services/data/vXX.X/sobjects/Sale
    method: GET
    data_selector: records
    params: {}
- name: sentinel_event
  endpoint:
    path: /sentinel/events
    method: GET
    data_selector: item_details
    params: {}
- name: shipping_event
  endpoint:
    path: /shipping/events
    method: GET
    data_selector: events
    params: {}
- name: subscription_event
  endpoint:
    path: /subscription/events
    method: GET
    data_selector: events
    params: {}
- name: subscription_renewal
  endpoint:
    path: /path/to/subscription_renewal
    method: GET
    data_selector: item_details
    params: {}
- name: tax
  endpoint:
    path: /path/to/tax
    method: GET
    data_selector: item_details
    params: {}
- name: transaction
  endpoint:
    path: /path/to/transaction
    method: GET
    data_selector: item_details
    params: {}
- name: trial
  endpoint:
    path: /trial
    method: GET
    data_selector: event_notations
    params: {}
- name: account_links
  endpoint:
    path: /revcent-account/account-links
    method: GET
- name: paypal_account
  endpoint:
    path: /payments/paypal/paypal-account
    method: GET
- name: paypal_credentials
  endpoint:
    path: /payments/paypal/credentials
    method: POST
- name: shipping
  endpoint:
    path: /revenue/shipping
    method: GET
    data_selector: shipping
    params: {}
- name: shipping_profiles
  endpoint:
    path: /revenue/shipping/profiles
    method: GET
    data_selector: profiles
    params: {}
- name: shipping_methods
  endpoint:
    path: /api/shipping_methods
    method: GET
    data_selector: methods
    params: {}
- name: Flat Rate Box
  endpoint:
    path: /usps_priority_mail/126
    method: GET
- name: Endicia Priority Mail Flat Rate Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_envelope
    method: GET
- name: Endicia Priority Mail Flat Rate Padded Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_padded_envelope
    method: GET
- name: Endicia Priority Mail Small Flat Rate Box
  endpoint:
    path: /endicia/priority_mail_small_flat_rate_box
    method: GET
- name: Endicia Priority Mail Flat Rate Legal Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_legal_envelope
    method: GET
- name: Endicia Priority Mail Flat Rate Gift Card Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_gift_card_envelope
    method: GET
- name: Endicia Priority Mail Flat Rate Window Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_window_envelope
    method: GET
- name: Endicia Priority Mail Flat Rate Cardboard Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_cardboard_envelope
    method: GET
- name: Endicia Priority Mail Flat Rate Small Envelope
  endpoint:
    path: /endicia/priority_mail_flat_rate_small_envelope
    method: GET
- name: Endicia Priority Mail Regional Rate Box A
  endpoint:
    path: /endicia/priority_mail_regional_rate_box_a
    method: GET
- name: Endicia Priority Mail Regional Rate Box B
  endpoint:
    path: /endicia/priority_mail_regional_rate_box_b
    method: GET
- name: Endicia Priority Mail Regional Rate Box C
  endpoint:
    path: /endicia/priority_mail_regional_rate_box_c
    method: GET
- name: Endicia Priority Mail Commercial Plus soft pack
  endpoint:
    path: /endicia/priority_mail_commercial_plus_soft_pack
    method: GET
- name: Endicia Express Mail International Flat Rate Box
  endpoint:
    path: /endicia/express_mail_international_flat_rate_box
    method: GET
- name: Endicia Express Mail International Flat Rate Envelope
  endpoint:
    path: /endicia/express_mail_international_flat_rate_envelope
    method: GET
- name: Endicia Global Express Mail
  endpoint:
    path: /endicia/global_express_mail
    method: GET
- name: Endicia Priority Mail International
  endpoint:
    path: /endicia/priority_mail_international
    method: GET
- name: Endicia Global Air Parcel Post
  endpoint:
    path: /endicia/global_air_parcel_post
    method: GET
- name: Endicia Priority Mail Intl. Flat Rate Envelope
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_envelope
    method: GET
- name: Endicia Priority Mail Intl. Flat Rate Med. Box
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_med_box
    method: GET
- name: Endicia Priority Mail Intl. Flat Rate Small Box
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_small_box
    method: GET
- name: Endicia Priority Mail Intl. Flat Rate Large Box
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_large_box
    method: GET
- name: Endicia First-Class Package International Services
  endpoint:
    path: /endicia/first_class_package_international_services
    method: GET
- name: Endicia Priority Mail Intl DVD Flat Rate Box
  endpoint:
    path: /endicia/priority_mail_intl_dvd_flat_rate_box
    method: GET
- name: Endicia Priority Mail Intl Large Video Flat Rate Box
  endpoint:
    path: /endicia/priority_mail_intl_large_video_flat_rate_box
    method: GET
- name: Endicia Priority Mail Intl Flat Rate Legal Envelope
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_legal_envelope
    method: GET
- name: Endicia Priority Mail Intl Flat Rate Padded Envelope
  endpoint:
    path: /endicia/priority_mail_intl_flat_rate_padded_envelope
    method: GET
- name: Endicia Express Mail Intl Flat Rate Legal Envelope
  endpoint:
    path: /endicia/express_mail_intl_flat_rate_legal_envelope
    method: GET
- name: Endicia First Class Mail Flats
  endpoint:
    path: /endicia/first_class_mail_flats
    method: GET
- name: Endicia Standard Mail
  endpoint:
    path: /endicia/standard_mail
    method: GET
- name: Endicia Media Mail
  endpoint:
    path: /endicia/media_mail
    method: GET
- name: FedEx Priority Overnight
  endpoint:
    path: /fedex/priority_overnight
    method: GET
- name: FedEx 2Day
  endpoint:
    path: /fedex/2day
    method: GET
- name: FedEx Standard Overnight
  endpoint:
    path: /fedex/standard_overnight
    method: GET
- name: FedEx First Overnight
  endpoint:
    path: /fedex/first_overnight
    method: GET
- name: FedEx Express Saver
  endpoint:
    path: /fedex/express_saver
    method: GET
- name: FedEx 2Day AM
  endpoint:
    path: /fedex/2day_am
    method: GET
- name: FedEx Sameday
  endpoint:
    path: /fedex/sameday
    method: GET
- name: FedEx Sameday City
  endpoint:
    path: /fedex/sameday_city
    method: GET
- name: FedEx International Next Flight
  endpoint:
    path: /fedex/international_next_flight
    method: GET
- name: FedEx International First
  endpoint:
    path: /fedex/international_first
    method: GET
- name: FedEx International Priority
  endpoint:
    path: /fedex/international_priority
    method: GET
- name: FedEx International Economy
  endpoint:
    path: /fedex/international_economy
    method: GET
- name: FedEx International DirectDistribution
  endpoint:
    path: /fedex/international_directdistribution
    method: GET
- name: FedEx International Mail Service
  endpoint:
    path: /fedex/international_mail_service
    method: GET
- name: FedEx International Connect Plus
  endpoint:
    path: /fedex/international_connect_plus
    method: GET
- name: FedEx Home Delivery
  endpoint:
    path: /fedex/home_delivery
    method: GET
- name: FedEx Ground
  endpoint:
    path: /fedex/ground
    method: GET
- name: FedEx SmartPost
  endpoint:
    path: /fedex/smartpost
    method: GET
- name: FedEx Next Day 10 a.m.
  endpoint:
    path: /fedex_uk/next_day_10am
    method: GET
- name: FedEx Next Day 12 noon
  endpoint:
    path: /fedex_uk/next_day_12noon
    method: GET
- name: FedEx International Priority
  endpoint:
    path: /fedex_uk/international_priority
    method: GET
- name: FedEx International First
  endpoint:
    path: /fedex_uk/international_first
    method: GET
- name: FedEx Next Day
  endpoint:
    path: /fedex_uk/next_day
    method: GET
- name: FedEx International Economy
  endpoint:
    path: /fedex_uk/international_economy
    method: GET
- name: Globalmail Parcel Direct Express
  endpoint:
    path: /firstmile/globalmail_parcel_direct_express
    method: GET
- name: Global Mail Parcel Direct - DDP
  endpoint:
    path: /firstmile/global_mail_parcel_direct_ddp
    method: GET
- name: Newgistics Parcel Select Lightweight
  endpoint:
    path: /firstmile/newgistics_parcel_select_lightweight
    method: GET
- name: FedEx SmartPost Parcel Select
  endpoint:
    path: /firstmile/fedex_smartpost_parcel_select
    method: GET
- name: FedEx 2 Day
  endpoint:
    path: /firstmile/fedex_2_day
    method: GET
- name: purolator_express_us9am
  endpoint:
    path: /shipping_methods/purolator_express_us9am
    method: GET
    data_selector: records
- name: rr_donnelley
  endpoint:
    path: /shipping_methods/rr_donnelley
    method: GET
    data_selector: records
- name: stampscom
  endpoint:
    path: /shipping_methods/stampscom
    method: GET
    data_selector: records
- name: ups
  endpoint:
    path: /shipping_methods/ups
    method: GET
    data_selector: records
- name: upsmi
  endpoint:
    path: /shipping_methods/upsmi
    method: GET
    data_selector: records
- name: usps
  endpoint:
    path: /shipping_methods/usps
    method: GET
    data_selector: records
- name: pending_sale
  endpoint:
    path: /revenue/sale/pending-sale
    method: POST
    data_selector: request
    params: {}
- name: pending_sale
  endpoint:
    path: /api/sale
    method: create
    data_selector: request
    params: {}
- name: upsell_profile
  endpoint:
    path: /revenue/sale/upsell-profile
    method: GET
notes:
- All api calls must use the http POST method.
- Important to set the Content-Type in your POST header to 'application/json'.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Chargebacks must specify transaction_id or gateway_transaction_id
- Requires setup of connected app in RevCent API
- Requires setup of connected app in RevCent
- Some fields may be optional depending on the request type
- Use POST method for API requests
- API calls return a code indicating success or error.
- Customer card operations are irreversible.
- Fraud detection must have an originating RevCent API call.
- Fraud detection cannot be removed or undone.
- A fraud detection request within RevCent is created when RevCent contacts a third
  party integration and requests information on a payment before the payment is processed.
- Uses OAuth2 with refresh token — requires setup of connected app in RevCent
- Read the documentation carefully to distinguish between different gateway types.
- A site gateway is required, along with the correct required fields when creating
  a user gateway.
- Ensure to use the correct user_gateway_id for requests.
- Payment profiles are a powerful feature, with settings and orders that require detailed
  precision.
- You can insert additional metadata for an entity within RevCent.
- RevCent supports multiple payment types including check, credit card, offline and
  PayPal.
- A check direct is considered a physical check, not ACH or electronic check.
- Not recommended for detailed metrics reports.
- RevCent automatically processes pending refunds.
- RevCent will always create a new product and will not match existing identifiers
  to prevent duplicates.
- Avoid using delete method if the product has existing sales or subscriptions.
- Refer to specific payment type documentation for requirements.
- Ensure valid metadata objects for integrations.
- The unix timestamp of when the subscription next renews is calculated on sale creation.
- The is_pending property must be set to true to create a pending sale.
- You can include your own unique_request_id for future reference.
- 'You must include ''is_pending: true'' property in the request.'
- You must include the unique_request_id of the pending sales' initial response.
- 'Do not include ''is_pending'', or set ''is_pending: false'', in the pending sale
  process request.'
- The request method is 'estimate' for creating a sale estimate.
- Some objects may return nulls in deeply nested fields
- RevCent can automatically process salvage transactions using Salvage Profiles.
- Some endpoints may have specific requirements for parameters
- Some responses may include nulls for optional fields
- Only provide the properties you wish to modify when updating a shop.
- The refund_product_sale is optional and defaults to false.
- Only provide the properties you wish to modify for subscription edit.
- Requires setup of RevCent API key and OAuth2 authentication.
- Requires specific identifiers for ad groups and ads.
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in revcent
- Automatically expires transactions based on the trial expiration date.
- Cancelling a trial will not charge the customer, and any subscription related to
  the trial will be cancelled as well.
- Some responses may vary based on the request type and parameters
- Pagination only applies to API retrieve requests which return more than one item
  (no item id specified).
- Pagination is necessary in order to prevent results from being too large, as well
  as prevent user systems from having to process too much data in memory.
- Ecommerce businesses use RevCent as their sole backend for payments, engagement,
  reporting, management, and more for increased revenue and brand growth.
- RevCent offers a full range of tools to route credit card payments, handle declines,
  recover revenue, manage chargebacks and more.
- RevCent offers automated revenue recovery tools.
- Supports multiple payment gateways
- Requires setup of connected apps for OAuth
- RevCent currently supports several gateways and are constantly adding new ones.
- RevCent is a certified PCI DSS Level 1 service provider and securely stores customer
  credit cards.
- Utilizes the latest encryption for all communication, access, and payment data storage.
- RevCent utilizes the latest encryption for all communication, access and payment
  data storage.
- Sentinel is a multi-layered anti-fraud tool that analyzes IP addresses, validates
  tracking visitors and utilizes third parties before processing payments.
- Sentinel prevents fraudulent payments from reaching the processor.
- RevCent integrates various ecommerce management tools.
- RevCent's in-house DNS tracking enables you to have the most accurate conversion
  metrics found anywhere.
- First party cookies are required for accurate visitor tracking, especially across
  domains.
- Modern browsers are now blocking third party tracking cookies.
- RevCent is approved by Google as an AdWords third party SAAS provider.
- RevCent offers pre-built reports that are automatically updated with account changes.
- RevCent immediately streams updates to BigQuery when changes occur within your account,
  ensuring up to date metrics.
- BigQuery was built to handle petabyte sized queries, ensuring all of your data is
  queryable regardless of total dataset size.
- AdWords data transfer service is fully managed by Google, with your datasets updated
  daily.
- Uses built-in code editor within RevCent to write your code.
- Customer accounts must be verified via email to access the portal.
- Requires setup of API key in the header
- Uses API key for authentication.
- API trigger operation requires a valid API key in the header.
- Some API responses may have rate limits
- AI Voice Agents can be triggered via events, web app, API, or custom schedule.
- Some responses may vary based on user inputs
- AI Voice Agents can accept inbound and make outbound calls.
- Inbound agents can be linked to Twilio phone numbers.
- The AI Assistant can be triggered via events, the web app, the API or on a custom
  schedule.
- Daily reports are generated and sent via email and Telegram.
- Custom emails are sent based on customer sentiment analysis.
- Create an API account and retrieve the key in the web UI.
- We do not recommend using the root API keys which were created by RevCent when you
  signed up.
- AI Chats are stored for a maximum of 7 days since creation.
- Limit can range between 1 and 25, and the default is 25.
- AI Memos are stored for a maximum of 7 days since creation.
- The difference between date_start and date_end cannot exceed a 7 day period.
- Search previously created chargebacks using a search term.
- The difference between date_start and date_end cannot exceed a 90 day period.
- RevCent does not allow the retrieval of a raw credit card number for a customer
  card.
- 'API Permission required for site gateways: site_gateway:retrieve'
- 'API Permission required for user gateways: user_gateway:retrieve'
- Custom descriptor and rules can be included in the request body.
- RevCent will automatically create a gateway_group during an initial sale if the
  gateway_group does not exist.
- Used for pagination, i.e. to skip to specific page of results.
- RevCent automatically processes a pending refund once a credit card transaction
  has settled.
- The date range cannot exceed a 90 day period.
- If you have multiple stores with the same products it is important to differentiate
  found products using the store property.
- Use the sale_id as a path parameter to retrieve specific sale details.
- Voiding a sale refunds all associated payments on a non-pending sale.
- Using CreateFraudDetection operation is recommended to block a customer permanently.
- API Permission required for all sales actions.
- Estimate the total cost with itemized results including products, shipping, tax,
  coupons and discounts.
- If using the SearchSales and GetSale method within a public facing flow, verify
  visitor is indeed related to the sale.
- Use the SubscriptionSuspend operation if you wish to restart the subscription at
  a later date.
- Manually renewing a subscription will set the next renewal date according to the
  subscription profile duration setting.
- Highly recommended to verify visitor relationship to transaction using secondary
  non-provided value.
- If using the SearchTrials and GetTrial method within a public facing flow, verify
  the visitor is indeed related to the trial using a secondary non-provided value.
- Some API responses may vary depending on account permissions
- For detailed API usage, refer to the API documentation.
- Allows third parties to download documents without an API key.
- Functions cause latency, which will result in having to wait longer for a payment
  response.
- Uses custom error responses for payment processing
- Payment profile attempts are considered the completion of all steps within a payment
  flow
- RevCent allows you to toggle between live and test mode.
- When creating a sale within the web app you select a RevCent Gateway that has been
  set up with live credentials or select a RevCent Payment Profile that contains gateways
  using live gateway credentials.
- You can import one or more products into RevCent using the import utility.
- The total amount of all child bundled products must equal the parent bundle product
  price.
- RevCent will not utilize shipping profiles for the calculating shipping on an initial
  sale coming from WooCommerce.
- Shipping profiles are essential for trial and subscription based shippable products.
- You do not need to purchase labels from either service in order to track a shipment
  and have it updated in RevCent.
- You can track labels purchased outside of their service, and bring your own carrier
  account (BYOCA) for tracking.
- Offline payments are treated as a 'cash' sale without the ability to refund/modify
  at the third party.
- Some endpoints may require additional parameters for specific data retrieval.
- There is always a risk of false positive fraud detections. Detecting fraud is not
  a perfect science, and can result in a legitimate purchase being inadvertently flagged
  as illegitimate.
- Sentinel detected fraud based on tracking visitor validation.
- Sentinel detected fraud via third party.
- Granular data can be viewed on the respective entity's details page.
- Aggregate data is defined as the aggregation of granular data specific to an entity
  type.
- Only domains that you have added to your Tracking Domains will have tracking enabled.
- There is an additional $1 monthly charge in RevCent for each tracking domain that
  has DNS enabled.
- The SSL certificate issued is only good for the subdomains rctrk and portal.
- Only follow these instructions after you have successfully set up DNS for the tracking
  domain that is the same domain as the WordPress site.
- BigQuery access requires enabling within RevCent and adding user emails.
- Only share your BigQuery data with trusted users.
- Customers can be manually placed in a group, or automatically placed in a group
  dependent on the qualifiers you set.
- API call responses for 'retrieve' and 'query' will not be sent.
- Flows are an advanced feature that require an understanding of time, filters and
  actions.
- View your flows by clicking Tools > Flows > Runs in the sidebar
- Functions are an advanced feature in RevCent and an understanding of the JavaScript
  programming language is required.
- RevCent hosts and runs your code.
- Webhook URL is publicly accessible. Verify message authenticity within function
  code.
- Numerous events can be used for triggering a Function or an AI Assistant.
- Sentinel events differ based on the Sentinel rejection reason.
- RevCent is hosting the portal, customer data and user registration.
- There is a 100000 record limit per individual bulk export request.
- If the total number of records is greater than 100000, the export will be aborted.
- To overcome the limitation, create multiple exports, partitioning by date range.
- Link accounts in a few simple steps. The initiator of the link is the account which
  will manage the other, i.e. Manager Account.
- Transaction confirmation may take 3 to 6 hours, depending on PayPal's API updates.
- When sending a sale > create API call to RevCent you can specify the Provider ID
  as the 'provider' property and Method ID/3PL Code as the 'provider_method' property
  for shipment entries.
- If you have created a fulfillment account in RevCent with 3PL Central as the fulfillment
  center, we recommend using the 3PL code for specifying the provider method.
- If you do not need nor want to have shipment delivery updates within RevCent, then
  you can ignore this section.
- 'The ''is_pending'': true property tells RevCent not to immediately process the
  payment.'
- RevCent creates a pending sale with product information, creates the new customer
  and saves the customers' payment information.
- Unique request ID is required to reference the same pending sale.
- '''is_pending'': false property tells RevCent to process the payment.'
- RevCent scans your upsell profiles for product matches, and if a match is found,
  returns a product recommendation.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 0 = RevCent Error
- 1 = Success
- '0: RevCent Error'
- '1: Success'
- '400 Bad Request: Check request parameters and payload structure.'
- '401 Unauthorized: Verify authentication credentials.'
- '500 Internal Server Error: Retry after some time.'
- '400 Bad Request: Check if required fields are included in the request.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Check required fields in the request.'
- '401 Unauthorized: Recheck OAuth token.'
- 'INVALID_COUPON_CODE: Invalid coupon code provided.'
- 2 = Merchant Declined
- 3 = Merchant Error
- 4 = Merchant Hold
- 5 = Fraud Detected
- '401 Unauthorized: Recheck API keys or token expiration'
- 'E0668: The RevCent plugin is installed but not properly set up. Try running the
  fix method.'
- '401 Unauthorized: Check API key and permissions.'
- '500 Internal Server Error: Retry the request after a short wait.'
- 'INVALID_REQUEST: Check your payload for missing or incorrect fields.'
- 'UNAUTHORIZED_ACCESS: Ensure your API credentials are correct.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Endpoint may be incorrect'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check OAuth token validity.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check API key.'
- '400 Bad Request: Check request format and required fields.'
- '401 Unauthorized: Recheck API key or authentication details'
- '400 Bad Request: Check request syntax and parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Try again later.'
- '400: Non-Payment Error - The API request contains an error and should be handled
  internally by the user.'
- '401: Unauthorized - The API key is either missing, invalid or disabled.'
- '402: Payment Error - A payment attempt failed, either due to decline, merchant
  error or fraud.'
- '404: Not Found - A requested entity was not found.'
- '405: Method Not Allowed - The requested HTTP method is not allowed. Only GET and
  POST requests are accepted.'
- '500: RevCent Error - An error occurred within the RevCent system.'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Ensure required parameters are provided.'
- '401 Unauthorized: Check if API key is valid and has required permissions.'
- 'INVALID_PARAMETER: Check the provided parameters for correctness'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Verify API key validity.'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Verify sale_id exists'
- '400 Bad Request: Check required fields in the request'
- 'Invalid sale_id: Ensure the sale_id is correct.'
- 'Unauthorized: Check API key or permissions.'
- '401 Unauthorized: Recheck API key.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Ensure the endpoint path is correct'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your authentication details.'
- '404 Not Found: Ensure the endpoint exists.'
- 'Custom Error - Payment Declined: Display the custom_error property if code is not
  1 and custom_error is present'
- 'Custom Error - E0690 - Payment Not Attempted: Display the message property if code
  is not 1 and error_code equals E0690'
- '401 Unauthorized: Recheck API credentials'
- '400 Bad Request: Check the request parameters and try again.'
- '401 Unauthorized: Ensure the provided token is valid and not expired.'
- '5: Payment not processed.'
- '2: Fraud detected by Sentinel.'
- 0 = API Error
- '5: Fraud detected by Sentinel.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ai_memo:retrieve
  - ai_memo:create
  - ai_memo:delete
  - function:retrieve
  - function:trigger
  - gateway_group
  - KeyValue
  - Client ID
  - Secret
client:
  base_url: https://api.revcent.com/v2
  auth:
    type: apikey
    location: header
    header_name: x-api-key
source_metadata: null
