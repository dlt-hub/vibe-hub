resources:
- name: audio_embedding
  endpoint:
    path: /core/get_audio_embedding
    method: GET
    data_selector: embedding
    params: {}
- name: image_embedding
  endpoint:
    path: /core/get_image_embedding
    method: GET
    data_selector: embedding
    params: {}
- name: audio_embeddings
  endpoint:
    path: /audio/embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: image_embeddings
  endpoint:
    path: /image/embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: video_embeddings
  endpoint:
    path: /video/embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: audio_embedding
  endpoint:
    path: /get_audio_embedding
    method: POST
    data_selector: embeddings
- name: image_embedding
  endpoint:
    path: /get_image_embedding
    method: POST
    data_selector: embeddings
- name: video_embedding
  endpoint:
    path: /process_video_file
    method: POST
    data_selector: embeddings
- name: audio_embedding
  endpoint:
    path: /get_audio_embedding
    method: GET
    data_selector: emb
    params: {}
- name: image_embedding
  endpoint:
    path: /get_image_embedding
    method: GET
    data_selector: emb
    params: {}
- name: process_audio_file
  endpoint:
    path: /process_audio_file
    method: POST
    data_selector: result
    params: {}
- name: process_image_file
  endpoint:
    path: /process_image_file
    method: POST
    data_selector: result
    params: {}
- name: audio_embedding
  endpoint:
    path: /get_audio_embedding
    method: POST
    data_selector: emb
    params: {}
- name: image_embedding
  endpoint:
    path: /get_image_embedding
    method: POST
    data_selector: emb
    params: {}
- name: video_embedding
  endpoint:
    path: /process_video_file
    method: POST
    data_selector: emb
    params: {}
- name: audio_embeddings
  endpoint:
    path: /get_audio_embedding
    method: POST
    data_selector: embeddings
    params: {}
- name: image_embeddings
  endpoint:
    path: /get_image_embedding
    method: POST
    data_selector: embeddings
    params: {}
- name: video_embeddings
  endpoint:
    path: /process_video_file
    method: POST
    data_selector: embeddings
    params: {}
- name: audio_embedding
  endpoint:
    path: /audio
    method: POST
    data_selector: embeddings
- name: image_embedding
  endpoint:
    path: /image
    method: POST
    data_selector: embeddings
- name: video_embedding
  endpoint:
    path: /video
    method: POST
    data_selector: embeddings
notes:
- The simplest way to install OpenL3 is by using pip, which will also install the
  additional required dependencies if needed.
- Supported audio formats include WAV, OGG, FLAC.
- Supported image formats include PNG, JPEG.
- Supported video formats include MP4.
- The audio and image embeddings are not synchronized.
- Image embeddings are computed for every frame of the video.
- OpenL3 extracts audio embeddings with a model that is trained on AudioSet videos
  containing mostly musical performances.
- By default, OpenL3 extracts image embeddings with a model that is trained on AudioSet
  videos.
- OpenL3 provides two different audio frontends to choose from.
- input_repr is a required parameter to openl3.get_audio_embedding when using the
  librosa frontend
- The default value for –content-type is music, for –input-repr is mel128 and for
  –embedding-size is 6144
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://openl3.api.com
  headers:
    Accept: application/json
source_metadata: null
