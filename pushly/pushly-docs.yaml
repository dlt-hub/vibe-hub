resources:
- name: service_worker
  endpoint:
    path: /pushly-sdk-worker.js
    method: GET
- name: pushly_sdk
  endpoint:
    path: /pushly-sdk.min.js
    method: GET
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: records
- name: notifications
  endpoint:
    path: /api/notifications
    method: GET
    data_selector: data
    params: {}
- name: P8 Key or P12 Cert Setup
  endpoint:
    path: /integration/implementation-steps/apple-ios/p8-key-or-p12-cert-setup
- name: Client SDKs
  endpoint:
    path: /integration/implementation-steps/apple-ios/sdk-swift-obj-c
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: ab_testing
  endpoint:
    path: /api/v1/ab-testing
    method: POST
    data_selector: data
    params: {}
- name: custom_buttons
  endpoint:
    path: /platform/notifications/action-buttons
    method: GET
    data_selector: buttons
    params: {}
- name: notification_previews
  endpoint:
    path: /notifications/previews
    method: POST
- name: custom_buttons
  endpoint:
    path: /api/custom_buttons
    method: POST
    data_selector: data
    params: {}
- name: notification_previews
  endpoint:
    path: /api/v1/notification_previews
    method: POST
    data_selector: preview
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/notifications
    method: GET
    data_selector: records
    params: {}
- name: Segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
- name: Notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: data
    params: {}
- name: native_app_notifications
  endpoint:
    path: /integration/native-app-notifications
    method: POST
    data_selector: notifications
    params: {}
- name: segments
  endpoint:
    path: /platform/segments
    method: GET
    data_selector: segments
    params: {}
- name: native_app_notification
  endpoint:
    path: /api/native_app/notification
    method: POST
    data_selector: notification
    params: {}
- name: native_app_segment
  endpoint:
    path: /api/native_app/segment
    method: POST
    data_selector: segment
    params: {}
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: records
- name: app_messages
  endpoint:
    path: /v1/app/messages
    method: GET
    data_selector: messages
- name: scheduled_campaigns
  endpoint:
    path: /api/scheduled_campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: scheduled_campaigns
  endpoint:
    path: /api/v1/scheduled_campaigns
    method: GET
    data_selector: campaigns
- name: Delivery Report
  endpoint:
    path: /api/v1/delivery-report
    method: GET
    data_selector: data
- name: Acquisition Report
  endpoint:
    path: /api/v1/acquisition-report
    method: GET
    data_selector: data
- name: delivery_report
  endpoint:
    path: /api/v1/delivery_report
    method: GET
    data_selector: data
    params: {}
- name: acquisition_report
  endpoint:
    path: /api/v1/acquisition_report
    method: GET
    data_selector: data
    params: {}
- name: user_list
  endpoint:
    path: /user-list
    method: GET
    data_selector: users
- name: create_user
  endpoint:
    path: /create-user
    method: POST
    data_selector: user
- name: edit_user
  endpoint:
    path: /edit-user
    method: PUT
    data_selector: user
- name: reset_password
  endpoint:
    path: /reset-password
    method: POST
    data_selector: status
- name: user_list
  endpoint:
    path: /user/list
    method: GET
    data_selector: users
- name: create_user
  endpoint:
    path: /user/create
    method: POST
    data_selector: user
- name: notification_list
  endpoint:
    path: /notifications/list
    method: GET
    data_selector: notifications
- name: notification_create_edit
  endpoint:
    path: /notifications/create-edit
    method: POST
    data_selector: notification
- name: notification_list
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
- name: notification_create_edit
  endpoint:
    path: /notifications/create
    method: POST
    data_selector: notification
- name: segment_list
  endpoint:
    path: /multi-domain/segments
    method: GET
    data_selector: segments
    params: {}
- name: bulk_add_domains
  endpoint:
    path: /multi-domain/segments/bulk-add-domains
    method: POST
    data_selector: result
    params: {}
- name: create_update_segment
  endpoint:
    path: /multi-domain/segments
    method: POST
    data_selector: segment
    params: {}
- name: segment_list
  endpoint:
    path: /api/segments
    method: GET
    data_selector: segments
- name: bulk_add_domains
  endpoint:
    path: /api/segments/bulk_add_domains
    method: POST
    data_selector: result
- name: create_update_segment
  endpoint:
    path: /api/segments
    method: POST
    data_selector: segment
- name: notifications
  endpoint:
    path: /v1/notifications
    method: GET
    data_selector: data
    params: {}
- name: native_app_notification
  endpoint:
    path: /api/native-app/notifications
    method: POST
    data_selector: notification
    params: {}
- name: native_segments
  endpoint:
    path: /api/native-app/segments
    method: GET
    data_selector: segments
    params: {}
- name: Slack Integration
  endpoint:
    path: /api/slack
    method: POST
    data_selector: notifications
- name: WordPress Integration
  endpoint:
    path: /api/wordpress
    method: POST
    data_selector: notifications
- name: BlueConic Integration
  endpoint:
    path: /api/blueconic
    method: POST
    data_selector: notifications
- name: content_stores
  endpoint:
    path: /path/to/content_stores
    method: POST
    data_selector: stores
    params: {}
- name: tenant
  endpoint:
    path: /api/tenant
    method: GET
- name: application
  endpoint:
    path: /api/application
    method: GET
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: data
    params: {}
- name: segments
  endpoint:
    path: /api/v1/segments
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /v1/notifications
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: data
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: data
- name: notifications
  endpoint:
    path: /api/notifications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
notes:
- SDK Key must be retrieved from Domain Settings section
- API Key must be entered in the configuration options
- Ensure you replace both instances of SDK_KEY in the snippet with the value provided
  by your account manager.
- Uses OAuth2 with refresh token — requires setup of connected app in Pushly
- All apps must have a Firebase project and matching credentials to capture subscriptions
  and send notifications.
- A physical iOS device must be used for testing remote push notifications.
- Native App Push integrations are currently in closed beta. Contact your account
  manager for more information on becoming a beta partner.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Character limits for title and body depend on the subscriber's device and browser.
- A/B Testing allows testing visual and behavioral changes within a single notification.
- Notification Custom Buttons allow you to add up to two additional buttons to your
  deployed Notifications.
- Preview functionality will only work on devices that support web push
- OAuth2 with refresh token required.
- Ensure proper scopes are set for the application.
- Allows creation and use of Segments while creating Notifications for deployment.
- Make sure to use the correct OAuth scopes for accessing notifications
- All existing Segments will automatically have the Web Delivery Channel enabled.
- To create a Segment specifically for Native iOS and/or Native Android, enable those
  toggles.
- To edit an existing Segment to allow for Native iOS and Native Android, the Segment
  will need to be rebuilt.
- Supports several segmentation attributes out of the box and can add custom attributes.
- App messages are customizable and can vary in format.
- Requires setup of connected app in Pushly
- Use Quiet Hours to restrict Notifications during selected time frame
- Campaigns are scheduled to run every Friday at 4:00pm local time (STZ).
- Users will receive notifications based on their segment membership every Friday
  at 4:00pm local time.
- Recommended Notifications are personalized push notifications that are automatically
  generated and sent to users based on their individual interests and past behavior.
- Allows users to review, download, save, share and schedule performance data.
- Provides options for saving, sharing, downloading, and refreshing reports.
- Any saved report can be Schedule to send on a daily/weekly/monthly basis to a number
  of email addresses.
- 'Users can be assigned one of three access levels: User, Admin, Read Only.'
- Admin users can create and manage other users.
- All Organizations have Multi-Factor Authentication enabled by default.
- The default settings allow platform users to remember their browser for up to 30
  days and uses an Adaptive MFA strategy.
- After modifying MFA settings it may take up to 1 hour before the changes take effect.
- Notifications created will display on each individual domain's notification list
  including domain-specific stats.
- Notifications created here will also display on each individual domain's notification
  list including domain-specific stats for that notification.
- You can only edit multi-domain segments from the organization context.
- Organization API Tokens is available in the platform to Organization Admin users.
- Ensure you create Segments specifically for Native channels.
- Ensure to create Segments specifically for Native channels.
- Tenant Name should match the blueconic.net url that has been assigned by BlueConic.
- Users can link up to 10 different Stores to their Pushly account.
- Users must contact their Account Manager to enable the integration.
- Use OAuth2 with refresh token — requires setup of connected app in Pushly
- Monitor user experience and feedback for notification frequency
- Always include a large image with your Notification.
- Consider the optimal frequency for sending Notifications to your audience.
- iOS does not currently support the necessary technology to implement web push notifications.
  As soon as the required iOS features are implemented Pushly will enable support.
- For individual user troubleshooting, your Account Manager may ask you to supply
  your Push User ID.
- iOS does not currently support the necessary technology to implement web push notifications.
- Ensure that your browser settings have changed and you're no longer opted in.
- Confirm settings are not silenced/muted.
- For individual user troubleshooting, add ?push_debug=1 to the end of the URL.
- You can retrieve your Push User ID using the specified steps.
- Requires OAuth2 setup and valid credentials
- Ensure to set up OAuth2 correctly for authentication
- Your website to be SSL-enabled (https://)
- A snippet of Integration HTML to be added to each page on your site.
- API Tokens are available in the platform to Domain Admin users.
- Ensure that notifications are allowed in browser settings.
- Check system notifications settings on both Mac and PC.
- Your website must be SSL-enabled (https://)
- Service Worker must be served from the same origin as the subscriber's site.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- '400 Bad Request: Check the parameters in your request'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Ensure the endpoint path is correct'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: Ensure you have the right permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your credentials and OAuth token'
- '403 Forbidden: Ensure you have permission for this action'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'USER_NOT_FOUND: Check the user ID or email provided.'
- 'ACCESS_DENIED: Ensure you have the necessary permissions to perform this action.'
- 'USER_NOT_FOUND: Ensure the user exists in the platform.'
- 'ACCESS_DENIED: Check permissions for the action attempted.'
- '401 Unauthorized: Verify your authentication credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check client_id and client_secret'
- '403 Forbidden: Insufficient permissions'
- '401 Unauthorized: Check your credentials and token expiration'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Check OAuth token validity.'
- 'NOT_FOUND: The requested resource does not exist.'
auth_info:
  mentioned_objects:
  - Tenant Name
  - Application Name
  - Application Client ID
  - Application Client Secret
  - OauthToken
  - AuthProvider
  - OAuthToken
client:
  base_url: https://api.pushly.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.pushly.com/oauth/token
    client_id: '{{ dlt.secrets[''pushly_client_id''] }}'
    client_secret: '{{ dlt.secrets[''pushly_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''pushly_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
