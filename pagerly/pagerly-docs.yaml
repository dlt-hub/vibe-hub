resources:
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: team_schedule
  endpoint:
    path: /api/v1/team_schedule
    method: GET
    data_selector: records
    params: {}
- name: sync_team_schedule
  endpoint:
    path: /teams
    method: POST
    data_selector: team
    params: {}
- name: schedule_id
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
- name: JSM Operations Schedule
  endpoint:
    path: /add-team/select-jsm-operations-schedule
    method: GET
- name: schedule_id
  endpoint:
    path: /settings/schedule/detail/<scheduleId>
    method: GET
    data_selector: schedule_id
    params: {}
- name: Find Sheet Id from Google Sheets
  endpoint:
    path: /how-to-work-with-pagerly/google-sheets-with-slack/find-sheet-id-from-google-sheets
    method: GET
- name: calendar_id
  endpoint:
    path: /retrieve/calendar/id
    method: GET
- name: round_robin_oncall
  endpoint:
    path: /api/round-robin-oncall
    method: GET
- name: round_robin_rotation
  endpoint:
    path: /api/rotations-endpoint
    method: POST
    data_selector: rotation
    params: {}
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall
    method: GET
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: oncall_schedule
  endpoint:
    path: /schedule
    method: GET
    data_selector: current_oncall
- name: oncall_schedule
  endpoint:
    path: /fetch-current-oncall-rotated-user
    method: GET
- name: incident_management
  endpoint:
    path: /incidence-response/overview
    method: GET
- name: jira_ticket
  endpoint:
    path: /how-to-work-with-pagerly/integration-with-jira/create-jira-ticket-incident-using-form
    method: POST
- name: jira_integration
  endpoint:
    path: /jira
    method: POST
    data_selector: data
    params: {}
- name: create_jira_ticket
  endpoint:
    path: /integration-with-jira/create-jira-ticket-incident-using-form
    method: POST
- name: round_robin_assignment
  endpoint:
    path: /integration-with-jira/round-robin-assignment-of-jira-issues-tickets
    method: GET
    data_selector: records
- name: jira_issues
  endpoint:
    path: /api/jira/issues
    method: POST
    data_selector: data
    params: {}
- name: assign_requests
  endpoint:
    path: /api/assign_requests
    method: POST
    data_selector: data
    params: {}
- name: round_robin_assignment
  endpoint:
    path: /integration-with-jira/round-robin-assignment-of-jira-issues-tickets
    method: GET
- name: jira_issues
  endpoint:
    path: /api/jira/issues
    method: GET
    data_selector: issues
    params: {}
- name: alerts_incidents
  endpoint:
    path: /api/alerts/incidents
    method: POST
    data_selector: data
- name: incident
  endpoint:
    path: /notices
    method: POST
    data_selector: incident
    params: {}
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
- name: webhook
  endpoint:
    path: /integrations/webhooks
    method: POST
- name: triage_tickets
  endpoint:
    path: /api/triage-tickets
    method: POST
    data_selector: ticket
    params: {}
- name: incident_updates
  endpoint:
    path: /api/incident-updates
    method: PUT
    data_selector: update
    params: {}
- name: oncall_schedule
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: incidents
  endpoint:
    path: /incidents-and-users/create-incident-manually
    method: POST
- name: custom_change_notification
  endpoint:
    path: /custom/change/notification
    method: POST
    data_selector: notification_data
- name: google_calendar
  endpoint:
    path: /api/google-calendar
    method: GET
    data_selector: records
- name: calendar_id
  endpoint:
    path: /retrieve-calendar-id-from-google-calendar
    method: GET
    data_selector: calendarId
- name: incident
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /api/tasks
    method: POST
    data_selector: task
    params: {}
- name: current_oncall_rotated_user
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
- name: team_configuration
  endpoint:
    path: /api/team/configuration
    method: POST
    data_selector: result
    params: {}
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: current_users
  endpoint:
    path: /pagerly/o/currentusers
    method: GET
    data_selector: ''
    params:
      teamname: <teamname>
- name: current_users_for_jira
  endpoint:
    path: /pagerly/o/currentusersforjira
    method: GET
    params:
      teamname: <teamname>
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: incident
  endpoint:
    path: /incidents
    method: POST
- name: incident
  endpoint:
    path: /incidents-and-users/update-incident
    method: POST
    data_selector: records
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: rotations
  endpoint:
    path: /api/rotations-endpoint
    method: GET
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: all_teams
  endpoint:
    path: /o/zapier/allteams
    method: GET
    data_selector: records
- name: current_users
  endpoint:
    path: /o/currentusers
    method: GET
    data_selector: records
    params:
      teamname: ''
- name: current_oncall
  endpoint:
    path: /fetch-current-oncall-rotated-user-via-api
    method: GET
- name: generate_api_key
  endpoint:
    path: /generate-api-key
    method: POST
notes:
- 'For Pagerly to work fully, we would need the API key with 3 Access Rights: Read,
  Create and Update, Configuration Access'
- Sync Rotation. Oncall Schedule with Slack User Group ( **@sre-on-call)**
- Create your own rotation schedule to avoid costsðŸ’°ðŸ’° for trivial tasks Pay per Team
  ( NOT per User)
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Requires setup of connected app in Pagerly
- Sync schedule from external tools like Pagerduty, Opsgenie, Google Calendar, JSM
  Ops.
- 'Schedule Id can be found on the schedule page URL: https://<company>.pagerduty.com/schedules/#<scheduleId>'
- If you are using any other tool you can skip this section.
- Schedule Id can be found on the schedule page URL
- To fetch the calendar id, go to your calendar settings and find the Calendar Id.
- Create round-robin rotations without schedule for picking tasks.
- Fair, Sequential, and Fast Incident Assignmentâ€”Without the Manual Overhead
- Great for services that spike or see simultaneous incidents.
- Uses @Pagerly <team> to fetch the current oncall for Team <team>
- Alternatively use Usergroup i.e. @dev-on-call if configured
- Requires API key for authentication
- Pagerly would automatically detect the upcoming change in schedule, and would throw
  the notification of upcoming schedule on the Team's Channel configured in Pagerly
- Triggers PagerDuty incident by reacting with an emoji in Slack
- Some integrations are connected through OAuth, while others require an ID.
- For Pagerly to work fully, we would need the General Access Level with Full Access
  API Key (i.e both read and write). This is so to retrieve the oncall schedule and
  update the schedule from Pagerly Slack App.
- This integration allows for creating threads on Slack whenever a ticket is created
  in Jira.
- 'In case of Ticket Update, following fields would be detected and create/update
  the Slack Channel: Assignee, Status, Title, Description, Reporter.'
- Install the Pagerly Emoji Ticket Slack App to your Workspace
- Ensure that your Jira account is added to Pagerly Slack App
- Ensures fair and balanced distribution of workload among available agents while
  maintaining efficient ticket resolution.
- Pagerly pulls real-time shift data from your on-call schedule.
- Requires installation of Pagerly Status App for Slack.
- Sync schedule with Google Calendar requires copying Google Calendar ID.
- You need to install a separate app to allow Pagerly to read the emoji.
- Automated ticket assignment based on real-time agent availability.
- Auto-Assignment requires real-time shift data from on-call schedule.
- Status page settings updated successfully!
- Component successfully added to the group.
- Incident created successfully
- Maintenance notice added successfully!
- Webhook creation requires selecting an integration and components.
- Navigate to https://manage.pagerly.io/templates to configure template settings.
- duplicate emails won't be added
- Activation may take some time.
- With Pagerly, you can configure MultiMention Teams, with which you can mention multiple
  oncalls together.
- Integrates with Linear for ticket management
- Automatically syncs incident updates
- Sync your Pagerly Team schedule with your Linear Team's Triage Responsibility's
  schedule
- With Pagerly you can directly swap 2 rotations without clicking and creating multiple
  overrides.
- Uses placeholders ${team}, ${current}, ${previous}, ${next} in custom messages.
- Requires integration with Google Calendar for setup.
- Complete the Google Oauth Flow with the user who has access to the Google Calendar
- Go to your google calendar and find the Calendar Id in Settings.
- Uses OAuth2 with refresh token â€” requires setup of connected app in Pagerly
- Some objects may return nulls in deeply nested fields
- Add Google Group Schedule Id -> This would be your group email id
- Add Google Group Group Domain Id -> This would be your main Google Workspace domain
  id
- The ID is the value between the '/d/' and the '/edit' in the URL of your spreadsheet.
- Connect external sources like Pagerduty, Google Sheets, Jira, Hubspot, Salesforce,
  Asana or any other tool of your choice
- Team name should be unique
- Change your current oncall in Pagerduty/Opsgenie/Google Calendar and you would receive
  notification in your team's channel
- In case of any Queries/Feedback/Support to Pagerly , you can send the mail to hello@pagerly.io
- Currently, Only AWS is supported as the only Cloud Support.
- Pagerly doesn't save any information related to your cloud. We find this runtime
  and give the reports on Slack
- Team name is required to uniquely identify the team in Pagerly
- AWS STS IAM ROLE ARN is required
- Frequency options include Daily, Weekly, and Monthly
- Pricing Alert is set at a specified threshold
- Follow the steps to generate an API key for integrations and automation purposes.
- Api key generated successfully!
- 'Under Settings, make sure the action frequency is set for each alert: on status
  changes.'
- 'Run when: Recovered.'
- Incident Response without Context Switching
- Conduct the Entire Incident in Slack
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Ensure API key is valid'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Verify endpoint and resource availability.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://manage.pagerly.io
  auth:
    type: apikey
source_metadata: null
